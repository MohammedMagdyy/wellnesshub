kotlinx.coroutines.channels.ChannelIterator
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
androidx.arch.core.internal.SafeIterableMap$Entry
kotlinx.coroutines.Waiter
androidx.window.area.WindowAreaInfo
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$2
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
androidx.arch.core.internal.FastSafeIterableMap
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher
androidx.core.content.res.ResourcesCompat
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Default
com.getkeepsafe.relinker.elf.Program64Header
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1
kotlin.ULongArrayKt
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback
androidx.core.view.WindowInsetsAnimationCompat$Impl30
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
io.flutter.embedding.android.FlutterView$3
kotlinx.coroutines.flow.ReadonlySharedFlow
androidx.window.embedding.EmbeddingBackend$Companion
kotlin.NumbersKt__NumbersKt
kotlin.jvm.Volatile
com.getkeepsafe.relinker.ReLinker$LibraryInstaller
org.jetbrains.annotations.ApiStatus$Internal
kotlin.sequences.DropSequence
kotlin.collections.SlidingWindowKt$windowedIterator$1
kotlinx.coroutines.InternalCoroutinesApi
androidx.core.internal.view.SupportMenu
kotlinx.coroutines.flow.SharedFlowImpl$Emitter
androidx.window.layout.adapter.sidecar.SidecarCompat
kotlinx.coroutines.channels.BufferedChannel$onSend$1
androidx.lifecycle.SavedStateHandleController
kotlin.io.encoding.ExperimentalEncodingApi
androidx.core.app.NotificationCompat$Api23Impl
io.flutter.plugin.common.MethodChannel$MethodCallHandler
androidx.core.graphics.drawable.DrawableCompat$Api21Impl
androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1
kotlinx.coroutines.CoroutinesInternalError
kotlin.Triple
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange
androidx.core.provider.SelfDestructiveThread$ReplyCallback
androidx.core.app.RemoteInput$Api26Impl
androidx.core.util.RunnableKt
kotlin.ExperimentalMultiplatform
androidx.core.location.LocationRequestCompat$Api19Impl
io.flutter.plugin.text.ProcessTextPlugin
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness
kotlin.collections.ArraysKt___ArraysKt$withIndex$6
kotlin.text.StringsKt__IndentKt$getIndentFunction$2
androidx.window.core.BuildConfig
androidx.core.widget.NestedScrollView$Api21Impl
kotlin.collections.MovingSubList
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3
android.support.v4.os.ResultReceiver$1
kotlinx.coroutines.channels.ChannelKt
androidx.lifecycle.livedata.core.R
io.flutter.view.AccessibilityBridge$5
kotlin.collections.builders.SerializedCollection
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1
androidx.lifecycle.GenericLifecycleObserver
kotlin.jvm.JvmMultifileClass
androidx.tracing.TraceApi29Impl
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1
io.flutter.util.TraceSection
androidx.loader.R$drawable
kotlin.jvm.internal.TypeReference
kotlinx.coroutines.scheduling.LimitingDispatcher
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener
io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener
kotlin.UByteArray
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1
io.flutter.embedding.engine.loader.ResourceExtractor$1
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1
androidx.loader.content.ModernAsyncTask$1
androidx.core.view.NestedScrollingChild
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1
kotlin.jvm.internal.PropertyReference1
androidx.fragment.app.FragmentAnim$AnimationOrAnimator
androidx.core.graphics.TypefaceCompatBaseImpl
kotlinx.coroutines.flow.StartedLazily
androidx.lifecycle.ViewModelLazy
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1
androidx.lifecycle.ReportFragment$ActivityInitializationListener
androidx.window.embedding.SplitRule$FinishBehavior
androidx.core.view.ContentInfoCompat$Builder
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1
androidx.window.embedding.ExtensionEmbeddingBackend$Api31Impl
kotlinx.coroutines.channels.LazyBroadcastCoroutine
androidx.core.provider.CalleeHandler
androidx.lifecycle.CoroutineLiveData$1
kotlin.reflect.TypeOfKt
io.flutter.Log
kotlin.reflect.KTypeProjection
kotlin.reflect.KClass$DefaultImpls
kotlin.collections.ByteIterator
androidx.core.math.MathUtils
androidx.core.app.NavUtils
io.flutter.embedding.android.KeyboardMap$KeyPair
androidx.activity.BackEventCompat$SwipeEdge
androidx.core.view.accessibility.AccessibilityViewCommand
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill
kotlin.PreconditionsKt
androidx.core.graphics.BitmapKt
androidx.window.area.utils.DeviceMetrics
androidx.core.graphics.drawable.IconCompat$IconType
kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings
kotlin.experimental.ExperimentalObjCName
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1
androidx.lifecycle.ReportFragment
androidx.activity.OnBackPressedCallback
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2
androidx.core.text.TextDirectionHeuristicCompat
androidx.core.os.HandlerKt
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1
kotlin.jvm.internal.Ref$ObjectRef
androidx.window.layout.util.DisplayCompatHelperApi17
androidx.viewpager.widget.PagerTitleStrip$PageListener
io.flutter.plugin.common.JSONUtil
androidx.core.graphics.Insets$Api29Impl
androidx.core.view.ViewGroupKt$special$$inlined$Sequence$1
androidx.customview.R$color
androidx.window.layout.EmptyDecorator
org.intellij.lang.annotations.JdkConstants$CursorType
kotlin.text.Regex$Companion
androidx.core.location.LocationRequestCompat
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1
androidx.core.app.NotificationCompat$Action$Extender
androidx.core.os.BuildCompat$Api30Impl
kotlinx.coroutines.internal.InlineList
androidx.core.view.WindowInsetsAnimationControlListenerCompat
androidx.lifecycle.EmittedSource$dispose$1
kotlin.collections.UCollectionsKt
androidx.window.embedding.MatcherUtils
kotlinx.coroutines.flow.SubscribedSharedFlow
kotlin.jvm.internal.FunInterfaceConstructorReference
androidx.fragment.app.FragmentManagerImpl
androidx.activity.OnBackPressedDispatcher$addCallback$1
kotlin.jvm.Transient
kotlinx.coroutines.android.HandlerDispatcherKt
androidx.core.app.NotificationManagerCompat$NotifyTask
kotlinx.coroutines.future.FutureKt$await$2$1
kotlin.text.MatchResult$Destructured
androidx.core.util.LruCacheKt
io.flutter.plugin.common.ActivityLifecycleListener
androidx.annotation.RequiresPermission$Write
androidx.fragment.app.FragmentManager$3
kotlin.OverloadResolutionByLambdaReturnType
androidx.activity.ComponentActivity$5
kotlin.reflect.KMutableProperty2
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls
androidx.core.view.HapticFeedbackConstantsCompat$HapticFeedbackType
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize
androidx.window.extensions.core.R
androidx.core.view.WindowCompat$Api30Impl
android.support.v4.os.ResultReceiver$MyRunnable
androidx.core.os.ConfigurationCompat$Api24Impl
androidx.core.content.UnusedAppRestrictionsBackportCallback
io.flutter.embedding.engine.systemchannels.MouseCursorChannel
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1
androidx.core.location.GnssStatusWrapper
kotlin.collections.AbstractList$IteratorImpl
androidx.window.layout.WindowInfoTracker
io.flutter.plugin.platform.PlatformViewWrapper$1
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
kotlinx.coroutines.JobSupport
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion
androidx.window.embedding.EmbeddingAspectRatio
kotlin.NumbersKt__NumbersJVMKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2
androidx.fragment.app.Fragment$7
androidx.core.R$integer
kotlin.Pair
io.flutter.plugin.common.StandardMessageCodec
androidx.window.area.WindowAreaInfo$Type
kotlin.jvm.JvmStatic
androidx.window.core.ConsumerAdapter$Subscription
kotlin.collections.CollectionsKt__MutableCollectionsKt
androidx.core.app.ActivityCompat$Api31Impl
kotlinx.coroutines.debug.internal.Marked
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1
kotlin.PreconditionsKt__AssertionsJVMKt
androidx.core.graphics.WeightTypefaceApi26
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory
androidx.loader.R$string
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1
androidx.core.view.ViewGroupCompat$Api21Impl
kotlin.io.encoding.DecodeInputStream
io.flutter.embedding.engine.systemchannels.RestorationChannel
kotlin.collections.IndexingIterable
androidx.core.os.UserHandleCompat
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1
kotlin.io.FilesKt
androidx.collection.MapCollections$EntrySet
kotlinx.coroutines.CoroutineContextKt$foldCopies$1
kotlin.enums.EnumEntriesKt$enumEntries$1
kotlin.coroutines.CoroutineContext$Element
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1
androidx.fragment.app.BackStackState$1
io.flutter.util.PathUtils
kotlinx.coroutines.internal.ContextScope
kotlin.collections.EmptyMap
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState
kotlin.jvm.internal.ArrayBooleanIterator
androidx.core.os.MessageCompat$Api22Impl
kotlin.coroutines.CoroutineContext$Element$DefaultImpls
androidx.window.area.EmptyWindowAreaControllerImpl
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.core.graphics.drawable.DrawableCompat$Api23Impl
androidx.core.view.PointerIconCompat
androidx.core.content.pm.ShortcutInfoCompat$Api33Impl
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$1
androidx.lifecycle.ViewModelProvider$OnRequeryFactory
androidx.core.provider.FontRequestWorker
androidx.core.app.NotificationCompat$CarExtender
androidx.core.content.OnConfigurationChangedProvider
androidx.fragment.app.strictmode.FragmentStrictMode
androidx.core.util.SizeKt
androidx.annotation.StringRes
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
kotlin.collections.builders.MapBuilder$Companion
kotlin.io.FileTreeWalk$WalkState
androidx.core.telephony.TelephonyManagerCompat
androidx.profileinstaller.FileSectionType
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1
kotlin.enums.EnumEntries
androidx.core.view.LayoutInflaterFactory
kotlin.text.ScreenFloatValueRegEx
kotlin.jvm.Strictfp
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast
androidx.lifecycle.Observer
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1
kotlinx.coroutines.selects.SelectClause
androidx.collection.ArrayMap$1
kotlinx.coroutines.selects.SelectClause1
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1
androidx.core.graphics.drawable.ColorDrawableKt
kotlin.jvm.JvmClassMappingKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2
androidx.lifecycle.MediatorLiveData$Source
androidx.core.view.WindowInsetsControllerCompat$Impl30$1
kotlin.reflect.KVisibility
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken
kotlinx.coroutines.internal.MainDispatchersKt
kotlinx.coroutines.SupervisorCoroutine
androidx.core.widget.CompoundButtonCompat$Api23Impl
androidx.activity.BackEventCompat
androidx.core.transition.TransitionKt$addListener$2
io.flutter.plugin.common.EventChannel
androidx.core.widget.TextViewCompat$Api28Impl
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.embedding.SplitAttributes$SplitType$Companion
kotlinx.coroutines.InvokeOnCompletion
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10
kotlin.reflect.KAnnotatedElement
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder
kotlin.jvm.internal.markers.KMutableSet
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
kotlin.time.TimeMark$DefaultImpls
androidx.core.content.PackageManagerCompat
androidx.core.os.BundleCompat
androidx.core.graphics.RectKt
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter
kotlin.ranges.LongRange$Companion
androidx.core.app.ActivityRecreator$1
androidx.annotation.EmptySuper
androidx.activity.SystemBarStyle$Companion$auto$1
io.flutter.view.AccessibilityBridge$2
io.flutter.view.AccessibilityBridge$TextDirection
androidx.activity.R$id
androidx.core.service.quicksettings.PendingIntentActivityWrapper
kotlin.experimental.ExperimentalTypeInference
androidx.fragment.app.ListFragment
kotlin.ranges.OpenEndRange$DefaultImpls
androidx.window.core.SpecificationComputer
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1
androidx.core.widget.ListPopupWindowCompat
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1
androidx.viewpager.widget.ViewPager$PageTransformer
androidx.core.provider.FontRequestWorker$2
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1
kotlin.collections.unsigned.UArraysKt___UArraysKt
kotlinx.coroutines.flow.StateFlow
androidx.lifecycle.AbstractSavedStateViewModelFactory
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3
androidx.core.widget.CompoundButtonCompat
androidx.core.view.ViewCompat$Api23Impl
kotlin.jvm.JvmDefaultWithCompatibility
kotlin.jvm.internal.PropertyReference0Impl
kotlin.contracts.Returns
androidx.viewpager.widget.ViewPager$4
androidx.window.embedding.EmbeddingRule
androidx.core.view.ViewConfigurationCompat$Api34Impl
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler
androidx.core.app.NotificationChannelCompat
androidx.activity.contextaware.ContextAwareHelper
androidx.core.app.NotificationCompat$CallStyle$Api21Impl
kotlinx.coroutines.internal.ExceptionsConstructorKt
androidx.core.view.accessibility.AccessibilityClickableSpanCompat
kotlinx.coroutines.flow.ChannelAsFlow
androidx.core.view.MenuHost
androidx.versionedparcelable.VersionedParcel
android.support.v4.app.INotificationSideChannel$Default
kotlin.collections.jdk8.CollectionsJDK8Kt
androidx.core.text.BidiFormatter
androidx.lifecycle.LiveData$AlwaysActiveObserver
kotlinx.coroutines.sync.SemaphoreSegment
kotlin.jvm.internal.MutablePropertyReference1Impl
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat
androidx.core.os.ParcelCompat$Api29Impl
kotlin.collections.CollectionsKt__CollectionsKt
kotlin.StandardKt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3
androidx.fragment.app.DialogFragment$1
io.flutter.plugins.GeneratedPluginRegistrant
androidx.core.app.NotificationCompat$Action$Builder$Api28Impl
androidx.fragment.app.FragmentManager$5
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate
kotlinx.coroutines.selects.TrySelectDetailedResult
androidx.loader.content.AsyncTaskLoader
io.flutter.view.FlutterCallbackInformation
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4
androidx.fragment.app.Fragment$SavedState
kotlinx.coroutines.intrinsics.UndispatchedKt
androidx.core.text.util.LocalePreferences$HourCycle$HourCycleTypes
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory
kotlinx.coroutines.channels.SendChannel$DefaultImpls
androidx.concurrent.futures.AbstractResolvableFuture$Listener
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1
kotlin.text.MatcherMatchResult
androidx.core.util.AtomicFile
androidx.arch.core.executor.TaskExecutor
kotlin.reflect.KProperty0
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner
androidx.activity.Api34Impl
androidx.core.view.ActionProvider
kotlin.NumbersKt__BigIntegersKt
androidx.activity.result.IntentSenderRequest$Companion$CREATOR$1
com.getkeepsafe.relinker.ReLinkerInstance$2
androidx.core.view.NestedScrollingChild3
kotlinx.coroutines.JobKt
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1
kotlinx.coroutines.SchedulerTaskKt
androidx.fragment.app.FragmentPagerAdapter
androidx.core.text.HtmlCompat
com.getkeepsafe.relinker.TextUtils
androidx.core.app.PendingIntentCompat$GatedCallback
kotlin.jvm.internal.ArrayIteratorKt
kotlin.jvm.internal.PropertyReference2
androidx.core.widget.CheckedTextViewCompat$Api21Impl
androidx.activity.contextaware.ContextAware
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1
kotlinx.coroutines.TimeoutKt
kotlin.collections.AbstractMap$toString$1
androidx.startup.Initializer
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api34Impl
kotlin.internal.HidesMembers
io.flutter.embedding.engine.systemchannels.LocalizationChannel
androidx.activity.result.contract.ActivityResultContract$SynchronousResult
androidx.activity.result.contract.ActivityResultContracts$TakeVideo
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature
androidx.core.app.NotificationCompat$Api26Impl
androidx.core.view.WindowInsetsAnimationCompat$Impl
kotlin.text.StringsKt__StringsKt$iterator$1
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1
kotlin.sequences.TakeWhileSequence$iterator$1
androidx.core.os.EnvironmentCompat$Api21Impl
androidx.fragment.R$id
kotlin.io.path.CopyActionContext
kotlin.jvm.JvmWildcard
kotlinx.coroutines.flow.SharingCommand
io.flutter.view.AccessibilityViewEmbedder
kotlinx.coroutines.internal.ThreadContextKt$countAll$1
androidx.core.text.HtmlKt
kotlin.random.Random
io.flutter.embedding.android.ExclusiveAppComponent
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1
kotlin.internal.ProgressionUtilKt
androidx.core.os.TraceCompat
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2
androidx.core.app.NotificationCompat$WearableExtender$Api23Impl
androidx.core.net.DatagramSocketWrapper
io.flutter.plugin.platform.SingleViewPresentation$ImmContext
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion
kotlinx.coroutines.channels.WaiterEB
org.jetbrains.annotations.ApiStatus$ScheduledForRemoval
androidx.core.app.NotificationChannelGroupCompat$Builder
kotlin.math.Constants
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1
androidx.core.content.ContentProviderCompat
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1
kotlin.time.TimeSource
androidx.loader.R$color
androidx.core.os.ParcelCompat
androidx.versionedparcelable.ParcelField
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$ExtensionListenerImpl
androidx.core.location.LocationManagerCompat$GpsStatusTransport
androidx.core.content.pm.ShortcutInfoCompatSaver
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1
kotlin.io.TextStreamsKt
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl
androidx.core.view.DisplayCutoutCompat$Api29Impl
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1
androidx.activity.result.ActivityResultRegistry$LifecycleContainer
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6
androidx.core.ktx.R
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
androidx.core.graphics.ColorKt
kotlin.jvm.internal.markers.KMutableMap$Entry
kotlin.sequences.MergingSequence$iterator$1
androidx.fragment.app.FragmentLayoutInflaterFactory$1
androidx.core.util.DebugUtils
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1
kotlin.jvm.JvmSuppressWildcards
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2
kotlin.jvm.internal.Ref$BooleanRef
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface
androidx.core.app.AppLocalesStorageHelper
kotlin.HashCodeKt
androidx.core.view.ViewCompat$Api24Impl
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1
com.getkeepsafe.relinker.elf.Elf$Header
kotlinx.coroutines.internal.CtorCache
com.getkeepsafe.relinker.elf.Program32Header
androidx.loader.app.LoaderManagerImpl
androidx.window.embedding.EmbeddingAdapter
androidx.activity.EdgeToEdgeApi21
androidx.lifecycle.AbstractSavedStateViewModelFactory$Companion
kotlin.ranges.IntRange
androidx.lifecycle.ViewModelProviderGetKt
kotlin.jvm.internal.Lambda
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1
kotlinx.coroutines.flow.FlowKt__EmittersKt
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1
kotlin.jvm.internal.LocalVariableReferencesKt
kotlin.io.encoding.Base64
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2
androidx.core.graphics.TypefaceCompatUtil
kotlinx.coroutines.flow.FlowKt
androidx.core.view.WindowInsetsCompat$BuilderImpl29
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1
androidx.core.app.ActivityCompat$Api30Impl
kotlin.CharCodeKt
kotlinx.coroutines.AwaitKt$joinAll$3
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1
androidx.core.text.util.LinkifyCompat$Api24Impl
io.flutter.plugin.platform.AccessibilityEventsDelegate
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3
androidx.core.R
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2
kotlin.jvm.internal.ArrayIterator
kotlin.collections.MutableMapWithDefaultImpl
kotlin.jvm.internal.KTypeBase
androidx.core.app.ActivityCompat$Api21Impl
androidx.core.net.ParseException
kotlin.text.RegexKt$fromInt$1$1
androidx.savedstate.SavedStateRegistry
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1
kotlinx.coroutines.SupervisorKt
kotlin.coroutines.CoroutineContext$Key
io.flutter.plugin.platform.VirtualDisplayController
androidx.lifecycle.LiveDataScope
androidx.core.app.NotificationManagerCompat
androidx.fragment.app.FragmentManager$6
androidx.window.area.EmptyDecorator
androidx.core.graphics.BlendModeUtils
kotlin.io.FileTreeWalk$FileTreeWalkIterator
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1
kotlinx.coroutines.CompletableJob$DefaultImpls
kotlin.io.FileTreeWalk$DirectoryState
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1
androidx.activity.OnBackPressedDispatcher$1
androidx.collection.SparseArrayCompat
androidx.fragment.app.Fragment$AnimationInfo
androidx.viewpager.widget.ViewPager$3
kotlin.jvm.internal.FunctionImpl
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1
kotlin.collections.ArraysKt___ArraysKt$withIndex$5
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1
androidx.core.view.NestedScrollingParent
androidx.window.embedding.SplitController
androidx.core.content.ContextCompat$Api33Impl
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
kotlin.reflect.KMutableProperty1$Setter
androidx.core.text.util.LocalePreferences$CalendarType
io.flutter.plugin.editing.ListenableEditingState$1
kotlin.jvm.internal.Ref$CharRef
kotlinx.coroutines.internal.ClassValueCtorCache
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1
androidx.lifecycle.LifecycleRegistry
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind
kotlinx.coroutines.Deferred
androidx.core.app.ActivityOptionsCompat$Api21Impl
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api24Impl
io.flutter.embedding.android.KeyboardMap
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1
androidx.core.graphics.ColorUtils$Api26Impl
kotlin.io.path.FileVisitorBuilder
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
kotlinx.coroutines.flow.FlowKt__CollectionKt
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2
kotlinx.coroutines.LazyStandaloneCoroutine
kotlin.io.encoding.Base64Kt
androidx.window.embedding.SplitController$SplitSupportStatus$Companion
androidx.fragment.app.SpecialEffectsController$Operation$State$WhenMappings
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.layout.util.DisplayCompatHelperApi28
androidx.core.location.GnssStatusCompat$Callback
androidx.core.location.LocationManagerCompat$LocationListenerKey
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1
androidx.core.graphics.drawable.BitmapDrawableKt
com.getkeepsafe.relinker.ReLinker$Logger
androidx.core.view.ViewCompat$ScrollAxis
androidx.core.widget.TintableCompoundButton
kotlin.jvm.internal.IntSpreadBuilder
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2
io.flutter.embedding.engine.FlutterEngine
kotlin.jvm.internal.DefaultConstructorMarker
androidx.lifecycle.ViewModelStoreOwner
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.core.ConsumerAdapter$ConsumerHandler
kotlin.jvm.JvmDefault
io.flutter.view.AccessibilityBridge$Flag
kotlin.collections.CollectionsKt__CollectionsJVMKt
androidx.window.reflection.ReflectionUtils
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1
io.flutter.plugin.platform.PlatformOverlayView
kotlinx.coroutines.CompletableDeferredKt
_COROUTINE._BOUNDARY
androidx.core.database.CursorWindowCompat$Api28Impl
kotlinx.coroutines.flow.internal.ChannelFlowOperator
androidx.core.app.NotificationCompat$Action$Builder
kotlin.SafePublicationLazyImpl
kotlinx.coroutines.ExecutorCoroutineDispatcher
io.flutter.BuildConfig
kotlin.jvm.internal.ArrayByteIterator
androidx.lifecycle.Lifecycle$State
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1
androidx.lifecycle.HasDefaultViewModelProviderFactory
androidx.annotation.ContentView
androidx.core.content.res.FontResourcesParserCompat
androidx.core.view.DisplayCutoutCompat
kotlin.text.StringsKt___StringsKt$windowed$1
kotlin.time.DurationUnit
kotlin.time.TimeSource$Companion
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.activity.result.contract.ActivityResultContracts
io.flutter.embedding.engine.plugins.service.ServicePluginBinding
kotlin.collections.MapAccessorsKt
androidx.core.graphics.BitmapCompat$Api29Impl
kotlinx.coroutines.flow.FlowKt__ShareKt
androidx.window.embedding.EmbeddingBackend
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo
androidx.concurrent.futures.ResolvableFuture
androidx.window.layout.FoldingFeature$Orientation
androidx.lifecycle.Api26Impl
kotlinx.coroutines.selects.UnbiasedSelectImplementation
androidx.savedstate.SavedStateRegistryOwner
androidx.core.provider.CallbackWithHandler
kotlinx.coroutines.Job
kotlinx.coroutines.Unconfined
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget
androidx.core.view.inputmethod.InputConnectionCompat$2
kotlin.jvm.functions.Function20
androidx.lifecycle.Lifecycling
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8
androidx.core.app.NotificationCompat$BadgeIconType
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1
androidx.core.app.OnUserLeaveHintProvider
kotlin.properties.Delegates$observable$1
androidx.core.os.TraceKt
androidx.core.graphics.drawable.TintAwareDrawable
androidx.annotation.ChecksSdkIntAtLeast
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener
kotlin.reflect.KVariance
androidx.fragment.app.FragmentManager$10
androidx.annotation.CallSuper
androidx.core.view.ViewCompat$3
io.flutter.embedding.android.FlutterFragment$1
androidx.window.extensions.core.util.function.Predicate
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.activity.result.PickVisualMediaRequestKt
kotlinx.coroutines.sync.SemaphoreImpl
kotlinx.coroutines.internal.LockFreeTaskQueue
androidx.fragment.app.FragmentContainerView$Api20Impl
androidx.core.app.NotificationCompatBuilder$Api23Impl
kotlinx.coroutines.sync.MutexImpl$onLock$2
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1
androidx.core.app.Person$Builder
androidx.collection.MapCollections$KeySet
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2
io.flutter.embedding.android.AndroidTouchProcessor
androidx.lifecycle.Transformations$sam$androidx_lifecycle_Observer$0
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1
kotlinx.coroutines.ThreadPoolDispatcherKt
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler
kotlin.properties.ReadWriteProperty
io.flutter.embedding.android.FlutterFragment$ActivityCallThrough
androidx.lifecycle.LegacySavedStateHandleController
kotlin.collections.BooleanIterator
io.flutter.embedding.android.FlutterView$4
kotlin.jvm.internal.CallableReference$NoReceiver
kotlin.sequences.SequencesKt___SequencesKt$minus$2
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1
androidx.core.graphics.ColorUtils
androidx.core.provider.DocumentsContractCompat
org.jetbrains.annotations.NonNls
androidx.lifecycle.LifecycleEventObserver
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder
androidx.annotation.InterpolatorRes
io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler
kotlin.Deprecated
kotlinx.coroutines.EventLoopImplBase
kotlinx.coroutines.flow.internal.NoOpContinuation
kotlin.annotation.MustBeDocumented
kotlin.text.UStringsKt
kotlinx.coroutines.channels.BufferedChannelKt
androidx.core.view.MenuItemCompat$1
kotlinx.coroutines.CancellableContinuationKt
kotlinx.coroutines.flow.FlowKt__CountKt$count$4
androidx.window.embedding.SplitPairRule
androidx.core.content.OnTrimMemoryProvider
kotlinx.coroutines.debug.AgentPremain
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl
androidx.startup.AppInitializer
androidx.fragment.app.FragmentManager$1
kotlinx.coroutines.Job$DefaultImpls
kotlin.coroutines.jvm.internal.SuspendLambda
kotlin.coroutines.jvm.internal.DebugMetadataKt
kotlinx.coroutines.internal.LimitedDispatcher$Worker
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong
androidx.core.app.ActivityOptionsCompat$Api34Impl
androidx.core.view.GestureDetectorCompat
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2
androidx.core.os.PersistableBundleKt
kotlinx.coroutines.AbstractTimeSourceKt
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation
androidx.core.view.MenuItemCompat
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1
androidx.lifecycle.ViewModelStore
kotlin.random.jdk8.PlatformThreadLocalRandom
androidx.core.util.AndroidXConsumerKt
androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings
kotlin.time.Duration
org.jetbrains.annotations.Blocking
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1
androidx.arch.core.util.Function
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl
androidx.loader.R$layout
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1
androidx.core.view.ViewGroupKt$children$1
androidx.window.core.ConsumerAdapter
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder
kotlinx.coroutines.CancelFutureOnCancel
org.jetbrains.annotations.NotNull
kotlinx.coroutines.android.HandlerDispatcher
io.flutter.embedding.android.FlutterSurfaceView
kotlin.sequences.SequencesKt___SequencesKt
kotlin.sequences.SequencesKt__SequencesKt$flatten$2
kotlin.jvm.internal.PropertyReference
kotlin.ranges.OpenEndRange
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask
androidx.fragment.app.Fragment$6
androidx.core.content.SharedPreferencesCompat$EditorCompat
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener
androidx.window.embedding.ActivityEmbeddingController$Companion
androidx.core.util.SparseBooleanArrayKt
io.flutter.plugin.common.MessageCodec
androidx.core.view.ContentInfoCompat$BuilderCompat
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5
androidx.window.embedding.ActivityEmbeddingController
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3
kotlin.io.path.PathWalkOption
kotlin.internal.OnlyInputTypes
androidx.core.text.BidiFormatter$DirectionalityEstimator
kotlinx.coroutines.CoroutineScopeKt
androidx.core.view.WindowInsetsAnimationCompat$Callback
androidx.savedstate.Recreator$Companion
androidx.lifecycle.viewmodel.InitializerViewModelFactory
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
kotlin.jvm.internal.LongCompanionObject
androidx.core.app.NotificationCompatBuilder$Api29Impl
kotlin.jvm.internal.TypeReference$asString$args$1
org.jetbrains.annotations.Range
kotlin.time.DurationUnitKt__DurationUnitKt
kotlin.UShort
androidx.core.app.NotificationCompat$CallStyle$Api28Impl
kotlin.time.AdjustedTimeMark
io.flutter.embedding.android.KeyData
androidx.loader.content.Loader$OnLoadCompleteListener
kotlinx.coroutines.JobSupport$onJoin$1
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion
com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry
androidx.core.location.LocationManagerCompat$CancellableLocationListener
androidx.core.content.PermissionChecker
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler
kotlin.KotlinNothingValueException
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl
androidx.core.provider.SelfDestructiveThread$2
kotlin.io.encoding.EncodeOutputStream
androidx.core.net.UriCompat
androidx.lifecycle.BlockRunner$cancel$1
androidx.core.view.OnReceiveContentListener
io.flutter.embedding.android.KeyEmbedderResponder$1
kotlin.coroutines.CoroutineContext$DefaultImpls
kotlin.jvm.internal.ReflectionFactory
kotlin.ranges.RangesKt
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1
androidx.window.reflection.ReflectionUtils$validateImplementation$1$1
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments
androidx.core.app.OnNewIntentProvider
kotlinx.coroutines.flow.FlowKt__CountKt$count$1
kotlin.collections.builders.MapBuilder$EntryRef
androidx.fragment.app.FragmentTabHost
androidx.core.telephony.mbms.MbmsHelper$Api28Impl
kotlinx.coroutines.flow.FlowKt__ErrorsKt
androidx.core.util.Pair
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister
androidx.core.view.AccessibilityDelegateCompat
kotlin.text.CharDirectionality
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings
androidx.core.util.Pools$Pool
androidx.activity.OnBackPressedDispatcher$addCancellableCallback$1
androidx.window.layout.WindowMetricsCalculatorCompat
kotlinx.coroutines.internal.LockFreeTaskQueueCore
androidx.core.view.ViewCompat$UnhandledKeyEventManager
kotlin.jvm.internal.LocalVariableReference
androidx.profileinstaller.ProfileVerifier$CompilationStatus
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub
kotlin.collections.ArraysKt___ArraysKt$withIndex$9
kotlin.UShort$Companion
androidx.core.content.res.ResourcesCompat$Api21Impl
kotlin.NoWhenBranchMatchedException
androidx.core.location.LocationManagerCompat
androidx.core.os.ProcessCompat$Api24Impl
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect
androidx.window.R$attr
androidx.fragment.app.strictmode.SetUserVisibleHintViolation
io.flutter.plugin.common.StandardMethodCodec
androidx.lifecycle.SavedStateHandle$Companion
androidx.window.area.WindowAreaCapability$Operation$Companion
kotlin.jvm.internal.markers.KMappedMarker
kotlin.collections.UCollectionsKt___UCollectionsKt
androidx.lifecycle.ComputableLiveData$_liveData$1
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry
kotlinx.coroutines.CopyableThrowable
kotlin.collections.AbstractSet$Companion
androidx.lifecycle.SavedStateHandle
kotlinx.coroutines.CompletionHandlerException
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer
androidx.annotation.InspectableProperty$ValueType
io.flutter.embedding.engine.loader.FlutterApplicationInfo
io.flutter.plugin.common.StringCodec
androidx.core.content.MimeTypeFilter
androidx.core.R$style
androidx.core.view.contentcapture.ContentCaptureSessionCompat
androidx.core.widget.ScrollerCompat
androidx.collection.MapCollections$ValuesCollection
io.flutter.embedding.android.FlutterFragment
androidx.core.view.inputmethod.InputConnectionCompat$Api25Impl
androidx.core.net.TrafficStatsCompat$Api24Impl
androidx.lifecycle.livedata.core.ktx.R
androidx.collection.CircularIntArray
androidx.core.util.AndroidXContinuationConsumer
kotlin.io.path.ExceptionsCollector
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1
androidx.lifecycle.ViewModelLazy$1
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.lifecycle.LiveDataScopeImpl$emitSource$2
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2
androidx.lifecycle.runtime.R$id
kotlinx.coroutines.CoroutineExceptionHandler
kotlin.SynchronizedLazyImpl
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1
androidx.window.EmptyDecoratorWindowSdk
kotlin.sequences.SequenceScope
androidx.core.util.PatternsCompat
androidx.core.location.LocationListenerCompat
kotlin.coroutines.ContinuationInterceptor$DefaultImpls
androidx.concurrent.futures.AbstractResolvableFuture$1
androidx.core.graphics.drawable.RoundedBitmapDrawable21
androidx.lifecycle.LiveData$ObserverWrapper
kotlin.text.Regex$findAll$2
kotlinx.coroutines.internal.FastServiceLoader
io.flutter.embedding.engine.FlutterJNI$Factory
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1
kotlin.LazyKt__LazyKt
kotlinx.coroutines.internal.ConcurrentLinkedListKt
kotlin.reflect.KType
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2
androidx.annotation.VisibleForTesting$Companion
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1
androidx.core.util.LongSparseArrayKt
kotlinx.coroutines.internal.FastServiceLoaderKt
kotlin.DeepRecursiveScope
kotlinx.coroutines.CoroutineExceptionHandlerKt
androidx.activity.result.ActivityResultRegistry$2
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1
kotlinx.coroutines.channels.ChannelIterator$next0$1
kotlin.jvm.functions.Function2
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api33Impl
kotlinx.coroutines.DisposeOnCancel
androidx.savedstate.Recreator$SavedStateProvider
androidx.core.text.BidiFormatter$Builder
kotlin.enums.EnumEntriesList
io.flutter.plugin.editing.TextEditingDelta
androidx.core.app.Person$Api22Impl
androidx.window.core.ValidSpecification
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1
kotlinx.coroutines.scheduling.SchedulerTimeSource
androidx.activity.result.ActivityResultRegistry$CallbackAndContract
kotlin.UShortArrayKt
kotlin.Function
androidx.collection.MapCollections
io.flutter.embedding.engine.FlutterEngineGroup$1
org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
kotlinx.coroutines.UndispatchedMarker
androidx.annotation.TransitionRes
androidx.core.widget.TintableCompoundDrawablesView
androidx.core.provider.FontRequestWorker$1
androidx.window.core.PredicateAdapter$BaseHandler
kotlin.js.ExperimentalJsExport
kotlin.text.FlagEnum
androidx.core.app.NotificationCompat
androidx.core.view.ViewPropertyAnimatorUpdateListener
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3
kotlin.io.path.PathTreeWalk
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateParentMetricsPredicate$1
androidx.core.util.Preconditions
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.fragment.app.Fragment$2
kotlin.internal.ContractsDsl
kotlin.annotation.AnnotationRetention
org.intellij.lang.annotations.Language
androidx.fragment.app.strictmode.RetainInstanceUsageViolation
androidx.core.app.JobIntentService$JobWorkEnqueuer
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1
kotlinx.coroutines.channels.ReceiveCatching
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl
androidx.loader.content.ModernAsyncTask$AsyncTaskResult
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1
kotlinx.coroutines.internal.Synchronized_commonKt
kotlinx.coroutines.scheduling.DefaultScheduler
androidx.core.view.ViewCompat
androidx.core.view.MenuItemCompat$Api26Impl
kotlin.ranges.LongProgression$Companion
androidx.lifecycle.LifecycleController
kotlinx.coroutines.CompletableJob
androidx.core.os.ParcelCompat$Api33Impl
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1
androidx.core.location.LocationCompat$Api28Impl
androidx.core.R$id
androidx.core.os.HandlerCompat
kotlinx.coroutines.scheduling.UnlimitedIoScheduler
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda
androidx.profileinstaller.BenchmarkOperation
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
androidx.interpolator.view.animation.LookupTableInterpolator
kotlinx.coroutines.channels.ActorKt
androidx.window.area.WindowAreaSessionCallback
kotlin.collections.AbstractCollection$toString$1
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1
androidx.activity.EdgeToEdgeImpl
androidx.core.view.MenuHostHelper$LifecycleContainer
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker
androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl
io.flutter.embedding.android.FlutterImageView
org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3
androidx.fragment.app.DialogFragment$2
androidx.window.embedding.SplitAttributes$Companion
kotlin.io.path.DefaultCopyActionContext
androidx.core.widget.EdgeEffectCompat$Api21Impl
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
androidx.core.app.NotificationCompat$ServiceNotificationBehavior
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2
androidx.fragment.app.Fragment$InstantiationException
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1
androidx.core.text.SpannableStringKt
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4
kotlinx.coroutines.channels.ChannelIterator$DefaultImpls
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.layout.util.ContextCompatHelperApi24
kotlin.contracts.SimpleEffect
kotlin.sequences.FlatteningSequence
kotlin.reflect.KMutableProperty2$Setter
androidx.core.app.NotificationChannelCompat$Api29Impl
androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback
androidx.core.widget.NestedScrollView
androidx.savedstate.SavedStateRegistry$SavedStateProvider
androidx.fragment.app.SpecialEffectsController$Companion
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4
androidx.core.os.PersistableBundleApi22ImplKt
io.flutter.plugin.common.MethodChannel
androidx.core.app.NotificationCompat$Action$Builder$Api29Impl
kotlin.SuspendKt
kotlin.comparisons.ComparisonsKt___ComparisonsKt
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings
androidx.customview.R$attr
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1
androidx.annotation.DisplayContext
kotlin.io.path.FileVisitorBuilderImpl
kotlin.collections.GroupingKt__GroupingKt
androidx.core.app.NotificationManagerCompat$InterruptionFilter
kotlin.collections.builders.SerializedMap
kotlinx.coroutines.UndispatchedCoroutine
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
kotlinx.coroutines.CompletionHandlerBase
kotlin.contracts.ContractBuilderKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2
kotlin.collections.SetsKt___SetsKt
kotlinx.coroutines.flow.FlowKt__CollectKt
android.support.v4.os.IResultReceiver2$Stub$Proxy
io.flutter.embedding.android.FlutterView
kotlin.collections.unsigned.UArraysKt
androidx.arch.core.internal.SafeIterableMap
kotlin.jvm.internal.MutablePropertyReference1
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$2
kotlin.collections.AbstractCollection
androidx.activity.SystemBarStyle$Companion$light$1
kotlin.experimental.ExperimentalObjCRefinement
kotlin.time.TimedValue
androidx.core.view.WindowInsetsCompat$BuilderImpl
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1
kotlinx.coroutines.channels.ChannelResult
android.support.v4.os.IResultReceiver$Stub$Proxy
androidx.lifecycle.viewmodel.MutableCreationExtras
androidx.core.content.pm.ShortcutXmlParser
kotlin.jdk7.AutoCloseableKt
androidx.window.embedding.SplitAttributes$Builder
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3
io.flutter.embedding.engine.systemchannels.SpellCheckChannel
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler
com.getkeepsafe.relinker.elf.Dynamic32Structure
kotlin.jvm.internal.markers.KMutableIterator
androidx.annotation.experimental.Experimental
androidx.window.embedding.SplitAttributes$LayoutDirection$Companion
androidx.core.provider.SelfDestructiveThread
androidx.core.graphics.PictureKt
androidx.lifecycle.CoroutineLiveDataKt
kotlin.io.ByteStreamsKt$iterator$1
kotlinx.coroutines.selects.SelectOldKt
kotlin.collections.ReversedList
androidx.annotation.LongDef
androidx.core.app.LocaleManagerCompat$Api24Impl
kotlin.UnsafeLazyImpl
androidx.activity.ComponentActivity$1
androidx.core.os.LocaleListCompat$Api24Impl
androidx.core.app.RemoteInput$Api29Impl
kotlin.ranges.RangesKt__RangesKt
kotlin.io.SerializableKt
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt
androidx.core.graphics.drawable.WrappedDrawable
androidx.fragment.app.FragmentManager$7
org.jetbrains.annotations.UnknownNullability
kotlin.text.MatchResult$DefaultImpls
kotlinx.coroutines.channels.ConflatedBroadcastChannel
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1
io.flutter.plugin.editing.TextInputPlugin$2
kotlinx.coroutines.internal.Segment
io.flutter.embedding.engine.systemchannels.TextInputChannel$1
io.flutter.view.AccessibilityViewEmbedder$ViewAndId
androidx.core.text.util.LinkifyCompat$LinkifyMask
androidx.core.view.ViewCompat$NestedScrollType
kotlin.collections.ArraysKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls
androidx.core.view.WindowInsetsCompat$Impl21
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt
kotlinx.coroutines.CoroutineDispatcher$Key
kotlin.ranges.URangesKt
androidx.annotation.Discouraged
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.core.view.ViewCompat$Api30Impl
androidx.core.location.LocationManagerCompat$Api31Impl
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2
kotlin.io.ExceptionsKt
androidx.fragment.app.strictmode.GetTargetFragmentRequestCodeUsageViolation
androidx.core.app.NotificationManagerCompat$NotificationWithIdAndTag
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1
kotlin.reflect.KType$DefaultImpls
kotlin.StandardKt__SynchronizedKt
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration
androidx.core.app.NotificationCompat$Builder$Api23Impl
kotlin.jvm.internal.IntCompanionObject
kotlin.internal.RequireKotlin$Container
androidx.core.view.WindowInsetsControllerCompat$Impl20
kotlin.text.MatcherMatchResult$groups$1
androidx.core.content.SharedPreferencesCompat
androidx.activity.ComponentActivity$6
kotlinx.coroutines.flow.EmptyFlow
io.flutter.embedding.engine.loader.FlutterLoader$Settings
kotlinx.coroutines.internal.ThreadContextKt$findOne$1
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isActivityEmbeddingComponentValid$1
org.intellij.lang.annotations.RegExp
io.flutter.embedding.engine.systemchannels.ScribeChannel$1
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1
kotlin.collections.ArraysKt___ArraysJvmKt
androidx.core.os.HandlerCompat$Api28Impl
androidx.activity.EdgeToEdge
androidx.annotation.CheckResult
androidx.core.view.KeyEventDispatcher
androidx.core.app.ServiceCompat$Api24Impl
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2
androidx.core.animation.AnimatorKt
kotlin.jvm.functions.Function12
kotlin.ParameterName
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1
androidx.window.embedding.EmbeddingBackend$Companion$reset$1
androidx.core.view.SoftwareKeyboardControllerCompat
androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1
androidx.lifecycle.LifecycleRegistryOwner
io.flutter.embedding.android.FlutterTextureView
io.flutter.view.FlutterRunArguments
kotlin.jvm.internal.unsafe.MonitorKt
androidx.activity.result.ActivityResultLauncher
kotlin.StandardKt__StandardKt
androidx.lifecycle.LifecycleObserver
androidx.fragment.app.FragmentManager$9
io.flutter.view.AccessibilityBridge$StringAttribute
androidx.core.graphics.BlendModeColorFilterCompat
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1
kotlin.ranges.ULongRange
androidx.lifecycle.ViewModelProvider$Factory
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3
androidx.core.app.NotificationManagerCompat$Api24Impl
kotlin.enums.EnumEntriesSerializationProxy$Companion
androidx.core.widget.TintableCheckedTextView
kotlin.collections.RingBuffer
io.flutter.plugin.common.BasicMessageChannel
androidx.activity.FullyDrawnReporterKt
kotlin.UIntArray$Iterator
kotlinx.coroutines.internal.ThreadLocalKt
androidx.fragment.app.SpecialEffectsController$Operation
androidx.annotation.PluralsRes
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction
androidx.core.content.pm.PackageInfoCompat$Api28Impl
kotlinx.coroutines.CompletedWithCancellation
androidx.core.util.TypedValueCompat$ComplexDimensionUnit
androidx.viewpager.widget.PagerTabStrip$2
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1
androidx.core.content.ContextCompat$LegacyServiceMapHolder
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness
androidx.core.util.TypedValueCompat
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1
androidx.core.view.InputDeviceCompat
androidx.core.graphics.TypefaceCompatBaseImpl$1
kotlin.text.CharsetsKt
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
kotlinx.coroutines.internal.AtomicOp
kotlin.UShortArray
kotlinx.coroutines.BlockingCoroutine
androidx.core.app.ActivityCompat$Api23Impl
kotlinx.coroutines.flow.internal.SafeCollectorKt
kotlin.jvm.internal.Intrinsics
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1
io.flutter.view.AccessibilityViewEmbedder$1
io.flutter.view.AccessibilityBridge$Action
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel2Impl
kotlinx.coroutines.debug.internal.AgentInstallationType
kotlin.internal.InlineOnly
kotlinx.coroutines.CompletedExceptionally
kotlin.NumbersKt__BigDecimalsKt
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
androidx.fragment.app.FragmentHostCallback
kotlin.SinceKotlin
kotlin.io.path.PathNode
kotlin.text.StringsKt__StringBuilderKt
io.flutter.embedding.engine.FlutterShellArgs
kotlin.collections.CollectionsKt__IterablesKt
kotlin.random.XorWowRandom$Companion
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel
kotlin.PropertyReferenceDelegatesKt
androidx.customview.view.AbsSavedState$1
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1
kotlinx.coroutines.flow.StateFlowSlot
androidx.core.graphics.CanvasKt
androidx.core.view.WindowInsetsCompat$TypeImpl30
androidx.core.location.LocationRequestCompat$Builder
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream
androidx.window.embedding.SplitPlaceholderRule
androidx.core.view.MenuKt$children$1
kotlin.reflect.TypeImpl
androidx.window.core.ExperimentalWindowApi
androidx.core.app.JobIntentService$CompatWorkItem
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1
kotlin.reflect.KTypeProjection$WhenMappings
kotlin.collections.ArraysKt___ArraysKt$withIndex$8
androidx.core.app.NotificationCompat$CallStyle
kotlin.text.StringsKt___StringsKt$windowedSequence$2
androidx.lifecycle.DefaultLifecycleObserverAdapter
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
kotlin.UInt$Companion
kotlin.collections.DoubleIterator
androidx.tracing.TraceApi18Impl
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType
kotlin.reflect.KParameter
kotlin.random.FallbackThreadLocalRandom
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
kotlinx.coroutines.channels.ProducerCoroutine
kotlin.internal.RequireKotlin
kotlinx.coroutines.CopyableThreadContextElement
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
androidx.core.view.WindowInsetsCompat$BuilderImpl20
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1
kotlinx.coroutines.JobKt__FutureKt
androidx.lifecycle.Transformations$map$2
kotlin.io.CloseableKt
androidx.core.util.SparseArrayKt$valueIterator$1
androidx.loader.R$id
kotlin.internal.PlatformImplementationsKt
io.flutter.embedding.android.KeyboardManager$CharacterCombiner
kotlin.math.MathKt__MathJVMKt
kotlin.coroutines.jvm.internal.RunSuspend
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2
androidx.fragment.app.DialogFragment$5
androidx.viewpager.R
androidx.lifecycle.livedata.R
kotlin.io.LinesSequence
androidx.core.content.IntentSanitizer$Api29Impl
androidx.core.content.IntentSanitizer
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback
androidx.viewpager.widget.PagerTitleStrip
androidx.core.app.JobIntentService$WorkEnqueuer
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1
kotlinx.coroutines.JobKt__JobKt
androidx.core.graphics.TypefaceCompatApi28Impl
androidx.annotation.ReplaceWith
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper
kotlin.coroutines.CoroutineContext
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
androidx.core.app.NotificationCompat$MessagingStyle
kotlin.io.ByteStreamsKt
androidx.window.core.PredicateAdapter
androidx.core.app.PendingIntentCompat$Api23Impl
kotlinx.coroutines.flow.FlowKt__DelayKt
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion
kotlin.sequences.GeneratorSequence
io.flutter.embedding.engine.systemchannels.LifecycleChannel$1
kotlin.coroutines.intrinsics.IntrinsicsKt
androidx.core.content.res.CamColor
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1
androidx.viewpager.widget.ViewPager$ItemInfo
com.getkeepsafe.relinker.SystemLibraryLoader
androidx.activity.result.PickVisualMediaRequest$Builder
kotlin.jvm.JvmDefaultWithoutCompatibility
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2
androidx.core.app.GrammaticalInflectionManagerCompat$GrammaticalGender
kotlinx.coroutines.selects.SelectUnbiasedKt
kotlin.jvm.internal.DoubleCompanionObject
kotlin.reflect.WildcardTypeImpl$Companion
kotlin.reflect.KProperty2$Getter
androidx.core.view.WindowCompat$Api28Impl
androidx.fragment.app.FragmentManagerViewModel
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$2
kotlinx.coroutines.android.HandlerContext
kotlin.text.DelimitedRangesSequence$iterator$1
kotlin.sequences.USequencesKt
io.flutter.plugin.mouse.MouseCursorPlugin$1
androidx.core.view.TreeIterator
io.flutter.embedding.engine.dart.PlatformMessageHandler
androidx.fragment.app.FragmentManager$OpGenerator
androidx.core.view.ViewKt$allViews$1
kotlinx.coroutines.CoroutineStart
kotlin.jvm.functions.Function13
androidx.core.util.ContinuationConsumer
kotlin.contracts.ExperimentalContracts
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1
androidx.window.layout.FoldingFeature$Orientation$Companion
kotlin.UByte$Companion
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1
kotlin.ULong
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1
androidx.core.util.SparseLongArrayKt$valueIterator$1
androidx.fragment.app.FragmentStateManager$2
androidx.core.app.ActivityOptionsCompat
kotlin.text.CharDirectionality$Companion$directionalityMap$2
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1
androidx.core.view.OnApplyWindowInsetsListener
androidx.core.view.accessibility.AccessibilityEventCompat$ContentChangeType
androidx.savedstate.R
androidx.core.view.ViewCompat$Api26Impl
kotlin.ThrowsKt
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator
androidx.window.area.WindowAreaSession
androidx.window.core.PredicateAdapter$PredicateStubHandler
androidx.window.embedding.RuleController
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback
androidx.activity.contextaware.ContextAwareKt
androidx.core.view.NestedScrollingParentHelper
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
androidx.core.app.ComponentActivity
androidx.collection.MapCollections$ArrayIterator
androidx.activity.OnBackPressedDispatcherKt$addCallback$callback$1
kotlinx.coroutines.selects.SelectClause2
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable
kotlin.jvm.internal.PropertyReference2Impl
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetEmbeddingRulesValid$1
androidx.core.widget.NestedScrollView$SavedState$1
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1$1
androidx.loader.R
androidx.core.content.UriMatcherCompat
androidx.core.util.Pools
com.getkeepsafe.relinker.ApkLibraryInstaller
kotlin.text.CharsKt__CharKt
kotlin.ranges.IntProgression
kotlin.io.FilePathComponents
kotlin.ContextFunctionTypeParams
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType
kotlinx.coroutines.JobCancellationException
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type
kotlin.internal.PureReifiable
androidx.loader.app.LoaderManagerImpl$LoaderObserver
androidx.core.graphics.drawable.IconCompat$Api26Impl
androidx.core.content.LocusIdCompat$Api29Impl
kotlin.contracts.Effect
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
io.flutter.embedding.android.MotionEventTracker$MotionEventId
androidx.core.view.accessibility.AccessibilityManagerCompat$Api34Impl
org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
io.flutter.plugin.common.BasicMessageChannel$MessageHandler
kotlin.text.MatcherMatchResult$groups$1$iterator$1
androidx.window.java.area.WindowAreaControllerCallbackAdapter
androidx.core.content.pm.ActivityInfoCompat
androidx.activity.ComponentActivity$2
androidx.core.app.NotificationManagerCompat$Api28Impl
kotlinx.coroutines.debug.internal.DebugProbesImplKt
androidx.window.layout.FoldingFeature$State$Companion
kotlin.jvm.functions.Function5
kotlinx.coroutines.flow.FlowKt__MigrationKt
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl
kotlinx.coroutines.debug.internal.DebugProbesImpl
io.flutter.embedding.engine.FlutterEngineConnectionRegistry
io.flutter.embedding.android.FlutterPlayStoreSplitApplication
kotlin.ExceptionsKt__ExceptionsKt
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget
androidx.core.widget.CompoundButtonCompat$Api21Impl
kotlin.jvm.internal.BooleanCompanionObject
androidx.window.java.core.CallbackToFlowAdapter
kotlinx.coroutines.flow.AbstractFlow$collect$1
kotlin.jvm.internal.MutablePropertyReference0
androidx.core.os.UserHandleCompat$Api24Impl
io.flutter.embedding.engine.renderer.FlutterRenderer
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation
kotlinx.coroutines.AwaitAll
androidx.core.text.util.FindAddress
kotlin.collections.MapsKt___MapsJvmKt
kotlinx.coroutines.JobSupport$onAwaitInternal$2
io.flutter.view.AccessibilityBridge$SemanticsNode
androidx.core.graphics.BitmapCompat
kotlin.jvm.internal.ShortCompanionObject
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1
android.support.v4.os.IResultReceiver$Default
androidx.core.view.ViewGroupKt$descendants$1$1
androidx.annotation.ReturnThis
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1
androidx.fragment.app.FragmentContainerView
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription
androidx.core.app.ShareCompat
androidx.core.transition.TransitionKt$addListener$5
androidx.annotation.ColorInt
io.flutter.embedding.android.KeyboardMap$2
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2
androidx.customview.widget.FocusStrategy$CollectionAdapter
kotlin.sequences.TakeSequence
kotlin.jvm.internal.ShortSpreadBuilder
androidx.core.provider.SelfDestructiveThread$1
kotlin.system.TimingKt
kotlin.jvm.internal.ByteCompanionObject
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree
androidx.fragment.app.strictmode.FragmentTagUsageViolation
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1
kotlin.sequences.SequencesKt__SequencesKt$flatten$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30
androidx.window.embedding.SplitController$splitInfoList$1
kotlin.jvm.internal.SerializedIr
kotlinx.coroutines.stream.StreamFlow$collect$1
kotlin.io.FileSystemException
kotlin.jvm.internal.ArrayFloatIterator
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1
androidx.activity.ComponentDialog
kotlinx.coroutines.CoroutineDispatcher$Key$1
com.getkeepsafe.relinker.elf.Dynamic64Structure
androidx.core.app.ActivityCompat$Api22Impl
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener
androidx.profileinstaller.DeviceProfileWriter
org.intellij.lang.annotations.JdkConstants
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl
androidx.core.widget.EdgeEffectCompat$Api31Impl
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1
androidx.core.view.ViewGroupKt$iterator$1
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
kotlin.reflect.KClass
kotlinx.coroutines.flow.StartedWhileSubscribed
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1
androidx.loader.app.LoaderManager$LoaderCallbacks
kotlinx.coroutines.CoroutineScope
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher
kotlin.reflect.TypesJVMKt
kotlin.jvm.internal.DoubleSpreadBuilder
kotlinx.coroutines.CancellableContinuationImplKt
androidx.viewpager.widget.ViewPager$DecorView
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1
io.flutter.plugin.common.PluginRegistry
kotlin.io.path.PathRelativizer
androidx.core.view.WindowInsetsCompat$Impl20
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion
androidx.fragment.app.strictmode.WrongFragmentContainerViolation
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3
_COROUTINE.ArtificialStackFrames
androidx.window.embedding.SplitRule
kotlinx.coroutines.future.CompletableFutureCoroutine
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0
io.flutter.embedding.engine.dart.PlatformTaskQueue
kotlin.collections.State
androidx.core.app.NotificationCompat$MessagingStyle$Api26Impl
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion
androidx.fragment.app.FragmentManager$2
kotlinx.coroutines.internal.UndeliveredElementException
kotlinx.coroutines.AbstractTimeSource
kotlin.coroutines.jvm.internal.CompletedContinuation
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode
androidx.profileinstaller.ProfileVerifier
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute
androidx.fragment.app.FragmentManager$8
androidx.lifecycle.LifecycleCoroutineScope
androidx.core.app.NotificationCompat$WearableExtender
androidx.activity.ViewTreeFullyDrawnReporterOwner
androidx.core.view.WindowInsetsCompat$Impl30
kotlin.collections.AbstractList
androidx.core.location.LocationKt
androidx.window.embedding.SplitAttributes$LayoutDirection
androidx.core.graphics.RegionKt$iterator$1
kotlin.time.TimeSource$Monotonic
kotlinx.coroutines.future.ContinuationHandler
kotlinx.coroutines.flow.FlowKt__MergeKt
androidx.profileinstaller.ProfileVerifier$CompilationStatus$ResultCode
androidx.annotation.IntRange
kotlin.coroutines.EmptyCoroutineContext
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls
androidx.window.area.RearDisplaySessionImpl
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1
kotlin.math.MathKt__MathHKt
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache
kotlin.reflect.KCallable$DefaultImpls
androidx.core.view.PointerIconCompat$Api24Impl
androidx.core.graphics.PointKt
androidx.collection.ContainerHelpers
android.support.v4.app.RemoteActionCompatParcelizer
androidx.core.view.ViewConfigurationCompat
kotlin.sequences.DropSequence$iterator$1
androidx.window.layout.WindowLayoutInfo
kotlinx.coroutines.DispatchersKt
org.jetbrains.annotations.NonBlockingExecutor
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1
kotlin.time.TestTimeSource
androidx.window.core.ConsumerAdapter$createSubscription$2
io.flutter.embedding.android.FlutterEngineProvider
androidx.core.app.RemoteActionCompat$Api26Impl
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1
androidx.fragment.app.BackStackState
kotlin.internal.RequireKotlinVersionKind
org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1
kotlinx.coroutines.flow.internal.DownstreamExceptionContext
kotlin.UInt
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
androidx.profileinstaller.ProfileVerifier$Api33Impl
androidx.core.app.ActivityOptionsCompat$Api23Impl
kotlin.ranges.CharRange$Companion
kotlinx.coroutines.channels.ChannelResult$Failed
androidx.loader.app.LoaderManagerImpl$LoaderInfo
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt
androidx.window.core.WindowStrictModeException
kotlin.random.KotlinRandom
kotlinx.coroutines.ResumeAwaitOnCompletion
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder
kotlinx.coroutines.DefaultExecutorKt
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
io.flutter.Build$API_LEVELS
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState
androidx.annotation.DimenRes
kotlin.UninitializedPropertyAccessException
androidx.core.app.PendingIntentCompat$Api26Impl
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1
androidx.loader.content.ModernAsyncTask$InternalHandler
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1
androidx.core.view.inputmethod.EditorInfoCompat
androidx.activity.EdgeToEdgeApi26
androidx.fragment.app.Fragment$8
kotlin.CompareToKt
kotlinx.coroutines.flow.Flow
androidx.versionedparcelable.R
androidx.core.view.ViewCompat$Api31Impl
kotlin.io.FilesKt__UtilsKt$copyRecursively$2
androidx.window.core.ConsumerAdapter$createSubscriptionNoActivity$1
androidx.core.graphics.drawable.IconCompat$Api23Impl
kotlin.jvm.internal.Ref$ShortRef
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4
kotlin.io.path.ExperimentalPathApi
androidx.core.R$layout
androidx.annotation.GuardedBy
com.example.wellnesshub.MainActivity
androidx.fragment.app.FragmentManagerState$1
kotlin.collections.FloatIterator
kotlinx.coroutines.channels.SendChannel
androidx.viewpager.R$style
androidx.versionedparcelable.VersionedParcelStream$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3
androidx.core.app.NotificationCompat$CarExtender$Api29Impl
kotlin.ranges.ClosedFloatingPointRange
io.flutter.view.TextureRegistry$ImageConsumer
kotlin.collections.builders.SetBuilder
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl
kotlin.reflect.TypeVariableImpl
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1
androidx.core.view.VelocityTrackerCompat$VelocityTrackableMotionEventAxis
androidx.fragment.app.SpecialEffectsController
kotlinx.coroutines.YieldContext
androidx.core.animation.AnimatorKt$addListener$2
kotlin.Suppress
androidx.activity.result.IntentSenderRequest$Companion
kotlinx.coroutines.flow.StartedLazily$command$1$1
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder
kotlinx.coroutines.flow.internal.ChannelFlowKt
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2
kotlinx.coroutines.flow.internal.NullSurrogateKt
kotlin.jvm.internal.markers.KMutableCollection
android.support.v4.app.INotificationSideChannel$_Parcel
io.flutter.plugin.common.MethodChannel$IncomingResultHandler
androidx.arch.core.executor.DefaultTaskExecutor$1
androidx.lifecycle.ViewModelProvider$Factory$Companion
kotlinx.coroutines.internal.MainDispatcherFactory$DefaultImpls
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer
io.flutter.embedding.android.FlutterSurfaceView$1
kotlin.io.encoding.StreamEncodingKt
androidx.activity.SystemBarStyle$Companion$dark$1
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup
kotlin.jvm.internal.FunctionReferenceImpl
kotlin.io.NoSuchFileException
kotlin.time.ComparableTimeMark$DefaultImpls
io.flutter.embedding.engine.loader.FlutterLoader
androidx.lifecycle.CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0
kotlin.sequences.DropWhileSequence
androidx.window.core.VerificationMode
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry
androidx.core.graphics.TypefaceCompatApi26Impl
kotlinx.coroutines.channels.BroadcastKt$broadcast$1
androidx.core.graphics.BlendModeUtils$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1
kotlinx.coroutines.flow.internal.SafeCollector
kotlin.jvm.internal.CollectionToArray
androidx.window.embedding.SplitRule$FinishBehavior$Companion
kotlinx.coroutines.CompletableDeferred$DefaultImpls
androidx.annotation.InspectableProperty$EnumEntry
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPairPredicates$1
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
kotlin.collections.ArraysKt__ArraysKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1
androidx.core.os.CancellationSignal
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1
androidx.annotation.BinderThread
kotlin.ranges.ULongProgression
androidx.core.app.NotificationCompatBuilder$Api24Impl
io.flutter.plugin.platform.PlatformViewRenderTarget
androidx.core.provider.RequestExecutor$ReplyRunnable
androidx.core.os.UserManagerCompat$Api24Impl
kotlinx.coroutines.scheduling.GlobalQueue
androidx.viewpager.widget.ViewPager$PagerObserver
androidx.core.app.AppOpsManagerCompat$Api23Impl
kotlin.coroutines.cancellation.CancellationExceptionKt
androidx.core.content.res.ResourcesCompat$FontCallback
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
io.flutter.view.TextureRegistry$ImageTextureEntry
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate
kotlin.contracts.ContractBuilder
io.flutter.embedding.engine.FlutterEngineGroupCache
androidx.core.content.ContextCompat$Api23Impl
kotlin.time.LongSaturatedMathKt
io.flutter.FlutterInjector$Builder
androidx.core.util.RangeKt
androidx.window.area.WindowAreaControllerImpl$Companion
kotlin.LazyKt__LazyJVMKt
kotlin.ranges.ClosedRange
androidx.fragment.app.FragmentTransitionCompat21$5
com.getkeepsafe.relinker.R
androidx.window.embedding.SplitRule$Api34Impl
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
androidx.core.graphics.RegionKt
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key
androidx.core.graphics.BitmapCompat$Api27Impl
androidx.core.graphics.PathParser
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors
androidx.activity.result.contract.ActivityResultContract
kotlinx.coroutines.EventLoop
kotlinx.coroutines.stream.StreamFlow
androidx.activity.OnBackPressedDispatcherKt
kotlin.text.MatchNamedGroupCollection
kotlinx.coroutines.InactiveNodeList
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl
androidx.core.util.SparseLongArrayKt$keyIterator$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1
kotlin.text.StringsKt__StringBuilderJVMKt
kotlin.random.Random$Default$Serialized
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1
androidx.core.app.NotificationCompat$TvExtender
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler
androidx.annotation.BoolRes
androidx.window.layout.adapter.extensions.ExtensionWindowBackend
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.window.embedding.RuleController$Companion
androidx.window.embedding.SplitAttributes$SplitType
kotlin.ranges.IntProgression$Companion
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments
androidx.core.app.NotificationChannelGroupCompat$Api26Impl
kotlinx.coroutines.Empty
androidx.activity.OnBackPressedDispatcher$3
io.flutter.embedding.engine.dart.DartMessenger$Reply
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo
io.flutter.embedding.engine.plugins.PluginRegistry
kotlin.collections.AbstractMap
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1
androidx.core.util.Predicate
kotlin.UNumbersKt
androidx.core.graphics.BlendModeCompat
androidx.core.view.ViewGroupCompat
kotlinx.coroutines.CoroutineName$Key
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey
androidx.core.transition.TransitionKt
androidx.window.WindowSdkExtensions
io.flutter.embedding.android.FlutterFragment$2
androidx.loader.content.ModernAsyncTask$WorkerRunnable
com.getkeepsafe.relinker.ReLinker$LibraryLoader
io.flutter.plugin.editing.TextInputPlugin$InputTarget
androidx.core.widget.TextViewKt$addTextChangedListener$2
androidx.annotation.RequiresOptIn
androidx.fragment.app.FragmentManagerState
kotlin.jvm.internal.PropertyReference1Impl
androidx.core.widget.TextViewCompat$Api23Impl
androidx.activity.OnBackPressedDispatcher$5
kotlinx.coroutines.ParentJob$DefaultImpls
kotlin.internal.LowPriorityInOverloadResolution
kotlin.time.DurationKt
androidx.lifecycle.CoroutineLiveData
org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy
androidx.fragment.app.SpecialEffectsController$Effect
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1
androidx.window.layout.WindowInfoTrackerImpl
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2
kotlin.jvm.functions.Function17
kotlinx.coroutines.scheduling.Task
androidx.core.os.HandlerCompat$Api29Impl
androidx.core.text.util.LinkifyCompat
androidx.core.util.SparseIntArrayKt$valueIterator$1
kotlin.io.path.PathsKt
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1
androidx.core.content.FileProvider
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer
androidx.window.layout.WindowMetricsCalculator
kotlin.Metadata
kotlin.sequences.IndexingSequence$iterator$1
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl
io.flutter.plugin.platform.PlatformViewWrapper
kotlin.time.DurationUnitKt__DurationUnitKt$WhenMappings
androidx.activity.result.contract.ActivityResultContracts$RequestPermission
android.support.v4.graphics.drawable.IconCompatParcelizer
kotlin.time.AbstractDoubleTimeSource
androidx.core.location.GnssStatusWrapper$Api26Impl
androidx.core.view.autofill.AutofillIdCompat
androidx.core.util.Supplier
io.flutter.view.TextureRegistry$SurfaceProducer$Callback
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper
androidx.fragment.app.SpecialEffectsController$Operation$State$Companion
androidx.lifecycle.ReflectiveGenericLifecycleObserver
kotlin.reflect.KTypeProjection$Companion
androidx.lifecycle.ProcessLifecycleInitializer
androidx.viewpager.R$id
androidx.annotation.AnimRes
kotlin.annotation.Target
androidx.core.view.NestedScrollingParent3
kotlin.system.ProcessKt
kotlinx.coroutines.channels.ProduceKt$awaitClose$2
androidx.lifecycle.LiveDataScopeImpl$emit$2
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl
kotlinx.coroutines.JobSupport$AwaitContinuation
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$1
kotlinx.coroutines.NonCancellable
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue
io.flutter.embedding.engine.renderer.FlutterRenderer$1
androidx.core.provider.FontProvider$ContentQueryWrapper
kotlin.DeepRecursiveFunction
androidx.core.widget.TintableImageSourceView
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1
io.flutter.embedding.engine.systemchannels.PlatformChannel
kotlinx.coroutines.flow.SharedFlowImpl$collect$1
androidx.lifecycle.Transformations$switchMap$1
kotlin.sequences.TransformingSequence$iterator$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1
kotlinx.coroutines.channels.BroadcastChannelKt
kotlin.collections.builders.MapBuilder$ValuesItr
io.flutter.view.TextureRegistry$SurfaceProducer
androidx.customview.R$drawable
kotlin.text.StringsKt__RegexExtensionsKt
androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion
androidx.profileinstaller.ProfileInstaller
io.flutter.embedding.android.KeyChannelResponder
androidx.core.text.util.LocalePreferences$1
androidx.core.content.IntentSanitizer$Builder
kotlinx.coroutines.selects.SelectKt
kotlin.text.Regex$splitToSequence$1
kotlinx.coroutines.channels.ActorScope
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1
kotlin.collections.SetsKt
kotlin.random.PlatformRandom
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.customview.view.AbsSavedState
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget
kotlin.jvm.internal.ClassBasedDeclarationContainer
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1
kotlinx.coroutines.scheduling.TaskContext
kotlinx.coroutines.debug.internal.HashedWeakRef
kotlin.collections.MapsKt
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1
kotlin.reflect.ParameterizedTypeImpl
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1
io.flutter.plugin.platform.SingleViewPresentation$PresentationState
kotlin.jvm.internal.BooleanSpreadBuilder
androidx.core.animation.AnimatorKt$addPauseListener$2
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion
kotlinx.coroutines.AwaitAll$AwaitAllNode
kotlinx.coroutines.EventLoop_commonKt
com.getkeepsafe.relinker.BuildConfig
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated
kotlinx.coroutines.internal.ThreadState
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3
kotlin.concurrent.LocksKt
androidx.core.R$string
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2
kotlinx.coroutines.internal.LimitedDispatcher
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2
kotlinx.coroutines.channels.ClosedSendChannelException
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.core.app.NotificationCompat$CallStyle$Api23Impl
androidx.fragment.app.strictmode.FragmentReuseViolation
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1
kotlinx.coroutines.InvokeOnCancel
androidx.core.view.KeyEventDispatcher$Component
com.getkeepsafe.relinker.elf.Elf64Header
androidx.core.app.MultiWindowModeChangedInfo
androidx.activity.FullyDrawnReporterKt$reportWhenComplete$1
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly
androidx.lifecycle.SavedStateHandle$SavingStateLiveData
androidx.customview.R$style
androidx.viewpager.R$color
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi24Impl
kotlinx.coroutines.internal.MainDispatcherLoader
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
kotlinx.coroutines.channels.ChannelsKt
androidx.fragment.app.FragmentTransaction
androidx.activity.result.contract.ActivityResultContracts$CreateDocument
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder
androidx.fragment.app.ListFragment$1
com.getkeepsafe.relinker.elf.Section64Header
androidx.core.content.SharedPreferencesKt
org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
androidx.lifecycle.LifecycleCoroutineScopeImpl
androidx.core.graphics.drawable.IconCompat
io.flutter.embedding.engine.systemchannels.RestorationChannel$1
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1
androidx.core.app.NotificationCompatBuilder$Api26Impl
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2
kotlin.collections.AbstractList$SubList
androidx.interpolator.R
kotlin.UByte
kotlin.sequences.IndexingSequence
androidx.core.provider.FontsContractCompat$FontRequestCallback
io.flutter.embedding.engine.plugins.service.ServiceAware
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics
androidx.core.location.LocationCompat
androidx.core.app.NotificationChannelGroupCompat$Api28Impl
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl
kotlin.reflect.GenericArrayTypeImpl
androidx.window.java.embedding.SplitControllerCallbackAdapter
kotlinx.coroutines.flow.SharedFlowKt
androidx.window.layout.util.ContextCompatHelperApi30
androidx.core.os.OperationCanceledException
androidx.core.util.LruCacheKt$lruCache$4
androidx.core.content.pm.ShortcutInfoChangeListener
androidx.core.hardware.display.DisplayManagerCompat
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener
io.flutter.view.AccessibilityBridge$AccessibilityFeature
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2
kotlin.jvm.internal.TypeReference$WhenMappings
kotlinx.coroutines.sync.MutexImpl
androidx.loader.R$integer
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher
io.flutter.view.VsyncWaiter$FrameCallback
androidx.window.embedding.SplitAttributesCalculatorParams
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1
androidx.activity.result.IntentSenderRequest
kotlin.coroutines.CombinedContext$Serialized
androidx.window.layout.FoldingFeature$OcclusionType$Companion
kotlin.contracts.ReturnsNotNull
kotlin.coroutines.jvm.internal.ContinuationImpl
io.flutter.plugin.platform.VirtualDisplayController$2$1
kotlin.jvm.internal.ArrayCharIterator
androidx.core.view.WindowInsetsControllerCompat$Impl
androidx.window.area.WindowAreaCapability$Status$Companion
kotlinx.coroutines.internal.SynchronizedKt
androidx.core.text.util.LocalePreferences$TemperatureUnit
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter
kotlinx.coroutines.selects.SelectClause2Impl
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1
androidx.core.content.pm.ShortcutInfoCompat
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1
kotlin.ranges.OpenEndFloatRange
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1
androidx.annotation.Keep
androidx.core.provider.FontRequestWorker$3
androidx.core.app.NotificationCompat$StreamType
kotlinx.coroutines.flow.SharedFlowImpl
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackJavaConsumerValid$1
androidx.core.widget.TextViewOnReceiveContentListener
androidx.lifecycle.ViewModel
androidx.window.area.utils.DeviceUtils
androidx.core.telephony.TelephonyManagerCompat$Api23Impl
androidx.core.provider.SelfDestructiveThread$2$1
kotlinx.coroutines.AbstractCoroutine
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager
kotlinx.coroutines.scheduling.TaskContextImpl
androidx.core.text.util.LocalePreferences$Api24Impl
kotlinx.coroutines.flow.SharingConfig
kotlin.text.StringsKt___StringsKt$withIndex$1
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2
io.flutter.embedding.engine.loader.FlutterLoader$1
kotlinx.coroutines.sync.MutexImpl$onLock$1
androidx.core.os.BundleApi21ImplKt
kotlin.collections.builders.MapBuilderValues
androidx.core.content.res.GradientColorInflaterCompat
androidx.core.app.NotificationManagerCompat$Api30Impl
androidx.core.view.ScaleGestureDetectorCompat
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1
androidx.core.view.MenuKt
kotlin.ranges.LongProgressionIterator
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1
androidx.core.app.NotificationCompat$BubbleMetadata$Builder
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint
androidx.core.app.NotificationCompat$Style
kotlin.time.ExperimentalTime
androidx.core.widget.TextViewCompat$Api26Impl
kotlin.jvm.internal.Ref$FloatRef
io.flutter.plugin.platform.PlatformPlugin$2
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler
kotlinx.coroutines.channels.Channel
io.flutter.embedding.android.RenderMode
androidx.core.app.FrameMetricsAggregator$MetricType
kotlinx.coroutines.EventLoopKt
androidx.fragment.app.SpecialEffectsController$WhenMappings
kotlin.sequences.SequencesKt__SequenceBuilderKt
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.fragment.app.SuperNotCalledException
kotlin.sequences.SequencesKt___SequencesKt$sorted$1
kotlinx.coroutines.flow.internal.AbortFlowException
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4
androidx.core.animation.AnimatorKt$addPauseListener$listener$1
kotlin.internal.PlatformImplementations$ReflectThrowable
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings
kotlin.ranges.ComparableOpenEndRange
kotlinx.coroutines.flow.AbstractFlow
kotlinx.coroutines.BuildersKt__Builders_commonKt
com.google.common.util.concurrent.ListenableFuture
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls
androidx.core.app.JobIntentService$CommandProcessor
kotlin.jvm.JvmField
android.support.v4.os.IResultReceiver$Stub
androidx.window.layout.FoldingFeature$OcclusionType
androidx.core.location.LocationManagerCompat$GnssStatusTransport
kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings
androidx.core.app.RemoteInput$Api20Impl
androidx.core.app.NotificationChannelCompat$Builder
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet
kotlin.internal.DynamicExtension
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1
androidx.viewpager.R$attr
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1
androidx.core.content.FileProvider$Api21Impl
kotlin.text.StringsKt__RegexExtensionsJVMKt
androidx.core.view.OneShotPreDrawListener
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo
androidx.core.view.inputmethod.InputContentInfoCompat
androidx.core.provider.FontRequest
kotlinx.coroutines.internal.LockFreeTaskQueueKt
androidx.customview.widget.ExploreByTouchHelper$1
kotlinx.coroutines.ExperimentalCoroutinesApi
kotlin.jvm.internal.TypeParameterReference$Companion
androidx.versionedparcelable.ParcelUtils
kotlinx.coroutines.internal.WeakMapCtorCache
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
kotlinx.coroutines.channels.ChannelSegment
com.getkeepsafe.relinker.elf.Elf$DynamicStructure
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy
androidx.lifecycle.Transformations
androidx.core.content.res.ComplexColorCompat
androidx.core.animation.AnimatorKt$addPauseListener$1
androidx.customview.widget.ViewDragHelper$2
kotlinx.coroutines.debug.internal.DebugCoroutineInfo
androidx.core.view.WindowInsetsCompat$BuilderImpl30
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1
androidx.lifecycle.LiveDataKt
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3
kotlin.coroutines.jvm.internal.SuspendFunction
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3
androidx.core.widget.AutoSizeableTextView
kotlin.collections.ArraysKt___ArraysKt$withIndex$4
kotlinx.coroutines.channels.ConflatedBufferedChannel
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1
androidx.loader.content.ModernAsyncTask$3
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler
androidx.arch.core.internal.SafeIterableMap$DescendingIterator
kotlin.CharCodeJVMKt
kotlinx.coroutines.DefaultExecutor
kotlin.text.Regex$special$$inlined$fromInt$1
androidx.window.embedding.ActivityStack
androidx.core.view.NestedScrollingChildHelper
kotlin.jvm.internal.InlineMarker
androidx.core.telephony.SubscriptionManagerCompat
androidx.core.app.ActivityCompat$PermissionCompatDelegate
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Default
androidx.core.view.MenuItemCompat$OnActionExpandListener
kotlin.math.MathKt
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1
kotlin.sequences.SequenceBuilderIterator
androidx.core.location.LocationRequestCompat$Api31Impl
kotlin.time.MonotonicTimeSource
org.jetbrains.annotations.MustBeInvokedByOverriders
kotlin.time.TimeSource$Monotonic$ValueTimeMark
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api23Impl
androidx.core.graphics.PaintKt
io.flutter.embedding.android.KeyboardManager$ViewDelegate
io.flutter.plugin.mouse.MouseCursorPlugin
androidx.loader.content.Loader$ForceLoadContentObserver
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3
kotlin.text.DelimitedRangesSequence
kotlinx.coroutines.NotCompleted
androidx.core.util.ObjectsCompat
kotlinx.coroutines.scheduling.TasksKt
androidx.annotation.ColorLong
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt
kotlin.jvm.functions.Function6
kotlinx.coroutines.CoroutineStart$WhenMappings
androidx.fragment.app.DefaultSpecialEffectsController
androidx.activity.OnBackPressedDispatcherOwner
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1
androidx.core.view.ViewStructureCompat$Api23Impl
androidx.core.content.res.GrowingArrayUtils
androidx.window.embedding.ExtensionEmbeddingBackend$splitSupportStatus$2
androidx.core.view.ContentInfoCompat
kotlin.comparisons.ReversedComparator
androidx.annotation.AttrRes
androidx.window.layout.WindowInfoTracker$Companion
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper
androidx.viewpager.widget.PagerAdapter
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2
kotlin.UByteArray$Iterator
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1
kotlinx.coroutines.ResumeUndispatchedRunnable
androidx.core.provider.FontsContractCompat$FontInfo
kotlin.sequences.SubSequence
androidx.core.os.LocaleListCompat$Api21Impl
androidx.core.view.WindowInsetsCompat$Type
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1
org.jetbrains.annotations.Debug
androidx.core.telephony.TelephonyManagerCompat$Api30Impl
kotlin.jvm.functions.Function11
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7
androidx.window.area.WindowAreaControllerDecorator
kotlin.Unit
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$2
androidx.core.os.ParcelableCompatCreatorCallbacks
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
kotlin.jvm.internal.markers.KMutableMap
androidx.collection.ArraySet
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1
androidx.lifecycle.ReportFragment$LifecycleCallbacks
kotlinx.coroutines.JobImpl
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4
androidx.fragment.app.FragmentTabHost$SavedState
androidx.core.graphics.PorterDuffKt
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1
io.flutter.embedding.engine.loader.FlutterLoader$InitResult
androidx.core.view.SoftwareKeyboardControllerCompat$Impl
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1
kotlin.ranges.RangesKt___RangesKt
androidx.core.app.JobIntentService$CompatWorkEnqueuer
androidx.core.app.ServiceCompat
io.flutter.view.TextureRegistry$OnFrameConsumedListener
androidx.core.provider.SelfDestructiveThread$3
kotlin.ranges.UIntRange$Companion
io.flutter.embedding.engine.renderer.FlutterRenderer$2
kotlinx.coroutines.debug.internal.DebuggerInfo
androidx.fragment.app.Fragment$SavedState$1
kotlinx.coroutines.future.FutureKt$asDeferred$2
io.flutter.embedding.android.FlutterFragmentActivity
androidx.window.area.WindowAreaCapability
kotlinx.coroutines.channels.ActorScope$DefaultImpls
androidx.arch.core.R
androidx.window.area.WindowAreaInfo$Type$Companion
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
kotlinx.coroutines.internal.OnUndeliveredElementKt
androidx.core.graphics.drawable.IconKt
androidx.core.os.BundleKt
kotlin.reflect.KTypeParameter
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2
kotlinx.coroutines.internal.ThreadSafeHeapNode
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener
androidx.window.area.reflectionguard.WindowAreaComponentValidator
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1
androidx.core.app.NotificationCompatExtras
androidx.core.view.DisplayCompat$Api23Impl
kotlin.sequences.GeneratorSequence$iterator$1
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1
kotlin.LazyKt
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.core.R$dimen
androidx.window.layout.HardwareFoldingFeature$Type
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1
io.flutter.embedding.android.KeyData$DeviceType
androidx.activity.ComponentActivity$ReportFullyDrawnExecutor
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia
androidx.core.provider.FontsContractCompat$Columns
kotlinx.coroutines.internal.SegmentOrClosed
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1
kotlin.sequences.EmptySequence
androidx.arch.core.internal.SafeIterableMap$AscendingIterator
androidx.annotation.IntegerRes
io.flutter.plugin.common.JSONMessageCodec
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2
androidx.core.graphics.drawable.WrappedDrawableState
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder
androidx.core.os.UserManagerCompat
kotlinx.coroutines.flow.ChannelFlowBuilder
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode
io.flutter.embedding.engine.dart.DartMessenger
androidx.lifecycle.SavedStateHandlesVM
kotlinx.coroutines.JobSupportKt
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl
kotlin.properties.ReadOnlyProperty
androidx.concurrent.futures.DirectExecutor
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1
androidx.fragment.app.SpecialEffectsController$Operation$WhenMappings
androidx.startup.StartupException
androidx.versionedparcelable.VersionedParcelize
kotlinx.coroutines.ChildHandle$DefaultImpls
kotlin.jvm.internal.FloatSpreadBuilder
androidx.core.app.CoreComponentFactory
kotlinx.coroutines.flow.FlowKt__LimitKt
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1
kotlinx.coroutines.flow.SubscribedFlowCollector
androidx.core.content.UnusedAppRestrictionsConstants
io.flutter.plugin.common.EventChannel$1
kotlinx.coroutines.internal.DispatchedContinuationKt
kotlinx.coroutines.Job$Key
io.flutter.plugin.common.BasicMessageChannel$Reply
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1
androidx.annotation.StyleRes
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl
androidx.core.util.SizeFCompat$Api21Impl
kotlinx.coroutines.internal.DispatchedContinuation
androidx.window.core.Version
io.flutter.plugin.localization.LocalizationPlugin
androidx.collection.CircularArray
androidx.core.view.DifferentialMotionFlingTarget
kotlinx.coroutines.scheduling.NanoTimeSource
androidx.core.content.pm.PermissionInfoCompat$Api28Impl
androidx.fragment.app.FragmentStatePagerAdapter
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage
kotlinx.coroutines.channels.BufferedChannel
androidx.fragment.app.FragmentActivity$HostCallbacks
androidx.core.location.LocationManagerCompat$InlineHandlerExecutor
kotlin.sequences.TakeSequence$iterator$1
androidx.core.app.ActivityRecreator$3
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments
io.flutter.embedding.android.FlutterView$ZeroSides
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1
androidx.core.content.ContextCompat$Api24Impl
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1
kotlin.ExperimentalStdlibApi
kotlin.reflect.KDeclarationContainer
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1
androidx.window.layout.FoldingFeature
androidx.core.app.PendingIntentCompat
kotlin.collections.builders.MapBuilder$KeysItr
androidx.window.embedding.ExtensionEmbeddingBackend
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation
androidx.core.provider.RequestExecutor$DefaultThreadFactory
kotlin.collections.Grouping
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1
kotlin.coroutines.Continuation
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1
androidx.annotation.WorkerThread
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl
androidx.core.content.ContentValuesKt
kotlin.jvm.internal.ArrayDoubleIterator
androidx.core.app.ServiceCompat$Api34Impl
kotlinx.coroutines.DisposableHandle
androidx.core.view.ViewKt$doOnDetach$1
androidx.core.widget.TextViewCompat$Api24Impl
androidx.core.view.WindowInsetsAnimationCompat$Impl21
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener
kotlinx.coroutines.flow.StartedLazily$command$1
androidx.annotation.DrawableRes
androidx.activity.result.IntentSenderRequest$Builder
_COROUTINE.CoroutineDebuggingKt
androidx.concurrent.futures.CallbackToFutureAdapter$Resolver
kotlinx.coroutines.NonDisposableHandle
androidx.customview.R$integer
kotlin.jvm.internal.CharSpreadBuilder
kotlin.text.StringsKt__StringNumberConversionsKt
kotlin.collections.ArrayDeque
kotlinx.coroutines.debug.internal.StackTraceFrame
kotlin.ExperimentalSubclassOptIn
androidx.core.graphics.PathParser$PathDataNode
androidx.profileinstaller.ProfileVersion
androidx.core.view.DisplayCompat
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl
androidx.core.util.LongSparseArrayKt$valueIterator$1
androidx.profileinstaller.R
kotlin.text.StringsKt
kotlinx.coroutines.internal.ThreadSafeHeap
androidx.activity.SystemBarStyle$Companion
kotlin.jvm.internal.ArrayLongIterator
androidx.window.layout.adapter.WindowBackend
androidx.fragment.app.Fragment$5
androidx.fragment.app.FragmentManagerNonConfig
kotlin.sequences.FilteringSequence$iterator$1
androidx.collection.ArrayMap
androidx.loader.content.AsyncTaskLoader$LoadTask
androidx.window.layout.adapter.sidecar.SidecarWindowBackend
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1
androidx.core.view.DisplayCutoutCompat$Api28Impl
kotlinx.coroutines.CancelledContinuation
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType
androidx.annotation.RawRes
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue
kotlin.properties.Delegates$vetoable$1
androidx.core.view.HapticFeedbackConstantsCompat
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding
androidx.core.util.PairKt
androidx.activity.result.ActivityResultRegistryOwner
androidx.core.app.NotificationCompat$Action$Builder$Api31Impl
androidx.core.view.ViewCompat$1
androidx.fragment.app.strictmode.TargetFragmentUsageViolation
android.support.v4.app.INotificationSideChannel$Stub
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1
androidx.core.view.WindowCompat
kotlinx.coroutines.sync.Semaphore
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback
kotlin.jvm.internal.PackageReference
kotlin.internal.NoInfer
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3
kotlin.jvm.functions.Function8
androidx.core.database.DatabaseUtilsCompat
androidx.core.app.OnMultiWindowModeChangedProvider
androidx.annotation.Dimension
androidx.loader.content.Loader$OnLoadCanceledListener
androidx.core.text.PrecomputedTextCompat$Params
androidx.core.os.LocaleListPlatformWrapper
androidx.core.app.NotificationCompatBuilder$Api31Impl
kotlinx.coroutines.ChildJob
io.flutter.embedding.engine.FlutterOverlaySurface
kotlinx.coroutines.TimeoutCoroutine
io.flutter.embedding.android.KeyboardMap$TogglingGoal
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
kotlin.jvm.internal.AdaptedFunctionReference
androidx.fragment.app.DialogFragment
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1
androidx.window.embedding.SplitPlaceholderRule$Builder
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
io.flutter.plugin.editing.TextInputPlugin
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1
androidx.core.app.NotificationCompat$Extender
kotlin.io.path.PathsKt__PathUtilsKt
androidx.savedstate.SavedStateRegistry$AutoRecreated
kotlinx.coroutines.channels.TickerChannelsKt
androidx.core.util.TimeUtils
kotlin.ReplaceWith
kotlinx.coroutines.LazyDeferredCoroutine
androidx.annotation.StringDef
io.flutter.plugin.platform.PlatformPlugin
kotlin.text.Regex$Serialized$Companion
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding
kotlin.sequences.SequencesKt___SequencesKt$minus$4
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api24Impl
androidx.annotation.AnyRes
androidx.arch.core.internal.SafeIterableMap$SupportRemove
androidx.core.util.Consumer
kotlinx.coroutines.scheduling.WorkQueueKt
androidx.fragment.app.FragmentAnim
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1
kotlin.annotation.Repeatable
kotlinx.coroutines.CancellableContinuationImpl
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1
androidx.fragment.app.LogWriter
kotlin.SubclassOptInRequired
kotlin.jvm.internal.StringCompanionObject
androidx.annotation.OptIn
androidx.core.view.OnReceiveContentViewBehavior
androidx.core.view.ViewConfigurationCompat$Api26Impl
androidx.core.app.LocaleManagerCompat$Api21Impl
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1
androidx.lifecycle.viewmodel.ViewModelInitializer
androidx.core.app.ComponentActivity$ExtraData
androidx.annotation.ArrayRes
kotlin.collections.AbstractMutableSet
androidx.lifecycle.SavedStateViewModelFactory
kotlinx.coroutines.AwaitKt$joinAll$1
androidx.concurrent.futures.AbstractResolvableFuture$Failure
androidx.core.os.ExecutorCompat$HandlerExecutor
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1
kotlin.Metadata$DefaultImpls
kotlinx.coroutines.flow.SafeFlow
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api21Impl
androidx.core.content.res.ConfigurationHelper
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1
kotlin.collections.ArraysKt__ArraysJVMKt
kotlinx.coroutines.flow.FlowKt__ReduceKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1
androidx.savedstate.SavedStateRegistry$Companion
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder
androidx.core.graphics.BitmapCompat$Api31Impl
kotlin.jvm.internal.LongSpreadBuilder
androidx.core.content.pm.PermissionInfoCompat
io.flutter.plugin.platform.SingleViewWindowManager
androidx.lifecycle.ProcessLifecycleOwner$attach$1
com.getkeepsafe.relinker.ReLinkerInstance$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1
kotlinx.coroutines.internal.ThreadContextKt
kotlin.jvm.JvmSynthetic
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1
kotlin.io.ExposingBufferByteArrayOutputStream
androidx.core.widget.TextViewKt$addTextChangedListener$3
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1
kotlin.concurrent.ThreadsKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1
androidx.core.database.sqlite.SQLiteCursorCompat
androidx.core.widget.TextViewCompat
kotlin.ResultKt
kotlin.DeepRecursiveScopeImpl
androidx.core.location.GnssStatusWrapper$Api30Impl
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1
kotlinx.coroutines.flow.LintKt
io.flutter.plugin.common.BinaryMessenger$BinaryReply
kotlin.collections.SetsKt__SetsJVMKt
kotlin.sequences.ConstrainedOnceSequence
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder
kotlinx.coroutines.flow.internal.CombineKt
androidx.loader.app.LoaderManager
androidx.core.internal.view.SupportSubMenu
androidx.fragment.app.Fragment$1
androidx.collection.LongSparseArray
kotlin.collections.AbstractMutableCollection
androidx.core.provider.RequestExecutor$ReplyRunnable$1
kotlinx.coroutines.ThreadContextElementKt
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest
kotlin.collections.ArraysKt___ArraysKt$withIndex$7
io.flutter.embedding.engine.FlutterJNI
androidx.core.app.NotificationChannelGroupCompat
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1
androidx.annotation.NavigationRes
kotlin.KotlinVersion$Companion
androidx.lifecycle.ClassesInfoCache$CallbackInfo
androidx.loader.content.ModernAsyncTask
androidx.core.location.LocationManagerCompat$Api30Impl
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
kotlin.comparisons.UComparisonsKt___UComparisonsKt
androidx.window.embedding.EmbeddingBackend$Companion$decorator$1
kotlin.ranges.CharRange
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4
androidx.core.graphics.drawable.DrawableKt
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2
io.flutter.FlutterInjector$1
androidx.core.app.NotificationCompat$CallStyle$Api20Impl
androidx.core.widget.NestedScrollView$SavedState
io.flutter.embedding.engine.systemchannels.SystemChannel
androidx.core.app.ActivityManagerCompat
kotlin.ranges.ClosedFloatRange
kotlin.io.FilesKt__FileTreeWalkKt
kotlinx.coroutines.selects.OnTimeout$selectClause$1
org.intellij.lang.annotations.JdkConstants$ListSelectionMode
androidx.versionedparcelable.ParcelImpl
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt
androidx.core.app.ActivityRecreator$2
androidx.fragment.app.BackStackRecord
androidx.core.content.ContextCompat$Api28Impl
androidx.core.util.LongSparseArrayKt$keyIterator$1
androidx.activity.ComponentActivity$1$1
org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy
kotlinx.coroutines.ParentJob
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1
kotlinx.coroutines.flow.internal.ChannelFlow
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1
kotlin.text.Regex$Serialized
androidx.core.os.BundleCompat$Api33Impl
kotlin.text.CharDirectionality$Companion
androidx.core.graphics.drawable.IconCompat$Api30Impl
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2
androidx.core.app.TaskStackBuilder$SupportParentable
androidx.core.app.NotificationCompat$WearableExtender$Api31Impl
kotlinx.coroutines.flow.FlowKt__ZipKt
androidx.fragment.app.Fragment$3
kotlin.text.TypeAliasesKt
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1
androidx.viewpager.widget.PagerTabStrip
kotlinx.coroutines.CoroutineContextKt
io.flutter.view.AccessibilityBridge$1
kotlin.io.path.PathTreeWalk$dfsIterator$1
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
io.flutter.plugin.common.BinaryCodec
io.flutter.embedding.android.FlutterView$2
kotlin.ULongArray$Iterator
androidx.fragment.app.DialogFragment$4
kotlin.sequences.FilteringSequence
androidx.window.core.AndroidLogger
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper
kotlinx.coroutines.Dispatchers
androidx.activity.Cancellable
androidx.core.telephony.mbms.MbmsHelper
androidx.core.content.PackageManagerCompat$UnusedAppRestrictionsStatus
kotlin.enums.EnumEntriesSerializationProxy
androidx.loader.content.ModernAsyncTask$4
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection
io.flutter.embedding.engine.systemchannels.KeyboardChannel
androidx.core.telephony.TelephonyManagerCompat$Api26Impl
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1
androidx.core.graphics.TypefaceCompatBaseImpl$3
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2
kotlin.sequences.MergingSequence
androidx.fragment.app.strictmode.Violation
androidx.core.app.NotificationCompat$Builder
kotlinx.coroutines.selects.OnTimeout
kotlin.collections.ArraysKt___ArraysKt$withIndex$1
androidx.activity.OnBackPressedDispatcher
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents
kotlin.concurrent.VolatileKt
kotlinx.coroutines.SupervisorJobImpl
com.getkeepsafe.relinker.elf.ElfParser
androidx.fragment.app.FragmentTransition
androidx.concurrent.futures.CallbackToFutureAdapter$Completer
androidx.core.graphics.TypefaceCompatApi29Impl
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1
kotlin.io.path.CopyActionResult
androidx.lifecycle.viewmodel.CreationExtras$Key
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19
androidx.core.app.NotificationManagerCompat$Api23Impl
kotlin.experimental.BitwiseOperationsKt
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1
androidx.lifecycle.SavedStateHandleSupport
kotlinx.coroutines.CompletionHandler_commonKt
kotlinx.coroutines.InterruptibleKt$runInterruptible$2
androidx.loader.content.ModernAsyncTask$Status
androidx.fragment.app.BackStackRecordState$1
kotlinx.coroutines.Delay
kotlinx.coroutines.DelayWithTimeoutDiagnostics
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener
kotlin.TypeCastException
kotlin.ranges.LongRange
kotlinx.coroutines.channels.BroadcastCoroutine
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1$1
androidx.core.os.BuildCompat
kotlinx.coroutines.EventLoopImplBase$DelayedTask
kotlin.properties.ObservableProperty
androidx.versionedparcelable.VersionedParcelable
androidx.core.view.DisplayCutoutCompat$Api30Impl
androidx.viewpager.R$styleable
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1
kotlin.sequences.SequencesKt___SequencesJvmKt
androidx.window.java.R
androidx.core.app.NotificationCompat$Action$WearableExtender
androidx.core.net.ConnectivityManagerCompat$Api24Impl
androidx.core.graphics.TypefaceCompatApi24Impl
androidx.window.WindowSdkExtensionsDecorator
androidx.fragment.app.FragmentActivity
kotlin.reflect.KMutableProperty
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2
androidx.core.location.LocationCompat$Api33Impl
kotlinx.coroutines.DebugStringsKt
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1
androidx.core.graphics.WeightTypefaceApi14
kotlinx.coroutines.ExecutorsKt
androidx.fragment.app.FragmentManager$PrepareBackStackTransitionState
com.example.wellnesshub.R$style
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1
kotlin.properties.PropertyDelegateProvider
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1
androidx.core.view.ViewParentCompat
kotlin.text.Typography
androidx.core.view.VelocityTrackerCompat
androidx.concurrent.futures.CallbackToFutureAdapter
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt
androidx.core.content.ContextCompat$Api26Impl
androidx.viewpager.R$integer
kotlin.jvm.internal.ArrayIntIterator
kotlin.collections.LongIterator
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1
androidx.core.util.RangeKt$toClosedRange$1
kotlinx.coroutines.CompletableDeferredImpl
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
androidx.core.content.IntentCompat$Api33Impl
androidx.core.content.pm.PermissionInfoCompat$Protection
kotlinx.coroutines.sync.Mutex$DefaultImpls
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1
kotlin.io.path.PathTreeWalkKt
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher
kotlin.coroutines.AbstractCoroutineContextElement
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
androidx.viewpager.widget.ViewPager$ViewPositionComparator
androidx.core.view.MenuHostHelper
androidx.annotation.RequiresExtension
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1
androidx.fragment.app.BackStackRecordState
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3
androidx.core.view.MenuKt$iterator$1
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1
kotlinx.coroutines.YieldContext$Key
androidx.lifecycle.SavedStateHandlesProvider
kotlin.annotation.AnnotationTarget
androidx.core.content.pm.PackageInfoCompat
androidx.core.graphics.drawable.RoundedBitmapDrawable
kotlin.jvm.internal.Ref$LongRef
kotlinx.coroutines.channels.LazyActorCoroutine
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1
kotlin.concurrent.ThreadsKt$thread$thread$1
kotlinx.coroutines.JobNode
io.flutter.embedding.engine.dart.DartExecutor$1
io.flutter.view.VsyncWaiter$1
kotlinx.coroutines.InvokeOnCancelling
androidx.lifecycle.process.R
androidx.customview.widget.ExploreByTouchHelper
kotlinx.coroutines.internal.ThreadLocalElement
android.support.v4.os.IResultReceiver2$Stub
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
androidx.core.provider.FontRequestWorker$TypefaceResult
kotlin.collections.ArraysUtilJVM
kotlinx.coroutines.selects.SelectBuilderImpl
androidx.lifecycle.EmptyActivityLifecycleCallbacks
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware
androidx.core.view.ViewKt
kotlin.UnsignedKt
androidx.fragment.app.FragmentManager$PopBackStackState
androidx.loader.R$attr
kotlin.jvm.Synchronized
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3
androidx.window.extensions.core.util.function.Consumer
androidx.core.graphics.drawable.WrappedDrawableApi21
androidx.tracing.R
androidx.activity.result.contract.ActivityResultContracts$TakePicture
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest
androidx.core.view.HapticFeedbackConstantsCompat$HapticFeedbackFlags
androidx.core.view.WindowInsetsCompat$Impl
kotlin.jvm.internal.Ref
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
androidx.lifecycle.FlowLiveDataConversions$asFlow$1
androidx.core.view.ViewKt$doOnNextLayout$1
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6
kotlinx.coroutines.CompletedContinuation
androidx.core.view.animation.PathInterpolatorCompat
androidx.window.layout.FoldingFeature$State
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1
androidx.annotation.StyleableRes
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1
androidx.annotation.NonNull
androidx.customview.widget.ViewDragHelper$1
io.flutter.embedding.engine.systemchannels.KeyEventChannel
androidx.fragment.app.FragmentOnAttachListener
kotlinx.coroutines.selects.SelectBuilder
org.jetbrains.annotations.VisibleForTesting
com.getkeepsafe.relinker.elf.Elf$ProgramHeader
androidx.core.app.RemoteActionCompat$Api28Impl
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3
io.flutter.embedding.engine.systemchannels.ProcessTextChannel
androidx.core.view.ViewCompat$AccessibilityViewProperty
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1
kotlinx.coroutines.internal.OnDemandAllocatingPool
kotlin.ranges.ClosedDoubleRange
androidx.arch.core.executor.DefaultTaskExecutor
androidx.annotation.MainThread
io.flutter.embedding.android.FlutterImageView$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
kotlinx.coroutines.sync.SemaphoreKt
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20
kotlin.sequences.SequencesKt___SequencesKt$onEach$1
kotlin.random.Random$Default
kotlin.comparisons.UComparisonsKt
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1
kotlin.jvm.internal.ArrayIteratorsKt
androidx.core.view.WindowInsetsCompat$Impl29
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler
androidx.core.app.NotificationCompat$CarExtender$Api20Impl
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1
androidx.core.app.SharedElementCallback
kotlin.sequences.USequencesKt___USequencesKt
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding
kotlin.sequences.TransformingIndexedSequence
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry
io.flutter.embedding.android.FlutterActivity$1
kotlinx.coroutines.BuildersKt__BuildersKt
kotlin.ranges.UIntRange
androidx.core.os.HandlerKt$postDelayed$runnable$1
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1
androidx.window.layout.util.ActivityCompatHelperApi24
androidx.core.graphics.TypefaceCompatApi21Impl
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6
io.flutter.embedding.android.FlutterTextureView$1
kotlin.coroutines.CombinedContext$writeReplace$1
androidx.core.view.inputmethod.InputConnectionCompat$1
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host
androidx.customview.view.AbsSavedState$2
androidx.core.util.Pools$SynchronizedPool
androidx.window.embedding.SplitAttributes$SplitType$Companion$ratio$checkedRatio$1
kotlin.collections.IntIterator
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions
androidx.core.telephony.SubscriptionManagerCompat$Api29Impl
androidx.window.reflection.WindowExtensionsConstants
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.core.app.AlarmManagerCompat
kotlin.coroutines.SafeContinuation$Companion
androidx.core.app.NotificationCompat$WearableExtender$Api24Impl
kotlin.reflect.KProperty1
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2
kotlinx.coroutines.flow.StateFlowKt
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5
androidx.customview.widget.FocusStrategy
androidx.core.app.NotificationCompat$BubbleMetadata
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1
com.getkeepsafe.relinker.ReLinker$LoadListener
androidx.core.content.ContextCompat
kotlin.jvm.JvmPackageName
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport
kotlin.text.CharCategory
androidx.fragment.R$animator
androidx.core.app.LocaleManagerCompat$Api33Impl
androidx.savedstate.SavedStateRegistryController
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl
kotlin.random.PlatformRandom$Companion
androidx.core.app.NotificationBuilderWithBuilderAccessor
org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
kotlin.ranges.ULongProgressionIterator
kotlin.LazyThreadSafetyMode
io.flutter.embedding.engine.plugins.activity.ActivityAware
androidx.core.content.res.FontResourcesParserCompat$Api21Impl
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1
io.flutter.plugin.platform.VirtualDisplayController$1
kotlinx.coroutines.CancelHandler
androidx.core.content.res.ResourcesCompat$ThemeCompat
kotlin.reflect.KClasses
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1
kotlinx.coroutines.CoroutineId
androidx.core.location.LocationRequestCompat$Quality
kotlin.ranges.UIntProgression
androidx.activity.EdgeToEdgeApi29
io.flutter.view.VsyncWaiter$DisplayListener
kotlin.text.jdk8.RegexExtensionsJDK8Kt
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
androidx.core.text.SpannableStringBuilderKt
androidx.activity.result.ActivityResult$1
kotlin.time.ComparableTimeMark
androidx.activity.EdgeToEdgeApi23
kotlinx.coroutines.Active
androidx.core.graphics.MatrixKt
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1
androidx.lifecycle.Transformations$switchMap$1$1
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt
kotlin.sequences.SequencesKt___SequencesKt$zip$1
androidx.lifecycle.Lifecycle$Event$Companion
androidx.window.WindowProperties
org.jetbrains.annotations.NonBlocking
kotlin.collections.AbstractList$Companion
androidx.core.app.ActivityCompat$1
kotlin.coroutines.jvm.internal.RunSuspendKt
kotlin.ranges.IntProgressionIterator
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2
kotlin.coroutines.jvm.internal.DebugProbesKt
kotlinx.coroutines.InterruptibleKt
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1
androidx.window.R
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent
androidx.core.app.NotificationCompat$NotificationVisibility
androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2
kotlinx.coroutines.DelayKt$awaitCancellation$1
io.flutter.embedding.engine.systemchannels.NavigationChannel
androidx.core.app.NotificationCompat$CallStyle$CallType
androidx.window.layout.DisplayFeature
androidx.core.util.SparseLongArrayKt
kotlinx.coroutines.internal.ThreadLocalKey
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1
androidx.window.core.ActivityComponentInfo
androidx.core.content.res.GradientColorInflaterCompat$ColorStops
kotlinx.coroutines.CancellableContinuation
kotlinx.coroutines.selects.WhileSelectKt
kotlinx.coroutines.ChildHandle
io.flutter.plugin.platform.SingleViewPresentation
androidx.core.location.GpsStatusWrapper
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1
kotlin.ranges.UIntProgressionIterator
kotlin.random.XorWowRandom
androidx.lifecycle.viewmodel.savedstate.R
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1
androidx.core.text.ICUCompat$Api21Impl
kotlin.sequences.TakeWhileSequence
kotlin.RequiresOptIn
androidx.core.view.ActionProvider$SubUiVisibilityListener
kotlinx.coroutines.DelayWithTimeoutDiagnostics$DefaultImpls
androidx.core.app.NotificationCompat$Action$Builder$Api20Impl
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3
androidx.core.app.NotificationManagerCompat$Api26Impl
androidx.activity.ImmLeaksCleaner
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1
kotlinx.coroutines.flow.LintKt$retry$1
kotlin.reflect.KProperty$Getter
androidx.profileinstaller.ProfileInstallReceiver
kotlin.ranges.ComparableRange
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo
androidx.core.view.WindowInsetsCompat$Impl28
kotlinx.coroutines.flow.internal.NopCollector
androidx.lifecycle.OnLifecycleEvent
kotlin.collections.builders.MapBuilder$EntriesItr
androidx.core.view.ContentInfoCompat$CompatImpl
androidx.annotation.RestrictTo$Scope
io.flutter.embedding.android.FlutterView$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.core.os.LocaleListCompat
androidx.core.view.accessibility.AccessibilityRecordCompat
kotlinx.coroutines.flow.SharedFlowSlot
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1
androidx.core.app.NotificationCompatBuilder$Api28Impl
androidx.viewpager.R$layout
kotlin.time.jdk8.DurationConversionsJDK8Kt
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion
androidx.viewpager.widget.ViewPager
androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler
io.flutter.plugin.platform.VirtualDisplayController$2
androidx.core.view.DifferentialMotionFlingController
kotlin.coroutines.SafeContinuation
androidx.core.app.NotificationCompat$CallStyle$Api31Impl
kotlin.RequiresOptIn$Level
kotlin.DslMarker
androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener
kotlinx.coroutines.channels.BufferedChannel$onSend$2
org.intellij.lang.annotations.JdkConstants$TabPlacement
kotlin.collections.AbstractIterator$WhenMappings
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1
androidx.core.graphics.TypefaceCompat
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1
io.flutter.embedding.android.FlutterActivityLaunchConfigs
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong
androidx.core.os.ContinuationOutcomeReceiver
io.flutter.util.ViewUtils$DisplayUpdater
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls
androidx.core.app.AppOpsManagerCompat
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8
androidx.core.content.FileProvider$SimplePathStrategy
androidx.startup.StartupLogger
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding
androidx.lifecycle.LiveData$1
androidx.core.app.NotificationManagerCompat$Task
kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1
androidx.core.text.PrecomputedTextCompat$Params$Builder
org.jetbrains.annotations.Nullable
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder
androidx.core.text.util.LocalePreferences
androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl
androidx.window.layout.WindowInfoTrackerDecorator
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay
androidx.fragment.app.FragmentTransitionCompat21$4
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1
kotlin.text.StringsKt___StringsKt
androidx.core.app.JobIntentService
kotlinx.coroutines.channels.ChannelCoroutine
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl
androidx.core.hardware.fingerprint.FingerprintManagerCompat
androidx.core.util.AtomicFileKt
kotlin.jvm.functions.Function9
androidx.fragment.app.FragmentState
kotlinx.coroutines.flow.SharedFlow
androidx.core.R$drawable
kotlin.reflect.KProperty2
kotlin.internal.Exact
org.jetbrains.annotations.UnmodifiableView
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1
androidx.fragment.app.FragmentStore
kotlin.jvm.JvmName
kotlin.collections.SetsKt__SetsKt
androidx.window.RequiresWindowSdkExtension
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
androidx.fragment.app.DefaultSpecialEffectsController$retainMatchingViews$1
kotlin.sequences.SequencesKt___SequencesKt$minus$3
io.flutter.plugin.common.EventChannel$StreamHandler
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl
androidx.core.view.ViewCompat$Api29Impl
kotlin.collections.AbstractMap$Companion
androidx.lifecycle.ViewTreeViewModelKt
androidx.core.service.quicksettings.TileServiceCompat
androidx.core.view.GravityCompat
androidx.viewpager.widget.ViewPager$2
kotlinx.coroutines.JobSupport$onAwaitInternal$1
androidx.annotation.experimental.Experimental$Level
androidx.core.view.animation.PathInterpolatorApi14
kotlin.text.Regex
androidx.window.R$id
androidx.core.app.FrameMetricsAggregator
kotlinx.coroutines.sync.Mutex
androidx.core.view.NestedScrollingParent2
kotlinx.coroutines.intrinsics.CancellableKt
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation
androidx.core.view.ViewCompat$Api21Impl
androidx.core.animation.AnimatorKt$addListener$3
kotlin.collections.builders.AbstractMapBuilderEntrySet
io.flutter.embedding.engine.systemchannels.NavigationChannel$1
androidx.core.text.TextUtilsCompat
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1
androidx.core.text.util.LocalePreferences$Api33Impl
androidx.core.view.ViewParentCompat$Api21Impl
androidx.core.view.accessibility.AccessibilityEventCompat
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface
kotlin.ranges.ClosedRange$DefaultImpls
io.flutter.plugin.localization.LocalizationPlugin$1
kotlinx.coroutines.DelayKt
kotlin.jvm.Throws
androidx.core.view.WindowInsetsCompat
androidx.core.location.LocationCompat$Api34Impl
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion
androidx.core.content.PermissionChecker$PermissionResult
kotlin.UIntArray
androidx.core.app.ActivityRecreator
kotlin.io.AccessDeniedException
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer
io.flutter.plugin.platform.PlatformPlugin$1
androidx.window.layout.WindowMetricsCalculator$Companion
kotlin.collections.MapsKt__MapWithDefaultKt
kotlinx.coroutines.ChildHandleNode
kotlin.jvm.internal.ArrayShortIterator
androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation
kotlin.jvm.JvmOverloads
kotlin.reflect.KProperty$DefaultImpls
androidx.annotation.RequiresOptIn$Level
kotlinx.coroutines.ThreadContextElement$DefaultImpls
androidx.core.provider.FontsContractCompat
androidx.core.view.ViewGroupKt
androidx.lifecycle.LifecycleKt$eventFlow$1$1
androidx.fragment.app.FragmentManager
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.core.app.NotificationCompat$Builder$Api24Impl
kotlin.jvm.internal.CallableReference
kotlin.coroutines.RestrictsSuspension
androidx.fragment.app.FragmentTransitionCompat21
androidx.core.content.res.ViewingConditions
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6
androidx.window.embedding.ActivityRule
androidx.core.content.res.CamUtils
androidx.window.layout.WindowMetrics
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2
androidx.core.os.ProcessCompat
androidx.fragment.app.FragmentManager$SaveBackStackState
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1
io.flutter.plugin.common.JSONMethodCodec
kotlinx.coroutines.debug.internal.ConcurrentWeakMap
com.getkeepsafe.relinker.ReLinker
kotlin.jvm.internal.TypeIntrinsics
androidx.fragment.app.FragmentState$1
androidx.lifecycle.ClassesInfoCache$MethodReference
io.flutter.plugin.common.ErrorLogResult
io.flutter.util.ViewUtils$ViewVisitor
kotlin.UByteArrayKt
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2
androidx.core.util.LogWriter
kotlin.collections.ArrayDeque$Companion
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi1
kotlin.sequences.FlatteningSequence$iterator$1
kotlinx.coroutines.channels.ProducerScope
androidx.core.net.TrafficStatsCompat
androidx.core.text.util.LocalePreferences$TemperatureUnit$TemperatureUnits
androidx.annotation.Px
kotlin.sequences.SequencesKt___SequencesKt$minus$1
androidx.core.app.NotificationCompatJellybean
androidx.core.view.ViewPropertyAnimatorCompat$1
kotlin.text.StringsKt___StringsKt$groupingBy$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch
androidx.lifecycle.Lifecycle$Event
androidx.core.view.MotionEventCompat
kotlin.collections.IndexedValue
kotlin.io.FileTreeWalk
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1
io.flutter.embedding.android.KeyboardManager
androidx.core.view.ViewCompat$FocusDirection
androidx.core.service.quicksettings.TileServiceCompat$Api24Impl
kotlin.collections.RingBuffer$iterator$1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
kotlin.jvm.internal.MutablePropertyReference0Impl
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
androidx.loader.R$style
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2$1
kotlin.UIntArrayKt
androidx.core.text.util.LocalePreferences$FirstDayOfWeek$Days
androidx.core.app.NotificationCompat$Action$Builder$Api23Impl
androidx.core.graphics.BlendModeColorFilterCompat$Api29Impl
kotlinx.coroutines.flow.MutableStateFlow
androidx.window.embedding.EmbeddingCompat$Companion
kotlin.UnsafeVariance
androidx.core.view.DisplayCompat$ModeCompat
kotlin.jvm.functions.Function7
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2
kotlinx.coroutines.scheduling.TaskImpl
kotlin.sequences.DistinctSequence
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper
androidx.annotation.Dimension$Companion
androidx.annotation.AnimatorRes
androidx.activity.ComponentActivity$Api19Impl
androidx.core.view.ViewKt$doOnPreDraw$1
io.flutter.embedding.engine.renderer.RenderSurface
kotlin.reflect.KMutableProperty0
androidx.core.view.accessibility.AccessibilityManagerCompat
org.intellij.lang.annotations.Subst
androidx.window.core.FailedSpecification$WhenMappings
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl
androidx.core.app.NotificationChannelCompat$Api30Impl
androidx.collection.LruCache
androidx.core.view.ViewCompat$Api28Impl
kotlin.collections.builders.SerializedCollection$Companion
kotlin.text.StringsKt__IndentKt$prependIndent$1
androidx.core.os.ParcelCompat$Api30Impl
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1
kotlin.collections.CollectionsKt__IteratorsJVMKt
kotlin.jvm.internal.Ref$IntRef
kotlin.collections.CollectionsKt___CollectionsJvmKt
kotlin.coroutines.intrinsics.CoroutineSingletons
kotlin.collections.EmptyList
kotlin.comparisons.ReverseOrderComparator
kotlinx.coroutines.selects.SelectImplementation$ClauseData
kotlin.comparisons.ComparisonsKt
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9
androidx.core.view.ContentInfoCompat$Flags
androidx.core.text.PrecomputedTextCompat$Api28Impl
kotlin.collections.builders.MapBuilderKeys
kotlin.contracts.ConditionalEffect
androidx.core.util.Function
org.jetbrains.annotations.Async$Schedule
androidx.core.app.ShareCompat$IntentBuilder
io.flutter.util.HandlerCompat
androidx.lifecycle.Transformations$switchMap$2
androidx.core.view.ViewCompat$4
androidx.core.app.ServiceCompat$Api29Impl
kotlinx.coroutines.CancellableContinuation$DefaultImpls
androidx.core.os.LocaleListCompatWrapper
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2
androidx.savedstate.R$id
kotlinx.coroutines.debug.internal.DebugProbesKt
androidx.versionedparcelable.VersionedParcelParcel
kotlinx.coroutines.RunnableKt$Runnable$1
androidx.fragment.app.Fragment$10
kotlin.internal.PlatformDependent
io.flutter.embedding.android.FlutterSurfaceView$2
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1
kotlinx.coroutines.selects.SelectInstance
org.intellij.lang.annotations.JdkConstants$FontStyle
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
kotlin.collections.IndexingIterator
kotlin.jvm.JvmRecord
kotlin.internal.jdk7.JDK7PlatformImplementations
io.flutter.plugin.common.BinaryMessenger
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl
androidx.lifecycle.LifecycleKt
androidx.window.embedding.SplitInfo
kotlin.ranges.ULongProgression$Companion
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized
kotlinx.coroutines.channels.ChannelResult$Companion
kotlinx.coroutines.JobSupport$ChildCompletion
androidx.core.widget.ContentLoadingProgressBar
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1
kotlinx.coroutines.BlockingEventLoop
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1
io.flutter.embedding.engine.systemchannels.LifecycleChannel
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2
androidx.core.app.JobIntentService$GenericWorkItem
kotlinx.coroutines.BuildersKt
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType
kotlin.io.encoding.Base64$Default
androidx.core.database.sqlite.SQLiteDatabaseKt
androidx.viewpager.widget.PagerTabStrip$1
kotlinx.coroutines.internal.AtomicKt
androidx.window.embedding.EmbeddingAspectRatio$Companion
androidx.core.text.util.FindAddress$ZipRange
androidx.core.view.ViewStructureCompat
kotlin.jvm.functions.Function3
androidx.core.view.ScrollingView
androidx.core.content.FileProvider$PathStrategy
androidx.core.app.NotificationCompatBuilder$Api21Impl
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1
kotlin.jvm.functions.Function4
androidx.fragment.R$styleable
androidx.window.area.WindowAreaControllerImpl
io.flutter.plugin.platform.PlatformView
kotlin.jvm.internal.FunctionBase
kotlin.time.AbstractLongTimeSource$LongTimeMark
androidx.core.app.Person
androidx.activity.ComponentActivity$1$2
kotlin.Result$Companion
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1
androidx.core.util.SparseIntArrayKt
kotlin.collections.builders.MapBuilderEntries
androidx.activity.result.ActivityResultCallback
androidx.core.app.RemoteInput$Source
kotlin.sequences.SequencesKt
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1
androidx.core.view.WindowInsetsCompat$Builder
kotlin.ranges.IntRange$Companion
kotlin.annotation.Retention
kotlin.collections.CollectionsKt__IteratorsKt
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState
androidx.core.app.RemoteInput$Api28Impl
kotlin.text.StringsKt__StringsJVMKt
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodIsActivityEmbeddedValid$1
androidx.fragment.app.SpecialEffectsController$Operation$State
androidx.core.provider.RequestExecutor$HandlerExecutor
io.flutter.FlutterInjector
androidx.core.widget.ImageViewCompat$Api21Impl
androidx.lifecycle.viewmodel.CreationExtras
androidx.fragment.app.FragmentTransitionImpl$1
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo
androidx.fragment.app.FragmentTransitionCompat21$2
io.flutter.embedding.android.KeyData$Type
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$2
androidx.profileinstaller.ProfileInstallerInitializer
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener
androidx.core.view.ViewCompat$FocusRealDirection
io.flutter.view.TextureRegistry$GLTextureConsumer
kotlinx.coroutines.flow.ThrowingCollector
kotlin.time.Duration$Companion
io.flutter.plugin.editing.TextInputPlugin$MinMax
kotlinx.coroutines.DisposableFutureHandle
androidx.core.view.LayoutInflaterCompat
androidx.profileinstaller.ProfileInstaller$2
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1
kotlinx.coroutines.flow.FlowCollector
androidx.core.view.VelocityTrackerFallback
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1
androidx.annotation.RestrictTo
androidx.core.util.SparseArrayKt$keyIterator$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1
androidx.lifecycle.MethodCallsLogger
kotlin.jvm.internal.PropertyReference0
androidx.core.text.CharSequenceKt
androidx.window.core.FailedSpecification
kotlin.time.DurationUnitKt
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle
kotlinx.coroutines.flow.internal.FusibleFlow
kotlin.collections.TypeAliasesKt
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1
kotlin.math.UMathKt
androidx.core.app.JobIntentService$JobServiceEngineImpl
androidx.core.transition.TransitionKt$addListener$3
kotlin.UShortArray$Iterator
kotlinx.coroutines.future.FutureKt
io.flutter.plugin.platform.WindowManagerHandler
androidx.core.view.ContentInfoCompat$Compat31Impl
androidx.core.text.PrecomputedTextCompat
kotlin.jvm.functions.Function0
kotlin.coroutines.AbstractCoroutineContextKey
androidx.activity.BackEventCompat$Companion
androidx.core.graphics.ImageDecoderKt
io.flutter.view.TextureRegistry$OnTrimMemoryListener
kotlin.jvm.internal.SpreadBuilder
androidx.core.content.pm.ShortcutInfoCompat$Surface
kotlin.sequences.SubSequence$iterator$1
kotlinx.coroutines.internal.OpDescriptor
androidx.lifecycle.runtime.R
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1
kotlin.reflect.KParameter$Kind
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2
org.jetbrains.annotations.BlockingExecutor
kotlin.jvm.PurelyImplements
androidx.core.graphics.BlendModeUtils$Api29Impl
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner
androidx.window.core.ExtensionsUtil
kotlin.properties.NotNullVar
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion
kotlin.time.DurationJvmKt
kotlinx.coroutines.flow.internal.FlowCoroutine
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$1
kotlin.collections.builders.ListBuilder
kotlin.text.MatchGroupCollection
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1
androidx.core.location.LocationManagerCompat$Api24Impl
androidx.core.util.LruCacheKt$lruCache$2
androidx.fragment.app.Fragment$9
kotlin.jvm.internal.markers.KMutableListIterator
androidx.core.view.ViewKt$doOnAttach$1
androidx.fragment.app.FragmentTransitionCompat21$1
androidx.annotation.experimental.UseExperimental
kotlin.io.ReadAfterEOFException
androidx.core.animation.AnimatorKt$addListener$1
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1
androidx.annotation.DeprecatedSinceApi
androidx.core.os.BuildCompat$PrereleaseSdkCheck
kotlin.collections.AbstractMutableMap
androidx.fragment.app.FragmentTabHost$SavedState$1
kotlin.collections.MapWithDefaultImpl
androidx.core.view.ViewPropertyAnimatorListener
androidx.viewpager.widget.ViewPager$1
androidx.lifecycle.BlockRunner$maybeRun$1
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1
androidx.profileinstaller.ProfileInstaller$ResultCode
kotlin.coroutines.CombinedContext$toString$1
androidx.core.app.ActivityOptionsCompat$Api24Impl
io.flutter.plugin.common.BasicMessageChannel$1
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1
androidx.core.view.ViewCompat$Api21Impl$1
androidx.window.area.WindowAreaPresentationSessionCallback
androidx.window.core.ConsumerAdapter$createSubscription$1
androidx.window.embedding.ActivityFilter
io.flutter.FlutterInjector$Builder$NamedThreadFactory
kotlin.io.LineReader
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1
kotlin.KotlinNullPointerException
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1
androidx.lifecycle.ReportFragment$Companion
kotlin.collections.AbstractMap$values$1
kotlin.OptionalExpectation
kotlinx.coroutines.flow.SharingStartedKt
androidx.profileinstaller.ProfileInstaller$DiagnosticCode
io.flutter.embedding.engine.loader.ApplicationInfoLoader
androidx.core.util.SparseIntArrayKt$keyIterator$1
androidx.core.widget.PopupMenuCompat
androidx.viewpager.R$string
io.flutter.plugin.platform.PlatformViewsController$1
kotlin.contracts.ContractBuilder$DefaultImpls
kotlin.jvm.internal.MutableLocalVariableReference
android.support.v4.os.IResultReceiver2$Default
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
com.getkeepsafe.relinker.elf.Elf
androidx.core.location.LocationManagerCompat$GnssListenersHolder
androidx.fragment.R
androidx.fragment.app.FragmentStateManager
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1
androidx.fragment.app.FragmentLayoutInflaterFactory
io.flutter.plugin.editing.ScribePlugin
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener
kotlin.DeprecationLevel
io.flutter.embedding.engine.systemchannels.TextInputChannel
androidx.core.animation.AnimatorKt$addListener$listener$1
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments
androidx.annotation.DoNotInline
androidx.core.view.WindowInsetsControllerCompat$Impl23
kotlin.text.StringsKt__StringNumberConversionsJVMKt
io.flutter.plugin.editing.FlutterTextUtils
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1
androidx.activity.ComponentActivity$Api33Impl
kotlin.reflect.KClassesImplKt
androidx.window.layout.SafeWindowLayoutComponentProvider
androidx.activity.result.ActivityResultRegistry
androidx.window.embedding.RuleParser
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3
androidx.window.area.WindowAreaCapability$Status
kotlinx.coroutines.flow.StartedEagerly
androidx.activity.result.ActivityResultRegistry$3
androidx.annotation.RequiresPermission
androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1
kotlinx.coroutines.internal.SystemPropsKt
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder
androidx.core.location.LocationManagerCompat$LocationListenerTransport
androidx.viewpager.widget.ViewPager$SavedState
kotlin.collections.AbstractSet
kotlin.io.TerminateException
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1
kotlinx.coroutines.channels.ActorCoroutine
androidx.core.app.ActivityCompat
android.support.v4.os.IResultReceiver2
kotlin.io.FilesKt__UtilsKt$copyRecursively$1
io.flutter.embedding.engine.systemchannels.PlatformChannel$1
kotlinx.coroutines.flow.internal.UndispatchedContextCollector
kotlinx.coroutines.flow.SharingStarted$Companion
androidx.core.content.ContextKt
androidx.window.embedding.SplitAttributes
androidx.core.widget.ListViewAutoScrollHelper
androidx.core.content.IntentCompat
org.jetbrains.annotations.TestOnly
androidx.core.R$color
androidx.core.util.SparseArrayKt
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2
androidx.core.view.DifferentialMotionFlingController$FlingVelocityThresholdCalculator
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1
kotlin.io.ConsoleKt
kotlin.io.FilesKt__FilePathComponentsKt
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt
kotlinx.coroutines.CompletionStateKt
com.example.wellnesshub.R
kotlin.jvm.KotlinReflectionNotSupportedError
kotlin.jvm.functions.Function22
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1
androidx.customview.widget.ExploreByTouchHelper$2
androidx.annotation.Nullable
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1
kotlinx.coroutines.FlowPreview
androidx.savedstate.Recreator
kotlin.collections.ArrayAsCollection
androidx.annotation.IntDef
androidx.customview.R
kotlin.time.TimeSource$WithComparableMarks
androidx.lifecycle.ViewTreeViewModelStoreOwner
androidx.core.graphics.PathParser$ExtractFloatResult
androidx.core.app.NotificationChannelCompat$Api26Impl
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1
kotlin.collections.GroupingKt__GroupingJVMKt
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation
androidx.core.provider.FontRequestWorker$4
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl
kotlin.text.CharsKt
androidx.lifecycle.CoroutineLiveData$emitSource$1
org.intellij.lang.annotations.MagicConstant
androidx.core.app.NotificationCompat$CallStyle$Api24Impl
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1
androidx.core.app.NotificationCompat$Api29Impl
androidx.core.app.ActivityCompat$Api28Impl
androidx.activity.result.IntentSenderRequest$Builder$Flag
androidx.core.widget.TextViewKt
androidx.core.app.DialogCompat
androidx.window.embedding.SplitRule$Companion
androidx.core.content.pm.ShortcutManagerCompat
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1
androidx.core.util.SizeFCompat
androidx.core.app.RemoteActionCompat
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1
androidx.core.os.ProcessCompat$Api19Impl
kotlinx.coroutines.channels.BufferedChannel$onReceive$1
androidx.core.app.ActivityCompat$Api32Impl
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1
kotlinx.coroutines.internal.DiagnosticCoroutineContextException
io.flutter.plugin.editing.InputConnectionAdaptor
kotlin.ranges.ULongRange$Companion
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2
io.flutter.plugin.common.MethodCodec
androidx.core.database.CursorKt
androidx.fragment.app.SpecialEffectsControllerFactory
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1
androidx.core.internal.package-info
androidx.savedstate.SavedStateRegistryController$Companion
kotlinx.coroutines.YieldKt
androidx.lifecycle.FlowLiveDataConversions
androidx.core.graphics.WeightTypefaceApi21
io.flutter.embedding.android.KeyboardMap$1
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$1
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt
kotlinx.coroutines.Incomplete
kotlin.reflect.KMutableProperty0$Setter
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
io.flutter.embedding.engine.FlutterEngineGroup
kotlinx.coroutines.internal.Removed
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1
androidx.annotation.FontRes
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3
kotlin.collections.AbstractMap$keys$1
androidx.core.app.NotificationCompat$MessagingStyle$Message
kotlinx.coroutines.ObsoleteCoroutinesApi
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1
io.flutter.embedding.android.KeyEmbedderResponder
io.flutter.view.TextureRegistry$SurfaceTextureEntry
androidx.fragment.app.Fragment$OnPreAttachedListener
androidx.core.text.util.LocalePreferences$CalendarType$CalendarTypes
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler
androidx.annotation.IdRes
androidx.window.embedding.SplitPairRule$Builder
androidx.core.location.GnssStatusCompat$ConstellationType
androidx.core.provider.RequestExecutor
kotlinx.coroutines.flow.MutableSharedFlow
kotlinx.coroutines.GlobalScope
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPredicates$1
kotlinx.coroutines.internal.LocalAtomics_commonKt
kotlin.collections.MapsKt__MapsKt
androidx.viewpager.widget.ViewPager$OnPageChangeListener
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSplitAttributesCalculatorValid$1
androidx.core.widget.AutoScrollHelper
kotlin.collections.MutableMapWithDefault
kotlinx.coroutines.stream.StreamKt
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy
kotlinx.coroutines.MainCoroutineDispatcher
androidx.window.core.Bounds
org.intellij.lang.annotations.JdkConstants$InputEventMask
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments
androidx.collection.ArraySet$1
kotlin.reflect.KProperty$Accessor
androidx.lifecycle.LifecycleOwner
androidx.core.app.NotificationCompat$Style$Api24Impl
kotlin.text.Regex$findAll$1
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1
androidx.lifecycle.DefaultLifecycleObserver
io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate
androidx.lifecycle.LifecycleDispatcher
androidx.fragment.app.strictmode.SetRetainInstanceUsageViolation
androidx.core.R$attr
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2
kotlinx.coroutines.flow.FlowKt__CountKt$count$2
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2
kotlin.InitializedLazyImpl
kotlin.text.RegexKt
kotlin.collections.MapsKt___MapsKt
kotlinx.coroutines.DispatchedCoroutine
androidx.core.widget.ListViewCompat
androidx.startup.R
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1
androidx.core.util.LruCacheKt$lruCache$3
kotlin.reflect.KProperty1$Getter
androidx.activity.ComponentActivity$NonConfigurationInstances
kotlinx.coroutines.DisposeOnCompletion
kotlinx.coroutines.channels.BroadcastChannel
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
kotlin.SafePublicationLazyImpl$Companion
androidx.lifecycle.ViewTreeLifecycleOwner
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1
io.flutter.plugin.common.EventChannel$EventSink
kotlinx.coroutines.internal.ScopeCoroutine
kotlin.time.DurationUnitKt__DurationUnitJvmKt
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl
kotlinx.coroutines.ThreadContextElement
androidx.fragment.app.strictmode.FragmentStrictMode$Policy
androidx.window.embedding.SplitController$SplitSupportStatus
kotlin.text.StringsKt__StringsKt$splitToSequence$1
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1
androidx.core.widget.EdgeEffectCompat
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4
androidx.activity.ComponentActivity$4
androidx.core.view.MenuCompat
androidx.core.view.DragAndDropPermissionsCompat
kotlin.coroutines.jvm.internal.ModuleNameRetriever
kotlin.jvm.JvmInline
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
io.flutter.view.AccessibilityBridge$4
androidx.core.graphics.drawable.IconCompat$Api28Impl
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader
androidx.activity.result.PickVisualMediaRequest
androidx.core.view.DragStartHelper$OnDragStartListener
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1
kotlinx.coroutines.flow.internal.FlowCoroutineKt
io.flutter.plugin.platform.PlatformViewRegistry
androidx.core.service.quicksettings.TileServiceCompat$TileServiceWrapper
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
androidx.fragment.app.FragmentTransitionCompat21$3
kotlin.collections.ArraysKt___ArraysKt$withIndex$3
androidx.lifecycle.EmittedSource
androidx.core.content.LocusIdCompat
kotlinx.coroutines.EventLoopImplPlatform
androidx.core.text.ICUCompat$Api24Impl
kotlin.concurrent.TimersKt
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
kotlinx.coroutines.flow.internal.SafeCollector_commonKt
kotlin.reflect.KFunction$DefaultImpls
androidx.core.app.NotificationCompatBuilder$Api20Impl
kotlin.ULongKt
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3
kotlin.jvm.functions.Function15
androidx.activity.ComponentActivity
androidx.window.area.WindowAreaController$Companion
androidx.core.graphics.PathUtils$Api26Impl
androidx.lifecycle.SavedStateViewModelFactoryKt
kotlin.text.MatchResult
androidx.fragment.app.FragmentManager$RestoreBackStackState
org.intellij.lang.annotations.PrintFormat
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api26Impl
kotlin.io.path.DirectoryEntriesReader
androidx.core.location.GnssStatusCompat
androidx.core.app.RemoteInput$Builder
kotlinx.coroutines.JobSupport$children$1
androidx.window.embedding.EmbeddingCompat
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate
io.flutter.plugin.common.MethodCall
androidx.window.embedding.SplitRule$Api30Impl
androidx.core.view.ViewCompat$Api20Impl
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1
androidx.core.provider.FontsContractCompat$FontFamilyResult
androidx.core.app.PictureInPictureModeChangedInfo
kotlin.internal.UProgressionUtilKt
androidx.fragment.app.FragmentViewLifecycleOwner
kotlin.collections.CharIterator
androidx.core.os.LocaleListCompatWrapper$Api21Impl
kotlin.ULongArray
androidx.viewpager.R$drawable
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1
kotlinx.coroutines.flow.StateFlowImpl$collect$1
androidx.fragment.app.FragmentContainer
androidx.lifecycle.ComputableLiveData
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9
kotlinx.coroutines.flow.SharingStarted
kotlinx.coroutines.flow.CallbackFlowBuilder
kotlin.UByteKt
androidx.loader.content.Loader
androidx.tracing.Trace
kotlin.jvm.internal.MutablePropertyReference2
androidx.profileinstaller.ProfileInstaller$1
androidx.core.view.WindowInsetsControllerCompat$Impl30
kotlinx.coroutines.selects.OnTimeoutKt
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl
io.flutter.plugin.editing.SpellCheckPlugin
kotlin.NumbersKt__FloorDivModKt
androidx.core.app.NotificationCompat$Api20Impl
kotlin.time.MonoTimeSourceKt
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$1
kotlinx.coroutines.flow.FlowKt__ContextKt
androidx.window.embedding.EmbeddingAdapter$Companion
androidx.core.location.LocationManagerCompat$Api19Impl
androidx.versionedparcelable.ParcelImpl$1
android.support.v4.os.IResultReceiver$_Parcel
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1
androidx.core.text.method.LinkMovementMethodCompat
androidx.core.app.RemoteInput
androidx.window.WindowSdkExtensions$Companion$getInstance$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl
io.flutter.embedding.engine.plugins.FlutterPlugin
kotlinx.coroutines.DebugKt
org.jetbrains.annotations.ApiStatus
io.flutter.plugin.common.FlutterException
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2
io.flutter.plugin.platform.PlatformViewsController
androidx.core.view.inputmethod.InputConnectionCompat
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3
androidx.lifecycle.LiveDataScopeImpl
kotlin.time.TimeMark
androidx.core.text.StringKt
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.core.view.DragAndDropPermissionsCompat$Api24Impl
kotlin.sequences.DropTakeSequence
androidx.lifecycle.PausingDispatcher
androidx.customview.R$string
kotlinx.coroutines.flow.FlowKt__TransformKt
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler
androidx.core.graphics.PaintCompat$Api29Impl
androidx.annotation.InspectableProperty
androidx.activity.result.contract.ActivityResultContracts$PickContact
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1
kotlin.reflect.KMutableProperty$Setter
kotlinx.coroutines.Delay$DefaultImpls
androidx.core.widget.TextViewCompat$OreoCallback
org.intellij.lang.annotations.Identifier
kotlinx.coroutines.DeferredCoroutine
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder
kotlin.DeprecatedSinceKotlin
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.fragment.app.PredictiveBackControl
kotlin.io.TextStreamsKt$readLines$1
kotlin.reflect.WildcardTypeImpl
androidx.customview.R$dimen
androidx.window.core.PredicateAdapter$PairPredicateStubHandler
androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1
androidx.annotation.FractionRes
kotlin.sequences.SequencesKt__SequencesKt$flatten$3
kotlinx.coroutines.ChildContinuation
io.flutter.embedding.engine.plugins.service.ServiceControlSurface
androidx.core.widget.TextViewCompat$Api34Impl
kotlinx.coroutines.flow.FlowKt__CountKt$count$3
androidx.core.app.AlarmManagerCompat$Api31Impl
kotlin.coroutines.ContinuationInterceptor$Key
androidx.versionedparcelable.VersionedParcel$1
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks
kotlin.random.KotlinRandom$Companion
androidx.window.core.Version$bigInteger$2
androidx.core.app.AppOpsManagerCompat$Api29Impl
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2
androidx.profileinstaller.WritableFileSection
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding
androidx.fragment.app.FragmentTransaction$Op
kotlin.UIntKt
androidx.window.SafeWindowExtensionsProvider
androidx.collection.MapCollections$MapIterator
kotlinx.coroutines.CompletableDeferred
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState
androidx.core.text.util.LinkifyCompat$LinkSpec
kotlin.reflect.KParameter$DefaultImpls
kotlin.KotlinVersion
kotlin.jvm.internal.Ref$DoubleRef
androidx.core.os.EnvironmentCompat
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding
kotlin.sequences.DistinctIterator
androidx.annotation.MenuRes
kotlin.text.CharCategory$Companion
androidx.annotation.experimental.R
androidx.core.content.UnusedAppRestrictionsBackportService
kotlin.LazyKt__LazyJVMKt$WhenMappings
androidx.core.view.WindowCompat$Api16Impl
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1
kotlin.ranges.CharProgression
io.flutter.util.ViewUtils
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered
kotlin.text.StringsKt__IndentKt
androidx.activity.FullyDrawnReporter
androidx.core.location.LocationCompat$Api29Impl
kotlin.io.path.LinkFollowing
androidx.window.embedding.SplitPairFilter
kotlin.collections.SlidingWindowKt
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult
io.flutter.util.Preconditions
androidx.annotation.HalfFloat
kotlin.reflect.KClassifier
androidx.core.view.ViewPropertyAnimatorCompat
kotlin.coroutines.ContinuationInterceptor
androidx.core.graphics.PaintCompat$Api23Impl
kotlin.text.StringsKt__StringsKt
io.flutter.embedding.engine.FlutterEngineGroup$Options
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
kotlin.comparisons.ComparisonsKt__ComparisonsKt
androidx.activity.result.contract.ActivityResultContracts$OpenDocument
androidx.core.app.NotificationCompatSideChannelService
kotlinx.coroutines.internal.OnDemandAllocatingPoolKt
androidx.window.embedding.SplitController$splitInfoList$1$2
kotlin.contracts.InvocationKind
androidx.lifecycle.MediatorLiveData
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1
io.flutter.util.Predicate
kotlinx.coroutines.JobCancellingNode
androidx.annotation.FloatRange
kotlin.collections.EmptySet
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding
androidx.core.app.JobIntentService$CompatJobEngine
androidx.annotation.RequiresExtension$Container
kotlinx.coroutines.channels.ProducerScope$DefaultImpls
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1
io.flutter.view.AccessibilityBridge
androidx.window.area.WindowAreaAdapter
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2
androidx.activity.result.ActivityResultCaller
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion
androidx.core.util.SparseBooleanArrayKt$keyIterator$1
kotlinx.coroutines.scheduling.CoroutineScheduler
kotlin.sequences.SequencesKt__SequencesJVMKt
kotlin.DeepRecursiveKt
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
org.jetbrains.annotations.Contract
androidx.core.provider.DocumentsContractCompat$DocumentCompat
androidx.core.content.ContextCompat$Api30Impl
kotlin.Lazy
androidx.core.provider.CallbackWithHandler$2
androidx.core.os.HandlerKt$postAtTime$runnable$1
kotlin.text.MatcherMatchResult$groupValues$1
kotlinx.coroutines.flow.internal.ChildCancelledException
androidx.lifecycle.LifecycleOwnerKt
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2
org.jetbrains.annotations.ApiStatus$AvailableSince
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1
kotlin.contracts.CallsInPlace
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
kotlin.sequences.SequencesKt__SequencesKt
org.intellij.lang.annotations.Pattern
kotlinx.coroutines.internal.LockFreeLinkedListNode
kotlin.coroutines.jvm.internal.CoroutineStackFrame
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest
kotlin.internal.AccessibleLateinitPropertyLiteral
kotlin.jvm.internal.Reflection
androidx.core.app.NotificationCompat$InboxStyle
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2
androidx.collection.SimpleArrayMap
androidx.annotation.RequiresFeature
kotlinx.coroutines.selects.SelectImplementation
kotlin.collections.builders.ListBuilderKt
androidx.window.embedding.EmbeddingBackendDecorator
androidx.activity.result.contract.ActivityResultContracts$GetContent
kotlinx.coroutines.DelicateCoroutinesApi
kotlin.ranges.CharProgressionIterator
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt
androidx.core.view.WindowInsetsAnimationCompat$Callback$DispatchMode
kotlin.reflect.KFunction
kotlin.UNINITIALIZED_VALUE
io.flutter.embedding.android.FlutterActivity
kotlin.jvm.internal.SourceDebugExtension
androidx.core.view.WindowInsetsAnimationCompat
org.jetbrains.annotations.Async
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher
org.intellij.lang.annotations.PrintFormatPattern
kotlin.jvm.internal.RepeatableContainer
kotlin.jvm.internal.TypeParameterReference
kotlinx.coroutines.channels.BroadcastKt
kotlin.reflect.TypesJVMKt$WhenMappings
kotlinx.coroutines.internal.ProbesSupportKt
androidx.core.widget.PopupWindowCompat$Api23Impl
androidx.window.embedding.ActivityRule$Builder
androidx.lifecycle.LiveDataKt$observe$wrappedObserver$1
kotlin.random.PlatformRandomKt
kotlin.collections.ArraysKt___ArraysKt$withIndex$2
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2
androidx.lifecycle.viewmodel.R
kotlinx.coroutines.StandaloneCoroutine
androidx.core.view.ContentInfoCompat$Source
androidx.interpolator.view.animation.FastOutSlowInInterpolator
androidx.lifecycle.LiveData
androidx.annotation.NonUiContext
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1
kotlin.io.LinesSequence$iterator$1
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate
kotlinx.coroutines.NodeList
kotlin.jvm.internal.MutablePropertyReference2Impl
kotlin.coroutines.CoroutineContext$plus$1
kotlin.collections.AbstractMutableList
kotlin.jvm.internal.ByteSpreadBuilder
androidx.window.layout.WindowMetricsCalculatorDecorator
kotlinx.coroutines.RunnableKt
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder
androidx.fragment.app.FragmentManager$BackStackEntry
androidx.window.layout.HardwareFoldingFeature
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1
androidx.core.os.ConfigurationCompat
androidx.customview.widget.FocusStrategy$BoundsAdapter
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1
androidx.core.view.ContentInfoCompat$Compat
kotlin.text.Charsets
androidx.versionedparcelable.VersionedParcelStream
kotlin.collections.CollectionsKt__ReversedViewsKt
androidx.arch.core.executor.ArchTaskExecutor
androidx.core.app.GrammaticalInflectionManagerCompat
androidx.lifecycle.Transformations$map$1
androidx.lifecycle.EmittedSource$disposeNow$2
androidx.customview.R$layout
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1
kotlinx.coroutines.IncompleteStateBox
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1
kotlin.jvm.internal.CharCompanionObject
androidx.core.content.pm.ShortcutManagerCompat$ShortcutMatchFlags
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger
androidx.window.area.WindowAreaController
kotlin.collections.MapWithDefault
androidx.lifecycle.Transformations$distinctUntilChanged$1
kotlinx.coroutines.ThreadState
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1
android.support.v4.os.ResultReceiver$MyResultReceiver
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1
kotlin.collections.ArraysKt___ArraysKt
kotlin.jvm.internal.Ref$ByteRef
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState
androidx.core.content.res.ResourcesCompat$Api23Impl
kotlin.BuilderInference
androidx.core.widget.AutoScrollHelper$ClampedScroller
androidx.lifecycle.Transformations$switchMap$2$onChanged$1
kotlinx.coroutines.CoroutineName
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2
io.flutter.plugin.platform.PlatformViewRegistryImpl
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1
androidx.core.net.MailTo
kotlin.jvm.optionals.OptionalsKt
androidx.window.layout.adapter.extensions.MulticastConsumer
io.flutter.embedding.engine.systemchannels.BackGestureChannel
kotlinx.coroutines.sync.MutexKt
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl
io.flutter.plugin.platform.PlatformViewFactory
io.flutter.view.VsyncWaiter
kotlinx.coroutines.internal.LocalAtomicsKt
androidx.loader.content.ModernAsyncTask$2
androidx.core.content.ContextCompat$Api21Impl
com.example.wellnesshub.R$mipmap
androidx.activity.contextaware.OnContextAvailableListener
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1
androidx.core.text.ICUCompat
androidx.core.app.NotificationManagerCompat$Api34Impl
kotlin.text.StringsKt___StringsJvmKt
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1
kotlinx.coroutines.internal.ResizableAtomicArray
kotlinx.coroutines.selects.SelectClause0Impl
androidx.viewpager.widget.ViewPager$LayoutParams
androidx.core.widget.TextViewKt$addTextChangedListener$1
org.jetbrains.annotations.Debug$Renderer
kotlin.reflect.KProperty0$Getter
androidx.window.embedding.EmbeddingBackend$Companion$overrideDecorator$1
androidx.core.util.ContinuationRunnable
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder
kotlin.coroutines.CoroutineContextImplKt
androidx.lifecycle.Lifecycle
androidx.activity.FullyDrawnReporterOwner
kotlinx.coroutines.flow.FlowKt__CountKt
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
androidx.core.view.ViewCompat$FocusRelativeDirection
androidx.versionedparcelable.NonParcelField
kotlin.io.ConstantsKt
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7
com.getkeepsafe.relinker.elf.Elf32Header
androidx.annotation.AnyThread
kotlin.collections.CollectionsKt___CollectionsKt
androidx.core.content.res.ResourcesCompat$Api29Impl
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation
androidx.fragment.R$anim
kotlin.sequences.TransformingIndexedSequence$iterator$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware
kotlinx.coroutines.flow.CancellableFlowImpl
kotlin.collections.builders.SerializedMap$Companion
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackWindowConsumerValid$1
androidx.window.embedding.SafeActivityEmbeddingComponentProvider
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2
androidx.savedstate.ViewTreeSavedStateRegistryOwner
kotlin.io.FileWalkDirection
kotlinx.coroutines.internal.StackTraceRecoveryKt
kotlin.jvm.internal.FunctionAdapter
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout
androidx.core.app.Person$Api28Impl
kotlin.PublishedApi
androidx.core.view.WindowInsetsAnimationControllerCompat
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2
androidx.core.view.MarginLayoutParamsCompat
io.flutter.embedding.android.KeyboardMap$PressingGoal
kotlinx.coroutines.internal.LimitedDispatcherKt
kotlinx.coroutines.internal.ConcurrentKt
androidx.core.app.NotificationCompat$Api24Impl
androidx.core.app.AppLaunchChecker
androidx.lifecycle.DispatchQueue
kotlin.TypeAliasesKt
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler
kotlin.io.path.FileVisitorImpl
androidx.activity.result.ActivityResult
androidx.window.WindowSdkExtensions$Companion
org.jetbrains.annotations.Nls
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1
kotlinx.coroutines.channels.ClosedReceiveChannelException
kotlin.NotImplementedError
com.getkeepsafe.relinker.MissingLibraryException
androidx.core.view.ViewCompat$2
kotlin.jvm.JvmSerializableLambda
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2
androidx.core.app.AlarmManagerCompat$Api21Impl
kotlin.jvm.internal.TypeReference$Companion
kotlin.random.URandomKt
androidx.core.widget.CheckedTextViewCompat
androidx.fragment.app.FragmentResultOwner
org.jetbrains.annotations.PropertyKey
kotlin.sequences.DropWhileSequence$iterator$1
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface
kotlin.jvm.internal.markers.KMutableList
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1
androidx.core.content.ContentResolverCompat
androidx.activity.OnBackPressedDispatcher$Api33Impl
androidx.core.app.NotificationCompat$BigTextStyle
androidx.activity.R
androidx.activity.EdgeToEdgeBase
androidx.window.layout.adapter.sidecar.SidecarAdapter
io.flutter.embedding.engine.dart.DartExecutor
android.support.v4.os.ResultReceiver
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler
kotlin.collections.AbstractList$ListIteratorImpl
io.flutter.plugin.common.PluginRegistry$NewIntentListener
kotlinx.coroutines.internal.Symbol
io.flutter.view.AccessibilityBridge$3
androidx.customview.widget.ViewDragHelper$Callback
kotlin.random.AbstractPlatformRandom
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateIntentPredicates$1
io.flutter.Build
androidx.window.embedding.SplitController$Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2
kotlin.ranges.OpenEndDoubleRange
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1
androidx.core.graphics.Insets
kotlinx.coroutines.scheduling.WorkQueue
kotlin.io.FilesKt__FileReadWriteKt$readLines$1
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType
androidx.core.text.TextDirectionHeuristicsCompat
kotlinx.coroutines.TimeoutCancellationException
kotlin.jvm.functions.Function10
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt
kotlin.concurrent.TimersKt$timerTask$1
androidx.core.internal.view.SupportMenuItem
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
kotlinx.coroutines.flow.FlowKt__DistinctKt
kotlin.coroutines.jvm.internal.DebugMetadata
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1
kotlinx.coroutines.channels.ProduceKt$awaitClose$1
kotlin.collections.builders.MapBuilder$Itr
kotlin.collections.UArraySortingKt
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1
androidx.core.content.pm.ShortcutManagerCompat$Api25Impl
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2
androidx.core.app.OnPictureInPictureModeChangedProvider
androidx.core.transition.TransitionKt$addListener$listener$1
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1
org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
androidx.core.app.RemoteInput$EditChoicesBeforeSending
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1
org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1
androidx.core.graphics.drawable.DrawableCompat
androidx.core.content.UnusedAppRestrictionsBackportService$1
org.intellij.lang.annotations.JdkConstants$PatternFlags
androidx.core.provider.FontProvider
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api34Impl
kotlin.ranges.UIntProgression$Companion
androidx.core.app.NotificationCompat$WearableExtender$Api20Impl
kotlin.coroutines.jvm.internal.Boxing
kotlin.random.RandomKt
kotlinx.coroutines.time.TimeKt
kotlin.io.path.PathsKt__PathReadWriteKt
kotlin.io.encoding.Base64JVMKt
kotlinx.coroutines.scheduling.DefaultIoScheduler
io.flutter.view.TextureRegistry
androidx.fragment.app.FragmentController
kotlin.text.StringsKt__AppendableKt
com.getkeepsafe.relinker.elf.Elf$SectionHeader
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly
io.flutter.embedding.android.MotionEventTracker
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodClearSplitInfoCallbackValid$1
androidx.core.util.HalfKt
androidx.core.text.HtmlCompat$Api24Impl
io.flutter.embedding.android.KeyboardManager$1
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner
androidx.fragment.app.FragmentStateManager$1
androidx.lifecycle.viewmodel.CreationExtras$Empty
androidx.lifecycle.viewmodel.ViewModelFactoryDsl
kotlin.Result
androidx.core.content.PackageManagerCompat$Api30Impl
android.support.v4.os.IResultReceiver
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1
kotlin.comparisons.NaturalOrderComparator
androidx.viewpager.R$dimen
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1
androidx.core.app.NotificationCompat$Api28Impl
kotlinx.coroutines.CancelFutureOnCompletion
androidx.core.os.TraceCompat$Api29Impl
kotlin.text.StringsKt__StringsKt$splitToSequence$2
kotlinx.coroutines.channels.BroadcastKt$broadcast$2
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api30Impl
androidx.core.graphics.ShaderKt
androidx.window.area.SafeWindowAreaComponentProvider$isWindowAreaProviderValid$1
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper
com.example.wellnesshub.R$drawable
kotlin.collections.ShortIterator
kotlinx.coroutines.channels.Channel$Factory
androidx.core.app.NotificationCompat$Builder$Api21Impl
kotlin.coroutines.CombinedContext
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2
kotlin.reflect.KCallable
androidx.core.widget.NestedScrollView$OnScrollChangeListener
kotlinx.coroutines.selects.SelectClause0
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo
androidx.core.view.DifferentialMotionFlingController$DifferentialVelocityProvider
kotlin.sequences.TransformingSequence
org.jetbrains.annotations.Async$Execute
kotlin.jvm.jdk8.JvmRepeatableKt
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1
kotlin.collections.AbstractIterator
kotlin.time.AbstractLongTimeSource
androidx.lifecycle.ViewModelProvider
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate
androidx.core.content.IntentSanitizer$Api31Impl
androidx.activity.ViewTreeOnBackPressedDispatcherOwner
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1
androidx.core.view.ContentInfoCompat$Api31Impl
androidx.core.os.MessageCompat
androidx.fragment.app.FragmentManager$ClearBackStackState
com.getkeepsafe.relinker.ReLinkerInstance
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread
io.flutter.embedding.engine.FlutterEngine$1
kotlin.ranges.LongProgression
androidx.annotation.UiThread
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1
kotlinx.coroutines.internal.ThreadContextKt$updateState$1
kotlinx.coroutines.flow.internal.ChannelFlowMerge
androidx.core.view.WindowInsetsCompat$Type$InsetsType
androidx.window.area.SafeWindowAreaComponentProvider
io.flutter.plugin.platform.PlatformPlugin$3
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture
kotlin.jvm.internal.ClassReference$Companion
io.flutter.plugin.mouse.MouseCursorPlugin$2
androidx.annotation.ColorRes
androidx.core.view.ActionProvider$VisibilityListener
androidx.core.transition.TransitionKt$addListener$1
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1
androidx.annotation.InspectableProperty$FlagEntry
androidx.fragment.app.strictmode.GetRetainInstanceUsageViolation
kotlin.coroutines.ContinuationKt
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1
io.flutter.view.TextureRegistry$TextureEntry
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1
androidx.fragment.app.Fragment$4
androidx.activity.OnBackPressedDispatcher$2
androidx.window.layout.HardwareFoldingFeature$Type$Companion
io.flutter.embedding.engine.systemchannels.ScribeChannel
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
io.flutter.embedding.android.KeyboardManager$Responder
androidx.lifecycle.SavedStateHandleAttacher
kotlinx.coroutines.internal.LockFreeLinkedListKt
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1
kotlinx.coroutines.CompletionHandlerKt
androidx.core.net.UriKt
io.flutter.embedding.android.TransparencyMode
kotlin.coroutines.jvm.internal.BaseContinuationImpl
kotlinx.coroutines.channels.ChannelResult$Closed
androidx.core.view.MenuCompat$Api28Impl
androidx.core.app.BundleCompat
androidx.core.transition.TransitionKt$addListener$4
kotlin.collections.GroupingKt
androidx.core.view.ViewConfigurationCompat$Api28Impl
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory
kotlinx.coroutines.flow.CancellableFlow
androidx.core.text.SpannedStringKt
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface
androidx.window.embedding.EmbeddingCompat$setEmbeddingCallback$1
kotlinx.coroutines.selects.SelectClause1Impl
androidx.window.core.Version$Companion
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter
androidx.core.view.ViewKt$ancestors$1
io.flutter.plugin.common.BinaryMessenger$TaskQueue
kotlin.ranges.URangesKt___URangesKt
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact
kotlinx.coroutines.internal.InternalAnnotationsKt
androidx.core.os.ExecutorCompat
kotlinx.coroutines.ThreadLocalEventLoop
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo
androidx.loader.R$styleable
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt
org.jetbrains.annotations.ApiStatus$Experimental
androidx.activity.OnBackPressedDispatcher$Api34Impl
kotlin.PreconditionsKt__PreconditionsKt
kotlinx.coroutines.scheduling.CoroutineSchedulerKt
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1
androidx.window.R$styleable
androidx.core.app.NotificationCompatBuilder
io.flutter.plugin.editing.TextInputPlugin$1
androidx.concurrent.futures.AbstractResolvableFuture
androidx.lifecycle.CoroutineLiveData$clearSource$1
io.flutter.embedding.android.FlutterImageView$SurfaceKind
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind
androidx.core.content.pm.ShortcutManagerCompat$1
androidx.core.app.NotificationManagerCompat$CancelTask
kotlin.io.path.PathTreeWalk$bfsIterator$1
kotlin.ExtensionFunctionType
androidx.arch.core.internal.SafeIterableMap$ListIterator
androidx.fragment.app.FragmentTransitionImpl
kotlinx.coroutines.CoroutineExceptionHandler$Key
androidx.annotation.UiContext
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2
androidx.profileinstaller.ProfileInstallerInitializer$Result
kotlin.collections.ReversedListReadOnly
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal
kotlin.OptIn
androidx.core.view.ViewKt$postDelayed$runnable$1
kotlin.TuplesKt
androidx.core.content.IntentSanitizer$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1
kotlinx.coroutines.DispatchedTask
androidx.window.area.WindowAreaCapability$Operation
androidx.core.view.NestedScrollingChild2
kotlinx.coroutines.ExceptionsKt
kotlin.internal.IntrinsicConstEvaluation
androidx.lifecycle.BlockRunner
io.flutter.plugin.editing.ListenableEditingState
kotlin.jvm.functions.Function19
io.flutter.plugin.common.PluginRegistry$ActivityResultListener
kotlin.jvm.internal.PrimitiveSpreadBuilder
kotlin.text.MatchGroup
androidx.lifecycle.ProcessLifecycleOwner
androidx.annotation.RequiresPermission$Read
androidx.core.view.DragStartHelper
androidx.lifecycle.Lifecycle$Event$WhenMappings
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2
androidx.annotation.GravityInt
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion
androidx.lifecycle.ProcessLifecycleOwner$Companion
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
kotlin.text.StringsKt___StringsKt$windowedSequence$1
androidx.fragment.app.FragmentResultListener
kotlinx.coroutines.flow.DistinctFlowImpl
androidx.core.app.NotificationCompat$Action
androidx.core.text.util.LocalePreferences$HourCycle
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1
androidx.core.service.quicksettings.TileServiceCompat$Api34Impl
androidx.core.util.LruCacheKt$lruCache$1
androidx.core.graphics.PathSegment
androidx.fragment.app.DialogFragment$3
androidx.core.graphics.PathKt
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1
io.flutter.view.AccessibilityBridge$LocaleStringAttribute
androidx.activity.result.ActivityResultRegistry$1
kotlin.jvm.functions.Function18
androidx.startup.R$string
androidx.fragment.app.strictmode.FragmentStrictMode$Flag
androidx.window.extensions.core.util.function.Function
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1
kotlin.ArrayIntrinsicsKt
androidx.profileinstaller.DexProfileData
kotlinx.coroutines.sync.MutexKt$withLock$1
androidx.core.view.VelocityTrackerCompat$Api34Impl
kotlin.io.path.OnErrorResult
org.intellij.lang.annotations.Flow
androidx.core.os.LocaleListInterface
androidx.interpolator.view.animation.LinearOutSlowInInterpolator
kotlinx.coroutines.selects.SelectInstanceInternal
androidx.core.widget.NestedScrollView$AccessibilityDelegate
kotlin.LateinitKt
kotlinx.coroutines.internal.LockFreeLinkedListHead
androidx.loader.content.CursorLoader
androidx.annotation.VisibleForTesting
kotlin.collections.AbstractMap$values$1$iterator$1
kotlin.collections.CollectionsKt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9
androidx.lifecycle.ClassesInfoCache
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1
androidx.fragment.app.FragmentTabHost$DummyTabFactory
androidx.core.location.LocationManagerCompat$Api28Impl
kotlin.collections.builders.ListBuilder$Itr
androidx.core.provider.CallbackWithHandler$1
org.jetbrains.annotations.ApiStatus$NonExtendable
android.support.v4.os.IResultReceiver2$_Parcel
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt
androidx.lifecycle.LifecycleKt$eventFlow$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2
androidx.core.net.ConnectivityManagerCompat
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1
_COROUTINE._CREATION
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2$WhenMappings
androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl
androidx.core.util.ConsumerKt
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1
kotlin.jvm.internal.EnumCompanionObject
io.flutter.embedding.engine.systemchannels.AccessibilityChannel
androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext
io.flutter.embedding.android.FlutterViewDelegate
kotlinx.coroutines.AwaitKt
androidx.core.database.CursorWindowCompat
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2
kotlin.jvm.internal.MutablePropertyReference
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2
androidx.core.database.sqlite.SQLiteCursorCompat$Api28Impl
kotlin.io.FileAlreadyExistsException
androidx.core.os.OutcomeReceiverKt
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt
kotlinx.coroutines.flow.internal.AbstractSharedFlow
androidx.core.os.PersistableBundleApi21ImplKt
kotlin.text.CharsKt__CharJVMKt
androidx.core.graphics.PaintCompat
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1
kotlinx.coroutines.JobSupport$Finishing
androidx.customview.R$styleable
kotlin.text.StringsKt__IndentKt$getIndentFunction$1
androidx.lifecycle.PausingDispatcherKt
androidx.profileinstaller.ProfileTranscoder
kotlinx.coroutines.internal.MainDispatcherFactory
androidx.annotation.LayoutRes
io.flutter.plugin.common.MethodChannel$Result
androidx.core.text.util.LocalePreferences$FirstDayOfWeek
kotlin.NumbersKt
androidx.core.graphics.TypefaceCompatBaseImpl$2
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2
androidx.core.view.TintableBackgroundView
kotlin.ULong$Companion
androidx.core.content.res.TypedArrayKt
io.flutter.embedding.engine.systemchannels.PlatformChannel$2
androidx.core.app.NotificationManagerCompat$SideChannelManager
kotlin.jvm.functions.Function1
kotlinx.coroutines.CoroutineId$Key
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel
kotlin._Assertions
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1
kotlin.text.StringsKt___StringsKt$chunkedSequence$1
androidx.core.app.NotificationCompat$Action$Builder$Api24Impl
kotlin.ranges.CharProgression$Companion
kotlinx.coroutines.flow.FlowKt__BuildersKt
io.flutter.embedding.engine.dart.DartMessenger$1
androidx.startup.InitializationProvider
kotlinx.coroutines.ChildJob$DefaultImpls
kotlin.text.SystemProperties
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7
androidx.fragment.app.Fragment
kotlinx.coroutines.Deferred$DefaultImpls
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1
androidx.profileinstaller.ProfileVerifier$Cache
androidx.loader.R$dimen
kotlin.time.MeasureTimeKt
io.flutter.embedding.engine.loader.ResourceExtractor
androidx.core.view.ContentInfoCompat$BuilderCompatImpl
androidx.core.widget.PopupWindowCompat
androidx.lifecycle.GeneratedAdapter
androidx.core.app.AlarmManagerCompat$Api23Impl
androidx.lifecycle.LifecycleRegistry$ObserverWithState
kotlin.jvm.functions.Function16
androidx.window.core.Logger
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1
androidx.activity.OnBackPressedDispatcher$4
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1
androidx.profileinstaller.Encoding
kotlin.streams.jdk8.StreamsKt
org.jetbrains.annotations.Nls$Capitalization
kotlin.ExceptionsKt
androidx.core.app.LocaleManagerCompat
kotlinx.coroutines.channels.TickerMode
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo
kotlin.collections.EmptyIterator
io.flutter.embedding.engine.systemchannels.RestorationChannel$2
kotlinx.coroutines.flow.FlowKt__ChannelsKt
androidx.annotation.RequiresApi
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1
androidx.core.app.DialogCompat$Api28Impl
kotlin.collections.MapsKt__MapsJVMKt
kotlin.collections.AbstractMap$keys$1$iterator$1
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1
kotlin.io.FilesKt__FileReadWriteKt
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1
kotlinx.coroutines.flow.ReadonlyStateFlow
androidx.customview.R$id
androidx.window.layout.util.ContextCompatHelper
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1
kotlinx.coroutines.channels.BufferOverflow
androidx.core.app.PendingIntentCompat$Flags
androidx.fragment.app.FragmentManager$4
androidx.core.view.MenuProvider
kotlin.enums.EnumEntriesKt
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler
kotlin.coroutines.CombinedContext$Serialized$Companion
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager
kotlin.jvm.internal.markers.KMutableIterable
kotlinx.coroutines.flow.StateFlowImpl
androidx.window.area.WindowAreaSessionPresenter
kotlin.jvm.internal.FunctionReference
androidx.core.app.NotificationCompat$Api31Impl
kotlin.UShortKt
kotlin.properties.Delegates
androidx.core.app.CoreComponentFactory$CompatWrapped
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1
androidx.customview.widget.ViewDragHelper
kotlin.sequences.Sequence
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
androidx.customview.widget.FocusStrategy$SequentialComparator
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1
kotlin.jvm.internal.FloatCompanionObject
androidx.core.view.ViewCompat$ScrollIndicators
androidx.viewpager.widget.ViewPager$SavedState$1
kotlinx.coroutines.channels.ReceiveChannel
androidx.core.view.accessibility.AccessibilityEventCompat$Api34Impl
androidx.window.core.SpecificationComputer$Companion
androidx.core.os.ParcelableCompat
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions
androidx.annotation.Size
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1
kotlinx.coroutines.CoroutineDispatcher
kotlinx.coroutines.channels.Channel$DefaultImpls
kotlin.jvm.internal.MagicApiIntrinsics
androidx.core.util.Pools$SimplePool
kotlinx.coroutines.channels.ProduceKt
org.jetbrains.annotations.ApiStatus$OverrideOnly
kotlinx.coroutines.channels.BufferedChannel$onReceive$2
androidx.concurrent.futures.AbstractResolvableFuture$Waiter
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator
kotlinx.coroutines.flow.internal.StackFrameContinuation
androidx.fragment.app.FragmentManager$OnBackStackChangedListener
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2
androidx.core.widget.ImageViewCompat
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect
androidx.core.app.GrammaticalInflectionManagerCompat$Api34Impl
kotlin.WasExperimental
androidx.core.graphics.drawable.WrappedDrawableApi14
io.flutter.embedding.engine.FlutterEngineCache
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4
androidx.core.animation.AnimatorKt$addListener$4
kotlin.jvm.functions.Function21
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
androidx.core.location.LocationCompat$Api26Impl
androidx.lifecycle.AndroidViewModel
kotlin.Result$Failure
kotlin.reflect.KMutableProperty1
androidx.core.util.TypedValueCompat$Api34Impl
androidx.annotation.OpenForTesting
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1
kotlin.random.FallbackThreadLocalRandom$implStorage$1
kotlinx.coroutines.flow.internal.SendingCollector
androidx.core.os.CancellationSignal$OnCancelListener
io.flutter.embedding.android.FlutterEngineConfigurator
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets
androidx.core.R$styleable
androidx.lifecycle.viewmodel.R$id
kotlin.time.DurationUnitKt__DurationUnitJvmKt$WhenMappings
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1
androidx.fragment.app.ListFragment$2
kotlin.jvm.internal.ClassReference
kotlin.io.OnErrorAction
androidx.core.app.TaskStackBuilder
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3
kotlin.KotlinVersionCurrentValue
androidx.annotation.XmlRes
androidx.core.view.ViewPropertyAnimatorListenerAdapter
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1
kotlin.text.RegexOption
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls
kotlinx.coroutines.DispatchedTaskKt
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask
kotlinx.coroutines.ResumeOnCompletion
io.flutter.embedding.engine.dart.DartExecutor$DartCallback
androidx.core.content.ContextCompat$RegisterReceiverFlags
androidx.core.util.SparseBooleanArrayKt$valueIterator$1
android.support.v4.app.INotificationSideChannel
androidx.core.view.DisplayCompat$ModeCompat$Api23Impl
androidx.activity.SystemBarStyle
androidx.core.view.WindowInsetsControllerCompat
androidx.core.app.NotificationCompat$GroupAlertBehavior
kotlin.io.FilesKt__UtilsKt
androidx.core.app.NotificationCompat$1
androidx.lifecycle.MutableLiveData
io.flutter.embedding.engine.systemchannels.SettingsChannel
kotlin.internal.PlatformImplementations
androidx.core.content.res.TypedArrayApi26ImplKt
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityIntentPredicates$1
androidx.versionedparcelable.VersionedParcel$ParcelException
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1
kotlinx.coroutines.DispatcherExecutor
androidx.activity.ComponentActivity$3
androidx.lifecycle.LifecycleRegistry$Companion
org.intellij.lang.annotations.JdkConstants$CalendarMonth
androidx.core.graphics.PathUtils
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1
kotlin.collections.builders.MapBuilder
kotlin.jvm.internal.Intrinsics$Kotlin
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter
kotlinx.coroutines.internal.ConcurrentLinkedListNode
io.flutter.view.AccessibilityBridge$StringAttributeType
androidx.interpolator.view.animation.FastOutLinearInInterpolator
androidx.core.content.res.ColorStateListInflaterCompat
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2
org.jetbrains.annotations.Unmodifiable
androidx.core.content.res.TypedArrayUtils
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback
androidx.fragment.app.FragmentTabHost$TabInfo
androidx.fragment.app.FragmentManagerViewModel$1
androidx.window.area.RearDisplayPresentationSessionPresenterImpl
androidx.core.text.LocaleKt
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1
androidx.lifecycle.SingleGeneratedAdapterObserver
kotlinx.coroutines.channels.BroadcastChannelImpl
kotlin.coroutines.ContinuationKt$Continuation$1
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration
androidx.core.view.WindowInsetsControllerCompat$Impl26
androidx.fragment.app.FragmentFactory
kotlinx.coroutines.CancelHandlerBase
androidx.core.app.AppComponentFactory
kotlin.reflect.KProperty
kotlin.ExperimentalUnsignedTypes
kotlin.sequences.SequencesKt___SequencesKt$distinct$1
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2
kotlin.jvm.functions.FunctionN
androidx.core.app.ShareCompat$IntentReader
kotlin.text._OneToManyTitlecaseMappingsKt
kotlin.jvm.functions.Function14
com.getkeepsafe.relinker.elf.Section32Header
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$2
androidx.customview.R$styleable: int FontFamily_fontProviderPackage
androidx.fragment.app.Fragment: android.os.Handler mPostponedHandler
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: kotlinx.coroutines.sync.MutexImpl this$0
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.contract.ActivityResultContract mContract
kotlin.sequences.TakeWhileSequence: kotlin.jvm.functions.Function1 predicate
androidx.window.core.Version: int major
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.Class fragmentClass
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: java.lang.Object result
kotlin.io.LineReader: java.nio.ByteBuffer byteBuf
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_PROVIDER_NOT_FOUND
androidx.core.view.HapticFeedbackConstantsCompat: int TOGGLE_OFF
kotlin.io.encoding.EncodeOutputStream: int lineLength
androidx.window.embedding.SplitAttributes$LayoutDirection: androidx.window.embedding.SplitAttributes$LayoutDirection RIGHT_TO_LEFT
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.view.ViewConfigurationCompat: java.lang.String TAG
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.flow.internal.SendingCollector $collector
androidx.core.app.RemoteInput: java.lang.CharSequence[] mChoices
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
androidx.activity.OnBackPressedDispatcher: kotlin.collections.ArrayDeque onBackPressedCallbacks
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: int label
androidx.core.provider.FontRequestWorker$1: android.content.Context val$context
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: long sequenceNumber
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler keyboardMethodHandler
io.flutter.embedding.android.AndroidTouchProcessor: int DEFAULT_VERTICAL_SCROLL_FACTOR
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
androidx.fragment.app.FragmentTransaction: int OP_DETACH
androidx.core.location.LocationManagerCompat: java.util.WeakHashMap sLocationListeners
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$0
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: long id
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object[] buffer
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_notify
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_HAS_REQUEST_INITIAL_ACCESSIBILITY_FOCUS
kotlinx.coroutines.JobImpl: boolean handlesException
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater receiveSegment$FU
androidx.core.app.NotificationCompat$Action$WearableExtender: int FLAG_HINT_LAUNCHES_ACTIVITY
kotlin.collections.builders.SerializedMap: kotlin.collections.builders.SerializedMap$Companion Companion
androidx.core.widget.NestedScrollView: int ANIMATED_SCROLL_GAP
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_MESSAGE
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object value
androidx.window.layout.WindowInfoTracker$Companion: kotlin.Lazy extensionBackend$delegate
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: androidx.core.view.WindowInsetsCompat val$targetInsets
androidx.core.app.NotificationCompat: int FLAG_ONLY_ALERT_ONCE
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_INDEX
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
androidx.core.app.NotificationChannelCompat: java.lang.String mDescription
kotlin.Triple: java.lang.Object second
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object result
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object L$0
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext context
kotlin.comparisons.NaturalOrderComparator: kotlin.comparisons.NaturalOrderComparator INSTANCE
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: int label
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object L$0
androidx.core.text.PrecomputedTextCompat: android.text.Spannable mText
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object result
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_MASK
androidx.core.transition.TransitionKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onPause
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_WHITELISTED
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlinx.coroutines.channels.ReceiveChannel $this_dropWhile
io.flutter.embedding.android.KeyData$Type: long value
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String U_EXTENSION_TAG
androidx.core.util.TimeUtils: char[] sFormatStr
kotlinx.coroutines.AwaitKt$joinAll$3: int label
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge
androidx.viewpager.R$dimen: int notification_top_pad_large_text
androidx.core.R$drawable: int notification_bg_normal_pressed
kotlin.sequences.SubSequence: int endIndex
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_IME_ENTER
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String dartEntrypoint
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$5
kotlinx.coroutines.DispatchedTask: int resumeMode
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: java.lang.Object $element
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object result
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$1
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_INVOKED
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState DETACHED
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: int label
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: java.lang.String mShortcutId
androidx.customview.widget.ExploreByTouchHelper: int INVALID_ID
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mTimeoutMs
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
androidx.core.app.NotificationCompat$Builder: android.app.Notification mNotification
androidx.core.app.NotificationCompat$Builder: long mTimeout
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY
androidx.core.net.ParseException: java.lang.String response
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4: kotlin.jvm.internal.Ref$ObjectRef $seekCancelLambda
androidx.fragment.R$styleable: int Fragment_android_tag
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4: java.lang.Object $mergedTransition
kotlinx.coroutines.selects.SelectImplementation: java.util.List clauses
kotlin.jvm.internal.TypeParameterReference: java.lang.Object container
kotlin.text.StringsKt___StringsKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentManager mFragmentManager
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldAttachEngineToActivity
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder
androidx.viewpager.widget.ViewPager: float mLastOffset
androidx.core.os.CancellationSignal: boolean mIsCanceled
kotlin.sequences.TransformingIndexedSequence$iterator$1: int index
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_TEXT_SELECTABLE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlin.jvm.internal.Ref$ObjectRef $previousFlow
androidx.customview.R$drawable: int notification_icon_background
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback: java.lang.String DESCRIPTOR
androidx.loader.content.CursorLoader: android.database.Cursor mCursor
kotlin.jvm.internal.FloatCompanionObject: float NaN
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0
androidx.customview.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.core.provider.FontRequestWorker$TypefaceResult: int mResult
androidx.core.app.Person$Builder: boolean mIsImportant
androidx.core.view.WindowInsetsCompat$Type: int TAPPABLE_ELEMENT
androidx.window.embedding.SplitRule: int minHeightDp
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: int index
androidx.core.app.NotificationCompat: java.lang.String EXTRA_VERIFICATION_ICON_COMPAT
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object L$0
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: kotlinx.coroutines.selects.SelectInstance select
androidx.core.R$string: int call_notification_incoming_text
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult SKIP_SUBTREE
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_BIG_PICTURE_WHEN_COLLAPSED
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$2
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View val$mutatorView
kotlin.collections.SlidingWindowKt$windowedIterator$1: boolean $reuseBuffer
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2 this$0
androidx.startup.R$string: int androidx_startup
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON_BIG
androidx.core.view.HapticFeedbackConstantsCompat: int KEYBOARD_PRESS
androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0
kotlin.collections.MutableMapWithDefaultImpl: kotlin.jvm.functions.Function1 default
androidx.fragment.app.FragmentTransaction: int OP_SET_PRIMARY_NAV
androidx.core.app.NotificationManagerCompat: java.lang.String EXTRA_USE_SIDE_CHANNEL
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: kotlin.jvm.functions.Function4 $transform$inlined$1
androidx.customview.R$styleable: int GradientColor_android_endColor
androidx.loader.R$string: int status_bar_notification_info_overflow
kotlin.sequences.TakeWhileSequence$iterator$1: kotlin.sequences.TakeWhileSequence this$0
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPE_PARAMETER
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: int label
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: kotlinx.coroutines.flow.CallbackFlowBuilder this$0
androidx.core.view.MotionEventCompat: int AXIS_THROTTLE
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale[] PSEUDO_LOCALE
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
androidx.lifecycle.SavedStateHandlesProvider: boolean restored
kotlin.collections.AbstractIterator$WhenMappings: int[] $EnumSwitchMapping$0
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
androidx.viewpager.R$id: int icon_group
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String TAG
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: kotlinx.coroutines.CancellableContinuation cont
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] mMessages
androidx.core.graphics.drawable.IconCompat: int KEY_SHADOW_ALPHA
androidx.core.service.quicksettings.TileServiceCompat: androidx.core.service.quicksettings.TileServiceCompat$TileServiceWrapper sTileServiceWrapper
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1 INSTANCE
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Companion Companion
io.flutter.embedding.android.FlutterFragment: android.view.ViewTreeObserver$OnWindowFocusChangeListener onWindowFocusChangeListener
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object result
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1 this$0
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_CONSECUTIVE
kotlin.text.Typography: char times
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect
kotlin.text.StringsKt___StringsKt$windowedSequence$2: int $size
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_LABEL
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mBitmapWidth
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
androidx.core.R$id: int right_side
io.flutter.plugin.editing.TextEditingDelta: int newSelectionEnd
kotlin.random.KotlinRandom: boolean seedInitialized
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac mMac
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2: androidx.lifecycle.ViewModelStoreOwner $viewModelStoreOwner
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
androidx.core.view.DifferentialMotionFlingController: androidx.core.view.DifferentialMotionFlingController$FlingVelocityThresholdCalculator mVelocityThresholdCalculator
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_INDIVIDUAL
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.util.Map nameToSessionId
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$1
androidx.core.app.NotificationCompat$TvExtender: int FLAG_AVAILABLE_ON_TV
androidx.lifecycle.SavedStateHandlesProvider: kotlin.Lazy viewModel$delegate
androidx.core.content.res.CamColor: float LIGHTNESS_SEARCH_ENDPOINT
androidx.core.text.util.LinkifyCompat$LinkSpec: int start
androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: int corePoolSize
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object L$2
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.jvm.functions.Function2 emitRef
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: java.lang.Object result
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
androidx.fragment.app.ListFragment: android.view.View mListContainer
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked MARKED_TRUE
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.sequences.Sequence $this_ifEmpty
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_SINGLE
androidx.core.R$id: int accessibility_custom_action_30
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_LINK_URI_INTEROP_KEY
androidx.core.text.TextDirectionHeuristicsCompat: int STATE_TRUE
androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
androidx.core.content.pm.ShortcutInfoCompat$Builder: java.util.Map mCapabilityBindingParams
kotlin.text.Typography: char paragraph
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: java.lang.CharSequence mText
kotlin.sequences.FilteringSequence$iterator$1: int nextState
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlinx.coroutines.flow.MutableSharedFlow $shared
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type upperBound
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$2
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion Companion
io.flutter.plugin.common.MethodChannel: java.lang.String name
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object result
androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView
androidx.fragment.app.FragmentManager$RestoreBackStackState: java.lang.String mName
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat LUMINOSITY
androidx.core.R$id: int accessibility_custom_action_12
androidx.profileinstaller.Encoding: int UINT_32_SIZE
androidx.core.app.ActivityRecreator$1: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.StackTraceElement ARTIFICIAL_FRAME
androidx.viewpager.widget.ViewPager: android.view.animation.Interpolator sInterpolator
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
kotlin.text.Typography: char tm
androidx.core.graphics.WeightTypefaceApi14: java.lang.String TAG
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$2
kotlin.jvm.internal.Ref$DoubleRef: double element
androidx.fragment.app.SpecialEffectsController$Effect: boolean isStarted
androidx.core.R$id: int action_container
androidx.core.content.res.FontResourcesParserCompat: int ITALIC
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2 this$0
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_MEDIUM
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: androidx.lifecycle.LiveData $source
androidx.viewpager.widget.PagerTitleStrip: int[] ATTRS
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FUNCTION
androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.animation.Interpolator DEFAULT_INSET_INTERPOLATOR
androidx.customview.R$dimen: int notification_content_margin_start
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
androidx.fragment.app.FragmentManager: java.lang.String FRAGMENT_KEY_PREFIX
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String ISLAMIC_TBLA
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong COROUTINE_ID
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClassName
androidx.core.view.MotionEventCompat: int AXIS_DISTANCE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mTtcIndex
kotlin.collections.SlidingWindowKt$windowedIterator$1: boolean $partialWindows
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_NOT_FOUND
androidx.fragment.app.FragmentManager: boolean DEBUG
androidx.core.text.util.FindAddress: int kMaxAddressNameWordLength
io.flutter.plugin.common.ErrorLogResult: int level
androidx.lifecycle.SavedStateHandle: java.util.Map savedStateProviders
androidx.core.location.GpsStatusWrapper: java.util.Iterator mCachedIterator
androidx.core.app.ActivityRecreator: java.lang.reflect.Method requestRelaunchActivityMethod
kotlin.sequences.SequencesKt___SequencesKt$zip$1: kotlin.sequences.SequencesKt___SequencesKt$zip$1 INSTANCE
com.getkeepsafe.relinker.ReLinkerInstance$1: com.getkeepsafe.relinker.ReLinker$LoadListener val$listener
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$2
androidx.core.R$id: int text2
androidx.window.WindowProperties: androidx.window.WindowProperties INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object L$1
io.flutter.plugin.platform.PlatformViewsController: java.lang.String TAG
kotlin.io.LinesSequence$iterator$1: kotlin.io.LinesSequence this$0
androidx.core.net.MailTo: java.lang.String CC
kotlin.ranges.ClosedDoubleRange: double _start
androidx.fragment.app.FragmentContainerView: android.view.View$OnApplyWindowInsetsListener applyWindowInsetsListener
kotlinx.coroutines.BuildersKt__Builders_commonKt: int UNDECIDED
androidx.fragment.app.Fragment$9: java.util.concurrent.atomic.AtomicReference val$ref
androidx.fragment.R$animator: int fragment_open_exit
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentInfo
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: long J$1
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName
androidx.window.area.WindowAreaCapability: androidx.window.area.WindowAreaCapability$Operation operation
kotlinx.coroutines.flow.SharedFlowImpl: int queueSize
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mStreams
androidx.core.graphics.Insets: int right
kotlin.text.RegexOption: kotlin.text.RegexOption UNIX_LINES
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 regFunc
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlin.jvm.functions.Function4 $transform$inlined
androidx.core.view.PointerIconCompat: int TYPE_GRABBING
androidx.core.provider.FontsContractCompat$FontInfo: int mWeight
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mExitTransitionCallback
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_VM_SERVICE_PORT
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable cancelCause
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1 INSTANCE
io.flutter.plugin.common.StandardMessageCodec: byte BIGINT
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
androidx.core.view.PointerIconCompat: android.view.PointerIcon mPointerIcon
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$OnPreAttachedListener mSavedStateAttachListener
androidx.core.graphics.drawable.IconCompat: float DEFAULT_VIEW_PORT_SCALE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
androidx.core.location.LocationCompat: java.lang.Integer sHasBearingAccuracyMask
androidx.lifecycle.LifecycleKt$eventFlow$1: androidx.lifecycle.Lifecycle $this_eventFlow
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: kotlin.sequences.Sequence $this_sortedWith
androidx.fragment.app.Fragment$9: androidx.activity.result.ActivityResultCallback val$callback
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentText
androidx.core.view.PointerIconCompat: int TYPE_DEFAULT
kotlin.io.encoding.Base64Kt: int[] base64DecodeMap
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol NO_CLOSE_CAUSE
androidx.lifecycle.LegacySavedStateHandleController: androidx.lifecycle.LegacySavedStateHandleController INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$1
androidx.fragment.app.FragmentManager$PopBackStackState: java.lang.String mName
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
androidx.collection.LongSparseArray: int mSize
androidx.annotation.VisibleForTesting: int NONE
androidx.collection.LruCache: int size
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: java.lang.Object result
androidx.core.view.InputDeviceCompat: int SOURCE_KEYBOARD
androidx.fragment.app.Fragment: int mFragmentId
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName
com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry: java.util.zip.ZipEntry zipEntry
kotlinx.coroutines.debug.internal.DebuggerInfo: long sequenceNumber
androidx.fragment.app.DialogFragment: androidx.lifecycle.Observer mObserver
androidx.loader.R$attr: int font
androidx.viewpager.R$layout: int notification_template_custom_big
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
androidx.window.area.WindowAreaCapability$Operation: java.lang.String description
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
androidx.fragment.app.ListFragment$1: androidx.fragment.app.ListFragment this$0
androidx.fragment.app.Fragment: android.os.Bundle mArguments
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1 this$0
androidx.concurrent.futures.AbstractResolvableFuture$Listener: androidx.concurrent.futures.AbstractResolvableFuture$Listener next
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: int label
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1 INSTANCE
androidx.core.text.BidiFormatter: char LRE
androidx.annotation.Dimension$Companion: androidx.annotation.Dimension$Companion $$INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: int label
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion INSTANCE
androidx.core.view.SoftwareKeyboardControllerCompat: androidx.core.view.SoftwareKeyboardControllerCompat$Impl mImpl
androidx.core.app.NotificationChannelCompat: java.lang.String mGroupId
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2 this$0
kotlin.collections.ArrayDeque: kotlin.collections.ArrayDeque$Companion Companion
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_TOP
io.flutter.view.AccessibilityBridge: int ACTION_SHOW_ON_SCREEN
io.flutter.view.AccessibilityBridge: boolean accessibleNavigation
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$3
androidx.lifecycle.DefaultLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver
kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.jvm.functions.Function1 $resumeWith
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: java.lang.Object result
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: androidx.window.extensions.area.WindowAreaComponent windowAreaComponent
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_LIBRARY
androidx.core.util.SparseArrayKt$keyIterator$1: android.util.SparseArray $this_keyIterator
androidx.core.app.NotificationCompat$Builder: android.os.Bundle mExtras
androidx.core.content.pm.ShortcutInfoCompat: android.content.Context mContext
kotlin.time.DurationUnit: kotlin.time.DurationUnit HOURS
androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger messenger
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String ADD_FONT_FROM_BUFFER_METHOD
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
androidx.core.R$id: int accessibility_custom_action_26
androidx.core.app.JobIntentService$WorkEnqueuer: android.content.ComponentName mComponentName
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: int label
androidx.window.embedding.SplitController$splitInfoList$1: android.app.Activity $activity
androidx.lifecycle.viewmodel.CreationExtras$Empty: androidx.lifecycle.viewmodel.CreationExtras$Empty INSTANCE
androidx.profileinstaller.ProfileInstaller: int RESULT_INSTALL_SUCCESS
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: java.io.File[] fileList
androidx.core.widget.PopupWindowCompat: boolean sGetWindowLayoutTypeMethodAttempted
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.util.Enumeration $this_iterator
kotlinx.coroutines.ThreadState: kotlinx.coroutines.Job job
kotlin.jvm.internal.PrimitiveSpreadBuilder: int position
androidx.loader.R$dimen: int notification_subtext_size
androidx.savedstate.Recreator: java.lang.String CLASSES_KEY
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER
androidx.loader.content.CursorLoader: java.lang.String[] mSelectionArgs
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1
kotlinx.coroutines.channels.WaiterEB: kotlinx.coroutines.Waiter waiter
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: char[] $this_asList
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status RUNNING
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
androidx.core.view.HapticFeedbackConstantsCompat: int FLAG_IGNORE_VIEW_SETTING
androidx.profileinstaller.ProfileVersion: byte[] V015_S
android.support.v4.os.IResultReceiver2: java.lang.String DESCRIPTOR
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $ticker
androidx.window.embedding.SplitAttributesCalculatorParams: androidx.window.layout.WindowLayoutInfo parentWindowLayoutInfo
androidx.core.util.Pools$SynchronizedPool: java.lang.Object lock
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchStrategy
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mEnterTransitionCallback
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $transform$inlined$1
androidx.core.graphics.drawable.IconCompat: float ADAPTIVE_ICON_INSET_FACTOR
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object L$1
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked MARKED_NULL
androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
androidx.viewpager.R$drawable: int notification_bg
android.support.v4.os.IResultReceiver2$Stub: int TRANSACTION_send
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
kotlin.text.DelimitedRangesSequence: int startIndex
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks callback
androidx.fragment.app.FragmentTransitionCompat21$3: androidx.fragment.app.FragmentTransitionCompat21 this$0
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
io.flutter.embedding.android.FlutterView$4: java.lang.Runnable val$onDone
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_drop$inlined
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol NO_OWNER
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.viewpager.widget.ViewPager$LayoutParams: int childIndex
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0
androidx.core.view.MenuItemCompat: java.lang.String TAG
androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE_ARRAY
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean shouldAttachEngineToActivity
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: int label
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextPaint mPaint
androidx.window.embedding.EmbeddingAspectRatio: androidx.window.embedding.EmbeddingAspectRatio ALWAYS_DISALLOW
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_USE_TEST_FONTS
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
androidx.core.widget.CompoundButtonCompat: java.lang.String TAG
androidx.core.content.PackageManagerCompat: java.lang.String ACTION_PERMISSION_REVOCATION_SETTINGS
kotlinx.coroutines.CancellableContinuationImplKt: int INDEX_MASK
androidx.lifecycle.viewmodel.ViewModelInitializer: java.lang.Class clazz
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryOwner owner
androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object lastConflatedElement
kotlin.text.Charsets: java.nio.charset.Charset UTF_8
androidx.loader.R$attr: int fontVariationSettings
androidx.core.widget.NestedScrollView: float SCROLL_FRICTION
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation: androidx.fragment.app.Fragment expectedParentFragment
androidx.core.view.ViewPropertyAnimatorCompat$1: android.view.View val$view
io.flutter.embedding.engine.systemchannels.BackGestureChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_OUT
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int $i
androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SKIA_ALLOWLIST
androidx.loader.R$styleable: int FontFamily_fontProviderAuthority
androidx.window.embedding.SplitRule: androidx.window.embedding.EmbeddingAspectRatio SPLIT_MAX_ASPECT_RATIO_PORTRAIT_DEFAULT
kotlin.io.encoding.DecodeInputStream: byte[] symbolBuffer
androidx.core.view.contentcapture.ContentCaptureSessionCompat: java.lang.String KEY_VIEW_TREE_APPEARED
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: kotlin.jvm.functions.Function0 $condition
androidx.profileinstaller.DeviceProfileWriter: boolean mDeviceSupportsAotProfile
kotlin.jvm.internal.ArrayCharIterator: int index
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_ALWAYS
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlinx.coroutines.flow.FlowCollector $downstream
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: android.view.View $viewToAnimate
androidx.window.embedding.SplitAttributes$LayoutDirection: androidx.window.embedding.SplitAttributes$LayoutDirection$Companion Companion
androidx.lifecycle.EmittedSource: androidx.lifecycle.LiveData source
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
androidx.core.app.JobIntentService: boolean DEBUG
androidx.lifecycle.MethodCallsLogger: java.util.Map calledMethods
androidx.core.app.NotificationCompat: int FLAG_BUBBLE
kotlin.collections.builders.MapBuilder$Itr: int index
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sExtrasField
androidx.core.R$styleable: int GradientColor_android_gradientRadius
androidx.fragment.app.Fragment: boolean mHiddenChanged
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CombinedContext$Serialized$Companion Companion
io.flutter.embedding.engine.renderer.FlutterRenderer$2: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int MAX_CAPACITY_MASK
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
kotlinx.coroutines.AwaitKt$joinAll$1: int I$0
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue
androidx.core.provider.FontRequestWorker$4: java.lang.String val$id
androidx.loader.content.ModernAsyncTask: java.util.concurrent.BlockingQueue sPoolWorkQueue
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
kotlin.text.Typography: char dagger
androidx.window.area.WindowAreaControllerImpl: java.util.HashMap currentWindowAreaInfoMap
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
androidx.collection.SimpleArrayMap: boolean CONCURRENT_MODIFICATION_EXCEPTIONS
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
androidx.core.content.PackageManagerCompat: java.lang.String LOG_TAG
kotlin.sequences.TransformingIndexedSequence$iterator$1: kotlin.sequences.TransformingIndexedSequence this$0
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener
kotlinx.coroutines.channels.Channel$Factory: int RENDEZVOUS
androidx.window.reflection.WindowExtensionsConstants: java.lang.String EXTENSION_WINDOW_AREA_PRESENTATION_CLASS
androidx.core.view.DifferentialMotionFlingController: float mLastFlingVelocity
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_NEVER
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.core.provider.FontRequest: java.util.List mCertificates
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.Person mPerson
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: int label
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_WITH_TEXT
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.EmbeddingAspectRatio maxAspectRatioInLandscape
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: int label
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterViewDelegate delegate
androidx.core.text.BidiFormatter: int DIR_RTL
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
androidx.window.embedding.RuleController: androidx.window.embedding.RuleController$Companion Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$1
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 transformer
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
kotlin.jvm.internal.TypeReference: kotlin.reflect.KClassifier classifier
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
androidx.lifecycle.ComputableLiveData: java.lang.Runnable refreshRunnable
kotlin.io.FileTreeWalk$FileTreeWalkIterator: kotlin.io.FileTreeWalk this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FLAG_PREFETCH_ANCESTORS
kotlinx.coroutines.debug.internal.Marked: java.lang.Object ref
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD
androidx.window.core.ConsumerAdapter$createSubscriptionNoActivity$1: java.lang.Object $javaConsumer
kotlin.math.Constants: double taylor_2_bound
androidx.core.graphics.WeightTypefaceApi26: java.lang.reflect.Field sNativeInstance
androidx.loader.R$styleable: int ColorStateListItem_lStar
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.channels.ReceiveChannel $second
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: kotlinx.coroutines.CancellableContinuationImpl continuation
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object L$0
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
androidx.core.view.ViewConfigurationCompat: int NO_FLING_MIN_VELOCITY
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: int label
androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: kotlin.sequences.Sequence $this_zipWithNext
androidx.core.view.ActionProvider: android.content.Context mContext
androidx.core.content.IntentSanitizer$Builder: boolean mAllowSomeComponents
androidx.core.app.ActivityRecreator: java.lang.Class activityThreadClass
kotlin.jvm.internal.ClassReference: kotlin.jvm.internal.ClassReference$Companion Companion
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1: android.view.View $viewToAnimate
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
kotlin.jvm.internal.IntCompanionObject: kotlin.jvm.internal.IntCompanionObject INSTANCE
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1 this$0
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo mTempItem
androidx.window.core.AndroidLogger: androidx.window.core.AndroidLogger INSTANCE
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mBigContentView
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_ALREADY_SELECTED
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object L$0
androidx.fragment.app.Fragment$SavedState: android.os.Bundle mState
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object L$0
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: kotlin.jvm.internal.Ref$IntRef $index
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: int label
kotlinx.coroutines.internal.Symbol: java.lang.String symbol
androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled
androidx.core.text.BidiFormatter: int DEFAULT_FLAGS
com.getkeepsafe.relinker.elf.Elf$DynamicStructure: long val
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampUpDuration
androidx.core.service.quicksettings.PendingIntentActivityWrapper: int mFlags
androidx.window.layout.util.DisplayCompatHelperApi28: androidx.window.layout.util.DisplayCompatHelperApi28 INSTANCE
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
androidx.viewpager.widget.PagerTabStrip: android.graphics.Paint mTabPaint
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.plugin.common.BinaryMessenger messenger
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection TOP_DOWN
io.flutter.embedding.engine.dart.PlatformTaskQueue: android.os.Handler handler
androidx.core.widget.NestedScrollView: float INFLEXION
kotlin.text.DelimitedRangesSequence$iterator$1: int nextState
kotlin.collections.ArrayDeque: int maxArraySize
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int REMOVE
androidx.lifecycle.Api26Impl: androidx.lifecycle.Api26Impl INSTANCE
androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle lifecycle
androidx.loader.R$color: int notification_icon_bg_color
androidx.core.text.BidiFormatter$Builder: int mFlags
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.jvm.functions.Function0 $defaultValue
kotlin.UByte: int SIZE_BYTES
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_SOFTWARE_RENDERING
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
kotlinx.coroutines.sync.MutexKt: int TRY_LOCK_ALREADY_LOCKED_BY_OWNER
androidx.viewpager.widget.ViewPager: boolean mPopulatePending
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: kotlin.jvm.functions.Function3 $onError
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object L$0
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.customview.R$drawable: int notification_template_icon_bg
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long terminationDeadline
androidx.fragment.app.BackStackRecord: java.lang.String TAG
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: int label
kotlin.UInt: int MAX_VALUE
kotlin.jvm.internal.TypeReference: int flags
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl this$0
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_CACHE_SKSL
androidx.activity.OnBackPressedDispatcher: java.lang.Runnable fallbackOnBackPressed
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController$Companion Companion
androidx.core.provider.SelfDestructiveThread$2: androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply
androidx.core.os.BuildCompat: int R_EXTENSION_INT
androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader
androidx.customview.R$styleable: int GradientColor_android_startColor
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: kotlin.jvm.functions.Function2 $block$inlined
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
androidx.viewpager.R$attr: int fontProviderPackage
kotlin.sequences.SequencesKt___SequencesKt$minus$4: kotlin.sequences.Sequence $this_minus
androidx.core.app.NotificationChannelGroupCompat: java.lang.String mId
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: androidx.core.view.WindowInsetsAnimationCompat val$anim
kotlinx.coroutines.flow.FlowKt: java.lang.String DEFAULT_CONCURRENCY_PROPERTY_NAME
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object result
androidx.window.layout.SafeWindowLayoutComponentProvider: androidx.window.SafeWindowExtensionsProvider safeWindowExtensionsProvider
kotlinx.coroutines.future.FutureKt$asDeferred$2: kotlinx.coroutines.CompletableDeferred $result
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList parentStates
androidx.core.app.NotificationManagerCompat: java.lang.String TAG
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_AOT_SHARED_LIBRARY_NAME
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG
io.flutter.plugin.editing.FlutterTextUtils: int LINE_FEED
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
kotlinx.coroutines.channels.BufferedChannel$onSend$1: kotlinx.coroutines.channels.BufferedChannel$onSend$1 INSTANCE
androidx.core.view.WindowInsetsCompat$Type: int SYSTEM_GESTURES
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$1
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list
kotlin.properties.NotNullVar: java.lang.Object value
kotlin.jvm.internal.ArrayLongIterator: long[] array
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: java.lang.Integer sdkVersion
androidx.window.R$styleable: int SplitPlaceholderRule_stickyPlaceholder
androidx.core.R$styleable: int[] FontFamilyFont
androidx.core.widget.TextViewKt$addTextChangedListener$1: androidx.core.widget.TextViewKt$addTextChangedListener$1 INSTANCE
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String BRIEFLY_SHOW_PASSWORD
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity2ParamsMethod
androidx.viewpager.R$styleable: int GradientColor_android_centerY
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.viewpager.R$styleable: int ColorStateListItem_android_color
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: java.lang.Object $value$inlined
androidx.core.app.ServiceCompat: int FOREGROUND_SERVICE_TYPE_ALLOWED_SINCE_Q
androidx.core.app.NotificationCompat$WearableExtender: android.app.PendingIntent mDisplayIntent
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: int[] $this_withIndex
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_UNAVAILABLE
androidx.core.location.GpsStatusWrapper: int QZSS_SVID_MIN
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: androidx.window.area.WindowAreaControllerImpl this$0
androidx.viewpager.widget.ViewPager: int mChildHeightMeasureSpec
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidthDp
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_SEMANTIC_ACTION
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_FORCE_ASCII
androidx.lifecycle.Lifecycling: java.util.Map callbackCache
androidx.fragment.app.DialogFragment: java.lang.String SAVED_CANCELABLE
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.app.NotificationManagerCompat: java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS
kotlin.comparisons.ReversedComparator: java.util.Comparator comparator
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String schedulerName
androidx.fragment.app.FragmentManager: java.lang.String SAVED_STATE_KEY
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality$Companion Companion
androidx.core.app.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mLaunchWakeLock
androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity
androidx.core.view.ViewCompat: int LAYER_TYPE_HARDWARE
androidx.loader.content.ModernAsyncTask$2: androidx.loader.content.ModernAsyncTask this$0
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
androidx.core.app.JobIntentService$WorkEnqueuer: int mJobId
kotlin.UByteArray: byte[] storage
androidx.core.app.RemoteInput$Builder: java.lang.String mResultKey
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: java.lang.String TAG
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: long offset
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_INITIAL_ROUTE
androidx.core.graphics.TypefaceCompatBaseImpl: int INVALID_KEY
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: int mTrackingFlags
androidx.core.location.LocationManagerCompat$GpsStatusTransport: android.location.LocationManager mLocationManager
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object L$1
androidx.activity.EdgeToEdge: androidx.activity.EdgeToEdgeImpl Impl
androidx.core.view.WindowInsetsCompat$Impl20: android.view.WindowInsets mPlatformInsets
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: kotlin.jvm.internal.Ref$ObjectRef $result
androidx.core.R$id: int line3
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlinx.coroutines.flow.Flow[] $flows
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mCommitRunnables
androidx.loader.R$layout: int notification_template_part_chronometer
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$2
androidx.core.R$dimen: int notification_top_pad_large_text
androidx.core.location.GnssStatusCompat: int CONSTELLATION_GPS
com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.ElfParser parser
io.flutter.embedding.android.KeyboardMap: long kUnicodePlane
androidx.core.content.res.ViewingConditions: float mNcb
androidx.customview.R$styleable: int ColorStateListItem_alpha
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
androidx.fragment.app.DialogFragment: boolean mCancelable
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: int TRANSACTION_isPermissionRevocationEnabledForApp
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$1
androidx.lifecycle.BlockRunner$maybeRun$1: androidx.lifecycle.BlockRunner this$0
kotlinx.coroutines.flow.ThrowingCollector: java.lang.Throwable e
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object L$0
androidx.core.R$id: int accessibility_custom_action_22
io.flutter.plugin.editing.SpellCheckPlugin: int MAX_SPELL_CHECK_SUGGESTIONS
androidx.core.R$id: int title
androidx.core.R$drawable: int notification_action_background
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object result
androidx.core.R$styleable: int GradientColor_android_type
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext$plus$1 INSTANCE
androidx.core.graphics.WeightTypefaceApi14: java.lang.String NATIVE_INSTANCE_FIELD
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object result
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AUTOMATICALLY_REGISTER_PLUGINS_KEY
androidx.core.app.RemoteInput: int EDIT_CHOICES_BEFORE_SENDING_ENABLED
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int TRACKPAD
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean destroyEngineWithFragment
androidx.core.provider.FontRequest: java.lang.String mIdentifier
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_CANCELLATION_STARTED
androidx.customview.R$style: int TextAppearance_Compat_Notification
androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.LifecycleEventObserver mObserver
androidx.fragment.app.DialogFragment: java.lang.String SAVED_DIALOG_STATE_TAG
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: java.lang.String mParticipant
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object L$0
androidx.fragment.R$animator: int fragment_open_enter
kotlin.UShort: short MIN_VALUE
kotlin.sequences.TakeWhileSequence$iterator$1: java.util.Iterator iterator
androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: byte[] $this_withIndex
kotlin.concurrent.TimersKt$timerTask$1: kotlin.jvm.functions.Function1 $action
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
androidx.customview.R$styleable: int[] GradientColorItem
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$1
androidx.core.graphics.drawable.IconCompat: int TYPE_URI
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
io.flutter.plugin.platform.VirtualDisplayController$2: android.view.View val$embeddedView
io.flutter.embedding.android.FlutterFragment: java.lang.String TAG
androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle
kotlin.sequences.DropWhileSequence: kotlin.jvm.functions.Function1 predicate
kotlin.random.KotlinRandom: kotlin.random.Random impl
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: int mSource
io.flutter.plugin.editing.TextEditingDelta: int deltaEnd
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig
androidx.customview.R$drawable: int notification_bg_low_pressed
androidx.profileinstaller.ProfileTranscoder: byte[] MAGIC_PROF
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String ISLAMIC_CIVIL
androidx.window.java.embedding.SplitControllerCallbackAdapter: androidx.window.embedding.SplitController controller
androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1$1: androidx.window.extensions.core.util.function.Consumer $rearDisplayListener
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1: kotlin.jvm.functions.Function4 $beforeTextChanged
androidx.core.provider.DocumentsContractCompat$DocumentCompat: int FLAG_VIRTUAL_DOCUMENT
androidx.fragment.app.SpecialEffectsController$Effect: boolean isCancelled
androidx.core.graphics.WeightTypefaceApi21: java.lang.reflect.Method sNativeCreateWeightAlias
androidx.loader.content.ModernAsyncTask$WorkerRunnable: java.lang.Object[] mParams
androidx.fragment.app.FragmentStateManager$1: android.view.View val$fragmentView
androidx.fragment.app.strictmode.WrongFragmentContainerViolation: android.view.ViewGroup container
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
io.flutter.embedding.android.AndroidTouchProcessor: int IMPLICIT_VIEW_ID
kotlinx.coroutines.channels.ChannelResult: java.lang.Object holder
androidx.core.content.IntentSanitizer$Builder: int mAllowedFlags
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: androidx.core.view.accessibility.AccessibilityNodeProviderCompat mCompat
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: kotlinx.coroutines.channels.ReceiveChannel $this_broadcast
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind AT_LEAST_ONCE
com.example.wellnesshub.R$drawable: int launch_background
kotlin.math.Constants: double upper_taylor_n_bound
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
kotlin.reflect.TypesJVMKt$WhenMappings: int[] $EnumSwitchMapping$0
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String TAG
androidx.core.graphics.drawable.IconCompat: float KEY_SHADOW_OFFSET_FACTOR
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_BUFFERED
androidx.window.layout.util.ContextCompatHelperApi24: androidx.window.layout.util.ContextCompatHelperApi24 INSTANCE
androidx.core.view.MotionEventCompat: int AXIS_X
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
kotlin.io.LineReader: java.lang.StringBuilder sb
io.flutter.plugin.platform.PlatformViewWrapper$1: io.flutter.plugin.platform.PlatformViewWrapper this$0
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner owner
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: kotlin.jvm.functions.Function4 $transform$inlined
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: android.app.Application application
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object L$0
androidx.window.core.SpecificationComputer: androidx.window.core.SpecificationComputer$Companion Companion
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlinx.coroutines.flow.Flow[] $flows
androidx.core.app.NotificationCompat$BigPictureStyle: java.lang.String TEMPLATE_CLASS_NAME
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction SKIP
kotlin.collections.AbstractList$SubList: int fromIndex
androidx.core.text.util.LocalePreferences: java.lang.String TAG
kotlin.ranges.ULongProgressionIterator: long next
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousNodeId
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_NONE
io.flutter.plugin.platform.PlatformViewsController: boolean enableImageRenderTarget
kotlin.jvm.internal.ArrayCharIterator: char[] array
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$sharedElementsIn
androidx.core.app.NotificationChannelCompat: java.lang.String mId
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation: boolean wasInterrupted
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: java.lang.Integer sdkVersion
androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.String TAG
kotlinx.coroutines.flow.StartedLazily$command$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
kotlin.time.TestTimeSource: long reading
androidx.customview.R$style: int Widget_Compat_NotificationActionContainer
androidx.fragment.app.BackStackRecordState: java.lang.String TAG
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_SELECTED_STATE
com.getkeepsafe.relinker.elf.Elf$ProgramHeader: long vaddr
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_CONTENT_INTENT_LAUNCHES_ACTIVITY
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_DOUBLE_ARROW
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: int label
androidx.core.content.UnusedAppRestrictionsConstants: int API_31
kotlinx.coroutines.flow.internal.NopCollector: kotlinx.coroutines.flow.internal.NopCollector INSTANCE
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object L$0
androidx.profileinstaller.ProfileInstaller: int RESULT_BENCHMARK_OPERATION_UNKNOWN
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
androidx.loader.content.ModernAsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: java.lang.Object result
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2 this$0
io.flutter.plugin.platform.VirtualDisplayController$2: java.lang.Runnable val$onNewSizeFrameAvailable
androidx.fragment.R$animator: int fragment_fade_enter
kotlin.text.Typography: char plusMinus
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String TAG_FLUTTER_FRAGMENT
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP
androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache
androidx.core.os.PersistableBundleApi21ImplKt: androidx.core.os.PersistableBundleApi21ImplKt INSTANCE
androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0
androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection mFragments
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String U_EXTENSION_TAG
kotlinx.coroutines.sync.SemaphoreKt: int MAX_SPIN_CYCLES
androidx.core.content.UnusedAppRestrictionsConstants: int ERROR
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_retryWhen$inlined
androidx.core.widget.ContentLoadingProgressBar: boolean mDismissed
kotlinx.coroutines.internal.OnDemandAllocatingPoolKt: int IS_CLOSED_MASK
androidx.viewpager.widget.ViewPager: int DEFAULT_OFFSCREEN_PAGES
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_OBSERVATORY_PORT
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
androidx.core.content.res.ViewingConditions: float mFl
kotlin.ranges.ComparableRange: java.lang.Comparable start
kotlin.text.Typography: char cent
io.flutter.embedding.android.FlutterActivity: java.lang.String TAG
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService executorService
androidx.core.R$styleable: int FontFamily_fontProviderPackage
androidx.fragment.app.FragmentManager: boolean mDestroyed
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay DefaultDelay
androidx.core.app.NotificationCompat: java.lang.String EXTRA_COLORIZED
androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceBeginMethod
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.Object receiver
androidx.fragment.app.FragmentTransaction: int mExitAnim
kotlinx.coroutines.CompletedContinuation: java.lang.Object idempotentResume
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.String ACTION_REQUEST_PERMISSIONS
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClass
androidx.core.util.TimeUtils: int HUNDRED_DAY_FIELD_LEN
androidx.core.R$id: int tag_on_receive_content_listener
androidx.core.location.GpsStatusWrapper: android.location.GpsStatus mWrapped
kotlin.io.encoding.Base64Kt: byte[] base64EncodeMap
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: int val$animationMask
io.flutter.embedding.engine.systemchannels.SystemChannel: java.lang.String TAG
androidx.customview.R$attr: int fontProviderPackage
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String ISLAMIC
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$1
com.example.wellnesshub.R$style: int NormalTheme
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_OVERRIDE
androidx.core.graphics.drawable.IconCompat: int TYPE_BITMAP
androidx.customview.widget.ViewDragHelper: int mTouchSlop
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback onBackPressedCallback
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_STOPWATCH
androidx.viewpager.R$drawable: int notification_bg_low
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: int _size
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion INSTANCE
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1 INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
androidx.versionedparcelable.VersionedParcel: int TYPE_BINDER
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4: androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4 INSTANCE
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_REVERSE
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener mListener
androidx.core.content.FileProvider: java.lang.String[] COLUMNS
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mBigContentTitle
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent
androidx.fragment.app.FragmentTransaction: int mBreadCrumbShortTitleRes
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object L$1
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl mDifferentialMotionFlingTarget
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int PAN_ZOOM_END
androidx.core.location.GnssStatusCompat: int CONSTELLATION_UNKNOWN
androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: short[] $this_asIterable$inlined
kotlin.ranges.LongProgression: long step
androidx.fragment.app.Fragment$10: androidx.activity.result.contract.ActivityResultContract val$contract
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled
io.flutter.embedding.engine.FlutterJNI: float displayHeight
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHPAD
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat mLocusId
androidx.window.embedding.SplitAttributesCalculatorParams: boolean areDefaultConstraintsSatisfied
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: java.lang.Object mInfo
androidx.loader.R$attr: int fontProviderFetchStrategy
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: kotlin.jvm.functions.Function2 $transform
androidx.core.app.NotificationCompatBuilder: java.util.List mActionExtrasList
io.flutter.plugin.common.FlutterException: java.lang.Object details
androidx.core.location.GnssStatusCompat: int CONSTELLATION_GLONASS
androidx.core.content.IntentCompat: java.lang.String ACTION_CREATE_REMINDER
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String SATURDAY
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
kotlin.io.LineReader: boolean directEOL
kotlin.io.encoding.DecodeInputStream: byte[] singleByteBuffer
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object $initial$inlined
kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements
androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $step$inlined
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT
androidx.core.provider.SelfDestructiveThread: android.os.Handler$Callback mCallback
androidx.core.R$color: int notification_icon_bg_color
androidx.core.graphics.RegionKt$iterator$1: android.graphics.RegionIterator iterator
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: boolean isCalled
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$1: androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$1 INSTANCE
kotlin.jvm.internal.CharSpreadBuilder: char[] values
androidx.viewpager.R$drawable: int notification_action_background
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel _channel
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap extraDataMap
kotlin.reflect.WildcardTypeImpl: kotlin.reflect.WildcardTypeImpl STAR
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact REMOVING
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ConcurrentLinkedQueue queue
kotlin.sequences.DropSequence: int count
androidx.core.widget.AutoScrollHelper: float RELATIVE_UNSPECIFIED
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_STARTUP
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_WORKOUT
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String CONTENT_MIME_TYPES_KEY
androidx.annotation.RequiresOptIn$Level: androidx.annotation.RequiresOptIn$Level[] $VALUES
androidx.core.R$styleable: int FontFamilyFont_android_font
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: kotlinx.coroutines.channels.ReceiveChannel $this_drop
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest mRequest
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: long sequenceNumber
androidx.core.widget.NestedScrollView: float MAX_SCROLL_FACTOR
androidx.fragment.app.Fragment: boolean mRestored
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: androidx.core.os.ParcelableCompatCreatorCallbacks mCallbacks
androidx.core.app.ActivityRecreator: java.lang.reflect.Field tokenField
androidx.core.content.res.CamColor: float mJstar
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
androidx.core.text.util.LinkifyCompat: java.util.Comparator COMPARATOR
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.Fragment mCurrentPrimaryItem
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: kotlinx.coroutines.flow.Flow $flow2
androidx.window.embedding.EmbeddingBackend: androidx.window.embedding.EmbeddingBackend$Companion Companion
androidx.loader.R$dimen: int compat_button_inset_vertical_material
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_SURFACE_CONTROL
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
io.flutter.embedding.android.KeyData: java.lang.String TAG
androidx.loader.content.Loader: androidx.loader.content.Loader$OnLoadCompleteListener mListener
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String tooltip
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
androidx.core.os.BundleApi21ImplKt: androidx.core.os.BundleApi21ImplKt INSTANCE
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType RESOURCE_ID
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.util.List dartEntrypointArgs
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
androidx.fragment.app.DialogFragment: java.lang.String SAVED_INTERNAL_DIALOG_SHOWING
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean mIsCircular
kotlin.ranges.CharProgressionIterator: boolean hasNext
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont
androidx.window.core.Bounds: int bottom
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlin.jvm.functions.Function2 defaultAreEquivalent
androidx.profileinstaller.ProfileInstaller: java.lang.String PROFILE_META_LOCATION
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol PENDING
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SERVICE
androidx.viewpager.R$layout: int notification_template_icon_group
androidx.core.net.MailTo: java.lang.String BODY
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0
androidx.viewpager.widget.ViewPager: int mPageMargin
kotlin.time.Duration: long INFINITE
androidx.loader.R$id: int actions
androidx.core.view.ViewKt$allViews$1: int label
androidx.fragment.app.FragmentTransaction: int TRANSIT_EXIT_MASK
androidx.window.core.PredicateAdapter$BaseHandler: kotlin.reflect.KClass clazz
androidx.collection.SimpleArrayMap: int CACHE_SIZE
androidx.loader.R$dimen: int compat_button_padding_vertical_material
kotlinx.coroutines.InterruptibleKt: int WORKING
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.fragment.app.FragmentStateManager: java.lang.String SAVED_INSTANCE_STATE_KEY
androidx.loader.R$dimen: int notification_large_icon_height
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object L$0
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mAnimatingAway
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
androidx.window.embedding.ExtensionEmbeddingBackend$Api31Impl: androidx.window.embedding.ExtensionEmbeddingBackend$Api31Impl INSTANCE
androidx.fragment.app.FragmentStatePagerAdapter: int mBehavior
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object result
androidx.core.view.WindowInsetsCompat$Type: int STATUS_BARS
androidx.core.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect
kotlinx.coroutines.debug.internal.AgentInstallationType: kotlinx.coroutines.debug.internal.AgentInstallationType INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_INPUT
androidx.core.view.TreeIterator: java.util.Iterator iterator
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service service
androidx.core.app.NotificationCompat$TvExtender: java.lang.String EXTRA_CHANNEL_ID
androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle lifecycle
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object L$1
androidx.core.location.GpsStatusWrapper: int SBAS_PRN_OFFSET
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
androidx.core.text.ICUCompat: java.lang.reflect.Method sAddLikelySubtagsMethod
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence[] mRemoteInputHistory
androidx.customview.R$styleable: int GradientColor_android_centerX
androidx.core.view.MotionEventCompat: int AXIS_Z
androidx.core.widget.TextViewOnReceiveContentListener: java.lang.String LOG_TAG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: int mColumnIndex
androidx.viewpager.R$attr: int fontWeight
androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnConfigurationChangedListener
io.flutter.view.AccessibilityBridge: float SCROLL_POSITION_CAP_FOR_INFINITY
androidx.profileinstaller.ProfileInstaller: int RESULT_ALREADY_INSTALLED
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat mChannel
androidx.loader.R$layout: int notification_action_tombstone
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.window.embedding.SplitPlaceholderRule: boolean isSticky
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] SUPPORTED_ABIS
kotlinx.coroutines.channels.Channel$Factory: int UNLIMITED
androidx.core.util.SizeFCompat: float mHeight
kotlin.text.Regex$findAll$1: java.lang.CharSequence $input
kotlin.ranges.CharProgression: char first
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: int I$0
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object L$0
kotlin.io.encoding.DecodeInputStream: boolean isEOF
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: int label
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.provider.FontsContractCompat$Columns: java.lang.String RESULT_CODE
androidx.lifecycle.CoroutineLiveData$clearSource$1: int label
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: kotlin.jvm.functions.Function2 $block
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String name
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int requestBufferWidth
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2: android.view.ViewGroup $container
androidx.window.layout.WindowMetrics: androidx.core.view.WindowInsetsCompat _windowInsetsCompat
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mOriginalClickableSpanId
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $continuation$inlined
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
kotlin.jvm.internal.ArrayFloatIterator: int index
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String ALWAYS_USE_24_HOUR_FORMAT
androidx.core.R$id: int tag_state_description
kotlin.text.Regex$splitToSequence$1: int I$0
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver lifecycleObserver
androidx.core.provider.SelfDestructiveThread: java.lang.String mThreadName
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] $VALUES
kotlinx.coroutines.EventLoop_commonKt: long MS_TO_NS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: byte[] $this_asList
kotlin.text.StringsKt___StringsKt$windowedSequence$1: kotlin.text.StringsKt___StringsKt$windowedSequence$1 INSTANCE
androidx.core.graphics.PathSegment: float mEndFraction
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlinx.coroutines.flow.FlowCollector $downstream
androidx.core.location.LocationRequestCompat: int mQuality
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: kotlin.sequences.Sequence $this_asFlow$inlined
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: kotlinx.coroutines.flow.internal.ChannelFlow this$0
androidx.core.R$id: int tag_accessibility_heading
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.ExecutorService executor
androidx.core.view.PointerIconCompat: int TYPE_GRAB
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
kotlinx.coroutines.DisposeOnCompletion: kotlinx.coroutines.DisposableHandle handle
androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput
androidx.collection.SimpleArrayMap: int mBaseCacheSize
androidx.core.app.RemoteInput: java.lang.String RESULTS_CLIP_LABEL
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics: androidx.profileinstaller.ProfileInstallReceiver this$0
androidx.core.app.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mRunWakeLock
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_TEXT
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: kotlin.jvm.functions.Function1 $onResume
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object result
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_START
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter mFullyDrawnReporter
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.Continuation completion
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl cont
kotlinx.coroutines.scheduling.WorkQueueKt: long TASK_STOLEN
androidx.core.app.NotificationCompat: java.lang.String EXTRA_VERIFICATION_ICON
androidx.fragment.app.Fragment: android.view.View mView
androidx.core.app.NotificationManagerCompat: java.lang.String CHECK_OP_NO_THROW
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.lang.String TAG
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: int label
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TEXT_SCALE_FACTOR
kotlin.time.TimedValue: java.lang.Object value
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
androidx.core.location.LocationRequestCompat$Builder: long mMinUpdateIntervalMillis
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation: androidx.fragment.app.Fragment targetFragment
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat HUE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlinx.coroutines.channels.ReceiveChannel $this_distinctBy
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm
androidx.core.app.NotificationManagerCompat: int INTERRUPTION_FILTER_NONE
androidx.window.R$styleable: int SplitPlaceholderRule_animationBackgroundColor
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClass
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: kotlinx.coroutines.channels.ReceiveChannel $this_withIndex
androidx.fragment.app.FragmentPagerAdapter: int BEHAVIOR_SET_USER_VISIBLE_HINT
androidx.viewpager.widget.ViewPager: boolean USE_CACHE
androidx.lifecycle.LifecycleCoroutineScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: int label
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object internalResult
androidx.fragment.app.ListFragment: android.widget.ListAdapter mAdapter
androidx.lifecycle.LifecycleRegistry: boolean enforceMainThread
kotlinx.coroutines.JobSupportKt: int RETRY
androidx.activity.ComponentActivity$5: androidx.activity.ComponentActivity this$0
kotlinx.coroutines.DefaultExecutorKt: boolean defaultMainDelayOptIn
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int UNDEFINED
androidx.core.util.LruCacheKt$lruCache$1: androidx.core.util.LruCacheKt$lruCache$1 INSTANCE
androidx.core.app.Person: java.lang.String KEY_KEY
kotlinx.coroutines.stream.StreamFlow: java.util.stream.Stream stream
androidx.core.view.DragAndDropPermissionsCompat: android.view.DragAndDropPermissions mDragAndDropPermissions
kotlin.text.DelimitedRangesSequence$iterator$1: int counter
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToName
androidx.customview.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_FLUTTER_ASSETS_DIR
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_DATA_MIME_TYPE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_INT
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: java.lang.CharSequence $this_asSequence$inlined
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
kotlin.io.FileTreeWalk$WalkState: java.io.File root
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object result
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGING_STYLE_USER
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object result
androidx.lifecycle.SavedStateHandle$SavingStateLiveData: java.lang.String key
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int corePoolSize
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
io.flutter.FlutterInjector$Builder: java.util.concurrent.ExecutorService executorService
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPlaceholderRule$Builder: java.util.Set filters
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_ROW_INT
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL
androidx.core.app.NotificationCompatJellybean: boolean sExtrasFieldAccessFailed
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: short[] $this_asList
androidx.activity.SystemBarStyle$Companion$light$1: androidx.activity.SystemBarStyle$Companion$light$1 INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
androidx.viewpager.R$id: int action_text
androidx.core.app.RemoteInput$Builder: android.os.Bundle mExtras
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int $n
androidx.window.reflection.WindowExtensionsConstants: java.lang.String JAVA_CONSUMER
androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssStatusListeners
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0
androidx.loader.R$dimen: int notification_right_icon_size
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$3
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING
androidx.core.graphics.TypefaceCompatBaseImpl: java.util.concurrent.ConcurrentHashMap mFontFamilies
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$State finalState
androidx.core.view.PointerIconCompat: int TYPE_HORIZONTAL_DOUBLE_ARROW
androidx.core.view.ViewKt$ancestors$1: androidx.core.view.ViewKt$ancestors$1 INSTANCE
androidx.core.R$id: int accessibility_custom_action_13
androidx.viewpager.widget.ViewPager: boolean mCalledSuper
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SYSTRACE
io.flutter.Log: int WARN
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: java.lang.String mimeType
androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: java.lang.String schedulerName
androidx.core.R$id: int line1
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: int label
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object L$1
androidx.core.view.TreeIterator: java.util.List stack
androidx.core.text.util.FindAddress: int MAX_ADDRESS_WORDS
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: kotlin.sequences.SequencesKt__SequencesKt$flatten$1 INSTANCE
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kKeyboard
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.Window mWindow
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher
androidx.core.widget.NestedScrollView: int mMaximumVelocity
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequest val$request
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.String DEFAULT_FAMILY
androidx.core.app.PictureInPictureModeChangedInfo: android.content.res.Configuration newConfiguration
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.Fragment fragment
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String CONTENT_SELECTION_END_KEY
androidx.viewpager.widget.ViewPager: float mLastMotionY
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object L$0
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter: androidx.core.view.OnReceiveContentListener mJetpackListener
androidx.window.core.ConsumerAdapter$createSubscription$1: java.lang.Object $javaConsumer
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.Observer $observer
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1: androidx.window.SafeWindowExtensionsProvider this$0
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport$Finishing state
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_VM_SNAPSHOT_DATA
kotlin.UInt: int SIZE_BITS
androidx.core.view.WindowInsetsControllerCompat$Impl30: android.view.Window mWindow
androidx.core.content.res.ResourcesCompat: int ID_NULL
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE
androidx.core.content.res.ViewingConditions: float[] mRgbD
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed
io.flutter.embedding.android.AndroidTouchProcessor: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $VALUES
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mRootViewVisibleInsets
androidx.core.app.ShareCompat$IntentBuilder: android.content.Context mContext
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.CompletedContinuation: java.lang.Object result
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.engine.FlutterShellArgs shellArgs
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: kotlinx.coroutines.channels.SendChannel $this_sendBlocking
androidx.window.embedding.SplitController$splitInfoList$1: androidx.window.embedding.SplitController this$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: int height
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$0
androidx.window.layout.util.ContextCompatHelperApi30: androidx.window.layout.util.ContextCompatHelperApi30 INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService
androidx.core.graphics.WeightTypefaceApi26: java.lang.String NATIVE_INSTANCE_FIELD
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$3
kotlinx.coroutines.GlobalScope: kotlinx.coroutines.GlobalScope INSTANCE
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.RemoteInput mRemoteInput
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalLeft
androidx.versionedparcelable.VersionedParcel: int EX_NULL_POINTER
kotlinx.coroutines.JobSupport$onAwaitInternal$1: kotlinx.coroutines.JobSupport$onAwaitInternal$1 INSTANCE
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object L$1
androidx.core.app.NotificationCompat$TvExtender: android.app.PendingIntent mDeleteIntent
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TAG
io.flutter.plugin.platform.PlatformViewsController: boolean enableSurfaceProducerRenderTarget
androidx.customview.R$styleable: int GradientColorItem_android_offset
androidx.core.app.NotificationCompat$WearableExtender: android.graphics.Bitmap mBackground
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho
kotlinx.coroutines.scheduling.TasksKt: int TASK_NON_BLOCKING
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed failed
kotlin.time.DurationUnitKt__DurationUnitKt$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_OFF
androidx.core.location.LocationCompat: java.lang.String EXTRA_BEARING_ACCURACY
androidx.core.content.pm.ShortcutXmlParser: java.lang.String TAG_SHORTCUT
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_DIV
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: int label
androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_DATA
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String THURSDAY
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String CONTENT_MIME_TYPES_INTEROP_KEY
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object L$0
androidx.viewpager.widget.PagerTabStrip: boolean mDrawFullUnderlineSet
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
androidx.core.app.NotificationCompatJellybean: java.lang.String EXTRA_DATA_ONLY_REMOTE_INPUTS
android.support.v4.os.ResultReceiver: android.support.v4.os.IResultReceiver mReceiver
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat PLUS
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.sequences.Sequence $this_runningReduce
kotlin.collections.builders.MapBuilder$EntryRef: kotlin.collections.builders.MapBuilder map
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$1
kotlin.collections.builders.MapBuilder: int length
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean enableCreationStackTraces
androidx.fragment.app.FragmentManager$PopBackStackState: int mId
androidx.fragment.app.FragmentState: int mTargetRequestCode
kotlinx.coroutines.channels.ConflatedBufferedChannel: int capacity
androidx.core.view.MotionEventCompat: int ACTION_MASK
androidx.core.text.BidiFormatter: char RLE
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion Companion
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mExitTransition
androidx.core.util.Pair: java.lang.Object first
kotlin.ranges.LongProgression: long first
androidx.core.widget.AutoScrollHelper: int DEFAULT_MINIMUM_VELOCITY_DIPS
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlin.jvm.internal.Ref$BooleanRef $matched
androidx.lifecycle.ViewModelLazy$1: androidx.lifecycle.ViewModelLazy$1 INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
kotlin.io.LineReader: java.nio.charset.CharsetDecoder decoder
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: androidx.lifecycle.LiveData $this_asFlow
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_COLOR
io.flutter.Build$API_LEVELS: int API_30
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: android.view.KeyEvent keyEvent
androidx.core.app.NotificationManagerCompat$NotifyTask: android.app.Notification notif
kotlin.jvm.internal.ByteCompanionObject: byte MIN_VALUE
androidx.profileinstaller.ProfileVerifier$Cache: long mInstalledCurrentProfileSize
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mDataDirPath
kotlin.sequences.TakeSequence$iterator$1: java.util.Iterator iterator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_ACCESSIBILITY
androidx.fragment.app.ListFragment: android.view.View mEmptyView
androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT
kotlinx.coroutines.debug.internal.HashedWeakRef: int hash
io.flutter.plugin.editing.FlutterTextUtils: int CARRIAGE_RETURN
androidx.core.app.RemoteInput: int EDIT_CHOICES_BEFORE_SENDING_DISABLED
androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.animation.Interpolator SHOW_IME_INTERPOLATOR
androidx.window.reflection.ReflectionUtils: androidx.window.reflection.ReflectionUtils INSTANCE
androidx.viewpager.widget.ViewPager: float mInitialMotionX
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: int label
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: androidx.lifecycle.Lifecycle $this_whenStateAtLeast
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent[] mIntents
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.android.FlutterView this$0
kotlin.ranges.IntProgression: int last
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.jvm.functions.Function2 $transform
com.getkeepsafe.relinker.elf.Elf$DynamicStructure: long tag
androidx.core.util.PatternsCompat: java.lang.String EMAIL_CHAR
androidx.core.content.res.ResourcesCompat: java.lang.String TAG
kotlin.SynchronizedLazyImpl: java.lang.Object lock
androidx.annotation.Dimension: int SP
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStopTime
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object owner
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlinx.coroutines.flow.Flow[] $flowArray
androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor
androidx.lifecycle.EmittedSource$disposeNow$2: androidx.lifecycle.EmittedSource this$0
androidx.core.view.inputmethod.InputConnectionCompat$1: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: kotlin.jvm.functions.Function2 $block
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampDownDuration
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$1
androidx.core.location.GpsStatusWrapper: int QZSS_SVID_MAX
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_FADE
kotlin.jvm.internal.CharCompanionObject: char MIN_LOW_SURROGATE
io.flutter.embedding.engine.loader.ResourceExtractor: java.util.HashSet mResources
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_PARAGRAPH
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult SKIP_SUBTREE
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object L$0
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: kotlin.jvm.functions.Function1 $block
androidx.core.view.InputDeviceCompat: int SOURCE_GAMEPAD
androidx.window.WindowProperties: java.lang.String PROPERTY_COMPAT_ALLOW_IGNORING_ORIENTATION_REQUEST_WHEN_LOOP_DETECTED
androidx.core.app.NotificationCompat$Builder: androidx.core.content.LocusIdCompat mLocusId
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: kotlinx.coroutines.flow.SubscribedSharedFlow this$0
kotlinx.coroutines.DispatchedTaskKt: int MODE_UNINITIALIZED
androidx.core.view.WindowInsetsCompat$Type: int FIRST
kotlin.sequences.DistinctSequence: kotlin.jvm.functions.Function1 keySelector
kotlin.text.Regex$Serialized: kotlin.text.Regex$Serialized$Companion Companion
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: int label
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2: androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect this$0
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitRule$FinishBehavior finishSecondaryWithPrimary
androidx.collection.LruCache: int missCount
androidx.fragment.app.FragmentViewLifecycleOwner: java.lang.Runnable mRestoreViewSavedStateRunnable
androidx.core.app.FrameMetricsAggregator: int EVERY_DURATION
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.LiveData $this_asFlow
androidx.viewpager.widget.ViewPager: int mDefaultGutterSize
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: int label
androidx.concurrent.futures.DirectExecutor: androidx.concurrent.futures.DirectExecutor[] $VALUES
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: byte[] $this_asList
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: int label
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder mRemote
androidx.core.app.FrameMetricsAggregator: int LAST_INDEX
androidx.core.internal.view.SupportMenu: int CATEGORY_SHIFT
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String PLATFORM_BRIGHTNESS
androidx.core.R$drawable: int notification_tile_bg
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: kotlin.reflect.KClass $klass$inlined
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String ACTION_INSTALL_SHORTCUT
androidx.lifecycle.ViewModelLazy: kotlin.jvm.functions.Function0 extrasProducer
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelsKt: java.lang.String DEFAULT_CLOSE_MESSAGE
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: long J$0
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4: androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect this$0
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention BINARY
androidx.core.view.HapticFeedbackConstantsCompat: int REJECT
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker
kotlinx.coroutines.selects.SelectImplementation: int indexInSegment
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String DEFAULT_ISOLATE_SNAPSHOT_DATA
androidx.core.content.UnusedAppRestrictionsConstants: int FEATURE_NOT_AVAILABLE
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] $VALUES
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_ERROR_CANT_WRITE_PROFILE_VERIFICATION_RESULT_CACHE_FILE
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object L$0
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.Thread lastObservedThread
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater tail$FU
androidx.core.util.SparseLongArrayKt$valueIterator$1: int index
androidx.core.os.BuildCompat$Api30Impl: androidx.core.os.BuildCompat$Api30Impl INSTANCE
androidx.fragment.app.FragmentPagerAdapter: java.lang.String TAG
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2: androidx.core.util.Consumer $listener
androidx.core.R$styleable: int GradientColor_android_centerColor
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$0
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: int label
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform: java.util.Locale mLocale
kotlinx.coroutines.flow.AbstractFlow$collect$1: int label
androidx.loader.content.ModernAsyncTask: java.util.concurrent.ThreadFactory sThreadFactory
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object L$0
androidx.viewpager.R$styleable: int[] FontFamily
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: kotlin.jvm.functions.Function0 $onBackCancelled
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol FAILED
androidx.loader.content.CursorLoader: java.lang.String[] mProjection
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method nameMethod
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator itemIterator
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] $VALUES
kotlin.SafePublicationLazyImpl: java.lang.Object final
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: com.google.android.play.core.splitinstall.SplitInstallManager splitInstallManager
kotlin.sequences.DistinctIterator: java.util.HashSet observed
kotlinx.coroutines.DispatchedTaskKt: int MODE_ATOMIC
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
androidx.activity.OnBackPressedDispatcher$5: androidx.activity.OnBackPressedDispatcher this$0
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
androidx.lifecycle.Transformations$map$1: androidx.lifecycle.MediatorLiveData $result
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_CANCELLED
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
kotlin.concurrent.ThreadsKt$thread$thread$1: kotlin.jvm.functions.Function0 $block
androidx.core.app.NotificationCompat$Builder: boolean mAllowSystemGeneratedContextualActions
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: java.util.Comparator $this_thenByDescending
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: int label
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugin.common.FlutterException: java.lang.String TAG
androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0
io.flutter.plugin.platform.PlatformViewWrapper: int prevLeft
androidx.window.area.WindowAreaController$Companion: androidx.window.area.WindowAreaControllerDecorator decorator
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DART_ENTRYPOINT_META_DATA_KEY
androidx.window.embedding.SplitController$SplitSupportStatus: androidx.window.embedding.SplitController$SplitSupportStatus SPLIT_AVAILABLE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
androidx.fragment.app.Fragment: boolean mMenuVisible
androidx.core.app.NotificationCompat: java.lang.String EXTRA_IS_GROUP_CONVERSATION
androidx.core.app.JobIntentService: java.util.HashMap sClassWorkEnqueuer
io.flutter.embedding.android.FlutterActivity: boolean hasRegisteredBackCallback
androidx.core.R$dimen: int compat_button_inset_horizontal_material
kotlin.collections.builders.SerializedCollection: kotlin.collections.builders.SerializedCollection$Companion Companion
androidx.window.embedding.SplitRule$FinishBehavior: androidx.window.embedding.SplitRule$FinishBehavior ADJACENT
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
io.flutter.embedding.android.FlutterActivity: android.window.OnBackInvokedCallback onBackInvokedCallback
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_YES
androidx.core.text.PrecomputedTextCompat: char LINE_FEED
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol IN_BUFFER
androidx.core.R$string: int call_notification_ongoing_text
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: int $size$inlined
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object block
androidx.activity.OnBackPressedDispatcher$2: androidx.activity.OnBackPressedDispatcher this$0
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$2
androidx.core.text.util.FindAddress: java.lang.String HOUSE_PRE_DELIM
androidx.loader.R$styleable: int GradientColor_android_endColor
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4: androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect this$0
androidx.core.widget.AutoScrollHelper: float DEFAULT_RELATIVE_EDGE
kotlinx.coroutines.flow.StateFlowImpl$collect$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: int label
androidx.lifecycle.ProcessLifecycleOwner: boolean pauseSent
androidx.profileinstaller.ProfileInstaller: int RESULT_SAVE_PROFILE_SKIPPED
kotlin.jvm.internal.FloatSpreadBuilder: float[] values
io.flutter.embedding.android.KeyData: long timestamp
androidx.core.provider.SelfDestructiveThread: int mPriority
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: int label
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality UNDEFINED
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_LARGE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MAX_NUMBER_OF_PREFETCHED_NODES
_COROUTINE.CoroutineDebuggingKt: java.lang.String ARTIFICIAL_FRAME_PACKAGE_NAME
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int AVAILABLE_PROCESSORS
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: androidx.fragment.app.FragmentAnim$AnimationOrAnimator animation
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_ENABLE_STATE_RESTORATION
kotlin.text.CharCategory: kotlin.text.CharCategory$Companion Companion
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFirstFrameRendered
androidx.core.animation.AnimatorKt$addPauseListener$1: androidx.core.animation.AnimatorKt$addPauseListener$1 INSTANCE
io.flutter.plugin.common.StandardMessageCodec: byte NULL
androidx.window.R$id: int locale
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_RTL
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
com.getkeepsafe.relinker.elf.Elf$Header: int shnum
androidx.viewpager.R$attr: int fontProviderQuery
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
kotlin.jvm.internal.IntCompanionObject: int SIZE_BITS
kotlin.io.encoding.Base64: byte padSymbol
kotlin.text.CharCategory: kotlin.text.CharCategory NON_SPACING_MARK
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int MOVE
io.flutter.embedding.android.FlutterFragment$1: io.flutter.embedding.android.FlutterFragment this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: int label
androidx.core.widget.AutoScrollHelper: float NO_MIN
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
androidx.collection.MapCollections$ArrayIterator: int mOffset
androidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.viewmodel.ViewModelInitializer[] initializers
kotlin.collections.EmptyList: long serialVersionUID
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.Fragment mCurrentPrimaryItem
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
androidx.core.content.pm.ShortcutManagerCompat: int FLAG_MATCH_PINNED
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mEnterTransition
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object L$2
androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_REGISTERED_KEYS
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
androidx.fragment.app.FragmentContainerView: java.util.List transitioningFragmentViews
androidx.customview.R$style: int Widget_Compat_NotificationActionText
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROGRESS
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: android.os.IBinder mRemote
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: int label
androidx.core.app.NotificationCompat$Action$WearableExtender: int FLAG_AVAILABLE_OFFLINE
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int TOUCH
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: kotlinx.coroutines.selects.SelectInstance $select
androidx.lifecycle.LiveData: int mVersion
androidx.customview.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_BACKGROUND_MODE
androidx.core.provider.FontRequestWorker: androidx.collection.SimpleArrayMap PENDING_REPLIES
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String CHANNEL_NAME
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.String cachedEngineGroupId
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.SharingStarted $started
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE
androidx.window.R$attr: int activityName
androidx.core.location.LocationRequestCompat: int QUALITY_HIGH_ACCURACY
kotlin.collections.AbstractIterator: java.lang.Object nextValue
kotlin.text.StringsKt___StringsKt$windowedSequence$2: kotlin.jvm.functions.Function1 $transform
kotlin.io.ByteStreamsKt$iterator$1: boolean finished
com.getkeepsafe.relinker.ReLinkerInstance$1: com.getkeepsafe.relinker.ReLinkerInstance this$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlinx.coroutines.flow.FlowCollector $collector
androidx.core.location.LocationManagerCompat$LocationListenerTransport: androidx.core.location.LocationManagerCompat$LocationListenerKey mKey
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object result
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function0 $arrayFactory
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: kotlinx.coroutines.CancellableContinuationImpl cont
androidx.core.view.ViewKt$doOnAttach$1: kotlin.jvm.functions.Function1 $action
androidx.core.app.NotificationCompat$WearableExtender: int mGravity
kotlin.jvm.internal.CharCompanionObject: char MIN_VALUE
androidx.core.content.pm.ShortcutInfoCompat$Builder: java.util.Set mCapabilityBindings
androidx.viewpager.widget.PagerTabStrip: float mInitialMotionX
androidx.versionedparcelable.VersionedParcelStream$1: androidx.versionedparcelable.VersionedParcelStream this$0
androidx.core.app.NotificationManagerCompat$NotificationWithIdAndTag: java.lang.String mTag
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: java.lang.String mRowTitle
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: boolean released
androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator
kotlin.coroutines.SafeContinuation: java.lang.Object result
androidx.core.app.NotificationCompat: java.lang.String EXTRA_HISTORIC_MESSAGES
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources$Theme mTheme
androidx.profileinstaller.ProfileInstaller: int RESULT_BENCHMARK_OPERATION_FAILURE
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
kotlinx.coroutines.flow.ChannelFlowBuilder: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: long[] $this_asFlow$inlined
androidx.core.view.ActionProvider: java.lang.String TAG
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.CoroutineContext context
androidx.core.app.NotificationCompat$CallStyle: int CALL_TYPE_INCOMING
androidx.core.view.HapticFeedbackConstantsCompat: int KEYBOARD_TAP
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object L$0
androidx.activity.FullyDrawnReporterKt$reportWhenComplete$1: java.lang.Object result
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult REREGISTER
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_BRAILLE
kotlinx.coroutines.CancellableContinuationImplKt: int SUSPENDED
androidx.collection.SparseArrayCompat: int[] mKeys
androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG_ARRAY
androidx.core.graphics.TypefaceCompatBaseImpl$3: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mHyphenationFrequency
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ScribeChannel scribeChannel
kotlin.sequences.DropWhileSequence: kotlin.sequences.Sequence sequence
androidx.profileinstaller.ProfileTranscoder: int INLINE_CACHE_MISSING_TYPES_ENCODING
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature REDUCE_MOTION
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_TEXT
androidx.lifecycle.LifecycleRegistry: boolean newEventOccurred
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
kotlinx.coroutines.DebugKt: boolean DEBUG
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedPackages
androidx.viewpager.R$styleable: int FontFamilyFont_font
kotlinx.coroutines.flow.SharedFlowImpl: int replay
androidx.core.text.util.FindAddress: java.util.regex.Pattern sZipCodeRe
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
androidx.activity.result.IntentSenderRequest$Builder: int flagsValues
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$0
kotlin.collections.RingBuffer$iterator$1: kotlin.collections.RingBuffer this$0
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String mDismissalId
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
kotlin.text.Charsets: java.nio.charset.Charset UTF_16
androidx.collection.LongSparseArray: java.lang.Object DELETED
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceBeginMethod
androidx.activity.BackEventCompat: androidx.activity.BackEventCompat$Companion Companion
androidx.core.view.MotionEventCompat: int BUTTON_PRIMARY
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: java.lang.Object $owner
androidx.viewpager.widget.PagerTabStrip: int mIndicatorColor
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long CLOSED_MASK
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1 this$0
kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation cont
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1: androidx.activity.contextaware.ContextAware $this_withContextAvailable
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_REMOVE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $transform$inlined$1
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_CALL
kotlinx.coroutines.scheduling.CoroutineScheduler: int MIN_SUPPORTED_POOL_SIZE
androidx.core.app.NotificationManagerCompat: java.lang.String ACTION_BIND_SIDE_CHANNEL
androidx.core.R$drawable: int notification_icon_background
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.core.app.NotificationCompat: java.lang.String EXTRA_COMPAT_TEMPLATE
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: kotlinx.coroutines.channels.ProduceKt$awaitClose$2 INSTANCE
androidx.savedstate.SavedStateRegistry: androidx.savedstate.SavedStateRegistry$Companion Companion
androidx.core.app.Person$Builder: androidx.core.graphics.drawable.IconCompat mIcon
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_OBJ
androidx.core.app.RemoteInput: java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA
androidx.fragment.app.Fragment$8: androidx.activity.result.ActivityResultRegistry val$registry
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$0
kotlin.ULongArray$Iterator: int index
androidx.fragment.R$id: int fragment_container_view_tag
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation: int requestCode
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlinx.coroutines.selects.SelectImplementation this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String identifier
androidx.customview.R$style: int TextAppearance_Compat_Notification_Line2
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1: io.flutter.embedding.engine.systemchannels.BackGestureChannel this$0
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt: java.lang.String RUNNING
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType: java.lang.String mimeType
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
androidx.core.content.LocusIdCompat: android.content.LocusId mWrapped
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: kotlin.jvm.functions.Function2 $comparison
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
kotlinx.coroutines.channels.ReceiveCatching: kotlinx.coroutines.CancellableContinuationImpl cont
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager
kotlin.collections.AbstractList$IteratorImpl: kotlin.collections.AbstractList this$0
androidx.core.app.NotificationCompat: int DEFAULT_SOUND
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: int MAX_ACTION_BUTTONS
androidx.core.view.DisplayCompat$ModeCompat: android.graphics.Point mPhysicalSize
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor executor
androidx.core.app.NotificationCompat$Action: boolean mShowsUserInterface
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlin.UByte: kotlin.UByte$Companion Companion
androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy defaultPolicy
androidx.core.view.animation.PathInterpolatorApi14: float[] mX
com.getkeepsafe.relinker.elf.Elf$Header: int shstrndx
androidx.core.view.DifferentialMotionFlingController: int mLastProcessedSource
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: android.app.Activity $activity
kotlinx.coroutines.AwaitKt$joinAll$1: int I$1
kotlin.coroutines.CombinedContext$toString$1: kotlin.coroutines.CombinedContext$toString$1 INSTANCE
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlin.UByte: byte MAX_VALUE
kotlin.text.Charsets: java.nio.charset.Charset utf_32
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object L$0
androidx.core.view.DragStartHelper: android.view.View$OnTouchListener mTouchListener
androidx.core.app.NotificationCompat: int FLAG_GROUP_SUMMARY
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String IMPELLER_OPENGL_GPU_TRACING_DATA_KEY
androidx.loader.R$id: int tag_unhandled_key_listeners
kotlin.ranges.UIntProgression: int last
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: long messageData
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings: int[] $EnumSwitchMapping$1
androidx.fragment.app.FragmentTransitionImpl$1: androidx.fragment.app.FragmentTransitionImpl this$0
kotlin.jvm.internal.ShortSpreadBuilder: short[] values
androidx.activity.ComponentActivity$1$2: android.content.IntentSender$SendIntentException val$e
androidx.window.embedding.SplitRule: int minSmallestWidthDp
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch
kotlinx.coroutines.scheduling.CoroutineScheduler: long idleWorkerKeepAliveNs
androidx.core.app.ServiceCompat: int START_STICKY
kotlin.text.Typography: char leftGuillemete
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.core.app.NotificationCompatBuilder: android.content.Context mContext
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
androidx.core.animation.AnimatorKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onEnd
androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId
androidx.core.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority
androidx.window.core.ConsumerAdapter$createSubscription$1: java.lang.Object $obj
androidx.customview.R$dimen: int notification_large_icon_height
androidx.annotation.VisibleForTesting$Companion: int PROTECTED
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityIntentPredicates$1: java.util.Set $splitPairFilters
androidx.customview.R$attr: int fontWeight
androidx.core.view.WindowInsetsControllerCompat: int BEHAVIOR_SHOW_BARS_BY_TOUCH
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.viewpager.widget.ViewPager$LayoutParams: boolean needsMeasure
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.CompletableJob $collectJob
androidx.profileinstaller.ProfileVersion: byte[] V005_O
androidx.core.provider.FontRequestWorker$1: int val$style
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List mMessages
androidx.core.app.NotificationCompat: int FLAG_NO_CLEAR
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection direction
androidx.core.view.WindowInsetsControllerCompat: androidx.core.view.WindowInsetsControllerCompat$Impl mImpl
androidx.viewpager.R$styleable: int FontFamilyFont_android_font
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
androidx.loader.R$styleable: int FontFamilyFont_fontStyle
androidx.window.WindowSdkExtensions: androidx.window.WindowSdkExtensions$Companion Companion
androidx.window.area.utils.DeviceMetrics: android.util.DisplayMetrics rearDisplayMetrics
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode PUBLICATION
androidx.loader.content.ModernAsyncTask: int CORE_POOL_SIZE
androidx.core.graphics.TypefaceCompatBaseImpl$2: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: kotlinx.coroutines.selects.SelectBuilderImpl this$0
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onVisitFile
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: kotlinx.coroutines.flow.FlowCollector $downstream
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: int label
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.CallbackWithHandler this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_WRONG_CERTIFICATES
androidx.viewpager.R$id: int text
androidx.window.area.WindowAreaControllerImpl: androidx.window.area.WindowAreaCapability$Status currentRearDisplayPresentationStatus
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$2
org.intellij.lang.annotations.Flow: java.lang.String THIS_TARGET
androidx.fragment.app.SpecialEffectsController$Operation: java.util.List effects
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: kotlinx.coroutines.channels.BufferedChannel this$0
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object L$1
kotlin.random.XorWowRandom: long serialVersionUID
androidx.fragment.app.DialogFragment: boolean mShowsDialog
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$0
androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp2
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.Class funInterface
androidx.core.transition.TransitionKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onResume
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object L$0
kotlinx.coroutines.sync.SemaphoreKt: int SEGMENT_SIZE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
kotlinx.coroutines.JobSupport$Finishing: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _exceptionsHolder$FU
kotlin.jvm.internal.CharCompanionObject: char MIN_SURROGATE
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Key topmostKey
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.jvm.functions.Function1 $this_bindCancellationFun
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitRule$FinishBehavior finishPrimaryWithSecondary
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 regFunc
androidx.core.widget.ContentLoadingProgressBar: int MIN_SHOW_TIME_MS
androidx.fragment.app.FragmentManager: java.lang.String FRAGMENT_MANAGER_STATE_KEY
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE
kotlin.text.Regex$Serialized: int flags
androidx.customview.R$id: int notification_main_column
io.flutter.plugin.editing.SpellCheckPlugin: java.lang.String END_INDEX_KEY
androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput
kotlin.comparisons.ReverseOrderComparator: kotlin.comparisons.ReverseOrderComparator INSTANCE
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: kotlin.jvm.functions.Function2 $handler
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
androidx.lifecycle.EmittedSource: boolean disposed
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: float[] $this_asList
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorCompat this$0
io.flutter.embedding.android.FlutterSurfaceView: java.lang.String TAG
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object L$0
io.flutter.plugin.platform.PlatformPlugin: int DEFAULT_SYSTEM_UI
androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho
androidx.customview.widget.ViewDragHelper: int STATE_SETTLING
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidthDp
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean mDefaultIsRtl
androidx.fragment.app.DialogFragment: boolean mShownByMe
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
androidx.fragment.app.FragmentState: int mContainerId
androidx.core.provider.FontsContractCompat: int RESULT_CODE_WRONG_CERTIFICATES
androidx.core.app.NotificationCompatJellybean: java.lang.Object sExtrasLock
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$2
androidx.loader.R$id: int text2
kotlin.sequences.SubSequence: int startIndex
androidx.core.app.ActivityRecreator: java.lang.String LOG_TAG
androidx.window.area.SafeWindowAreaComponentProvider: java.lang.ClassLoader loader
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $operation$inlined
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_PERCENT
androidx.customview.R$id: int tag_unhandled_key_event_manager
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1 this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption BREADTH_FIRST
io.flutter.embedding.android.FlutterActivity: int FLUTTER_VIEW_ID
androidx.fragment.app.FragmentStateManager: java.lang.String TAG
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
io.flutter.plugin.common.BinaryCodec: boolean returnsDirectByteBufferFromDecoding
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: int label
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources mResources
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String TAG
kotlin.SafePublicationLazyImpl: kotlin.SafePublicationLazyImpl$Companion Companion
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int bufferWidth
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1 INSTANCE
androidx.fragment.app.FragmentStateManager: boolean mMovingToState
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter: androidx.window.layout.adapter.sidecar.SidecarCompat sidecarCompat
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: int label
androidx.loader.R$drawable: int notification_bg_low
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: kotlinx.coroutines.flow.Flow $this_sample
androidx.viewpager.R$attr: int font
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_SHIFT
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStopQueued
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map bufferedMessages
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$1
androidx.core.view.WindowInsetsAnimationCompat$Impl: float mFraction
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: int label
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.collection.SimpleArrayMap mListeners
androidx.profileinstaller.ProfileInstallerInitializer: int DELAY_MS
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: java.lang.Object L$0
androidx.activity.OnBackPressedDispatcher: boolean backInvokedCallbackRegistered
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 onFail
androidx.loader.R$dimen: int notification_large_icon_width
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object nextItem
androidx.core.view.WindowInsetsControllerCompat: int BEHAVIOR_DEFAULT
androidx.fragment.app.FragmentManager: int POP_BACK_STACK_INCLUSIVE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: int label
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int load
androidx.core.R$color: int androidx_core_ripple_material_light
androidx.core.util.AtomicFile: java.io.File mBaseName
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
kotlin.jvm.internal.Ref$ObjectRef: java.lang.Object element
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
kotlin.ranges.IntProgressionIterator: int next
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.core.content.res.ViewingConditions: float mFlRoot
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
androidx.core.widget.NestedScrollView: int mNestedYOffset
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: java.util.concurrent.Executor $executor
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: int label
androidx.core.view.GravityCompat: int END
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$1
androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri mUri
androidx.loader.content.Loader: boolean mContentChanged
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int unsetValue
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$BubbleMetadata mBubbleMetadata
kotlin.sequences.SequencesKt___SequencesKt$minus$2: java.lang.Object[] $elements
androidx.customview.R$dimen: int notification_large_icon_width
androidx.window.R$attr: int animationBackgroundColor
androidx.viewpager.widget.PagerTitleStrip$PageListener: androidx.viewpager.widget.PagerTitleStrip this$0
androidx.collection.ArraySet: int sTwiceBaseCacheSize
androidx.core.text.PrecomputedTextCompat$Params: android.text.PrecomputedText$Params mWrapped
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray sessionIdToLoadingUnitId
androidx.fragment.app.DialogFragment$1: androidx.fragment.app.DialogFragment this$0
androidx.core.content.pm.ShortcutManagerCompat: int DEFAULT_MAX_ICON_DIMENSION_LOWRAM_DP
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POSITION
androidx.core.provider.FontsContractCompat$FontInfo: boolean mItalic
androidx.profileinstaller.ProfileVerifier$Cache: int SCHEMA
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
kotlin.sequences.FilteringSequence$iterator$1: java.util.Iterator iterator
androidx.window.core.ConsumerAdapter$createSubscription$2: java.lang.Object $javaConsumer
androidx.core.app.Person: boolean mIsBot
androidx.window.layout.adapter.extensions.MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
kotlin.collections.MapWithDefaultImpl: kotlin.jvm.functions.Function1 default
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_VULKAN_VALIDATION
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DISABLE_SERVICE_AUTH_CODES
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: long NON_TEXTURE_FALLBACK
kotlin.io.path.DefaultCopyActionContext: kotlin.io.path.DefaultCopyActionContext INSTANCE
kotlinx.coroutines.channels.Channel: java.lang.String DEFAULT_BUFFER_PROPERTY_NAME
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
androidx.core.content.pm.ShortcutInfoCompat$Builder: android.net.Uri mSliceUri
io.flutter.embedding.android.FlutterImageView: java.lang.String TAG
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
androidx.window.R$attr: int secondaryActivityName
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_START_SCROLL_BOTTOM
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor mReportFullyDrawnExecutor
io.flutter.plugin.editing.TextEditingDelta: int newComposingStart
kotlin.sequences.SequencesKt___SequencesKt$minus$3: java.lang.Iterable $elements
kotlin.collections.MapWithDefaultImpl: java.util.Map map
kotlin.random.Random$Default$Serialized: kotlin.random.Random$Default$Serialized INSTANCE
androidx.core.location.LocationRequestCompat: float mMinUpdateDistanceMeters
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1: kotlin.jvm.functions.Function0 $nextFunction
androidx.fragment.app.FragmentStore: java.util.HashMap mActive
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object L$2
androidx.window.embedding.SplitInfo: android.os.IBinder token
androidx.profileinstaller.ProfileVersion: byte[] V001_N
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment mFragment
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int label
androidx.profileinstaller.ProfileVersion: byte[] METADATA_V002
kotlinx.coroutines.channels.ChannelSegment: java.util.concurrent.atomic.AtomicReferenceArray data
androidx.activity.result.PickVisualMediaRequest$Builder: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType mediaType
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: int label
androidx.core.widget.TextViewCompat$OreoCallback: android.widget.TextView mTextView
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory factory
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object L$1
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_ERROR_UNSUPPORTED_API_VERSION
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object result
kotlin.collections.ArrayAsCollection: java.lang.Object[] values
androidx.fragment.app.ListFragment: java.lang.Runnable mRequestFocus
androidx.core.R$drawable: int ic_call_answer_low
androidx.lifecycle.CoroutineLiveDataKt: long DEFAULT_TIMEOUT
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol ON_LOCK_ALREADY_LOCKED_BY_OWNER
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted Eagerly
androidx.core.app.NotificationCompat$WearableExtender: int mHintScreenTimeout
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_IN
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: kotlin.jvm.functions.Function3 $transform
androidx.viewpager.R$id: int forever
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
kotlinx.coroutines.flow.StateFlowSlot: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue
kotlin.collections.builders.SerializedCollection: int tagSet
kotlin.collections.AbstractMap$values$1$iterator$1: java.util.Iterator $entryIterator
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlin.jvm.functions.Function5 $transform$inlined
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: long $timeMillis
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService: java.lang.String DESCRIPTOR
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FLAG_BATCHED
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater closeHandler$FU
androidx.core.app.NotificationChannelGroupCompat: boolean mBlocked
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CHRONOMETER_COUNT_DOWN
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1$1: androidx.core.util.Consumer $consumer
kotlinx.coroutines.internal.DispatchedContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitAttributes defaultSplitAttributes
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MAJOR
androidx.fragment.app.Fragment$AnimationInfo: int mPopEnterAnim
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: int mFlags
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object L$1
androidx.collection.LongSparseArray: boolean mGarbage
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1 this$0
androidx.lifecycle.SavedStateHandlesProvider: android.os.Bundle restoredState
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.core.app.FrameMetricsAggregator: int TOTAL_DURATION
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_TIMESTAMP
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: int label
androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: int label
androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData
androidx.core.R$drawable: int ic_call_decline_low
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_CONNECTED
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Method sGetViewRootImplMethod
androidx.profileinstaller.ProfileInstaller: java.lang.String TAG
androidx.core.R$dimen: int compat_notification_large_icon_max_height
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.Flow $upstream
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: kotlinx.coroutines.debug.internal.ConcurrentWeakMap this$0
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: kotlin.jvm.functions.Function2 factory
androidx.core.app.NotificationCompat: int PRIORITY_DEFAULT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_DISMISS
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64$Default Default
androidx.core.content.pm.ShortcutInfoCompat: int mDisabledReason
com.getkeepsafe.relinker.ReLinkerInstance$1: java.lang.String val$library
androidx.viewpager.R$styleable: int FontFamilyFont_fontWeight
io.flutter.plugin.platform.SingleViewWindowManager: java.lang.String TAG
androidx.activity.FullyDrawnReporter: java.lang.Object lock
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment NULL_SEGMENT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$2
kotlin.random.XorWowRandom: int w
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1: kotlinx.coroutines.CancellableContinuation $co
androidx.core.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap
kotlin.ULong: int SIZE_BITS
kotlinx.coroutines.internal.LockFreeLinkedListKt: int UNDECIDED
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: int label
androidx.activity.OnBackPressedCallback: boolean isEnabled
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE
kotlinx.coroutines.ResumeUndispatchedRunnable: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlin.io.encoding.DecodeInputStream: kotlin.io.encoding.Base64 base64
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Method sActionBarOnMenuKeyMethod
androidx.interpolator.view.animation.LookupTableInterpolator: float mStepSize
androidx.core.provider.FontRequestWorker$2: androidx.core.provider.CallbackWithHandler val$callback
androidx.core.app.NotificationCompat$Action$WearableExtender: int FLAG_HINT_DISPLAY_INLINE
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange nextItem
androidx.core.provider.SelfDestructiveThread$2: java.util.concurrent.Callable val$callable
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget VALUE_PARAMETER
androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
androidx.core.widget.AutoScrollHelper: int mEdgeType
androidx.viewpager.widget.PagerTabStrip: android.graphics.Rect mTempRect
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
kotlin.sequences.EmptySequence: kotlin.sequences.EmptySequence INSTANCE
androidx.collection.ArraySet: int mSize
androidx.fragment.R$animator: int fragment_close_exit
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: kotlin.jvm.functions.Function1 $selector
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long HEAD_MASK
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$2
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
androidx.lifecycle.LegacySavedStateHandleController: java.lang.String TAG_SAVED_STATE_HANDLE_CONTROLLER
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: java.util.HashMap mAnimations
io.flutter.Log: int DEBUG
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol CLOSED
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: int label
androidx.core.location.LocationCompat: java.lang.Integer sHasVerticalAccuracyMask
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$0
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.core.provider.RequestExecutor$ReplyRunnable: java.util.concurrent.Callable mCallable
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater inFlightTasks$FU
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1 this$0
androidx.core.R$id: int hide_ime_id
androidx.core.R$id: int accessibility_custom_action_16
androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY
androidx.core.location.LocationManagerCompat: long MAX_CURRENT_LOCATION_AGE_MS
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String PLUGINS_RESTORATION_BUNDLE_KEY
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_OPTS_KEY
androidx.core.app.NotificationCompat$CallStyle: java.lang.CharSequence mVerificationText
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: android.view.ContentInfo$Builder mPlatformBuilder
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MIN
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: int $count$inlined
kotlin.text.Typography: char greater
io.flutter.plugin.editing.FlutterTextUtils: int COMBINING_ENCLOSING_KEYCAP
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: java.lang.Object L$0
androidx.collection.CircularIntArray: int mCapacityBitmask
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: kotlin.sequences.SequencesKt___SequencesKt$flatMap$1 INSTANCE
androidx.core.os.ProcessCompat$Api19Impl: java.lang.Object sResolvedLock
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: kotlin.jvm.functions.Function5 $transform$inlined
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $VALUES
kotlin.text.CharDirectionality: int value
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleted$FU
androidx.core.graphics.Insets: int top
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
androidx.core.provider.SelfDestructiveThread$2: androidx.core.provider.SelfDestructiveThread this$0
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DESTROY_ENGINE_WITH_ACTIVITY
kotlin.text.Charsets: java.nio.charset.Charset US_ASCII
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.embedding.EmbeddingAdapter this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFile
androidx.fragment.app.Fragment: int mBackStackNesting
androidx.core.view.MenuKt$children$1: android.view.Menu $this_children
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.core.location.LocationManagerCompat$CancellableLocationListener: java.lang.Runnable mTimeoutRunnable
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: int label
androidx.viewpager.R$layout: int notification_action_tombstone
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN
androidx.core.app.NotificationCompat: int GROUP_ALERT_SUMMARY
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
androidx.core.app.NotificationCompat$MessagingStyle: int MAXIMUM_RETAINED_MESSAGES
kotlin.time.DurationUnit: kotlin.time.DurationUnit MINUTES
kotlinx.coroutines.scheduling.CoroutineScheduler: int CLAIMED
androidx.core.app.NotificationManagerCompat: int INTERRUPTION_FILTER_PRIORITY
androidx.fragment.app.FragmentManager$7: androidx.fragment.app.Fragment val$parent
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.Continuation uCont
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String dartLibraryUri
org.intellij.lang.annotations.PrintFormatPattern: java.lang.String PRECISION
androidx.core.location.LocationManagerCompat$Api19Impl: java.lang.reflect.Method sRequestLocationUpdatesLooperMethod
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsPop
com.getkeepsafe.relinker.ReLinkerInstance$1: java.lang.String val$version
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: kotlinx.coroutines.selects.SelectInstance $select
androidx.core.view.MotionEventCompat: int ACTION_HOVER_ENTER
androidx.fragment.app.FragmentTransaction$Op: int mExitAnim
androidx.customview.widget.ViewDragHelper: int STATE_DRAGGING
androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.viewmodel.CreationExtras$Key SAVED_STATE_REGISTRY_OWNER_KEY
io.flutter.FlutterInjector$Builder$NamedThreadFactory: io.flutter.FlutterInjector$Builder this$0
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_NAME
androidx.window.R$attr: int finishSecondaryWithPrimary
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
kotlinx.coroutines.flow.internal.AbortFlowException: kotlinx.coroutines.flow.FlowCollector owner
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.fragment.app.FragmentStatePagerAdapter: java.lang.String TAG
androidx.core.graphics.WeightTypefaceApi26: java.lang.Object sWeightCacheLock
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String CONFIGURATION_ID
androidx.customview.R$dimen: int notification_media_narrow_margin
androidx.customview.R$dimen: int notification_top_pad_large_text
io.flutter.plugin.platform.VirtualDisplayController$2: io.flutter.plugin.platform.VirtualDisplayController this$0
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object nextItem
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: androidx.core.widget.AutoScrollHelper this$0
androidx.core.view.DragStartHelper: int mLastTouchX
androidx.fragment.app.FragmentPagerAdapter: int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT
androidx.customview.widget.ViewDragHelper: int INVALID_POINTER
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener: int COMPAT_ANIMATION_DURATION
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
androidx.core.R$id: int accessibility_custom_action_8
androidx.core.location.LocationCompat: java.lang.String EXTRA_VERTICAL_ACCURACY
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: int label
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: androidx.window.extensions.area.WindowAreaComponent extensionsComponent
kotlin.collections.builders.SetBuilder: kotlin.collections.builders.MapBuilder backing
androidx.core.R$styleable: int GradientColor_android_startX
androidx.core.app.NotificationCompat$WearableExtender: int DEFAULT_CONTENT_ICON_GRAVITY
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
kotlin.text.Typography: char rightSingleQuote
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
androidx.viewpager.R$style: int Widget_Compat_NotificationActionText
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER
androidx.lifecycle.MediatorLiveData$Source: int mVersion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object L$0
kotlin.collections.builders.MapBuilder: int INITIAL_MAX_PROBE_DISTANCE
androidx.viewpager.widget.ViewPager$LayoutParams: int position
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_OK
kotlinx.coroutines.AwaitKt$joinAll$1: java.lang.Object L$0
androidx.customview.R$id: int icon
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.Class mMenuBuilderClass
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: int label
com.getkeepsafe.relinker.ReLinkerInstance: java.lang.String LIB_DIR
androidx.window.embedding.SplitAttributes$Builder: androidx.window.embedding.SplitAttributes$SplitType splitType
androidx.core.util.LruCacheKt$lruCache$4: kotlin.jvm.functions.Function4 $onEntryRemoved
io.flutter.plugin.text.ProcessTextPlugin: java.lang.String TAG
androidx.window.embedding.SplitInfo: androidx.window.embedding.SplitAttributes splitAttributes
androidx.core.view.MotionEventCompat: int ACTION_POINTER_DOWN
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String schedulerName
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedComponents
androidx.customview.R$id: int line1
androidx.lifecycle.ProcessLifecycleOwner: int startedCounter
kotlin.math.Constants: double epsilon
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 onCancellationConstructor
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List mHistoricMessages
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: double[] $this_asList
androidx.core.app.NotificationCompat$WearableExtender: int mCustomContentHeight
androidx.window.embedding.SplitRule: androidx.window.embedding.SplitAttributes defaultSplitAttributes
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: kotlin.jvm.functions.Function7 $transform$inlined
androidx.core.content.IntentCompat: java.lang.String EXTRA_TIME
androidx.core.widget.TextViewCompat$OreoCallback: boolean mInitializedMenuBuilderReferences
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int INVERTED_STYLUS
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TWITTER
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int I$0
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_ENABLE_STATE_RESTORATION
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.sync.Semaphore $semaphore
androidx.core.view.HapticFeedbackConstantsCompat: int GESTURE_THRESHOLD_ACTIVATE
io.flutter.Build$API_LEVELS: int API_21
androidx.fragment.app.Fragment: int mContentLayoutId
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnCancelListener mOnCancelListener
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object L$0
androidx.core.R$layout: int ime_secondary_split_test_activity
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
androidx.versionedparcelable.VersionedParcelStream: int mCount
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.core.PredicateAdapter predicateAdapter
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: int label
androidx.window.embedding.ActivityRule$Builder: boolean alwaysExpand
androidx.core.R$id: int tag_unhandled_key_event_manager
androidx.core.provider.FontRequestWorker$TypefaceResult: android.graphics.Typeface mTypeface
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object result
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsDeclaredInManifest
androidx.versionedparcelable.VersionedParcel: java.lang.String TAG
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
kotlin.jvm.internal.AdaptedFunctionReference: int flags
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
org.intellij.lang.annotations.Flow: java.lang.String DEFAULT_SOURCE
kotlin.io.encoding.Base64Kt: byte[] base64UrlEncodeMap
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: int label
androidx.tracing.Trace: java.lang.reflect.Method sIsTagEnabledMethod
androidx.core.util.PatternsCompat: java.lang.String WEB_URL_WITHOUT_PROTOCOL
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: androidx.lifecycle.MediatorLiveData $this_addDisposableSource
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
androidx.core.content.ContextCompat: int RECEIVER_NOT_EXPORTED
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher
io.flutter.embedding.android.KeyData: io.flutter.embedding.android.KeyData$Type type
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.Flow $flow
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_OPEN
androidx.core.app.NotificationChannelCompat: int mImportance
kotlin.ranges.ClosedFloatRange: float _endInclusive
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: int unrepliedCount
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater bufferEnd$FU
kotlinx.coroutines.DispatchedTaskKt: int MODE_CANCELLABLE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPostVisitDirectory
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: int label
androidx.lifecycle.BlockRunner$cancel$1: int label
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object L$0
androidx.core.provider.FontsContractCompat$Columns: java.lang.String ITALIC
kotlin.collections.SlidingWindowKt$windowedIterator$1: int $size
androidx.fragment.app.FragmentTransitionCompat21$1: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: long mEndWatchTimeMillis
androidx.customview.widget.FocusStrategy$SequentialComparator: androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: kotlin.jvm.functions.Function1 $onBackProgressed
androidx.core.app.NotificationChannelCompat: boolean mShowBadge
kotlin.collections.SlidingWindowKt$windowedIterator$1: int label
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
androidx.window.area.WindowAreaCapability$Operation: androidx.window.area.WindowAreaCapability$Operation OPERATION_TRANSFER_ACTIVITY_TO_AREA
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner$Companion Companion
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$0
kotlin.sequences.IndexingSequence$iterator$1: int index
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
androidx.activity.ComponentActivity$6: androidx.activity.ComponentActivity this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: int label
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLICK
androidx.core.text.BidiFormatter: int FLAG_STEREO_RESET
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicIntegerFieldUpdater installations$FU
androidx.viewpager.widget.PagerTitleStrip: java.lang.ref.WeakReference mWatchingAdapter
kotlinx.coroutines.internal.OnDemandAllocatingPool: int controlState
androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_ACCESSIBILITY_OVERLAY
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE
androidx.collection.SimpleArrayMap: boolean DEBUG
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
androidx.core.view.ContentInfoCompat: int SOURCE_INPUT_METHOD
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_CLOSE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlinx.coroutines.channels.ReceiveChannel $this_zip
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object L$0
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: android.os.Bundle mExtras
androidx.core.app.Person: java.lang.String NAME_KEY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: int label
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR
androidx.viewpager.widget.PagerTabStrip$1: androidx.viewpager.widget.PagerTabStrip this$0
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact lifecycleImpact
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object L$0
kotlin.jvm.internal.LongCompanionObject: long MIN_VALUE
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object L$0
androidx.window.area.WindowAreaAdapter: androidx.window.area.WindowAreaAdapter INSTANCE
androidx.activity.BackEventCompat: float touchX
androidx.fragment.app.strictmode.SetUserVisibleHintViolation: boolean isVisibleToUser
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
kotlin.text.CharCategory: kotlin.text.CharCategory UNASSIGNED
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect this$0
kotlin.ranges.CharProgressionIterator: int next
androidx.core.content.IntentSanitizer$Builder: boolean mAllowSourceBounds
androidx.viewpager.widget.ViewPager: boolean mFakeDragging
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: android.content.res.AssetManager androidAssetManager
io.flutter.BuildConfig: boolean JIT_RELEASE
androidx.core.location.GpsStatusWrapper: int GPS_PRN_OFFSET
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader instance
io.flutter.embedding.android.KeyData: java.lang.String CHANNEL
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TEXT_SUGGESTIONS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: int mRowIndex
androidx.lifecycle.BlockRunner$maybeRun$1: int label
androidx.core.view.MenuItemCompat$1: androidx.core.view.MenuItemCompat$OnActionExpandListener val$listener
androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor
androidx.window.R$id: int rtl
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_OUT
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_BUTTON
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1 INSTANCE
androidx.fragment.app.FragmentManager: java.util.Map mResults
androidx.collection.LruCache: int hitCount
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner this$1
androidx.window.embedding.SplitAttributes$SplitType: java.lang.String description
androidx.window.reflection.WindowExtensionsConstants: java.lang.String WINDOW_EXTENSIONS_PACKAGE_NAME
kotlin.jvm.internal.ClassReference: java.util.HashMap classFqNames
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
androidx.annotation.VisibleForTesting$Companion: int PRIVATE
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: android.animation.ValueAnimator val$animator
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_7
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind[] $VALUES
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager this$0
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: android.animation.AnimatorSet animator
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.embedding.SplitPairRule$Builder: java.util.Set filters
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat COLOR_BURN
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: int label
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: boolean mHeading
kotlin.jvm.internal.ArrayDoubleIterator: int index
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object L$0
androidx.customview.R$styleable: int GradientColor_android_gradientRadius
androidx.viewpager.widget.ViewPager: boolean mScrollingCacheEnabled
androidx.collection.MapCollections$MapIterator: int mEnd
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: int label
androidx.core.app.NotificationChannelGroupCompat$Builder: androidx.core.app.NotificationChannelGroupCompat mGroup
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.ArrayList sViewsWithListeners
androidx.window.embedding.SplitAttributes$SplitType: androidx.window.embedding.SplitAttributes$SplitType SPLIT_TYPE_EXPAND
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: boolean rootVisited
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$0
androidx.core.app.NotificationCompat: int DEFAULT_ALL
androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackRecordState[] mBackStack
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
kotlinx.coroutines.EventLoop_commonKt: long MAX_DELAY_NS
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1 this$0
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2: androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener this$0
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowEnterTransitionOverlap
androidx.fragment.app.FragmentLayoutInflaterFactory$1: androidx.fragment.app.FragmentStateManager val$fragmentStateManager
androidx.core.app.NotificationCompat$Builder: android.content.Context mContext
kotlin.sequences.SubSequence$iterator$1: java.util.Iterator iterator
androidx.loader.content.CursorLoader: android.net.Uri mUri
androidx.core.view.ViewGroupKt$iterator$1: int index
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.internal.SendingCollector $collector
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: androidx.window.area.WindowAreaSessionCallback appCallback
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object result
kotlin.UShort: short MAX_VALUE
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int bufferHeight
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: int label
androidx.customview.R$dimen: int notification_big_circle_margin
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect val$epicenter
kotlin.text.Typography: char leftSingleQuote
androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_REGISTERED_RCS
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_FRAGMENT_REUSE
androidx.core.widget.TextViewCompat$OreoCallback: boolean mCanUseMenuBuilderReferences
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.embedding.SplitPairRule$Builder: int minSmallestWidthDp
kotlinx.coroutines.channels.Channel: int UNLIMITED
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_CONTENT_INVALID
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: androidx.window.area.WindowAreaSessionCallback $windowAreaSessionCallback
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory delegateFactory
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_DEFAULT
androidx.loader.R$dimen: int notification_big_circle_margin
androidx.core.graphics.PathSegment: android.graphics.PointF mStart
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: int label
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mHostFragmentFactory
androidx.core.R$drawable: int ic_call_answer_video_low
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
kotlin.text.Charsets: java.nio.charset.Charset utf_32le
androidx.core.net.MailTo: java.lang.String MAILTO_SCHEME
androidx.core.app.JobIntentService$CompatWorkEnqueuer: android.content.Context mContext
androidx.fragment.app.Fragment: int mTargetRequestCode
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: int label
androidx.activity.OnBackPressedDispatcher$3: androidx.activity.OnBackPressedDispatcher this$0
kotlin.time.AbstractLongTimeSource: kotlin.time.DurationUnit unit
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
androidx.loader.R$dimen: int notification_top_pad_large_text
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $block$inlined
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: java.lang.Iterable $this_asFlow$inlined
kotlin.collections.RingBuffer$iterator$1: int count
io.flutter.plugin.platform.PlatformViewsController: boolean usesSoftwareRendering
kotlinx.coroutines.debug.internal.DebuggerInfo: java.util.List lastObservedStackTrace
kotlinx.coroutines.flow.SharingConfig: kotlinx.coroutines.flow.Flow upstream
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_ACTIONS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COLLAPSE
androidx.core.app.Person$Builder: java.lang.String mKey
androidx.window.java.area.WindowAreaControllerCallbackAdapter: androidx.window.java.core.CallbackToFlowAdapter callbackToFlowAdapter
androidx.core.util.PatternsCompat: java.util.regex.Pattern STRICT_DOMAIN_NAME
androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved
androidx.window.area.WindowAreaInfo: androidx.window.area.WindowAreaInfo$Type type
androidx.loader.R$styleable: int FontFamilyFont_ttcIndex
androidx.core.telephony.TelephonyManagerCompat: java.lang.reflect.Method sGetDeviceIdMethod
kotlinx.coroutines.DelayKt$awaitCancellation$1: int label
kotlin.io.encoding.Base64: int symbolsPerGroup
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
kotlin.SafePublicationLazyImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.String initialRoute
androidx.core.content.pm.ShortcutManagerCompat: int FLAG_MATCH_MANIFEST
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String initialRoute
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_EXTRAS_BUNDLE
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.fragment.app.SpecialEffectsController$Operation lastIn
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: java.lang.Object result
androidx.core.view.ViewCompat: int IMPORTANT_FOR_CONTENT_CAPTURE_NO
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: java.util.Iterator $this_asFlow$inlined
kotlinx.coroutines.ExecutorCoroutineDispatcher: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SELECT
androidx.core.app.FrameMetricsAggregator: int SWAP_INDEX
androidx.core.graphics.WeightTypefaceApi14: androidx.collection.LongSparseArray sWeightTypefaceCache
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper installations$kotlinx$VolatileWrapper
androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved
kotlin.jvm.internal.PrimitiveSpreadBuilder: int size
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
androidx.viewpager.R$id: int chronometer
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.Long coroutineId
androidx.fragment.app.FragmentTransitionCompat21$4: java.lang.Runnable val$transitionCompleteRunnable
kotlin.ranges.IntProgressionIterator: int finalElement
kotlin.Result: kotlin.Result$Companion Companion
androidx.core.view.ViewCompat: int IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object $value
kotlin.sequences.DistinctIterator: kotlin.jvm.functions.Function1 keySelector
kotlin.collections.builders.ListBuilder: int length
androidx.lifecycle.CoroutineLiveData$1: androidx.lifecycle.CoroutineLiveData this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: int label
androidx.loader.R$dimen: int compat_control_corner_material
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: int label
androidx.window.R$attr: int alwaysExpand
androidx.loader.R$id: int line3
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String OLD_GEN_HEAP_SIZE_META_DATA_KEY
kotlin.ranges.CharRange: kotlin.ranges.CharRange EMPTY
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler: int MAX_SUPPORTED_POOL_SIZE
androidx.loader.R$id: int text
androidx.window.java.embedding.SplitControllerCallbackAdapter: androidx.window.java.core.CallbackToFlowAdapter callbackToFlowAdapter
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_NONE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlin.jvm.functions.Function2 $predicate
androidx.core.text.PrecomputedTextCompat$Params: int mHyphenationFrequency
androidx.activity.SystemBarStyle: int darkScrim
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 onCancellationConstructor
kotlin.collections.ReversedListReadOnly: java.util.List delegate
androidx.core.app.NotificationCompat$CarExtender: int mColor
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: java.lang.Class $klass
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$0
io.flutter.Build$API_LEVELS: int API_22
kotlin.time.DurationKt: long MAX_NANOS_IN_MILLIS
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveWrapperFqNames
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult SUCCESSFUL
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.sync.Semaphore $semaphore
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
androidx.core.widget.TextViewKt$addTextChangedListener$3: androidx.core.widget.TextViewKt$addTextChangedListener$3 INSTANCE
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.String state
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
kotlin.text.CharCategory: kotlin.text.CharCategory INITIAL_QUOTE_PUNCTUATION
kotlinx.coroutines.debug.AgentPremain: boolean enableCreationStackTraces
kotlin.sequences.FilteringSequence$iterator$1: kotlin.sequences.FilteringSequence this$0
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$2
androidx.window.embedding.SplitAttributesCalculatorParams: androidx.window.layout.WindowMetrics parentWindowMetrics
androidx.core.app.NotificationCompat$Builder: boolean mColorizedSet
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object key
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String ACTION_SAVE_PROFILE
androidx.core.app.NotificationCompat$TvExtender: java.lang.String EXTRA_DELETE_INTENT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object L$0
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: java.lang.Object result
androidx.loader.R$id: int notification_main_column
kotlinx.coroutines.scheduling.TaskContextImpl: int taskMode
androidx.core.R$style: int Widget_Compat_NotificationActionContainer
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel2Impl: androidx.window.embedding.EmbeddingAdapter this$0
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_REMOTE_INPUT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
kotlinx.coroutines.internal.LockFreeLinkedListKt: int SUCCESS
kotlinx.coroutines.flow.SharedFlowImpl: long replayIndex
androidx.core.graphics.PathParser$PathDataNode: char mType
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_SUCCESS
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.core.app.NotificationCompat: int FOREGROUND_SERVICE_DEFAULT
androidx.window.area.WindowAreaController$Companion: androidx.window.area.WindowAreaController$Companion $$INSTANCE
androidx.core.os.UserHandleCompat: java.lang.reflect.Constructor sUserHandleConstructor
androidx.activity.OnBackPressedDispatcherKt$addCallback$callback$1: kotlin.jvm.functions.Function1 $onBackPressed
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE
androidx.core.widget.PopupWindowCompat: boolean sSetWindowLayoutTypeMethodAttempted
androidx.core.app.RemoteInput$Builder: int mEditChoicesBeforeSending
androidx.core.view.ViewStructureCompat: java.lang.Object mWrappedObj
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterUiDisplayed
androidx.collection.LruCache: java.util.LinkedHashMap map
androidx.core.R$attr: int queryPatterns
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object L$1
androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: kotlin.jvm.functions.Function2 $operation
androidx.core.R$id: int actions
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $partialWindows$inlined
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6 this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1 this$0
kotlinx.coroutines.DefaultExecutor: long DEFAULT_KEEP_ALIVE_MS
kotlin.collections.State: kotlin.collections.State Ready
androidx.viewpager.widget.PagerTitleStrip: int mNonPrimaryAlpha
androidx.activity.SystemBarStyle: int lightScrim
androidx.core.R$id: int action_divider
kotlin.Result$Failure: java.lang.Throwable exception
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSplitAttributesCalculatorValid$1: androidx.window.embedding.SafeActivityEmbeddingComponentProvider this$0
kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_LETTER
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.core.R$dimen: int notification_subtext_size
androidx.loader.R$dimen: int notification_top_pad
androidx.viewpager.R$style: int TextAppearance_Compat_Notification
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String SUNDAY
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int nCollectors
androidx.core.view.ViewKt$doOnDetach$1: android.view.View $this_doOnDetach
androidx.fragment.app.BackStackRecordState: java.lang.String mName
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_VERSION_INC
kotlin.sequences.SequencesKt___SequencesKt$minus$1: kotlin.sequences.Sequence $this_minus
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
kotlinx.coroutines.channels.ChannelIterator$next0$1: int label
androidx.lifecycle.PausingDispatcher: androidx.lifecycle.DispatchQueue dispatchQueue
androidx.viewpager.R$styleable: int GradientColor_android_startY
androidx.core.view.PointerIconCompat: int TYPE_NO_DROP
androidx.core.text.BidiFormatter: char PDF
androidx.versionedparcelable.VersionedParcel: int TYPE_STRING
kotlin.UInt: int SIZE_BYTES
androidx.core.app.AppLaunchChecker: java.lang.String SHARED_PREFS_NAME
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int mask
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: int label
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
androidx.core.view.ViewCompat: int OVER_SCROLL_NEVER
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlin.jvm.functions.Function1 $timeoutMillisSelector
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$2: androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$2 INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler: int CPU_PERMITS_SHIFT
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object L$0
androidx.profileinstaller.ProfileInstaller: int RESULT_META_FILE_REQUIRED_BUT_NOT_FOUND
androidx.viewpager.R$styleable: int GradientColor_android_centerColor
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: long $timeout
androidx.lifecycle.CoroutineLiveData$emitSource$1: int label
kotlinx.coroutines.CompletedExceptionally: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU
kotlin.text.Regex$splitToSequence$1: int $limit
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_CACHED_ENGINE_ID
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object L$0
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_RESULT_INTEROP_RECEIVER_KEY
androidx.core.app.AppLocalesStorageHelper: boolean DEBUG
androidx.core.text.util.FindAddress: java.lang.String WORD_END
androidx.window.embedding.SplitPairRule: boolean clearTop
kotlin.jvm.internal.ByteSpreadBuilder: byte[] values
io.flutter.view.AccessibilityBridge: int ROOT_NODE_ID
kotlin.jvm.internal.ArrayIntIterator: int[] array
androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$0
androidx.core.app.NotificationCompat: int DEFAULT_VIBRATE
androidx.activity.ImmLeaksCleaner: int INIT_SUCCESS
androidx.core.view.PointerIconCompat: int TYPE_ARROW
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: int $index
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_WRONG_CERTIFICATES
kotlinx.coroutines.selects.SelectClause0Impl: java.lang.Object clauseObject
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object proposedUpdate
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_QUEUE_TASK
kotlin.collections.AbstractMap: kotlin.collections.AbstractMap$Companion Companion
kotlinx.coroutines.ResumeOnCompletion: kotlin.coroutines.Continuation continuation
io.flutter.plugin.platform.PlatformPlugin$2: android.view.View val$decorView
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $action$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.Throwable cause
androidx.viewpager.R$id: int notification_main_column
androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp1
androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: java.lang.Object result
androidx.fragment.app.FragmentState: boolean mDetached
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object result
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: java.util.Map listenerToContext
androidx.customview.R$drawable: int notification_bg_normal
androidx.core.view.MotionEventCompat: int AXIS_Y
androidx.fragment.app.FragmentStatePagerAdapter: int BEHAVIOR_SET_USER_VISIBLE_HINT
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: android.view.View val$v
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mContentChangeType
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Matrix mShaderMatrix
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_MULTIPLE
androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment
androidx.core.app.ShareCompat: java.lang.String HISTORY_FILENAME_PREFIX
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: android.media.Image image
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT_ARRAY
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_HTML_ELEMENT
androidx.core.location.LocationCompat: java.lang.String EXTRA_MSL_ALTITUDE_ACCURACY
androidx.fragment.app.FragmentStateManager: java.lang.String ARGUMENTS_KEY
androidx.core.app.AppOpsManagerCompat: int MODE_IGNORED
kotlin.text.Charsets: java.nio.charset.Charset UTF_16LE
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: kotlinx.coroutines.channels.ReceiveChannel $channel
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow2
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
io.flutter.embedding.android.MotionEventTracker: java.lang.String TAG
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_TEXT
androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: int label
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mToAddresses
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String CHINESE
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
androidx.fragment.app.FragmentTransaction: int OP_SHOW
com.getkeepsafe.relinker.BuildConfig: java.lang.String BUILD_TYPE
kotlin.coroutines.CombinedContext$Serialized: long serialVersionUID
kotlin.io.path.ExceptionsCollector: java.util.List collectedExceptions
androidx.window.area.WindowAreaController: androidx.window.area.WindowAreaController$Companion Companion
androidx.core.widget.ScrollerCompat: android.widget.OverScroller mScroller
androidx.core.widget.NestedScrollView: float FLING_DESTRETCH_FACTOR
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kUp
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_IMPELLER_META_DATA_KEY
androidx.customview.R$styleable: int ColorStateListItem_android_lStar
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2 this$0
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: java.util.List mMessages
kotlin.jvm.internal.Ref$LongRef: long element
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1: io.flutter.embedding.engine.systemchannels.ProcessTextChannel this$0
androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String HANDLE_DEEPLINKING_META_DATA_KEY
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mBackStackStates
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int label
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: android.util.SparseBooleanArray $this_valueIterator
androidx.window.R$styleable: int SplitPairRule_splitMinHeightDp
androidx.customview.R$id: int action_container
io.flutter.embedding.android.KeyboardMap$TogglingGoal: long physicalKey
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: int label
androidx.core.location.LocationManagerCompat$CancellableLocationListener: android.os.Handler mTimeoutHandler
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
io.flutter.plugin.platform.PlatformPlugin: java.lang.String TAG
androidx.core.app.NotificationChannelCompat: java.lang.String DEFAULT_CHANNEL_ID
io.flutter.view.VsyncWaiter$FrameCallback: io.flutter.view.VsyncWaiter this$0
androidx.viewpager.widget.PagerTitleStrip: android.widget.TextView mCurrText
androidx.activity.OnBackPressedDispatcher: androidx.activity.OnBackPressedCallback inProgressCallback
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: kotlinx.coroutines.flow.Flow[] $flows
androidx.loader.R$layout: int notification_template_custom_big
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_HYBRID_FALLBACK
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DRAG_CANCEL
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
kotlinx.coroutines.channels.BufferedChannel: long receivers
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: int label
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.lifecycle.Lifecycle $lifecycle
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$3
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs
kotlinx.coroutines.CancellableContinuationImplKt: int DECISION_SHIFT
androidx.core.app.NotificationCompat$CarExtender: android.graphics.Bitmap mLargeIcon
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind API_VERSION
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object result
kotlin.collections.AbstractMap$keys$1: kotlin.collections.AbstractMap this$0
androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl: android.content.ContentProviderClient mClient
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function4 $predicate$inlined
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand START
kotlin.text.MatcherMatchResult: java.util.regex.Matcher matcher
androidx.core.R$styleable: int FontFamily_fontProviderCerts
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object L$0
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption INCLUDE_DIRECTORIES
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
androidx.window.embedding.ExtensionEmbeddingBackend$splitSupportStatus$2: androidx.window.embedding.ExtensionEmbeddingBackend this$0
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String initialRoute
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: int label
androidx.annotation.VisibleForTesting: int PACKAGE_PRIVATE
androidx.core.provider.CallbackWithHandler$2: int val$reason
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object L$0
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList lifecycleCallbacks
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String EXTRA_SHORTCUT_ID
androidx.window.area.WindowAreaControllerImpl: int vendorApiLevel
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int I$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object result
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mBreakStrategy
androidx.core.app.NotificationCompat$Action: int icon
androidx.activity.ComponentActivity$1$2: int val$requestCode
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$3
kotlin.ranges.ClosedDoubleRange: double _endInclusive
androidx.core.content.IntentCompat: java.lang.String EXTRA_HTML_TEXT
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$4
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String METHOD_QUERY_TEXT_ACTIONS
androidx.core.view.HapticFeedbackConstantsCompat: int GESTURE_START
kotlin.io.path.LinkFollowing: java.util.Set nofollowVisitOption
androidx.fragment.app.Fragment$AnimationInfo: java.util.ArrayList mSharedElementSourceNames
androidx.fragment.app.FragmentManager$6: androidx.lifecycle.Lifecycle val$lifecycle
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: java.io.File[] fileList
androidx.core.graphics.ColorUtils: double XYZ_KAPPA
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService mUnusedAppRestrictionsService
androidx.core.view.WindowInsetsControllerCompat: int BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE
androidx.lifecycle.BlockRunner: long timeoutInMs
androidx.core.app.NotificationCompat$Builder: boolean mShowWhen
kotlin.text.RegexKt$fromInt$1$1: int $value
androidx.core.app.AppLocalesStorageHelper: java.lang.String LOCALE_RECORD_FILE_TAG
androidx.window.embedding.SplitAttributes$LayoutDirection: androidx.window.embedding.SplitAttributes$LayoutDirection BOTTOM_TO_TOP
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.ChildHandleNode child
kotlin.text.Typography: char dollar
kotlin.jvm.internal.LongSpreadBuilder: long[] values
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
androidx.fragment.app.FragmentTransaction: int OP_NULL
androidx.core.app.NotificationCompat: int BADGE_ICON_LARGE
androidx.core.app.NotificationCompat$Action$Builder: android.os.Bundle mExtras
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY_INTEROP
androidx.window.R$attr: int splitMaxAspectRatioInPortrait
androidx.window.R$id: int alwaysAllow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$1
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlin.jvm.functions.Function1 defaultKeySelector
androidx.window.layout.WindowMetricsCalculatorCompat: java.util.ArrayList insetsTypeMasks
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.core.view.inputmethod.EditorInfoCompat: int MAX_INITIAL_SELECTION_LENGTH
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: java.lang.Object result
androidx.core.R$id: int tag_on_apply_window_listener
io.flutter.embedding.engine.systemchannels.LifecycleChannel: java.lang.String CHANNEL_NAME
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_LONG_CLICK
androidx.loader.R$id: int right_icon
androidx.core.os.LocaleListCompatWrapper: java.lang.String mStringRepresentation
androidx.loader.R$attr: int fontProviderCerts
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object countOrElement
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback: androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed
kotlinx.coroutines.AwaitKt$joinAll$1: java.lang.Object result
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR
androidx.core.app.ShareCompat$IntentReader: java.lang.String TAG
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: long J$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: int label
androidx.core.view.MotionEventCompat: int ACTION_HOVER_MOVE
androidx.collection.SparseArrayCompat: java.lang.Object DELETED
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object $cnt
kotlin.UIntArray$Iterator: int[] array
androidx.activity.FullyDrawnReporter: boolean reportPosted
androidx.core.text.util.FindAddress: java.lang.String SP
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent mReadPendingIntent
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_LINE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_START_KEY
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: java.util.Map listenerToContext
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelStore mViewModelStore
androidx.core.app.NotificationCompat: int STREAM_DEFAULT
kotlin.text.Typography: char pound
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText mWrapped
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl INSTANCE
androidx.fragment.app.FragmentManager: boolean mStopped
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FLAG_PREFETCH_UNINTERRUPTIBLE
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: int label
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_12
androidx.annotation.experimental.Experimental$Level: androidx.annotation.experimental.Experimental$Level WARNING
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted Lazily
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object L$0
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_START
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlinx.coroutines.channels.ReceiveChannel $second
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.atomic.AtomicBoolean val$running
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$BuilderCompat mBuilderCompat
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: android.os.IBinder mRemote
kotlinx.coroutines.flow.AbstractFlow$collect$1: kotlinx.coroutines.flow.AbstractFlow this$0
androidx.core.R$dimen: int compat_button_padding_horizontal_material
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
androidx.core.app.NotificationCompat: int FLAG_LOCAL_ONLY
kotlinx.coroutines.scheduling.CoroutineScheduler: int maxPoolSize
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.fragment.app.DialogFragment$4: androidx.fragment.app.DialogFragment this$0
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_6
androidx.loader.app.LoaderManagerImpl: java.lang.String TAG
androidx.core.view.inputmethod.EditorInfoCompat: int MEMORY_EFFICIENT_TEXT_LENGTH
io.flutter.embedding.android.KeyboardMap$TogglingGoal: long logicalKey
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: boolean[] $this_asSequence$inlined
kotlin.io.path.LinkFollowing: kotlin.io.path.LinkFollowing INSTANCE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlin.jvm.functions.Function2 $predicate
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator iterator
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldAttachEngineToActivity
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
kotlin.sequences.SequenceBuilderIterator: int state
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object L$0
androidx.core.view.inputmethod.InputConnectionCompat: int INPUT_CONTENT_GRANT_READ_URI_PERMISSION
androidx.core.view.ContentInfoCompat$CompatImpl: android.net.Uri mLinkUri
androidx.core.content.IntentSanitizer: boolean mAllowClipDataText
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
androidx.core.app.ActivityRecreator$3: java.lang.Object val$activityThread
androidx.viewpager.widget.ViewPager$ItemInfo: int position
androidx.core.app.NotificationManagerCompat: int INTERRUPTION_FILTER_UNKNOWN
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState
kotlinx.coroutines.JobSupportKt: int FALSE
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: kotlinx.coroutines.channels.BufferedChannel this$0
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.PlatformViewRenderTarget renderTarget
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
kotlinx.coroutines.InterruptibleKt: int INTERRUPTED
io.flutter.view.AccessibilityBridge: int BOLD_TEXT_WEIGHT_ADJUSTMENT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
androidx.viewpager.widget.ViewPager: float mLastMotionX
androidx.viewpager.R$attr: int fontProviderAuthority
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_MASK
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: char[] $this_withIndex
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
androidx.viewpager.R$styleable: int GradientColorItem_android_color
androidx.window.embedding.SplitController$SplitSupportStatus: androidx.window.embedding.SplitController$SplitSupportStatus$Companion Companion
kotlin.text.CharCategory: kotlin.text.CharCategory CONNECTOR_PUNCTUATION
kotlin.collections.builders.SerializedMap: java.util.Map map
androidx.collection.SimpleArrayMap: int[] mHashes
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.activity.EdgeToEdge: int DefaultDarkScrim
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String STATE_DESCRIPTION_KEY
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: int label
androidx.loader.R$attr: int fontProviderFetchTimeout
kotlinx.coroutines.InterruptibleKt: int FINISHED
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
io.flutter.embedding.engine.dart.DartMessenger: java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages
androidx.loader.R$styleable: int ColorStateListItem_android_color
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
androidx.lifecycle.SavedStateHandle: java.util.Map flows
kotlin.sequences.DropWhileSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$2
kotlin.jvm.internal.ReflectionFactory: java.lang.String KOTLIN_JVM_FUNCTIONS
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: long $timeMillis
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.internal.LockFreeTaskQueue queue
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat OVERLAY
androidx.viewpager.R$id: int action_image
androidx.core.location.LocationManagerCompat$CancellableLocationListener: androidx.core.util.Consumer mConsumer
androidx.core.view.TreeIterator: kotlin.jvm.functions.Function1 getChildIterator
androidx.core.widget.AutoScrollHelper: float DEFAULT_MAXIMUM_EDGE
androidx.viewpager.R$styleable: int GradientColor_android_type
androidx.window.embedding.EmbeddingCompat$setEmbeddingCallback$1: androidx.window.embedding.EmbeddingCompat this$0
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToEmbeddedView
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object L$0
androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments
kotlin.text.CharCategory: java.lang.String code
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int bufferHeight
io.flutter.view.AccessibilityBridge$StringAttribute: int end
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: java.util.Comparator $this_thenBy
androidx.core.view.DisplayCompat: int DISPLAY_SIZE_4K_WIDTH
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State state
androidx.core.app.NotificationCompat$CallStyle: int mCallType
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$2
kotlin.io.path.FileVisitorBuilderImpl: boolean isBuilt
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
com.getkeepsafe.relinker.elf.Elf$Header: int type
androidx.core.content.pm.ShortcutInfoCompat: java.util.Set mCategories
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: boolean[] $this_asIterable$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2 this$0
androidx.customview.R$styleable: int FontFamilyFont_android_fontVariationSettings
kotlin.ULongArray: long[] storage
androidx.core.R$id: int accessibility_custom_action_24
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
androidx.core.location.GpsStatusWrapper: int SBAS_PRN_MIN
androidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus sCompilationStatus
kotlin.jvm.internal.DoubleCompanionObject: int SIZE_BYTES
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: java.lang.Object result
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_END_KEY
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object L$0
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: long index
androidx.core.app.JobIntentService: boolean mInterruptIfStopped
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: kotlin.jvm.functions.Function2 $block
androidx.core.content.pm.ShortcutInfoCompat: int SURFACE_LAUNCHER
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: android.content.pm.PackageManager packageManager
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.graphics.drawable.IconCompat mBigLargeIcon
androidx.core.view.MenuHostHelper: java.lang.Runnable mOnInvalidateMenuCallback
androidx.lifecycle.ProcessLifecycleOwner: android.os.Handler handler
androidx.fragment.app.FragmentTabHost: java.util.ArrayList mTabs
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPE
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: androidx.lifecycle.ProcessLifecycleOwner$Api29Impl INSTANCE
androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask
androidx.window.core.ValidSpecification: java.lang.String tag
androidx.fragment.app.Fragment$10: androidx.fragment.app.Fragment this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int I$0
com.getkeepsafe.relinker.elf.ElfParser: int MAGIC
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object L$0
kotlinx.coroutines.flow.StateFlowImpl: int sequence
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_COMPACT
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
io.flutter.view.AccessibilityBridge$StringAttribute: int start
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection BOTTOM_UP
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver broadcastReceiver
androidx.core.app.NotificationCompat: int MAX_ACTION_BUTTONS
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsDynamic
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention SOURCE
io.flutter.embedding.android.KeyEmbedderResponder$1: int[] $SwitchMap$io$flutter$embedding$android$KeyData$Type
androidx.core.R$color: int call_notification_decline_color
androidx.core.app.JobIntentService$CompatWorkEnqueuer: boolean mLaunchingService
androidx.activity.OnBackPressedDispatcher$Api34Impl: androidx.activity.OnBackPressedDispatcher$Api34Impl INSTANCE
kotlinx.coroutines.internal.OnDemandAllocatingPool: int maxCapacity
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2 INSTANCE
androidx.core.util.TypedValueCompat: float INCHES_PER_PT
androidx.viewpager.R$styleable: int FontFamilyFont_ttcIndex
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECK_STATE_MIXED
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_Y
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_IN
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
kotlin.ranges.OpenEndDoubleRange: double _start
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object L$0
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: java.lang.reflect.Constructor $constructor
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: int label
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: int label
androidx.profileinstaller.ProfileInstaller: java.lang.String PROFILE_FILE
androidx.window.layout.util.ActivityCompatHelperApi24: androidx.window.layout.util.ActivityCompatHelperApi24 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: int label
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.pm.PackageManager mPackageManager
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1 this$0
androidx.core.content.FileProvider: java.io.File DEVICE_ROOT
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_SUBTREE
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onStart
androidx.collection.LruCache: int evictionCount
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object L$0
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray viewWrappers
androidx.core.view.DifferentialMotionFlingController: int mLastProcessedAxis
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: int label
kotlin.io.encoding.Base64Kt: int[] base64UrlDecodeMap
org.intellij.lang.annotations.PrintFormatPattern: java.lang.String PRINT_FORMAT
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: java.nio.file.Path $target
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator
androidx.customview.R$layout: int notification_template_icon_group
kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE
androidx.lifecycle.ViewModel: java.util.Set mCloseables
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlin.jvm.functions.Function3 $transform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String UNIQUE_ID_KEY
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_ON
androidx.core.app.NotificationManagerCompat: java.util.Set sEnabledNotificationListenerPackages
androidx.viewpager.widget.PagerTitleStrip: boolean mUpdatingText
io.flutter.plugin.platform.VirtualDisplayController$2$1: io.flutter.plugin.platform.VirtualDisplayController$2 this$1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object L$0
androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners
androidx.core.location.LocationManagerCompat$LocationListenerKey: java.lang.String mProvider
kotlin.io.path.PathTreeWalk: kotlin.io.path.PathWalkOption[] options
io.flutter.view.AccessibilityBridge: int systemAction
androidx.concurrent.futures.AbstractResolvableFuture$Listener: java.lang.Runnable task
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: int label
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_1
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsImmutable
androidx.fragment.R$id: int visible_removing_fragment_view_tag
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object L$1
androidx.fragment.app.Fragment: boolean mInLayout
io.flutter.plugin.text.ProcessTextPlugin: java.util.Map requestsByCode
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.collection.ArrayMap firstOutViews
androidx.window.area.RearDisplayPresentationSessionPresenterImpl: androidx.window.extensions.area.WindowAreaComponent windowAreaComponent
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.LifecycleEventObserver mObserver
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_TRACKBALL
androidx.core.R$string: int call_notification_answer_action
androidx.fragment.app.FragmentStatePagerAdapter: boolean DEBUG
androidx.core.content.IntentSanitizer: boolean mAllowAnyComponent
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri mDataUri
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: androidx.lifecycle.LifecycleCoroutineScopeImpl this$0
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_PURGE_PERSISTENT_CACHE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.window.area.reflectionguard.WindowAreaComponentValidator: androidx.window.area.reflectionguard.WindowAreaComponentValidator INSTANCE
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: kotlin.jvm.functions.Function2 $onError
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
kotlin.jvm.internal.BooleanCompanionObject: kotlin.jvm.internal.BooleanCompanionObject INSTANCE
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat COLOR_DODGE
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext
androidx.customview.R$attr: int fontProviderAuthority
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String METHOD_START_STYLUS_HANDWRITING
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_width
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: kotlinx.coroutines.flow.Flow $this_asLiveData
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: int label
kotlin.text.CharCategory: kotlin.text.CharCategory START_PUNCTUATION
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngineGroup this$0
androidx.core.view.WindowInsetsAnimationCompat$Callback: android.view.WindowInsets mDispachedInsets
androidx.loader.R$id: int icon_group
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_DISPLAY_INTENT
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: int I$0
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_HIGH
kotlin.ULong: int SIZE_BYTES
androidx.core.R$styleable: int GradientColor_android_endX
androidx.core.app.NotificationCompat$Action: android.os.Bundle mExtras
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object L$0
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.Flow[] $flows
androidx.core.view.ViewCompat: int MEASURED_HEIGHT_STATE_SHIFT
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object L$1
androidx.core.app.NotificationCompat$MessagingStyle$Message: long mTimestamp
androidx.fragment.app.Fragment: boolean mTransitioning
androidx.loader.R$id: int italic
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_HINT_SCREEN_TIMEOUT
androidx.core.app.NotificationCompat: int FOREGROUND_SERVICE_DEFERRED
androidx.window.R$attr: int activityAction
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: int label
kotlin.io.encoding.Base64: boolean isUrlSafe
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlinx.coroutines.channels.ReceiveChannel $this_filter
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_REPLY
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToComponentNames
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsAlwaysBadged
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_LOCUS_ID
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
kotlin.text.Charsets: java.nio.charset.Charset UTF_16BE
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String mPackageName
androidx.core.content.UnusedAppRestrictionsBackportService: java.lang.String ACTION_UNUSED_APP_RESTRICTIONS_BACKPORT_CONNECTION
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
androidx.core.location.LocationRequestCompat$Api19Impl: java.lang.reflect.Method sSetNumUpdatesMethod
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_height
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
androidx.annotation.experimental.Experimental$Level: androidx.annotation.experimental.Experimental$Level ERROR
androidx.core.graphics.drawable.IconCompat: float BLUR_FACTOR
kotlinx.coroutines.DispatchedTaskKt: int MODE_CANCELLABLE_REUSABLE
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_13
androidx.core.location.LocationManagerCompat$CancellableLocationListener: android.location.LocationManager mLocationManager
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onEnter
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.KeyboardManager keyboardManager
androidx.core.app.NotificationCompat$Action$Builder: java.lang.CharSequence mTitle
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlinx.coroutines.channels.ReceiveChannel $other
androidx.window.embedding.SplitAttributes$SplitType: float value
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.adapter.WindowBackend windowBackend
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_PERSON_
kotlin.collections.builders.MapBuilder: int size
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: long[] $this_asList
androidx.customview.widget.ViewDragHelper: int mDragState
kotlinx.coroutines.channels.BroadcastChannelImpl: int capacity
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_WORD
androidx.lifecycle.LiveData: java.lang.Object mPendingData
androidx.core.app.NotificationCompat$CallStyle: java.lang.String KEY_ACTION_PRIORITY
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: int nextConfigGeneration
kotlin.sequences.SubSequence: kotlin.sequences.Sequence sequence
androidx.viewpager.widget.PagerTabStrip: int mIndicatorHeight
androidx.core.animation.AnimatorKt$addListener$4: androidx.core.animation.AnimatorKt$addListener$4 INSTANCE
androidx.core.R$id: int tag_accessibility_pane_title
androidx.core.graphics.drawable.IconCompat: int mType
androidx.window.embedding.SplitAttributes: java.lang.String TAG
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
androidx.customview.R$attr: int fontProviderCerts
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
androidx.activity.Api34Impl: androidx.activity.Api34Impl INSTANCE
androidx.core.content.IntentSanitizer$Builder: int HISTORY_STACK_FLAGS
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedTypes
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$1
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List creationStackTrace
androidx.core.service.quicksettings.PendingIntentActivityWrapper: boolean mIsMutable
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$2
androidx.core.app.NavUtils: java.lang.String PARENT_ACTIVITY
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1 this$0
androidx.core.R$id: int blocking
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: int label
androidx.annotation.experimental.Experimental$Level: androidx.annotation.experimental.Experimental$Level[] $VALUES
androidx.viewpager.R$dimen: int compat_control_corner_material
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY
androidx.core.app.NotificationCompat$CallStyle: android.app.PendingIntent mHangUpIntent
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State INVISIBLE
androidx.core.provider.FontsContractCompat$Columns: java.lang.String TTC_INDEX
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult CANCELLED
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableDeltaModel
androidx.viewpager.widget.ViewPager$PagerObserver: androidx.viewpager.widget.ViewPager this$0
androidx.core.app.NotificationCompat$WearableExtender: int mFlags
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object L$1
kotlinx.coroutines.InterruptibleKt: int INTERRUPTING
androidx.window.R$id: int bottomToTop
androidx.core.R$layout: int notification_action_tombstone
kotlin.ranges.ComparableRange: java.lang.Comparable endInclusive
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: int label
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: int label
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CONVERSATION_TITLE
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread thread
kotlinx.coroutines.JobSupport$onJoin$1: kotlinx.coroutines.JobSupport$onJoin$1 INSTANCE
androidx.window.reflection.WindowExtensionsConstants: java.lang.String EXTENSION_WINDOW_AREA_STATUS_CLASS
kotlinx.coroutines.DefaultExecutor: int debugStatus
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$1
androidx.window.embedding.SplitAttributes$SplitType: androidx.window.embedding.SplitAttributes$SplitType SPLIT_TYPE_EQUAL
androidx.profileinstaller.DexProfileData: java.lang.String apkName
androidx.core.view.MotionEventCompat: int ACTION_SCROLL
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: kotlin.jvm.functions.Function1 $selector
androidx.core.location.GpsStatusWrapper: int BEIDOU_PRN_COUNT
androidx.viewpager.R$attr: int fontProviderCerts
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LTR
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_IF_ROOM
androidx.viewpager.widget.ViewPager: float mFirstOffset
androidx.core.location.LocationCompat: java.lang.String EXTRA_IS_MOCK
androidx.core.graphics.TypefaceCompatApi26Impl: int RESOLVE_BY_FONT_TABLE
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: java.util.concurrent.Executor $executor
androidx.annotation.Dimension$Companion: int SP
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ALARM
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 INSTANCE
kotlin.Pair: java.lang.Object first
androidx.core.os.CancellationSignal: androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener
kotlinx.coroutines.flow.ChannelAsFlow: int consumed
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.graphics.drawable.IconCompat mIcon
androidx.concurrent.futures.AbstractResolvableFuture$Failure: androidx.concurrent.futures.AbstractResolvableFuture$Failure FALLBACK_INSTANCE
androidx.core.graphics.WeightTypefaceApi21: java.lang.reflect.Field sNativeInstance
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.AwaitAll this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
io.flutter.embedding.android.KeyData: boolean synthesized
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int label
androidx.window.embedding.EmbeddingRule: java.lang.String tag
androidx.core.provider.SelfDestructiveThread: int MSG_DESTRUCTION
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object L$2
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SpellCheckChannel spellCheckChannel
androidx.lifecycle.viewmodel.R$id: int view_tree_view_model_store_owner
androidx.window.R$styleable: int[] ActivityRule
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlin.jvm.functions.Function3 transform
com.getkeepsafe.relinker.elf.Elf$ProgramHeader: long type
kotlin.text.DelimitedRangesSequence: int limit
io.flutter.FlutterInjector: boolean accessed
kotlin.UIntArray: int[] storage
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $VALUES
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State state
androidx.profileinstaller.DeviceProfileWriter: byte[] mDesiredVersion
androidx.activity.result.IntentSenderRequest$Builder: int flagsMask
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$1
androidx.annotation.VisibleForTesting$Companion: androidx.annotation.VisibleForTesting$Companion $$INSTANCE
androidx.core.app.FrameMetricsAggregator: int DRAW_INDEX
kotlin.text.CharCategory: int value
androidx.core.R$id: int chronometer
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: int FLUTTER_SPLASH_VIEW_FALLBACK_ID
com.getkeepsafe.relinker.elf.Elf$Header: int phnum
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt: java.lang.String SUSPENDED
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$sharedElementTransition
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
androidx.fragment.app.BackStackRecordState: int[] mCurrentMaxLifecycleStates
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext NonBlockingContext
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionIntentField
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
kotlin.ranges.LongProgressionIterator: long step
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
androidx.core.view.HapticFeedbackConstantsCompat: int GESTURE_THRESHOLD_DEACTIVATE
androidx.core.view.HapticFeedbackConstantsCompat: int CONTEXT_CLICK
androidx.core.text.BidiFormatter: java.lang.String LRM_STRING
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CALL_IS_VIDEO
kotlinx.coroutines.CoroutineName: java.lang.String name
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30: android.view.WindowInsetsController mWindowInsetsController
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState PAUSED
androidx.core.graphics.drawable.IconCompat: java.lang.String TAG
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: boolean sReflectionSucceeded
androidx.fragment.app.Fragment: java.lang.String mTag
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onWindowFocusChangedListeners
androidx.window.core.ActivityComponentInfo: java.lang.String className
androidx.versionedparcelable.VersionedParcel: int EX_UNSUPPORTED_OPERATION
androidx.core.view.MotionEventCompat: int AXIS_RZ
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
androidx.viewpager.widget.PagerTabStrip: java.lang.String TAG
androidx.core.view.WindowInsetsCompat: java.lang.String TAG
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause
io.flutter.plugin.editing.SpellCheckPlugin: io.flutter.embedding.engine.systemchannels.SpellCheckChannel mSpellCheckChannel
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
kotlin.text.Typography: char greaterOrEqual
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: int label
kotlin.text.MatcherMatchResult: java.lang.CharSequence input
androidx.core.transition.TransitionKt$addListener$2: androidx.core.transition.TransitionKt$addListener$2 INSTANCE
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.lang.Iterable $this_groupingBy
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object L$1
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_DRAGGING
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean waitForRestorationData
androidx.core.R$styleable: int ColorStateListItem_alpha
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
androidx.core.content.FileProvider: int mResourceId
io.flutter.view.VsyncWaiter: long refreshPeriodNanos
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object result
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$2: androidx.window.layout.WindowInfoTrackerImpl this$0
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isActivityEmbeddingComponentValid$1: androidx.window.embedding.SafeActivityEmbeddingComponentProvider this$0
androidx.core.util.PatternsCompat: java.lang.String LABEL_CHAR
androidx.core.R$id: int dialog_button
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $transform$inlined
androidx.window.R$styleable: int SplitPlaceholderRule_finishPrimaryWithPlaceholder
androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object L$0
androidx.fragment.R$anim: int fragment_fast_out_extra_slow_in
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] mPersons
androidx.loader.R$style: int TextAppearance_Compat_Notification
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$2
androidx.core.view.ViewGroupKt$children$1: android.view.ViewGroup $this_children
androidx.core.app.NotificationCompat$Builder: java.lang.String mGroupKey
androidx.core.location.GpsStatusWrapper: int GPS_PRN_COUNT
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
androidx.core.R$id: int accessibility_custom_action_4
androidx.core.text.method.LinkMovementMethodCompat: androidx.core.text.method.LinkMovementMethodCompat sInstance
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: byte[] $this_asIterable$inlined
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DART_ENTRYPOINT_URI_META_DATA_KEY
androidx.customview.R$styleable: int GradientColor_android_endX
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated
kotlin.collections.AbstractSet: kotlin.collections.AbstractSet$Companion Companion
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_REPEAT
androidx.customview.R$styleable: int FontFamilyFont_android_font
kotlinx.coroutines.channels.Channel: int BUFFERED
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map mChildNonConfigs
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int I$1
androidx.core.content.pm.ShortcutInfoCompat: android.os.UserHandle mUser
androidx.viewpager.R$id: int line3
kotlinx.coroutines.internal.ClassValueCtorCache: kotlinx.coroutines.internal.ClassValueCtorCache$cache$1 cache
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: kotlin.reflect.KClass clazzU
androidx.loader.R$drawable: int notification_action_background
androidx.window.R$attr: int splitRatio
androidx.core.view.DifferentialMotionFlingController: int mLastProcessedDeviceId
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CALL_TYPE
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$1
androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched
androidx.core.view.MenuHostHelper: java.util.Map mProviderToLifecycleContainers
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal threadLocal
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object receiveResult
androidx.window.layout.SafeWindowLayoutComponentProvider: java.lang.ClassLoader loader
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level ERROR
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] $VALUES
androidx.loader.R$attr: int fontProviderAuthority
io.flutter.embedding.android.KeyData$DeviceType: long value
androidx.fragment.app.SpecialEffectsController$Operation: java.util.List _effects
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
androidx.core.content.IntentSanitizer: java.lang.String TAG
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent mReplyPendingIntent
androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentResultListener val$listener
androidx.customview.R$dimen: int compat_button_padding_horizontal_material
kotlin.jvm.internal.ShortCompanionObject: int SIZE_BYTES
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean handleDeeplinking
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
androidx.core.provider.FontsContractCompat$FontInfo: int mResultCode
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
androidx.window.core.ConsumerAdapter$ConsumerHandler: kotlin.jvm.functions.Function1 consumer
androidx.window.embedding.SplitAttributes: androidx.window.embedding.SplitAttributes$SplitType splitType
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.graphics.SurfaceTexture surfaceTexture
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: kotlin.jvm.functions.Function3 $action
io.flutter.view.AccessibilityBridge: int FOCUSABLE_FLAGS
androidx.core.internal.view.SupportMenu: int CATEGORY_MASK
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
androidx.window.R$attr: int clearTop
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: kotlinx.coroutines.channels.SendChannel $this_trySendBlocking
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_FILES
androidx.loader.content.ModernAsyncTask$AsyncTaskResult: java.lang.Object[] mData
androidx.window.core.FailedSpecification: androidx.window.core.VerificationMode verificationMode
androidx.core.app.NotificationCompat$Builder: boolean mSilent
kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.coroutines.CoroutineContext $context
androidx.collection.LongSparseArray: java.lang.Object[] mValues
androidx.core.text.util.LocalePreferences$TemperatureUnit: java.lang.String U_EXTENSION_TAG
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object L$0
androidx.lifecycle.LifecycleKt$eventFlow$1$1: androidx.lifecycle.Lifecycle $this_eventFlow
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Object key
io.flutter.embedding.android.FlutterFragment: int FLUTTER_VIEW_ID
androidx.window.core.Bounds: int top
androidx.lifecycle.ProcessLifecycleOwner: java.lang.Runnable delayedPauseRunnable
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_NOT_FOUND
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
androidx.core.R$id: int accessibility_custom_action_18
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: int label
androidx.core.util.PatternsCompat: java.lang.String PROTOCOL
kotlin.math.MathKt: double PI
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: androidx.lifecycle.LifecycleCoroutineScope this$0
androidx.fragment.app.Fragment: boolean mDetached
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat COLOR
androidx.loader.content.ModernAsyncTask: java.util.concurrent.FutureTask mFuture
androidx.customview.R$styleable: int[] FontFamilyFont
androidx.collection.ArraySet: int[] mHashes
androidx.core.app.JobIntentService$JobWorkEnqueuer: android.app.job.JobInfo mJobInfo
androidx.lifecycle.BlockRunner$maybeRun$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object L$1
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation: int containerId
androidx.core.util.TimeUtils: int SECONDS_PER_MINUTE
androidx.customview.R$id: int right_icon
androidx.core.view.DragStartHelper: boolean mDragging
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String EXTRA_INPUT_CONTENT_INFO
androidx.customview.widget.ViewDragHelper: int EDGE_TOP
androidx.core.view.accessibility.AccessibilityRecordCompat: android.view.accessibility.AccessibilityRecord mRecord
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: int I$0
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List ANDROID_VIEWMODEL_SIGNATURE
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: kotlinx.coroutines.flow.internal.SafeCollector $this_checkContext
androidx.lifecycle.DispatchQueue: boolean finished
androidx.core.location.GnssStatusWrapper: android.location.GnssStatus mWrapped
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: int label
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sStableInsets
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_OUTSIDE
androidx.lifecycle.viewmodel.CreationExtras: java.util.Map map
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
androidx.annotation.VisibleForTesting: int PRIVATE
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SATURATION
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object L$0
androidx.collection.CircularArray: int mHead
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] mFonts
androidx.core.location.GpsStatusWrapper: int mCachedSatelliteCount
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $action$inlined
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: int I$0
androidx.customview.R$styleable: int FontFamilyFont_fontWeight
androidx.loader.R$id: int tag_transition_group
androidx.core.graphics.ColorUtils: int MIN_ALPHA_SEARCH_PRECISION
androidx.versionedparcelable.VersionedParcel: int TYPE_PARCELABLE
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String FONT_FAMILY_CLASS
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.app.GrammaticalInflectionManagerCompat: int GRAMMATICAL_GENDER_NOT_SPECIFIED
androidx.window.R$styleable: int SplitPlaceholderRule_tag
kotlin.io.encoding.DecodeInputStream: byte[] byteBuffer
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
kotlinx.coroutines.sync.MutexImpl$onLock$1: kotlinx.coroutines.sync.MutexImpl$onLock$1 INSTANCE
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinHeightDp
androidx.lifecycle.DispatchQueue: boolean paused
kotlin.jvm.internal.TypeReference: kotlin.jvm.internal.TypeReference$Companion Companion
kotlin.text.StringsKt__StringsKt$splitToSequence$2: java.lang.CharSequence $this_splitToSequence
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlin.jvm.internal.CallableReference: java.lang.String signature
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
androidx.viewpager.R$dimen: int notification_main_column_padding_top
androidx.loader.R$dimen: int notification_content_margin_start
androidx.annotation.VisibleForTesting: int PROTECTED
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: long $initialDelayMillis
kotlinx.coroutines.channels.LazyBroadcastCoroutine: kotlin.coroutines.Continuation continuation
kotlin.io.path.PathNode: kotlin.io.path.PathNode parent
androidx.core.R$styleable: int ColorStateListItem_android_color
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String TAG
androidx.core.R$dimen: int compat_notification_large_icon_max_width
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: androidx.lifecycle.Observer $observer
androidx.core.app.NotificationCompatJellybean: boolean sActionsAccessFailed
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
androidx.viewpager.widget.ViewPager: int mDrawingOrder
androidx.fragment.app.Fragment$9: androidx.arch.core.util.Function val$registryProvider
androidx.core.util.PatternsCompat: java.lang.String WEB_URL_WITH_PROTOCOL
kotlin.io.path.PathTreeWalk$dfsIterator$1: kotlin.io.path.PathTreeWalk this$0
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: java.lang.String SPAN_ID
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type
androidx.core.view.HapticFeedbackConstantsCompat: int KEYBOARD_RELEASE
io.flutter.embedding.engine.dart.DartMessenger: java.util.WeakHashMap createdTaskQueues
androidx.core.view.ContentInfoCompat: int SOURCE_PROCESS_TEXT
androidx.fragment.app.FragmentManager$8: androidx.fragment.app.FragmentManager this$0
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.LiveData $this_asFlow
kotlin.random.XorWowRandom: int y
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sAttachInfoField
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator $this_asSequence$inlined
androidx.core.view.ContentInfoCompat$CompatImpl: int mFlags
androidx.core.graphics.WeightTypefaceApi21: java.lang.String NATIVE_INSTANCE_FIELD
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.StackTraceElement ARTIFICIAL_FRAME
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_SKIA_DETERMINISTIC_RENDERING
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_WRONG_FRAGMENT_CONTAINER
androidx.customview.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.viewpager.R$id: int notification_main_column_container
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_FROZEN
androidx.loader.R$attr: int ttcIndex
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.viewpager.R$styleable: int GradientColor_android_centerX
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType COLOR
androidx.core.app.ShareCompat$IntentReader: android.content.ComponentName mCallingActivity
kotlinx.coroutines.AwaitAll: int notCompletedCount
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.lifecycle.LiveDataKt$observe$wrappedObserver$1: kotlin.jvm.functions.Function1 $onChanged
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
androidx.core.util.LruCacheKt$lruCache$4: kotlin.jvm.functions.Function1 $create
androidx.fragment.app.BackStackRecordState: java.util.ArrayList mFragmentWhos
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlin.text.MatcherMatchResult$groups$1$iterator$1: kotlin.text.MatcherMatchResult$groups$1 this$0
io.flutter.embedding.android.FlutterView: androidx.core.util.Consumer windowInfoListener
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.OnApplyWindowInsetsListener val$listener
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.graphics.Insets[] mInsetsTypeMask
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1 INSTANCE
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitRule$FinishBehavior finishPrimaryWithPlaceholder
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlinx.coroutines.flow.Flow $this_transformWhile
androidx.fragment.app.ListFragment$2: androidx.fragment.app.ListFragment this$0
androidx.tracing.Trace: java.lang.reflect.Method sAsyncTraceEndMethod
androidx.core.view.HapticFeedbackConstantsCompat: int TEXT_HANDLE_MOVE
com.getkeepsafe.relinker.ReLinkerInstance$2: java.lang.String val$mappedLibraryName
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion Companion
androidx.lifecycle.ComputableLiveData: java.util.concurrent.Executor executor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object L$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
androidx.viewpager.R$dimen: int notification_small_icon_background_padding
androidx.core.graphics.WeightTypefaceApi26: androidx.collection.LongSparseArray sWeightTypefaceCache
androidx.fragment.app.Fragment$7: androidx.fragment.app.Fragment this$0
androidx.fragment.app.SpecialEffectsController: java.util.List pendingOperations
androidx.core.location.LocationCompat: java.lang.reflect.Field sFieldsMaskField
androidx.core.net.MailTo: java.lang.String TO
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: kotlin.jvm.functions.Function1 $block
androidx.core.graphics.ColorUtils: int MIN_ALPHA_SEARCH_MAX_ITERATIONS
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: int label
io.flutter.plugin.common.BasicMessageChannel: java.lang.String CHANNEL_BUFFERS_CHANNEL
kotlinx.coroutines.channels.BufferedChannelKt: long EB_COMPLETED_PAUSE_EXPAND_BUFFERS_BIT
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_USE_TEST_FONTS
kotlin.jvm.internal.Ref$ShortRef: short element
kotlinx.coroutines.sync.SemaphoreImpl: kotlin.jvm.functions.Function1 onCancellationRelease
androidx.core.location.LocationRequestCompat: long PASSIVE_INTERVAL
androidx.core.app.NotificationCompat$Action$Builder: android.app.PendingIntent mIntent
android.support.v4.os.ResultReceiver$MyResultReceiver: android.support.v4.os.ResultReceiver this$0
kotlin.collections.builders.ListBuilder$Itr: kotlin.collections.builders.ListBuilder list
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener this$0
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: int label
androidx.core.R$layout: int notification_template_custom_big
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: java.util.Comparator $comparator
androidx.core.app.RemoteActionCompat: boolean mEnabled
androidx.core.app.Person: java.lang.CharSequence mName
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.flow.Flow flow
kotlin.collections.builders.MapBuilder$Itr: int lastIndex
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
kotlin.reflect.KTypeProjection$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.view.ViewKt$allViews$1: android.view.View $this_allViews
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: java.lang.String TAG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
androidx.profileinstaller.Encoding: int UINT_16_SIZE
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object L$0
androidx.core.app.NotificationCompat: int FLAG_ONGOING_EVENT
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SYSTEM
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry savedStateRegistry
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: int $index
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
androidx.viewpager.R$layout: int notification_template_part_chronometer
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Key key
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_NotReady
androidx.core.view.OneShotPreDrawListener: android.view.ViewTreeObserver mViewTreeObserver
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String STYLUS_HANDWRITING_ENABLED_KEY
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable currentCancellable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
kotlinx.coroutines.NonCancellable: java.lang.String message
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
androidx.fragment.app.Fragment$4: androidx.fragment.app.Fragment this$0
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: java.util.concurrent.ExecutorService executor
androidx.core.app.NotificationCompat$Builder: java.lang.String mShortcutId
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$Policy LAX
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: java.lang.ref.WeakReference completerWeakReference
androidx.core.app.FrameMetricsAggregator: int DELAY_INDEX
kotlinx.coroutines.BuildersKt__Builders_commonKt: int RESUMED
androidx.customview.R$styleable: int[] GradientColor
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitRule$FinishBehavior finishSecondaryWithPrimary
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat$Impl mImpl
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory
kotlin.collections.builders.MapBuilder: int hashShift
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: short[] $this_asList
androidx.loader.content.ModernAsyncTask: java.util.concurrent.atomic.AtomicBoolean mCancelled
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
kotlin.collections.AbstractList$SubList: int _size
androidx.window.R$styleable: int SplitPairRule_animationBackgroundColor
androidx.core.text.util.LinkifyCompat: java.lang.String[] EMPTY_STRING
androidx.core.app.NotificationCompat$Builder: android.app.Notification mPublicVersion
kotlinx.coroutines.future.FutureKt$await$2$1: kotlinx.coroutines.future.ContinuationHandler $consumer
kotlin.UnsafeLazyImpl: kotlin.jvm.functions.Function0 initializer
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodClearSplitInfoCallbackValid$1: androidx.window.embedding.SafeActivityEmbeddingComponentProvider this$0
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult[] $VALUES
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: java.lang.Object result
kotlinx.coroutines.internal.WeakMapCtorCache: java.util.concurrent.locks.ReentrantReadWriteLock cacheLock
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$1
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: int label
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String pathToBundle
io.flutter.plugin.platform.VirtualDisplayController: int viewId
kotlin.ranges.ULongProgressionIterator: boolean hasNext
androidx.activity.SystemBarStyle: androidx.activity.SystemBarStyle$Companion Companion
kotlin.InitializedLazyImpl: java.lang.Object value
androidx.core.content.pm.ShortcutInfoCompat: boolean mHasKeyFieldsOnly
androidx.loader.content.ModernAsyncTask: java.lang.String LOG_TAG
androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: java.lang.Object[] $elements$inlined
androidx.concurrent.futures.AbstractResolvableFuture$Failure: java.lang.Throwable exception
kotlin.jvm.internal.ArrayLongIterator: int index
androidx.fragment.app.FragmentTransitionImpl$1: int val$numSharedElements
kotlinx.coroutines.LazyStandaloneCoroutine: kotlin.coroutines.Continuation continuation
kotlin.time.Duration: long ZERO
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
kotlinx.coroutines.channels.BufferedChannelKt: long EB_COMPLETED_COUNTER_MASK
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_RIGHT
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: io.flutter.embedding.engine.systemchannels.KeyboardChannel this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$0
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame lastObservedFrame
androidx.fragment.app.BackStackRecordState: int mBreadCrumbTitleRes
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader
androidx.core.app.NotificationCompat$InboxStyle: java.util.ArrayList mTexts
androidx.core.util.Pair: java.lang.Object second
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlin.jvm.internal.Ref$ObjectRef stolenTask
androidx.loader.R$dimen: int notification_small_icon_background_padding
androidx.core.R$drawable: int notification_bg_normal
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: android.net.Uri mLinkUri
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object L$0
androidx.core.R$dimen: int notification_media_narrow_margin
androidx.activity.R$id: int view_tree_on_back_pressed_dispatcher_owner
androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModelProvider$Factory$Companion Companion
androidx.core.graphics.WeightTypefaceApi14: java.lang.reflect.Field sNativeInstance
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object result
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT
kotlin.jvm.internal.ShortCompanionObject: short MIN_VALUE
androidx.core.R$attr: int fontProviderFetchTimeout
kotlin.math.Constants: double taylor_n_bound
androidx.viewpager.R$id: int icon
kotlin.time.DurationKt: long MAX_NANOS
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_UNDEFINED
androidx.fragment.app.ListFragment: int INTERNAL_EMPTY_ID
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
androidx.window.embedding.SplitController$splitInfoList$1$2: androidx.window.embedding.SplitController this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$3
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DISABLE_IMPELLER
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: int label
androidx.core.content.res.CamColor: float mChroma
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4 this$0
androidx.window.layout.util.DisplayCompatHelperApi17: androidx.window.layout.util.DisplayCompatHelperApi17 INSTANCE
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String ON_BACK_CALLBACK_ENABLED_KEY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object L$0
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1: androidx.window.SafeWindowExtensionsProvider this$0
kotlin.text.CharCategory: kotlin.text.CharCategory[] $VALUES
androidx.loader.R$integer: int status_bar_notification_info_maxnum
kotlinx.coroutines.JobSupportKt: int TRUE
androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl: android.content.ContentProviderClient mClient
androidx.core.text.util.FindAddress: java.util.regex.Pattern sHouseNumberRe
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: long mLatestTimestamp
androidx.core.location.LocationRequestCompat$Api19Impl: java.lang.Class sLocationRequestClass
io.flutter.view.AccessibilityBridge: float SCROLL_EXTENT_FOR_INFINITY
kotlin.jvm.internal.Lambda: int arity
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll this$0
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.lifecycle.ComputableLiveData: java.util.concurrent.atomic.AtomicBoolean invalid
kotlin.sequences.MergingSequence$iterator$1: kotlin.sequences.MergingSequence this$0
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.String FAST_SERVICE_LOADER_PROPERTY_NAME
androidx.versionedparcelable.VersionedParcel: int EX_ILLEGAL_ARGUMENT
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: kotlin.jvm.functions.Function2 $transform
androidx.loader.R$attr: int fontProviderQuery
androidx.core.view.MotionEventCompat: int AXIS_RY
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$0
androidx.core.text.util.FindAddress: androidx.core.text.util.FindAddress$ZipRange[] sStateZipCodeRanges
kotlinx.coroutines.LazyDeferredCoroutine: kotlin.coroutines.Continuation continuation
androidx.core.view.ViewConfigurationCompat: int RESOURCE_ID_SUPPORTED_BUT_NOT_FOUND
androidx.core.graphics.ColorUtils: double XYZ_EPSILON
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: int label
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: android.app.PendingIntent mReplyPendingIntent
kotlinx.coroutines.selects.OnTimeout$selectClause$1: kotlinx.coroutines.selects.OnTimeout$selectClause$1 INSTANCE
androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
androidx.core.R$dimen: int notification_large_icon_width
androidx.core.app.NavUtils: java.lang.String TAG
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$1
kotlin.collections.MovingSubList: int _size
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: boolean closed
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: android.view.WindowInsetsAnimationController mController
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode HYBRID_ONLY
kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
io.flutter.Log: int logLevel
androidx.profileinstaller.ProfileInstaller: int RESULT_BASELINE_PROFILE_NOT_FOUND
androidx.core.graphics.drawable.IconCompat: int TYPE_URI_ADAPTIVE_BITMAP
androidx.loader.R$styleable: int FontFamily_fontProviderPackage
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mRemoteInputs
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: int label
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CUSTOM_SIZE_PRESET
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1 this$0
androidx.core.view.MotionEventCompat: int ACTION_HOVER_EXIT
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
androidx.core.view.ViewCompat: int MEASURED_STATE_MASK
androidx.core.R$id: int accessibility_custom_action_6
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlin.jvm.functions.Function2 $predicate
kotlin.collections.ArrayAsCollection: boolean isVarargs
com.getkeepsafe.relinker.elf.Elf$Header: boolean bigEndian
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String packageName
kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION
kotlin.UInt: int MIN_VALUE
androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object L$1
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mFrameworkMinimumSdk
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlinx.coroutines.flow.Flow $upstream
io.flutter.plugin.editing.TextEditingDelta: int newComposingEnd
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: kotlin.jvm.functions.Function2 $predicate
androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Y
androidx.fragment.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
androidx.profileinstaller.ProfileInstaller$2: java.lang.String TAG
androidx.core.text.util.LocalePreferences$HourCycle: java.lang.String DEFAULT
androidx.loader.R$styleable: int GradientColor_android_tileMode
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_CAR_EXTENDER
androidx.core.content.res.CamColor: float DL_MAX
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$0
kotlin.sequences.TakeWhileSequence$iterator$1: int nextState
androidx.core.graphics.drawable.RoundedBitmapDrawable: int DEFAULT_PAINT_FLAGS
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
androidx.customview.widget.ViewDragHelper: int mActivePointerId
androidx.core.provider.RequestExecutor$ReplyRunnable: androidx.core.util.Consumer mConsumer
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: int label
io.flutter.plugin.platform.PlatformViewWrapper: io.flutter.plugin.platform.PlatformViewRenderTarget renderTarget
kotlin.random.XorWowRandom: int addend
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: int label
io.flutter.embedding.engine.FlutterEngineGroupCache: java.util.Map cachedEngineGroups
kotlinx.coroutines.channels.Channel$Factory: java.lang.String DEFAULT_BUFFER_PROPERTY_NAME
androidx.core.widget.NestedScrollView: int mLastScrollerY
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality POP_DIRECTIONAL_FORMAT
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String TUESDAY
androidx.core.widget.EdgeEffectCompat: android.widget.EdgeEffect mEdgeEffect
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object result
androidx.core.R$string: int call_notification_hang_up_action
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set flags
androidx.window.layout.adapter.extensions.MulticastConsumer: java.util.Set registeredListeners
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy mLocalPathStrategy
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality PARAGRAPH_SEPARATOR
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_10
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.fragment.app.Fragment$1: androidx.fragment.app.Fragment this$0
androidx.lifecycle.SavedStateHandleSupport: java.lang.String SAVED_STATE_KEY
kotlinx.coroutines.sync.SemaphoreSegment: java.util.concurrent.atomic.AtomicReferenceArray acquirers
kotlin.io.encoding.DecodeInputStream: boolean isClosed
androidx.loader.R$dimen: int notification_action_text_size
androidx.activity.ComponentActivity$1$2: androidx.activity.ComponentActivity$1 this$1
androidx.customview.widget.ViewDragHelper$2: androidx.customview.widget.ViewDragHelper this$0
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: java.util.concurrent.ExecutorService executorService
kotlinx.coroutines.DefaultExecutor: long KEEP_ALIVE_NANOS
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_KEY
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
androidx.customview.R$id: int action_divider
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: int mThemeHash
kotlin.sequences.FlatteningSequence$iterator$1: kotlin.sequences.FlatteningSequence this$0
androidx.viewpager.R$string: int status_bar_notification_info_overflow
androidx.window.embedding.SplitController$splitInfoList$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: int label
androidx.core.R$id: int accessibility_custom_action_3
androidx.core.provider.FontRequest: int mCertificatesArray
androidx.core.app.NotificationCompat: java.lang.String EXTRA_HANG_UP_INTENT
androidx.customview.R$dimen: int notification_action_icon_size
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean[] $this_asList
androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceEndMethod
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow2$inlined
kotlinx.coroutines.selects.SelectImplementation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater state$FU
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object result
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_flattenConcat$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object L$0
androidx.window.area.WindowAreaCapability$Status: java.lang.String description
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
androidx.lifecycle.SavedStateHandle: java.lang.String KEYS
androidx.fragment.app.BackStackState: java.util.List mFragments
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: long $timeoutMillis
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: int label
androidx.window.layout.adapter.sidecar.SidecarCompat: java.lang.String TAG
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable start
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.content.Context $context
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_CACHED_ENGINE_GROUP_ID
kotlinx.coroutines.scheduling.CoroutineScheduler: int corePoolSize
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: kotlin.jvm.functions.Function3 $copyAction
kotlin.io.encoding.EncodeOutputStream: byte[] byteBuffer
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.jvm.functions.Function3 $transform
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
androidx.core.R$id: int text
androidx.core.text.BidiFormatter: char LRM
androidx.core.location.LocationManagerCompat$LocationListenerTransport: java.util.concurrent.Executor mExecutor
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: long J$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.activity.ImmLeaksCleaner: int NOT_INITIALIAZED
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: int fileIndex
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater
kotlin.io.ByteStreamsKt$iterator$1: int nextByte
androidx.fragment.app.FragmentTabHost$DummyTabFactory: android.content.Context mContext
io.flutter.plugin.common.ErrorLogResult: java.lang.String tag
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
io.flutter.BuildConfig: boolean RELEASE
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REPORT_VIEW_IDS
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: boolean[] $this_withIndex
androidx.profileinstaller.ProfileInstaller: int DIAGNOSTIC_CURRENT_PROFILE_EXISTS
kotlin.jvm.internal.ArrayFloatIterator: float[] array
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future
androidx.core.animation.AnimatorKt$addListener$3: androidx.core.animation.AnimatorKt$addListener$3 INSTANCE
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$InternalHandler sHandler
androidx.viewpager.widget.PagerTitleStrip: boolean mUpdatingPositions
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
androidx.core.view.ViewCompat: int SCROLL_AXIS_VERTICAL
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlin.jvm.functions.Function2 $predicate
androidx.loader.content.Loader: boolean mStarted
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
kotlin.SafePublicationLazyImpl: java.lang.Object _value
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_SHOWING_HINT
androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions
androidx.core.text.util.LocalePreferences$HourCycle: java.lang.String H23
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.core.util.LruCacheKt$lruCache$3: androidx.core.util.LruCacheKt$lruCache$3 INSTANCE
androidx.core.util.PatternsCompat: java.lang.String TLD
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.view.Window$OnFrameMetricsAvailableListener mListener
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_RENDEZVOUS
androidx.core.view.MotionEventCompat: int AXIS_RTRIGGER
androidx.customview.R$dimen: int compat_button_inset_horizontal_material
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: kotlinx.coroutines.flow.DistinctFlowImpl$collect$2 this$0
kotlin.random.XorWowRandom: int x
kotlin.text.Typography: char almostEqual
androidx.fragment.app.FragmentManager$ClearBackStackState: androidx.fragment.app.FragmentManager this$0
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: androidx.lifecycle.Lifecycle$State $minState
androidx.activity.result.IntentSenderRequest: android.content.Intent fillInIntent
kotlinx.coroutines.selects.SelectImplementation: kotlin.coroutines.CoroutineContext context
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer
androidx.core.app.NotificationManagerCompat: int INTERRUPTION_FILTER_ALARMS
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object result
androidx.core.app.Person: java.lang.String URI_KEY
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
androidx.core.app.RemoteInput: java.lang.CharSequence mLabel
androidx.activity.OnBackPressedDispatcher$4: androidx.activity.OnBackPressedDispatcher this$0
androidx.viewpager.widget.PagerTitleStrip: int[] TEXT_ATTRS
androidx.window.R$styleable: int[] ActivityFilter
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.graphics.Insets mLowerBound
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int HOVER
androidx.loader.app.LoaderManagerImpl: boolean DEBUG
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat
kotlinx.coroutines.flow.StartedWhileSubscribed: long replayExpiration
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue
androidx.core.R$id: int italic
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_DART_PROFILING
kotlin.jvm.internal.LongCompanionObject: int SIZE_BITS
kotlin.text.Regex: java.util.Set _options
androidx.core.app.MultiWindowModeChangedInfo: android.content.res.Configuration newConfiguration
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object $initialValue
kotlin.text.RegexOption: kotlin.text.RegexOption CANON_EQ
kotlin.text.CharCategory: kotlin.text.CharCategory LOWERCASE_LETTER
androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_CONTINUE_ON_SUBTREE
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl INSTANCE
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: kotlin.jvm.functions.Function3 $copyAction
androidx.core.app.ActivityCompat$1: android.app.Activity val$activity
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4: java.util.stream.DoubleStream $this_asSequence$inlined
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: java.util.HashMap tagRuleMap
kotlin.DeprecationLevel: kotlin.DeprecationLevel WARNING
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: int label
androidx.core.text.util.LinkifyCompat$LinkSpec: android.text.style.URLSpan frameworkAddedSpan
androidx.core.app.NotificationCompat$CallStyle: int CALL_TYPE_UNKNOWN
androidx.customview.R$id: int normal
kotlinx.coroutines.internal.LimitedDispatcher$Worker: kotlinx.coroutines.internal.LimitedDispatcher this$0
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: int label
androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel cached
kotlin.coroutines.jvm.internal.DebugMetadataKt: int COROUTINES_DEBUG_METADATA_VERSION
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_MAX
androidx.window.area.WindowAreaInfo: android.os.Binder token
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect
androidx.viewpager.R$attr: int ttcIndex
androidx.core.os.MessageCompat: boolean sTryIsAsynchronous
androidx.core.R$layout: int notification_template_icon_group
kotlin.text.ScreenFloatValueRegEx: kotlin.text.ScreenFloatValueRegEx INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: int label
androidx.core.app.JobIntentService: boolean mStopped
androidx.fragment.app.ListFragment: android.os.Handler mHandler
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$2
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.TransparencyMode transparencyMode
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl INSTANCE
androidx.viewpager.R$id: int tag_transition_group
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlin.jvm.functions.Function3 $block
androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementSourceNames
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_COMPLETED
androidx.profileinstaller.WritableFileSection: androidx.profileinstaller.FileSectionType mType
androidx.core.app.NotificationCompat: int PRIORITY_MAX
androidx.customview.R$id: int notification_main_column_container
androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_LAUNCHED_KEYS
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.core.view.ViewCompat: java.lang.reflect.Method sDispatchStartTemporaryDetach
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler this$0
androidx.core.R$styleable: int ColorStateListItem_android_alpha
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: kotlin.jvm.functions.Function3 $transform$inlined
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mLaunchedFragments
kotlin.text.RegexOption: kotlin.text.RegexOption IGNORE_CASE
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap observerMap
androidx.profileinstaller.ProfileTranscoder: int STARTUP
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Style mStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
kotlin.text.Typography: char lessOrEqual
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
androidx.viewpager.widget.PagerTitleStrip: int mGravity
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1: androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect this$0
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlinx.coroutines.flow.Flow $upstream
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mBccAddresses
androidx.fragment.app.FragmentTransitionCompat21$2: java.util.ArrayList val$exitingViews
androidx.window.embedding.SplitRule: int SPLIT_MIN_DIMENSION_ALWAYS_ALLOW
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY_GETTER
androidx.core.R$dimen: int notification_small_icon_background_padding
androidx.loader.R$styleable: int FontFamilyFont_font
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance variance
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: kotlin.jvm.functions.Function2 $block
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_IMPELLER
kotlinx.coroutines.ThreadState: int _state
io.flutter.embedding.android.KeyboardMap$1: long serialVersionUID
androidx.customview.R$dimen: int compat_button_inset_vertical_material
androidx.core.graphics.drawable.IconCompat: int mInt2
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: int label
androidx.core.provider.SelfDestructiveThread: android.os.HandlerThread mThread
androidx.core.view.ViewCompat: int MEASURED_SIZE_MASK
androidx.lifecycle.EmittedSource$dispose$1: int label
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_CHOICES
kotlin.sequences.IndexingSequence$iterator$1: java.util.Iterator iterator
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind AT_MOST_ONCE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: java.lang.Object result
androidx.core.app.NotificationChannelCompat: java.lang.String mConversationId
androidx.viewpager.R$dimen: int compat_button_inset_vertical_material
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $initialDelayMillis
androidx.window.embedding.SplitPairFilter: androidx.window.core.ActivityComponentInfo _primaryActivityName
androidx.window.area.WindowAreaControllerImpl: androidx.window.area.WindowAreaControllerImpl$Companion Companion
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
androidx.core.app.NotificationChannelCompat: int mLightColor
androidx.window.embedding.SplitAttributesCalculatorParams: java.lang.String splitRuleTag
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: int label
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Z
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent actionIntent
androidx.activity.result.contract.ActivityResultContract$SynchronousResult: java.lang.Object value
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_JOYSTICK
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: java.lang.String TAG
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateParentMetricsPredicate$1: android.content.Context $context
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_VERBOSE_LOGGING
androidx.core.R$drawable: int notification_template_icon_low_bg
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
kotlin.collections.State: kotlin.collections.State[] $VALUES
kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.content.IntentSanitizer: boolean mAllowSourceBounds
kotlinx.coroutines.DisposeOnCancel: kotlinx.coroutines.DisposableHandle handle
androidx.core.app.NotificationCompat: int VISIBILITY_SECRET
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_SMALL
androidx.fragment.app.FragmentTransaction: int mEnterAnim
kotlin.sequences.DropSequence$iterator$1: java.util.Iterator iterator
kotlin.io.encoding.EncodeOutputStream: boolean isClosed
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.ColorStateList mValue
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: int encodedValue
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlin.coroutines.CoroutineContext $scopeContext
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.view.animation.Animation animation
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: kotlin.reflect.TypesJVMKt$typeToString$unwrap$1 INSTANCE
androidx.window.area.WindowAreaControllerImpl: androidx.window.extensions.area.WindowAreaComponent windowAreaComponent
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi1: android.os.Handler mHandler
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers
kotlin.io.path.PathNode: java.nio.file.Path path
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
androidx.core.widget.AutoScrollHelper: boolean mExclusive
androidx.savedstate.R$id: int view_tree_saved_state_registry_owner
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod
androidx.startup.StartupLogger: boolean DEBUG
androidx.core.R$attr: int alpha
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1 INSTANCE
io.flutter.embedding.android.KeyData: io.flutter.embedding.android.KeyData$DeviceType deviceType
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$3
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$4
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsOut
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
androidx.core.content.res.ComplexColorCompat: int mColor
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange EMPTY
androidx.core.text.BidiFormatter: int mFlags
androidx.core.app.NotificationManagerCompat: android.content.Context mContext
kotlin.text.Typography: char mdash
androidx.core.app.FrameMetricsAggregator: int DELAY_DURATION
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object result
androidx.profileinstaller.ProfileInstaller: int RESULT_NOT_WRITABLE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_PURGE_PERSISTENT_CACHE
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: int label
kotlin.time.DurationUnit: java.util.concurrent.TimeUnit timeUnit
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mSummaryText
kotlinx.coroutines.flow.SubscribedSharedFlow: kotlinx.coroutines.flow.SharedFlow sharedFlow
androidx.core.app.NotificationCompat$Action$WearableExtender: int mFlags
kotlinx.coroutines.flow.ChannelAsFlow: boolean consume
androidx.viewpager.widget.PagerAdapter: android.database.DataSetObserver mViewPagerObserver
androidx.core.app.NotificationCompat: int VISIBILITY_PRIVATE
androidx.window.area.WindowAreaCapability$Status: androidx.window.area.WindowAreaCapability$Status$Companion Companion
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.Class sAttachInfoClass
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.util.Iterator iterator
kotlinx.coroutines.flow.SharedFlowImpl: int bufferSize
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SYSTRACE
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object result
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: androidx.core.app.RemoteInput mRemoteInput
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
androidx.core.graphics.WeightTypefaceApi26: java.lang.reflect.Method sNativeCreateFromTypefaceWithExactStyle
androidx.core.provider.FontRequestWorker: java.lang.Object LOCK
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl
androidx.core.view.ViewCompat: int SCROLL_AXIS_NONE
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListInterface mImpl
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: android.util.SparseBooleanArray $this_keyIterator
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.core.content.res.TypedArrayApi26ImplKt: androidx.core.content.res.TypedArrayApi26ImplKt INSTANCE
androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor
androidx.core.graphics.drawable.IconCompat: int TYPE_ADAPTIVE_BITMAP
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
androidx.core.app.ActivityCompat$1: java.lang.String[] val$permissionsArray
androidx.core.view.contentcapture.ContentCaptureSessionCompat: java.lang.Object mWrappedObj
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: java.lang.Object $seed
kotlin.properties.Delegates: kotlin.properties.Delegates INSTANCE
kotlin.coroutines.SafeContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater RESULT
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2 this$0
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$1: androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$1 INSTANCE
kotlinx.coroutines.DefaultExecutor: java.lang.String THREAD_NAME
androidx.profileinstaller.DexProfileData: java.lang.String dexName
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2 this$0
androidx.viewpager.R$id: int right_icon
androidx.core.R$attr: int fontProviderPackage
androidx.core.location.LocationCompat: java.lang.Integer sHasSpeedAccuracyMask
androidx.fragment.app.Fragment: boolean mIsCreated
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object result
androidx.core.app.NotificationCompat$Action$Builder: int mSemanticAction
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: kotlin.jvm.functions.Function3 $copyAction
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object L$0
androidx.core.widget.TextViewKt$addTextChangedListener$2: androidx.core.widget.TextViewKt$addTextChangedListener$2 INSTANCE
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: java.util.Comparator $comparator
kotlin.io.path.DirectoryEntriesReader: boolean followLinks
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_ASYNC
androidx.lifecycle.BlockRunner: androidx.lifecycle.CoroutineLiveData liveData
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$2: androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object L$0
androidx.profileinstaller.WritableFileSection: int mExpectedInflateSize
androidx.viewpager.R$layout: int notification_template_part_time
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENDLESS_TRACE_BUFFER
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: int[] $this_asFlow$inlined
androidx.activity.result.IntentSenderRequest: int flagsMask
androidx.core.view.InputDeviceCompat: int SOURCE_TRACKBALL
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int I$1
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: long J$0
androidx.fragment.R$styleable: int FragmentContainerView_android_name
androidx.core.R$dimen: int notification_large_icon_height
androidx.annotation.VisibleForTesting$Companion: int NONE
kotlin.math.Constants: double LN2
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlin.jvm.internal.Ref$ObjectRef $accumulator
androidx.core.app.ActivityRecreator$3: java.lang.Object val$token
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: java.lang.Object[] $this_asSequence$inlined
kotlinx.coroutines.channels.BufferedChannelKt: long BUFFER_END_RENDEZVOUS
androidx.core.app.ShareCompat$IntentReader: android.content.Intent mIntent
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: java.util.Collection platformExceptionHandlers
org.intellij.lang.annotations.PrintFormatPattern: java.lang.String ARG_INDEX
com.getkeepsafe.relinker.ReLinkerInstance: com.getkeepsafe.relinker.ReLinker$LibraryLoader libraryLoader
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
androidx.core.service.quicksettings.PendingIntentActivityWrapper: int mRequestCode
androidx.core.view.InputDeviceCompat: int SOURCE_DPAD
androidx.window.area.WindowAreaCapability: androidx.window.area.WindowAreaCapability$Status status
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String LEAK_VM_META_DATA_KEY
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
kotlin.math.Constants: double upper_taylor_2_bound
androidx.core.location.GpsStatusWrapper: int mCachedIteratorPosition
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
androidx.fragment.app.FragmentActivity: boolean mCreated
androidx.fragment.app.Fragment$5: androidx.fragment.app.Fragment this$0
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: int label
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo animatorInfo
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: java.lang.Object mLock
kotlin.collections.ArrayDeque: int defaultMinCapacity
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PARAGRAPH
kotlin.UShort: int SIZE_BYTES
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.core.view.WindowInsetsControllerCompat mCompatController
androidx.window.embedding.SplitController$SplitSupportStatus: androidx.window.embedding.SplitController$SplitSupportStatus SPLIT_UNAVAILABLE
androidx.core.util.PatternsCompat: java.lang.String USER_INFO
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List decreasedValueAttributes
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent mIntent
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl: java.lang.Object sRebaseMethodLock
kotlinx.coroutines.CancelledContinuation: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU
androidx.window.area.WindowAreaCapability$Status: androidx.window.area.WindowAreaCapability$Status WINDOW_AREA_STATUS_AVAILABLE
kotlinx.coroutines.CoroutineExceptionHandler$Key: kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE
androidx.core.app.NotificationCompat$WearableExtender: int DEFAULT_FLAGS
androidx.profileinstaller.ProfileInstaller: int RESULT_UNSUPPORTED_ART_VERSION
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String METHOD_IS_STYLUS_HANDWRITING_AVAILABLE
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
kotlin.text.Typography: char doublePrime
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner
kotlin.io.path.PathTreeWalk$dfsIterator$1: int label
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.util.List dartEntrypointArgs
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
androidx.versionedparcelable.VersionedParcelStream: int mFieldSize
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.animation.AnimatorSet animator
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2: android.view.View val$v
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager this$0
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound
kotlin.jvm.internal.DoubleCompanionObject: double POSITIVE_INFINITY
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol CANCELLED
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object L$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
androidx.core.app.AppOpsManagerCompat: int MODE_ERRORED
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
androidx.core.app.NotificationCompat: int FLAG_SHOW_LIGHTS
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality COMMON_NUMBER_SEPARATOR
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: int HOST_VIEW_ID
androidx.viewpager.R$styleable: int GradientColor_android_endX
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
androidx.loader.R$drawable: int notification_template_icon_bg
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES
androidx.fragment.app.FragmentContainerView$Api20Impl: androidx.fragment.app.FragmentContainerView$Api20Impl INSTANCE
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: int label
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlinx.coroutines.channels.ReceiveChannel $this_map
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: int MIN_CAPACITY
androidx.core.app.NotificationCompat$Builder: int mColor
androidx.loader.content.ModernAsyncTask$3: androidx.loader.content.ModernAsyncTask this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: int label
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object transition
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.String mThreadName
androidx.customview.R$dimen: int notification_right_side_padding_top
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1 this$0
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1$1: androidx.window.extensions.core.util.function.Consumer $rearDisplayPresentationListener
org.jetbrains.annotations.Nls$Capitalization: org.jetbrains.annotations.Nls$Capitalization Sentence
androidx.core.R$id: int action_image
androidx.fragment.app.Fragment$8: androidx.fragment.app.Fragment this$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1 this$0
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion Companion
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object L$0
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_ENTER
androidx.core.os.BuildCompat: int T_EXTENSION_INT
androidx.collection.ArraySet: java.lang.String TAG
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: java.lang.Object[] $this_withIndex
androidx.customview.widget.ViewDragHelper: float mMaxVelocity
androidx.core.app.MultiWindowModeChangedInfo: boolean isInMultiWindowMode
androidx.customview.R$drawable: int notification_bg_low
androidx.core.R$dimen: int compat_button_inset_vertical_material
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator iterator2
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_NONE
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mTagKey
kotlin.jvm.internal.DoubleCompanionObject: kotlin.jvm.internal.DoubleCompanionObject INSTANCE
androidx.core.os.LocaleListCompatWrapper: java.util.Locale[] sEmptyList
kotlin.io.path.PathRelativizer: kotlin.io.path.PathRelativizer INSTANCE
androidx.activity.ImmLeaksCleaner: int INIT_FAILED
androidx.viewpager.R$drawable: int notification_bg_low_pressed
kotlinx.coroutines.scheduling.TaskImpl: java.lang.Runnable block
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner newInstance
androidx.window.embedding.ActivityStack: java.util.List activitiesInProcess
androidx.fragment.app.FragmentManager: java.util.Map mBackStackStates
kotlinx.coroutines.BuildersKt__Builders_commonKt: int SUSPENDED
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: java.lang.Object result
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mSystemGestureInsets
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
kotlin.ranges.CharProgressionIterator: int finalElement
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadState
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCROLL
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlinx.coroutines.flow.Flow[] $flows
androidx.core.app.GrammaticalInflectionManagerCompat: int GRAMMATICAL_GENDER_MASCULINE
androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object result
kotlin.UShort: kotlin.UShort$Companion Companion
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
androidx.core.R$drawable: int notify_panel_notification_icon_bg
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object result
androidx.core.R$styleable: int Capability_shortcutMatchRequired
androidx.core.provider.FontsContractCompat$Columns: java.lang.String WEIGHT
androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function1 keySelector
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_VM_SERVICE_PORT
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldDelayFirstAndroidViewDraw
com.getkeepsafe.relinker.elf.Elf$Header: int phentsize
io.flutter.embedding.engine.systemchannels.LifecycleChannel: boolean lastFocus
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: kotlinx.coroutines.flow.FlowCollector $downStream
androidx.viewpager.R$dimen: int notification_action_text_size
androidx.core.view.HapticFeedbackConstantsCompat: int LONG_PRESS
androidx.core.view.WindowInsetsCompat$Type: int DISPLAY_CUTOUT
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$1
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object L$0
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: java.util.Collection $other
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int UP
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long FROZEN_MASK
kotlin.ranges.LongProgressionIterator: boolean hasNext
com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry: java.util.zip.ZipFile zipFile
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object L$1
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
androidx.fragment.app.BackStackRecordState: int mTransition
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.PendingIntent mDeleteIntent
io.flutter.Build$API_LEVELS: int API_27
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.AbstractDoubleTimeSource timeSource
androidx.window.core.ConsumerAdapter$createSubscriptionNoActivity$1: java.lang.Object $obj
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$2: androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$2 INSTANCE
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence mConversationTitle
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlin.jvm.functions.Function3 $transform
androidx.core.view.HapticFeedbackConstantsCompat: int LAST_CONSTANT_INT
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object L$1
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlin.sequences.SequencesKt___SequencesKt$sorted$1: kotlin.sequences.Sequence $this_sorted
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State REMOVED
androidx.core.app.JobIntentService$CompatWorkItem: android.content.Intent mIntent
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
androidx.lifecycle.SavedStateViewModelFactory: android.os.Bundle defaultArgs
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat mLastInsets
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: androidx.fragment.app.FragmentStateManager fragmentStateManager
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget PROPERTY_SETTER
androidx.core.content.pm.ShortcutXmlParser: java.lang.String TAG
kotlinx.coroutines.CoroutineContextKt: java.lang.String DEBUG_THREAD_NAME_SEPARATOR
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SPLIT_SCREEN_DIVIDER
io.flutter.plugin.text.ProcessTextPlugin: java.util.Map resolveInfosById
androidx.core.R$integer: int status_bar_notification_info_maxnum
kotlin.sequences.DistinctIterator: java.util.Iterator source
androidx.customview.R$drawable: int notification_template_icon_low_bg
androidx.core.view.ViewKt$allViews$1: java.lang.Object L$0
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] $VALUES
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level WARNING
kotlin.random.PlatformRandom: long serialVersionUID
androidx.fragment.app.SpecialEffectsController: boolean operationDirectionIsPop
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_TEXT
androidx.loader.R$drawable: int notification_bg
androidx.core.provider.FontsContractCompat: int RESULT_CODE_PROVIDER_NOT_FOUND
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: int label
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.os.Bundle mOptions
androidx.core.widget.TextViewCompat$OreoCallback: int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: kotlin.jvm.functions.Function6 $transform$inlined
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.content.IntentSanitizer: int mAllowedFlags
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
androidx.core.app.NotificationChannelCompat: java.lang.CharSequence mName
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: java.nio.ByteBuffer message
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_OPTS_INTEROP_KEY
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$1
androidx.viewpager.widget.ViewPager: int mMaximumVelocity
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
androidx.versionedparcelable.VersionedParcel$1: androidx.versionedparcelable.VersionedParcel this$0
androidx.fragment.app.Fragment: boolean mRetainInstance
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: int label
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_OVER
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionTitleField
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.String dartEntrypoint
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: int label
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getDescriptorMethod
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation cont
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int label
io.flutter.plugin.platform.PlatformViewWrapper: int top
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
androidx.core.util.SparseLongArrayKt$keyIterator$1: android.util.SparseLongArray $this_keyIterator
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: androidx.window.area.WindowAreaControllerImpl this$0
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onCancel
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference activeSink
androidx.core.view.GravityCompat: int RELATIVE_LAYOUT_DIRECTION
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object L$0
androidx.core.app.JobIntentService$CompatWorkItem: androidx.core.app.JobIntentService this$0
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_IN
kotlin.text.Typography: char middleDot
androidx.window.WindowProperties: java.lang.String PROPERTY_COMPAT_ALLOW_MIN_ASPECT_RATIO_OVERRIDE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
androidx.core.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.WindowInsetsCompat mLastInsets
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String TAG
androidx.activity.FullyDrawnReporter: boolean reportedFullyDrawn
androidx.core.provider.SelfDestructiveThread: int mDestructAfterMillisec
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: androidx.concurrent.futures.ResolvableFuture cancellationFuture
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SCROLL_AMOUNT_FLOAT
androidx.core.app.Person$Builder: java.lang.CharSequence mName
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DESTROY_ENGINE_WITH_FRAGMENT
androidx.core.util.PatternsCompat: java.lang.String IANA_TOP_LEVEL_DOMAINS
kotlin.jvm.internal.DoubleCompanionObject: int SIZE_BITS
androidx.window.embedding.ExtensionEmbeddingBackend: kotlin.Lazy splitSupportStatus$delegate
androidx.core.transition.TransitionKt$addListener$4: androidx.core.transition.TransitionKt$addListener$4 INSTANCE
androidx.core.app.NotificationCompat: java.lang.String GROUP_KEY_SILENT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$1
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.fragment.app.FragmentResultListener mListener
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol NULL
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP_PREFIX
androidx.window.area.SafeWindowAreaComponentProvider$isWindowAreaProviderValid$1: java.lang.Object $windowExtensions
androidx.core.app.NotificationCompat$TvExtender: android.app.PendingIntent mContentIntent
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CONTENT_ICON
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic mTextDir
androidx.core.provider.CallbackWithHandler$1: android.graphics.Typeface val$typeface
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementReturnTransition
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlin.jvm.functions.Function6 $transform$inlined
androidx.core.view.ViewCompat: java.lang.reflect.Method sDispatchFinishTemporaryDetach
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1 INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object $element
kotlin.time.AbstractDoubleTimeSource: kotlin.time.DurationUnit unit
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.ranges.LongProgressionIterator: long next
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN
io.flutter.plugin.common.StandardMessageCodec: byte LONG_ARRAY
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String ISLAMIC_RGSA
androidx.profileinstaller.ProfileInstaller: int DIAGNOSTIC_CURRENT_PROFILE_DOES_NOT_EXIST
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
androidx.window.R$id: int adjacent
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat CONSUMED
kotlinx.coroutines.scheduling.CoroutineScheduler: int BLOCKING_SHIFT
androidx.customview.R$drawable: int notification_action_background
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object L$0
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_MATCH_ACTIVITY_CLOSE
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String SNAPSHOT_ASSET_PATH_KEY
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback onBackPressedCallback
androidx.core.widget.NestedScrollView: int mMinimumVelocity
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: float[] $this_asIterable$inlined
androidx.core.app.NotificationManagerCompat: java.lang.String sEnabledNotificationListeners
androidx.window.embedding.SplitAttributes: androidx.window.embedding.SplitAttributes$Companion Companion
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EMAIL
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_TO_OFFSET
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: java.lang.Object owner
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
androidx.core.app.NotificationCompat$Action: boolean mAllowGeneratedReplies
kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE
androidx.customview.R$styleable: int FontFamily_fontProviderFetchTimeout
kotlinx.coroutines.flow.LintKt$retry$1: int label
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: long J$0
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality ARABIC_NUMBER
androidx.core.graphics.drawable.RoundedBitmapDrawable: float mCornerRadius
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object L$0
androidx.viewpager.R$styleable: int[] FontFamilyFont
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kRepeat
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_MATCH_ACTIVITY_OPEN
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: int label
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long reading
androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.Lifecycle lifecycle
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: java.lang.Object result
kotlin.collections.MovingSubList: java.util.List list
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Thread lastObservedThread
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0
androidx.fragment.app.DialogFragment: int mStyle
kotlin.jvm.internal.TypeReference: kotlin.reflect.KType platformTypeUpperBound
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_SKIA_DETERMINISTIC_RENDERING
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlin.jvm.functions.Function4 $transform$inlined
kotlinx.coroutines.scheduling.CoroutineScheduler: long CPU_PERMITS_MASK
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: kotlin.jvm.functions.Function2 $predicate
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.lang.String TAG
androidx.customview.R$dimen: int notification_main_column_padding_top
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_DATA_URI
kotlin.text.CharCategory: kotlin.text.CharCategory DECIMAL_DIGIT_NUMBER
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
kotlin.collections.builders.MapBuilderEntries: kotlin.collections.builders.MapBuilder backing
androidx.lifecycle.Transformations$sam$androidx_lifecycle_Observer$0: kotlin.jvm.functions.Function1 function
androidx.core.app.NotificationCompat$CallStyle: int CALL_TYPE_SCREENING
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
androidx.window.embedding.SplitController$SplitSupportStatus: int rawValue
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
androidx.core.content.UnusedAppRestrictionsBackportService$1: androidx.core.content.UnusedAppRestrictionsBackportService this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: int $count
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: int width
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop
androidx.core.app.NotificationCompat$WearableExtender: java.util.ArrayList mPages
androidx.activity.EdgeToEdge: int DefaultLightScrim
androidx.core.app.SharedElementCallback: android.graphics.Matrix mTempMatrix
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
androidx.viewpager.widget.PagerTabStrip: boolean mIgnoreTap
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_RESULT_KEY
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition INSTANCE
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
kotlin.text.Charsets: java.nio.charset.Charset utf_32be
androidx.core.R$styleable: int GradientColorItem_android_color
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex
androidx.core.app.NotificationCompat$WearableExtender: int mCustomSizePreset
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$1
androidx.loader.R$styleable: int FontFamily_fontProviderFetchTimeout
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol BUFFERED
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: kotlinx.coroutines.sync.MutexImpl this$0
androidx.core.hardware.display.DisplayManagerCompat: android.content.Context mContext
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE
kotlin.jvm.internal.IntCompanionObject: int MIN_VALUE
androidx.window.WindowSdkExtensions: androidx.window.WindowSdkExtensionsDecorator decorator
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
androidx.profileinstaller.ProfileVerifier: androidx.concurrent.futures.ResolvableFuture sFuture
androidx.core.view.PointerIconCompat: int TYPE_HAND
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String DANGI
kotlin.text.Typography: char half
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlin.jvm.functions.Function2 $transform
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConstructorFetched
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: kotlin.jvm.functions.Function2 factory
androidx.core.R$id: int accessibility_custom_action_5
kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion
androidx.core.content.pm.ShortcutManagerCompat: java.util.List sShortcutInfoChangeListeners
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_ALL_MASK
androidx.window.core.FailedSpecification: java.lang.Object value
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: int label
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
androidx.core.view.DifferentialMotionFlingController: int[] mFlingVelocityThresholds
androidx.fragment.app.FragmentState: int mFragmentId
androidx.core.view.PointerIconCompat: int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: java.lang.reflect.Constructor $constructor
kotlin.jvm.internal.CharCompanionObject: int SIZE_BYTES
androidx.collection.SparseArrayCompat: boolean mGarbage
androidx.core.app.NotificationCompat: java.lang.String EXTRA_ANSWER_INTENT
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: double startedAt
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mContentView
androidx.core.R$color: int notification_action_color_filter
kotlin.jvm.internal.TypeParameterReference: java.util.List bounds
androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING
kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.internal.Symbol NO_ELEMENT
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUB_TEXT
androidx.viewpager.R$styleable: int FontFamily_fontProviderAuthority
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType CLASSES
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$1
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CompatJobEngine mJobImpl
kotlin.io.path.PathTreeWalk$bfsIterator$1: int label
kotlin.io.path.LinkFollowing: java.nio.file.LinkOption[] nofollowLinkOption
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_SEPARATOR
io.flutter.embedding.engine.systemchannels.ScribeChannel$1: io.flutter.embedding.engine.systemchannels.ScribeChannel this$0
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object L$1
androidx.core.content.UnusedAppRestrictionsBackportCallback: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback mCallback
kotlin.collections.builders.ListBuilder$Itr: int lastIndex
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT_URI
io.flutter.embedding.android.KeyboardManager: java.util.HashSet redispatchedEvents
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType DEX_FILES
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat MODULATE
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
androidx.core.app.NotificationCompat: java.lang.String EXTRA_DECLINE_INTENT
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_UNEXPECTED_DATA_PROVIDED
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT
androidx.versionedparcelable.VersionedParcelStream: int TYPE_NULL
kotlin.sequences.SequencesKt___SequencesKt$distinct$1: kotlin.sequences.SequencesKt___SequencesKt$distinct$1 INSTANCE
io.flutter.embedding.android.KeyboardManager: java.lang.String TAG
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame creationStackBottom
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.util.List dartEntrypointArgs
androidx.loader.R$id: int notification_background
androidx.core.view.WindowInsetsAnimationCompat$Impl30: android.view.WindowInsetsAnimation mWrapped
androidx.fragment.R$id: int special_effects_controller_view_tag
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_EXPANDED_STATE
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object value
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation: java.lang.Throwable cause
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
androidx.core.view.WindowInsetsCompat$Type: int NAVIGATION_BARS
androidx.core.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$3
androidx.profileinstaller.DexProfileData: long mTypeIdCount
androidx.core.app.PendingIntentCompat$GatedCallback: android.app.PendingIntent$OnFinished mCallback
kotlin.jvm.internal.CharCompanionObject: char MAX_LOW_SURROGATE
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: java.lang.Object tag
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicLongFieldUpdater enqIdx$FU
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: kotlinx.coroutines.channels.ProducerScope $$this$produce
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object L$0
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: io.flutter.view.TextureRegistry$SurfaceProducer producer
androidx.core.util.PatternsCompat: java.lang.String IRI_LABEL
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_X
androidx.viewpager.R$id: int action_divider
kotlin.collections.SlidingWindowKt$windowedIterator$1: int $step
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_TRANSPORT
kotlin.text.Regex$Serialized: long serialVersionUID
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] mMetrics
io.flutter.view.AccessibilityBridge$Action: int value
androidx.loader.R$styleable: int GradientColor_android_endX
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status FINISHED
io.flutter.embedding.engine.systemchannels.SettingsChannel: boolean $assertionsDisabled
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: androidx.window.area.WindowAreaSession session
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipDataUri
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String cachedEngineGroupId
androidx.core.provider.FontsContractCompat$Columns: java.lang.String FILE_ID
androidx.profileinstaller.ProfileVerifier$CompilationStatus: boolean mHasReferenceProfile
androidx.window.R$attr: int secondaryActivityAction
androidx.core.app.FrameMetricsAggregator: int SWAP_DURATION
androidx.window.core.PredicateAdapter$PredicateStubHandler: kotlin.jvm.functions.Function1 predicate
androidx.viewpager.R$id: int actions
androidx.core.widget.AutoScrollHelper: boolean mEnabled
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater bufferEndSegment$FU
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.viewmodel.CreationExtras$Key APPLICATION_KEY
androidx.profileinstaller.ProfileVerifier: java.lang.String REF_PROFILES_BASE_DIR
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: int $i
androidx.core.text.ICUCompat: java.lang.reflect.Method sGetScriptMethod
kotlin.jvm.internal.Reflection: kotlin.jvm.internal.ReflectionFactory factory
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.Context context
kotlinx.coroutines.stream.StreamFlow: int consumed
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_PROFILE_ENQUEUED_FOR_COMPILATION
com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.ElfParser parser
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mStopValue
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_DRAG_STARTED
androidx.loader.R$drawable: int notify_panel_notification_icon_bg
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: int index
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: android.location.GnssMeasurementsEvent$Callback mCallback
androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_SOURCE
kotlin.text.Regex$splitToSequence$1: java.lang.Object L$1
androidx.core.R$drawable: int notification_bg_low_pressed
androidx.fragment.app.FragmentState: boolean mUserVisibleHint
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: int label
androidx.window.R$attr: int splitLayoutDirection
androidx.profileinstaller.ProfileInstaller: java.lang.String PROFILE_SOURCE_LOCATION
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope SUBCLASSES
androidx.loader.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPredicates$1: java.util.Set $activityFilters
androidx.core.location.LocationRequestCompat$Api19Impl: java.lang.reflect.Method sCreateFromDeprecatedProviderMethod
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sVisibleInsetsField
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: java.util.concurrent.Executor mExecutor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_ID_KEY
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.app.PendingIntent mPendingIntent
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: kotlin.jvm.functions.Function1 $timeout
kotlin.reflect.KTypeProjection: kotlin.reflect.KType type
androidx.core.app.NotificationCompat: int PRIORITY_MIN
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SOFT_LIGHT
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_CANCELLED
io.flutter.view.AccessibilityBridge$Flag: int value
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayFeatures
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatcherMatchResult this$0
androidx.customview.R$attr: int font
androidx.lifecycle.EmittedSource$disposeNow$2: int label
kotlinx.coroutines.channels.LazyActorCoroutine: kotlin.coroutines.Continuation continuation
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int PAN_ZOOM_START
androidx.core.util.TimeUtils: java.lang.Object sFormatSync
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: kotlin.jvm.functions.Function1 $selector
io.flutter.plugin.platform.PlatformViewWrapper: int left
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onPause
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2: java.util.stream.IntStream $this_asSequence$inlined
kotlin.sequences.SequencesKt___SequencesKt$onEach$1: kotlin.jvm.functions.Function1 $action
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget ANNOTATION_CLASS
androidx.core.os.LocaleListCompatWrapper: java.util.Locale[] mList
androidx.core.provider.FontsContractCompat$Columns: java.lang.String VARIATION_SETTINGS
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: int label
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1: kotlin.jvm.functions.Function1 $onContextAvailable
io.flutter.embedding.engine.systemchannels.BackGestureChannel: java.lang.String TAG
androidx.core.app.NotificationCompat$WearableExtender: java.util.ArrayList mActions
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_REREGISTER
com.getkeepsafe.relinker.ReLinkerInstance: boolean recursive
kotlin.ranges.IntRange: kotlin.ranges.IntRange EMPTY
androidx.core.content.ContextCompat: int RECEIVER_EXPORTED
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String TAG
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance
androidx.fragment.app.Fragment$3: androidx.fragment.app.Fragment this$0
androidx.viewpager.widget.ViewPager: int mFlingDistance
androidx.window.embedding.SplitPlaceholderRule$Builder: int minWidthDp
kotlinx.coroutines.selects.SelectKt: int TRY_SELECT_SUCCESSFUL
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: java.util.Comparator $this_thenBy
org.jetbrains.annotations.Nls$Capitalization: org.jetbrains.annotations.Nls$Capitalization Title
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POINTER
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlin.coroutines.Continuation delegate
androidx.window.embedding.SplitAttributes$LayoutDirection: androidx.window.embedding.SplitAttributes$LayoutDirection LEFT_TO_RIGHT
androidx.fragment.app.strictmode.FragmentStrictMode: java.lang.String TAG
androidx.core.app.NotificationCompat$Builder: int MAX_CHARSEQUENCE_LENGTH
androidx.customview.widget.ExploreByTouchHelper: int HOST_ID
io.flutter.embedding.engine.dart.DartMessenger: java.lang.String TAG
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_VERBOSE_LOGGING
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind COMPILER_VERSION
androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnTrimMemoryListener
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: int label
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: int label
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: int label
kotlinx.coroutines.sync.SemaphoreImpl: int permits
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1 INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget CLASS
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__MergeKt: int DEFAULT_CONCURRENCY
androidx.fragment.app.FragmentTransaction: int TRANSIT_UNSET
androidx.fragment.app.DialogFragment: java.lang.String SAVED_BACK_STACK_ID
androidx.core.view.ViewCompat: int OVER_SCROLL_IF_CONTENT_SCROLLS
androidx.fragment.app.FragmentStatePagerAdapter: java.util.ArrayList mSavedState
androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedCallback onBackInvokedCallback
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
kotlin.text.StringsKt___StringsKt$windowedSequence$2: java.lang.CharSequence $this_windowedSequence
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ANNOUNCEMENT
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object result
androidx.core.R$layout: int notification_template_part_time
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object L$0
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference lifecycleOwner
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object L$1
androidx.core.view.HapticFeedbackConstantsCompat: int FIRST_CONSTANT_INT
androidx.core.location.LocationManagerCompat: long PRE_N_LOOPER_TIMEOUT_S
androidx.core.widget.NestedScrollView: int INVALID_POINTER
androidx.core.os.ProcessCompat$Api19Impl: java.lang.reflect.Method sMethodUserHandleIsAppMethod
androidx.viewpager.widget.ViewPager: int mDecorChildCount
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: kotlin.jvm.functions.Function6 $transform$inlined
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1 this$0
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_START
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange$Companion Companion
androidx.loader.content.Loader: boolean mAbandoned
androidx.core.graphics.WeightTypefaceApi21: java.lang.String NATIVE_CREATE_FROM_TYPEFACE_METHOD
androidx.core.location.GnssStatusCompat: int CONSTELLATION_SBAS
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: java.util.Collection $destination
androidx.core.widget.ListViewAutoScrollHelper: android.widget.ListView mTarget
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$2
androidx.fragment.app.FragmentStateManager: int mFragmentManagerState
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2 this$0
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
androidx.savedstate.SavedStateRegistry: java.lang.String SAVED_COMPONENTS_KEY
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: kotlinx.coroutines.CancellableContinuation cont
androidx.viewpager.widget.PagerTabStrip: int mFullUnderlineHeight
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: androidx.window.core.ConsumerAdapter consumerAdapter
androidx.fragment.app.FragmentTabHost: android.content.Context mContext
kotlinx.coroutines.JobSupport$children$1: int label
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedCategories
androidx.customview.R$attr: int ttcIndex
androidx.core.util.LongSparseArrayKt$keyIterator$1: int index
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object L$0
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String TAG
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_INDEX_MASK
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_OVERRIDE
androidx.core.util.PatternsCompat: java.lang.String UCS_CHAR
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion Companion
androidx.fragment.app.FragmentTransaction$Op: int mCmd
androidx.viewpager.R$drawable: int notify_panel_notification_icon_bg
androidx.customview.R$layout: int notification_template_part_chronometer
androidx.customview.widget.ViewDragHelper: int DIRECTION_HORIZONTAL
androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker
kotlinx.coroutines.UndispatchedCoroutine: java.lang.ThreadLocal threadStateToRecover
androidx.core.app.ActivityCompat$1: int val$requestCode
androidx.core.content.res.CamColor: float mS
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_DELAY_FIRST_ANDROID_VIEW_DRAW
androidx.core.view.LayoutInflaterCompat: java.lang.reflect.Field sLayoutInflaterFactory2Field
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion Companion
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.fragment.app.DialogFragment: int mTheme
androidx.window.embedding.SplitController: boolean sDebug
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2 this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
androidx.core.animation.AnimatorKt$addPauseListener$2: androidx.core.animation.AnimatorKt$addPauseListener$2 INSTANCE
androidx.window.embedding.ActivityRule$Builder: java.lang.String tag
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState
androidx.core.widget.CompoundButtonCompat: boolean sButtonDrawableFieldFetched
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mInvisibleActions
androidx.startup.AppInitializer: java.util.Set mDiscovered
androidx.customview.R$styleable: int GradientColor_android_endY
androidx.viewpager.widget.PagerTabStrip: int MIN_TEXT_SPACING
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU
androidx.window.WindowProperties: java.lang.String PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object L$1
androidx.core.provider.RequestExecutor$ReplyRunnable: android.os.Handler mHandler
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
androidx.viewpager.R$id: int line1
kotlin.text.Charsets: java.nio.charset.Charset ISO_8859_1
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlinx.coroutines.flow.Flow[] $flows
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.Class activityClass
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$0
androidx.window.R$styleable: int SplitPairRule_splitMinWidthDp
androidx.fragment.app.Fragment: boolean mPerformedCreateView
androidx.core.content.pm.ShortcutXmlParser: java.lang.String ATTR_SHORTCUT_ID
androidx.core.app.NotificationCompat: int FLAG_AUTO_CANCEL
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$2
androidx.window.core.FailedSpecification: androidx.window.core.WindowStrictModeException exception
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget CONSTRUCTOR
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: long $periodMillis
androidx.customview.R$attr: int fontVariationSettings
kotlin.text.Regex$splitToSequence$1: kotlin.text.Regex this$0
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.app.NotificationCompat: int BADGE_ICON_NONE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SKIA
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_CONTENT_URI_INTEROP_KEY
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
kotlinx.coroutines.internal.OnDemandAllocatingPool: kotlin.jvm.functions.Function1 create
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat MULTIPLY
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget LOCAL_VARIABLE
androidx.window.area.RearDisplayPresentationSessionPresenterImpl: android.content.Context context
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
androidx.interpolator.view.animation.LookupTableInterpolator: float[] mValues
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int CANCEL
androidx.core.app.NotificationCompat$Action$WearableExtender: int DEFAULT_FLAGS
androidx.core.view.LayoutInflaterCompat: java.lang.String TAG
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType EXTRA_DESCRIPTORS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: int label
io.flutter.plugin.editing.SpellCheckPlugin: java.lang.String START_INDEX_KEY
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_COMPLETED
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
androidx.core.view.MotionEventCompat: int AXIS_WHEEL
kotlin.SafePublicationLazyImpl: kotlin.jvm.functions.Function0 initializer
androidx.core.R$dimen: int notification_main_column_padding_top
androidx.fragment.R$styleable: int[] Fragment
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: int label
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
androidx.savedstate.Recreator: androidx.savedstate.Recreator$Companion Companion
androidx.core.text.util.LocalePreferences$HourCycle: java.lang.String H11
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCALE
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: int label
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COPY
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.Thread weakRefCleanerThread
androidx.collection.ArraySet: int[] INT
androidx.collection.MapCollections$MapIterator: int mIndex
androidx.window.embedding.EmbeddingAdapter: androidx.window.core.PredicateAdapter predicateAdapter
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object result
androidx.core.text.PrecomputedTextCompat$Params: int mBreakStrategy
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.DataOutputStream mTarget
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlin.sequences.IndexingSequence: kotlin.sequences.Sequence sequence
androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller
androidx.core.app.NotificationCompat: java.lang.String INTENT_CATEGORY_NOTIFICATION_PREFERENCES
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: java.lang.Object result
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow
io.flutter.plugin.platform.PlatformPlugin$2: io.flutter.plugin.platform.PlatformPlugin this$0
androidx.core.util.AtomicFile: java.io.File mLegacyBackupName
androidx.core.widget.ContentLoadingProgressBar: int MIN_DELAY_MS
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long J$0
androidx.core.view.MotionEventCompat: int AXIS_SCROLL
androidx.core.app.ShareCompat$IntentReader: java.util.ArrayList mStreams
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1 this$0
androidx.core.content.res.ViewingConditions: float mNbb
androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object L$0
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
kotlin.jvm.internal.DoubleCompanionObject: double MAX_VALUE
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_EXTRAS
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object L$1
androidx.core.content.FileProvider: java.lang.String META_DATA_FILE_PROVIDER_PATHS
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.DataOutputStream mDataStream
androidx.collection.LruCache: int maxSize
kotlin.text.CharCategory: kotlin.text.CharCategory DASH_PUNCTUATION
kotlinx.coroutines.flow.StartedLazily$command$1: int label
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DRAG_START
androidx.core.os.TraceCompat: long sTraceTagApp
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
kotlin.jvm.internal.ClassReference: java.lang.Class jClass
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String lastObservedThreadName
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN
androidx.viewpager.R$id: int notification_background
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.viewpager.R$dimen: int compat_button_padding_horizontal_material
androidx.profileinstaller.DeviceProfileWriter: byte[] mTranscodedProfile
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: int label
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_MESSAGES
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
androidx.core.location.LocationManagerCompat: java.lang.Class sGnssRequestBuilderClass
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
androidx.core.app.Person$Builder: java.lang.String mUri
kotlin.time.AbstractLongTimeSource$LongTimeMark: long offset
androidx.viewpager.R$drawable: int notification_tile_bg
androidx.core.view.HapticFeedbackConstantsCompat: int TOGGLE_ON
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_ACTION_EXTRAS
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.ConcurrentWeakMap capturedCoroutinesMap
androidx.profileinstaller.ProfileTranscoder: int HOT
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object L$0
androidx.core.app.NotificationCompat$Builder: java.lang.String mSortKey
kotlin.io.encoding.EncodeOutputStream: java.io.OutputStream output
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] slots
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: kotlin.jvm.functions.Function2 $create
androidx.profileinstaller.DeviceProfileWriter: java.lang.String mProfileSourceLocation
com.getkeepsafe.relinker.elf.Elf$Header: int ELFCLASS32
io.flutter.embedding.android.KeyboardMap$PressingGoal: io.flutter.embedding.android.KeyboardMap$KeyPair[] keys
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol TAKEN
androidx.core.animation.AnimatorKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onStart
kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.jvm.internal.Ref$IntRef $index
kotlinx.coroutines.TimeoutCoroutine: long time
kotlin.jvm.internal.FloatCompanionObject: int SIZE_BITS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: int label
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.Person mUser
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object result
androidx.core.view.contentcapture.ContentCaptureSessionCompat: java.lang.String KEY_VIEW_TREE_APPEARING
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod
androidx.viewpager.R$style: int Widget_Compat_NotificationActionContainer
androidx.core.view.ContentInfoCompat$CompatImpl: android.os.Bundle mExtras
androidx.core.util.LogWriter: java.lang.StringBuilder mBuilder
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningFold$inlined
androidx.fragment.app.FragmentState: java.lang.String mTag
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_ENABLE_VULKAN_VALIDATION
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: int I$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object L$1
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Failed
androidx.loader.R$id: int action_image
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionIconField
androidx.core.util.SparseArrayKt$valueIterator$1: int index
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
androidx.window.area.utils.DeviceUtils: androidx.window.area.utils.DeviceUtils INSTANCE
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object $initial
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: int label
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onPreVisitDirectory
androidx.core.content.FileProvider: java.lang.String TAG_FILES_PATH
kotlin.random.KotlinRandom: kotlin.random.KotlinRandom$Companion Companion
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$outNames
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_NUMBER
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.text.SimpleDateFormat dateFormat
kotlin.text.Typography: char ndash
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol NO_RESULT
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: int label
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: long $timeout
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: kotlinx.coroutines.selects.SelectImplementation this$0
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$2
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
androidx.core.app.RemoteInput$Builder: boolean mAllowFreeFormTextInput
kotlin.ranges.CharProgressionIterator: int step
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
androidx.loader.R$id: int info
androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout mDisplayCutout
androidx.fragment.app.FragmentManager$SaveBackStackState: java.lang.String mName
androidx.profileinstaller.DexProfileData: java.util.TreeMap methods
androidx.core.R$styleable: int GradientColorItem_android_offset
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object L$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String CONTAINER_TITLE_KEY
androidx.viewpager.R$styleable: int GradientColor_android_tileMode
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.collection.ArrayMap sharedElementNameMapping
androidx.activity.result.ActivityResultRegistry: java.lang.String LOG_TAG
androidx.customview.R$dimen: int notification_action_text_size
androidx.fragment.app.FragmentManager$PrepareBackStackTransitionState: androidx.fragment.app.FragmentManager this$0
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: kotlinx.coroutines.flow.Flow $this_sample
androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.savedstate.SavedStateRegistry savedStateRegistry
androidx.customview.R$dimen: int notification_small_icon_background_padding
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: kotlinx.coroutines.selects.OnTimeout this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object result
kotlin.KotlinVersion: kotlin.KotlinVersion CURRENT
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_CHARACTER
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.text.DelimitedRangesSequence this$0
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String appBundlePath
androidx.core.text.util.FindAddress: int MAX_ADDRESS_LINES
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object L$0
androidx.lifecycle.BlockRunner: kotlinx.coroutines.Job cancellationJob
androidx.loader.content.ModernAsyncTask: java.util.concurrent.Executor sDefaultExecutor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String EXTRA_DATA_TEXT_CHARACTER_LOCATION_KEY
androidx.window.core.Bounds: int left
androidx.profileinstaller.DeviceProfileWriter: android.content.res.AssetManager mAssetManager
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlinx.coroutines.flow.FlowCollector $downstream
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mBitmapHeight
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.core.content.res.ComplexColorCompat: java.lang.String LOG_TAG
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: kotlin.jvm.internal.Ref$IntRef $consumed
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.channels.BufferedChannelKt: int SEGMENT_SIZE
androidx.loader.R$layout: int notification_template_icon_group
androidx.core.R$drawable: int ic_call_answer_video
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mPackageName
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object $initial
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManager mManager
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReturnTransition
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue this$0
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE
androidx.lifecycle.ClassesInfoCache: int CALL_TYPE_NO_ARG
androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag
kotlin.io.path.PathNode: java.lang.Object key
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BIG_TEXT
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.window.core.BuildConfig: androidx.window.core.VerificationMode verificationMode
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: long sequenceNumber
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateIntentPredicates$1: java.util.Set $activityFilters
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
androidx.core.R$attr: int fontProviderCerts
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderEntries entriesView
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: kotlin.coroutines.CoroutineContext emitContext
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
androidx.fragment.app.FragmentStateManager: java.lang.String VIEW_REGISTRY_STATE_KEY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object result
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1 this$0
androidx.core.R$id: int action_text
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_NONE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int I$0
androidx.window.embedding.SplitPairRule$Builder: java.lang.String tag
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object L$1
kotlin.time.AbstractLongTimeSource$LongTimeMark: long startedAt
androidx.loader.R$id: int chronometer
androidx.core.app.NotificationCompatJellybean: java.lang.Object sActionsLock
androidx.core.app.NotificationCompat$Action: java.lang.String EXTRA_SHOWS_USER_INTERFACE
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
androidx.window.embedding.SplitRule$FinishBehavior: androidx.window.embedding.SplitRule$FinishBehavior ALWAYS
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] $VALUES
kotlinx.coroutines.future.FutureKt$await$2$1: java.util.concurrent.CompletableFuture $future
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 processResFunc
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String SHORTCUT_LISTENER_META_DATA_KEY
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: java.lang.Object result
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MAX
androidx.core.R$color: int call_notification_answer_color
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
kotlin.text.Regex$special$$inlined$fromInt$1: int $value
androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback mCallback
androidx.window.area.WindowAreaCapability$Status: androidx.window.area.WindowAreaCapability$Status WINDOW_AREA_STATUS_UNAVAILABLE
androidx.core.app.NotificationChannelCompat: boolean mImportantConversation
androidx.core.R$id: int normal
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: int label
androidx.fragment.app.Fragment: java.lang.String mTargetWho
androidx.core.graphics.drawable.IconCompat: float ICON_DIAMETER_FACTOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
androidx.core.location.LocationRequestCompat$Api19Impl: java.lang.reflect.Method sSetFastestIntervalMethod
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function3 onCancellationConstructor
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.locks.ReentrantLock val$lock
androidx.fragment.app.Fragment: int STARTED
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object core
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList sharedElementFirstOutViews
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.adapter.sidecar.SidecarWindowBackend this$0
androidx.window.embedding.EmbeddingBackend$Companion$decorator$1: androidx.window.embedding.EmbeddingBackend$Companion$decorator$1 INSTANCE
kotlinx.coroutines.DebugKt: boolean RECOVER_STACK_TRACES
androidx.core.provider.FontRequest: java.lang.String mProviderAuthority
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int label
androidx.core.view.MotionEventCompat: int AXIS_RUDDER
androidx.core.view.ViewParentCompat: java.lang.String TAG
kotlin.KotlinVersion: int version
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.properties.Delegates$observable$1: kotlin.jvm.functions.Function3 $onChange
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: float[] $this_asSequence$inlined
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
kotlinx.coroutines.sync.MutexImpl$onLock$2: kotlinx.coroutines.sync.MutexImpl$onLock$2 INSTANCE
androidx.window.core.FailedSpecification$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_INDETERMINATE
androidx.fragment.app.SpecialEffectsController$Operation$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.view.PointerIconCompat: int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT2
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.savedstate.SavedStateRegistry: boolean isAllowingSavingState
kotlin.text.MatchGroup: java.lang.String value
androidx.core.content.pm.ShortcutManagerCompat: int FLAG_MATCH_CACHED
androidx.core.telephony.TelephonyManagerCompat: java.lang.reflect.Method sGetSubIdMethod
kotlin.text.MatcherMatchResult: kotlin.text.MatchGroupCollection groups
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.util.concurrent.atomic.AtomicReferenceArray elements
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE
androidx.fragment.app.FragmentTabHost$TabInfo: android.os.Bundle args
com.getkeepsafe.relinker.elf.Elf$ProgramHeader: long memsz
io.flutter.plugin.editing.TextInputPlugin: java.lang.String TAG
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object L$0
androidx.core.graphics.drawable.IconCompat: int TYPE_RESOURCE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_MULTILINE
androidx.core.location.LocationRequestCompat: int QUALITY_BALANCED_POWER_ACCURACY
androidx.core.widget.ContentLoadingProgressBar: boolean mPostedHide
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int DOWN
androidx.core.R$layout: int notification_template_part_chronometer
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_FLAGS_INTEROP_KEY
androidx.core.os.EnvironmentCompat: java.lang.String MEDIA_UNKNOWN
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.nio.file.Path $this_copyToRecursively
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_CANCELLED
kotlin._Assertions: kotlin._Assertions INSTANCE
kotlin.text.CharCategory: kotlin.text.CharCategory FORMAT
androidx.loader.R$id: int action_divider
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: kotlinx.coroutines.channels.BufferedChannel$onReceive$1 INSTANCE
androidx.core.app.Person: java.lang.String mKey
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 getInitialValue
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP
kotlin.text.Typography: char lowDoubleQuote
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementSourceNames
kotlin.io.encoding.Base64: boolean isMimeScheme
kotlinx.coroutines.flow.SharedFlowImpl$WhenMappings: int[] $EnumSwitchMapping$0
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: int label
kotlinx.coroutines.scheduling.Task: long submissionTime
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_HANDLE_DEEPLINKING
androidx.window.layout.adapter.extensions.ExtensionWindowBackend: androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion Companion
kotlin.jvm.internal.TypeParameterReference: kotlin.jvm.internal.TypeParameterReference$Companion Companion
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.CoroutineDispatcher default
androidx.core.view.PointerIconCompat: int TYPE_COPY
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State$Companion Companion
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type lowerBound
androidx.fragment.app.DefaultSpecialEffectsController$retainMatchingViews$1: java.util.Collection $names
io.flutter.plugin.common.StandardMessageCodec: byte BYTE_ARRAY
androidx.profileinstaller.ProfileInstaller: java.lang.String PROFILE_INSTALLER_SKIP_FILE_NAME
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] a
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: kotlinx.coroutines.flow.Flow $this_debounceInternal
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_GRAVITY
kotlin.io.FileTreeWalk: java.io.File start
androidx.core.app.JobIntentService$CompatWorkEnqueuer: boolean mServiceProcessing
androidx.core.R$id: int accessibility_custom_action_29
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: java.util.concurrent.Executor executor
kotlin.sequences.SequenceBuilderIterator: kotlin.coroutines.Continuation nextStep
kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
androidx.core.content.FileProvider: java.lang.String ATTR_NAME
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mEffectiveRampDown
androidx.core.app.NotificationCompat$CallStyle: java.lang.String TEMPLATE_CLASS_NAME
androidx.fragment.app.Fragment: boolean mBeingSaved
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_UNAVAILABLE
androidx.fragment.app.Fragment: int INITIALIZING
androidx.core.os.HandlerKt$postDelayed$runnable$1: kotlin.jvm.functions.Function0 $action
kotlin.time.AdjustedTimeMark: long adjustment
androidx.viewpager.R$dimen: int notification_right_side_padding_top
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_SOFTWARE_RENDERING
androidx.customview.R$drawable: int notification_bg_low_normal
androidx.window.embedding.EmbeddingCompat: android.content.Context applicationContext
kotlin.ranges.ULongProgression: long first
kotlin.collections.AbstractMap$toString$1: kotlin.collections.AbstractMap this$0
com.getkeepsafe.relinker.elf.Elf$Header: long phoff
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
kotlin.reflect.ParameterizedTypeImpl: java.lang.Class rawType
androidx.lifecycle.Transformations$switchMap$2: androidx.lifecycle.LiveData liveData
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String hintText
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener mListener
androidx.savedstate.Recreator$SavedStateProvider: java.util.Set classes
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object L$1
androidx.fragment.app.FragmentTabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener
androidx.core.app.NotificationCompatBuilder: int mGroupAlertBehavior
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_SET_USER_VISIBLE_HINT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
androidx.fragment.app.SpecialEffectsController$Operation: boolean isAwaitingContainerChanges
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: androidx.core.app.SharedElementCallback mCallback
androidx.loader.R$id: int forever
androidx.fragment.app.FragmentManagerState: int mBackStackIndex
android.support.v4.os.ResultReceiver: android.os.Handler mHandler
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.jvm.functions.Function2 $operation
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_DISABLED
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_DART_ENTRYPOINT
androidx.loader.R$id: int tag_unhandled_key_event_manager
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.FragmentTransaction mCurTransaction
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object result
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onStart
androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.Object mLock
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: java.lang.String TEMPLATE_CLASS_NAME
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_CLOSED
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LOCALE
androidx.core.R$id: int tag_accessibility_clickable_spans
androidx.core.location.LocationCompat: java.lang.String EXTRA_SPEED_ACCURACY
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementEnterTransition
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode displayMode
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$WorkerRunnable mWorker
kotlin.UnsafeLazyImpl: java.lang.Object _value
androidx.core.view.ViewCompat: java.lang.String TAG
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1 INSTANCE
androidx.customview.R$id: int action_text
androidx.versionedparcelable.VersionedParcelParcel: boolean DEBUG
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: androidx.lifecycle.LiveData $this_asFlow
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.ByteArrayOutputStream mOutput
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.String EXTRA_PERMISSIONS
androidx.fragment.app.BackStackRecord: boolean mCommitted
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.core.util.SparseLongArrayKt$valueIterator$1: android.util.SparseLongArray $this_valueIterator
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: int label
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: java.util.concurrent.ConcurrentLinkedQueue sentQueue
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_NO_PROFILE
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater
androidx.core.widget.NestedScrollView: int mTouchSlop
androidx.core.app.RemoteInput: boolean mAllowFreeFormTextInput
androidx.core.content.FileProvider: java.lang.String TAG_CACHE_PATH
androidx.customview.R$styleable: int FontFamily_fontProviderAuthority
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PAGE
androidx.window.R$styleable: int SplitPairRule_splitMaxAspectRatioInLandscape
androidx.savedstate.SavedStateRegistry: android.os.Bundle restoredState
androidx.fragment.app.DialogFragment$5: androidx.fragment.app.DialogFragment this$0
io.flutter.embedding.engine.FlutterJNI: float displayDensity
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsEnabled
androidx.loader.R$styleable: int ColorStateListItem_alpha
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_5
com.example.wellnesshub.R$mipmap: int ic_launcher
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_16
com.example.wellnesshub.R$style: int LaunchTheme
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EVENT
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_STATE_DESCRIPTION
androidx.core.location.LocationManagerCompat$Api30Impl: java.lang.reflect.Method sRequestLocationUpdatesExecutorMethod
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
androidx.core.content.res.CamUtils: float[][] SRGB_TO_XYZ
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicIntegerFieldUpdater load$FU
androidx.window.embedding.EmbeddingAspectRatio: java.lang.String description
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaX
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object L$1
androidx.loader.content.ModernAsyncTask$1: java.util.concurrent.atomic.AtomicInteger mCount
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean isOverlapAllowed
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: java.lang.String GMS_ACTION_PICK_IMAGES
androidx.activity.BackEventCompat: float touchY
kotlinx.coroutines.channels.BufferedChannel: kotlin.jvm.functions.Function1 onUndeliveredElement
androidx.window.R$id: int alwaysDisallow
androidx.customview.R$id: int icon_group
kotlin.text.MatcherMatchResult: java.util.List groupValues_
androidx.core.app.NotificationCompat: int BADGE_ICON_SMALL
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$0
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
androidx.fragment.app.Fragment: int CREATED
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ISOLATE_SNAPSHOT_DATA_KEY
androidx.loader.R$id: int normal
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
androidx.loader.R$style: int TextAppearance_Compat_Notification_Line2
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.customview.widget.ViewDragHelper: float[] mLastMotionY
androidx.loader.R$dimen: int compat_button_inset_horizontal_material
androidx.customview.R$integer: int status_bar_notification_info_maxnum
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] $VALUES
kotlinx.coroutines.InvokeOnCompletion: kotlin.jvm.functions.Function1 handler
kotlin.coroutines.jvm.internal.RunSuspend: kotlin.Result result
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
androidx.core.view.ViewCompat: int OVER_SCROLL_ALWAYS
androidx.fragment.app.DialogFragment$3: androidx.fragment.app.DialogFragment this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: java.lang.Object result
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_FILTER_KEY_EVENTS
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
androidx.fragment.app.FragmentTabHost$TabInfo: androidx.fragment.app.Fragment fragment
androidx.window.WindowProperties: java.lang.String PROPERTY_ACTIVITY_EMBEDDING_ALLOW_SYSTEM_OVERRIDE
androidx.tracing.Trace: boolean sHasAppTracingEnabled
androidx.core.app.TaskStackBuilder: android.content.Context mSourceContext
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveFqNames
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat LIGHTEN
kotlin.jvm.internal.CallableReference: java.lang.Class owner
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String SHORTCUT_LISTENER_INTENT_FILTER_ACTION
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
androidx.viewpager.R$dimen: int notification_top_pad
kotlin.DeepRecursiveFunction: kotlin.jvm.functions.Function3 block
androidx.core.R$attr: int ttcIndex
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 onCancellation
androidx.window.reflection.WindowExtensionsConstants: androidx.window.reflection.WindowExtensionsConstants INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2 this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
androidx.profileinstaller.ProfileVerifier$Cache: int mSchema
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.Class activityClass
io.flutter.embedding.android.KeyData: long physicalKey
androidx.lifecycle.LiveData$1: androidx.lifecycle.LiveData this$0
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.fragment.app.SpecialEffectsController$Operation operation
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_SECURITY_VIOLATION
androidx.core.text.util.FindAddress: java.util.regex.Pattern sStateRe
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Done
androidx.profileinstaller.ProfileVerifier$CompilationStatus: boolean mHasCurrentProfile
androidx.core.util.AtomicFile: java.io.File mNewName
io.flutter.plugin.common.StandardMessageCodec: byte TRUE
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect
androidx.core.provider.FontRequestWorker: java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_CANCEL_LABEL
androidx.viewpager.R$attr: int fontVariationSettings
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: android.app.PendingIntent mDeleteIntent
kotlin.DeepRecursiveScopeImpl: java.lang.Object result
io.flutter.embedding.android.FlutterView: android.database.ContentObserver systemSettingsObserver
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String BOUNDS_IN_WINDOW_KEY
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List lastObservedStackTrace
kotlin.jvm.internal.TypeReference: int IS_MARKED_NULLABLE
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1: kotlin.jvm.functions.Function3 $action
androidx.window.WindowSdkExtensions: int extensionVersion
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: kotlinx.coroutines.channels.BufferedChannel$onReceive$2 INSTANCE
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object result
android.support.v4.app.INotificationSideChannel: java.lang.String DESCRIPTOR
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: int NANOS_PER_MS
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL
androidx.core.app.FrameMetricsAggregator: int ANIMATION_DURATION
androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object L$0
androidx.core.os.LocaleListCompatWrapper: java.util.Locale LOCALE_AR_XB
androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle$Companion Companion
androidx.fragment.app.ListFragment: boolean mListShown
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray values
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object L$0
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence sequence1
androidx.fragment.app.Fragment: boolean mHasMenu
androidx.window.core.ConsumerAdapter: java.lang.ClassLoader loader
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4: android.view.ViewGroup $container
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
kotlin.time.Duration: long NEG_INFINITE
androidx.core.R$drawable: int notification_bg
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Runnable $block
androidx.customview.R$id: int action_image
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: int label
androidx.window.layout.adapter.sidecar.SidecarCompat: java.util.Map windowListenerRegisteredContexts
kotlin.ranges.ULongProgression: long step
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_LETTER
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter generatedAdapter
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
androidx.fragment.R$styleable: int Fragment_android_name
androidx.window.embedding.SplitRule: androidx.window.embedding.EmbeddingAspectRatio maxAspectRatioInPortrait
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_SKIA_ALLOWLIST
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: kotlinx.coroutines.channels.ReceiveChannel $this_requireNoNulls
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.profileinstaller.ProfileVerifier: java.lang.String CUR_PROFILES_BASE_DIR
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int threshold
kotlin.ranges.LongProgressionIterator: long finalElement
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int STYLUS
androidx.core.view.ViewCompat: int LAYER_TYPE_SOFTWARE
androidx.customview.view.AbsSavedState: android.os.Parcelable mSuperState
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.locks.Condition val$cond
androidx.core.util.SparseLongArrayKt$keyIterator$1: int index
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object result
androidx.customview.R$styleable: int GradientColor_android_tileMode
androidx.viewpager.R$styleable: int[] ColorStateListItem
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.Class activityClass
androidx.core.text.BidiFormatter: char RLM
androidx.fragment.app.Fragment$AnimationInfo: java.util.ArrayList mSharedElementTargetNames
kotlin.jvm.internal.ArrayBooleanIterator: int index
kotlin.sequences.SequencesKt___SequencesKt$minus$3: kotlin.sequences.Sequence $this_minus
androidx.core.location.LocationManagerCompat: long GET_CURRENT_LOCATION_TIMEOUT_MS
androidx.core.graphics.drawable.IconCompat: byte[] mData
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: kotlin.jvm.functions.Function0 $iterator
androidx.core.graphics.WeightTypefaceApi21: java.lang.String NATIVE_CREATE_WEIGHT_ALIAS_METHOD
androidx.lifecycle.Transformations$distinctUntilChanged$1: kotlin.jvm.internal.Ref$BooleanRef $firstTime
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackWindowConsumerValid$1: androidx.window.embedding.SafeActivityEmbeddingComponentProvider this$0
org.intellij.lang.annotations.PrintFormatPattern: java.lang.String CONVERSION
androidx.core.util.PatternsCompat: java.lang.String WORD_BOUNDARY
kotlin.ULong: long MAX_VALUE
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$0
com.getkeepsafe.relinker.elf.Elf$ProgramHeader: long offset
androidx.collection.ArraySet: java.lang.Object[] sBaseCache
androidx.core.app.NotificationCompat$BubbleMetadata: java.lang.String mShortcutId
kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder backing
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String NETWORK_POLICY_METADATA_KEY
androidx.fragment.app.FragmentState: boolean mRetainInstance
androidx.loader.R$dimen: int compat_notification_large_icon_max_height
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_14
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CALL_PERSON
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
androidx.fragment.app.FragmentManager$7: androidx.fragment.app.FragmentManager this$0
androidx.profileinstaller.DexProfileData: int hotMethodRegionSize
androidx.viewpager.widget.ViewPager: int mMinimumVelocity
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.AwaitKt$joinAll$3: java.lang.Object result
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_LEFT
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object state
androidx.fragment.app.FragmentState: boolean mRemoving
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object $value
io.flutter.embedding.android.KeyboardMap: long kAndroidPlane
androidx.fragment.app.Fragment: java.lang.String mPreviousWho
androidx.window.embedding.EmbeddingCompat: androidx.window.core.ConsumerAdapter consumerAdapter
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEMPLATE
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_WEB_URL
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object result
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
androidx.activity.ComponentActivity$1$1: androidx.activity.result.contract.ActivityResultContract$SynchronousResult val$synchronousResult
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
androidx.fragment.app.FragmentStateManager: java.lang.String VIEW_STATE_KEY
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
androidx.profileinstaller.ProfileTranscoder: byte[] MAGIC_PROFM
org.intellij.lang.annotations.Flow: java.lang.String RETURN_METHOD_TARGET
androidx.core.app.NotificationCompat$TvExtender: java.lang.String mChannelId
androidx.loader.content.ModernAsyncTask: int KEEP_ALIVE
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: kotlin.jvm.internal.Ref$ObjectRef $result
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView flutterView
androidx.core.view.WindowInsetsControllerCompat$Impl20: androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat
kotlin.io.FileTreeWalk$FileTreeWalkIterator$WhenMappings: int[] $EnumSwitchMapping$0
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
androidx.fragment.app.FragmentManager$PopBackStackState: int mFlags
androidx.core.app.RemoteInput: java.lang.String mResultKey
kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler
androidx.core.location.LocationRequestCompat$Api19Impl: java.lang.reflect.Method sSetExpireInMethod
androidx.core.app.NotificationCompat$BubbleMetadata: int mFlags
androidx.core.util.SparseIntArrayKt$keyIterator$1: int index
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: kotlinx.coroutines.AwaitAll$AwaitAllNode[] nodes
kotlin.io.FilePathComponents: java.io.File root
androidx.core.view.WindowCompat: int FEATURE_ACTION_MODE_OVERLAY
androidx.core.view.HapticFeedbackConstantsCompat: int DRAG_START
androidx.lifecycle.ComputableLiveData$_liveData$1: androidx.lifecycle.ComputableLiveData this$0
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
androidx.concurrent.futures.AbstractResolvableFuture$Listener: androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.channels.ProducerScope $scope
androidx.core.util.PatternsCompat: java.util.regex.Pattern DOMAIN_NAME
androidx.window.reflection.WindowExtensionsConstants: java.lang.String FOLDING_FEATURE_CLASS
kotlin.io.path.LinkFollowing: java.nio.file.LinkOption[] followLinkOption
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_BLOCKQUOTE
androidx.core.graphics.PaintCompat: java.lang.String TOFU_STRING
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object L$1
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.String TEMPLATE_CLASS_NAME
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.BackGestureChannel backGestureChannel
androidx.window.embedding.SplitAttributes$LayoutDirection: androidx.window.embedding.SplitAttributes$LayoutDirection LOCALE
androidx.viewpager.widget.ViewPager: java.util.Comparator COMPARATOR
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: long idleWorkerKeepAliveNs
org.intellij.lang.annotations.Flow: java.lang.String DEFAULT_TARGET
androidx.viewpager.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.customview.widget.ViewDragHelper: int mPointersDown
androidx.window.embedding.ActivityRule$Builder: java.util.Set filters
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: java.lang.Runnable mRunnable
androidx.window.embedding.SplitAttributes$SplitType$Companion$ratio$checkedRatio$1: float $ratio
kotlin.jvm.internal.PackageReference: java.lang.String moduleName
androidx.collection.MapCollections$ArrayIterator: int mIndex
kotlinx.coroutines.flow.StateFlowImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mCcAddresses
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: androidx.lifecycle.Lifecycle mLifecycle
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
io.flutter.Build$API_LEVELS: int API_23
androidx.window.embedding.SplitPlaceholderRule$Builder: boolean isSticky
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int maxPoolSize
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
androidx.window.area.WindowAreaInfo$Type: androidx.window.area.WindowAreaInfo$Type$Companion Companion
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
androidx.customview.R$styleable: int GradientColor_android_startX
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: int label
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
kotlinx.coroutines.internal.MainDispatcherLoader: boolean FAST_SERVICE_LOADER_ENABLED
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1: androidx.lifecycle.LiveDataScope $$this$liveData
androidx.fragment.app.BackStackRecordState: int[] mOps
androidx.lifecycle.SavedStateHandle$SavingStateLiveData: androidx.lifecycle.SavedStateHandle handle
kotlinx.coroutines.internal.ClassValueCtorCache: kotlinx.coroutines.internal.ClassValueCtorCache INSTANCE
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction TERMINATE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
androidx.loader.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL
androidx.core.app.JobIntentService$JobWorkEnqueuer: android.app.job.JobScheduler mJobScheduler
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int capacity
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String NORMAL_THEME_META_DATA_KEY
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: int label
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: boolean $isNewCoroutine
androidx.customview.widget.ViewDragHelper: int DIRECTION_ALL
androidx.annotation.VisibleForTesting: androidx.annotation.VisibleForTesting$Companion Companion
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedActions
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_ARABIC
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object L$1
androidx.fragment.app.Fragment: boolean mDeferStart
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: int label
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
kotlin.text.CharCategory: kotlin.text.CharCategory SURROGATE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType WEB_SEARCH
kotlin.collections.builders.SerializedMap: long serialVersionUID
androidx.core.location.GnssStatusCompat: int CONSTELLATION_GALILEO
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo mInfo
androidx.core.view.ViewCompat: boolean sTempDetachBound
androidx.loader.R$drawable: int notification_bg_normal
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $predicate$inlined
androidx.collection.MapCollections$ArrayIterator: int mSize
androidx.viewpager.widget.ViewPager: boolean DEBUG
android.support.v4.os.IResultReceiver2$Stub$Proxy: android.os.IBinder mRemote
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: kotlin.jvm.internal.Ref$ObjectRef $leftoverContext
com.getkeepsafe.relinker.elf.Elf$SectionHeader: long info
androidx.viewpager.widget.ViewPager: int mBottomPageBounds
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback
androidx.core.content.res.ViewingConditions: float mNc
androidx.lifecycle.CoroutineLiveData$clearSource$1: androidx.lifecycle.CoroutineLiveData this$0
kotlin.io.path.PathTreeWalk: java.nio.file.Path start
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
androidx.core.R$string: int status_bar_notification_info_overflow
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind LANGUAGE_VERSION
androidx.core.view.PointerIconCompat: int TYPE_NULL
kotlinx.coroutines.flow.DistinctFlowImpl: kotlinx.coroutines.flow.Flow upstream
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: int mColumnSpan
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Title
androidx.lifecycle.LiveData: int mActiveCount
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object L$0
androidx.core.app.NotificationCompat: int PRIORITY_LOW
androidx.loader.R$dimen: int compat_button_padding_horizontal_material
androidx.customview.widget.ViewDragHelper: int EDGE_RIGHT
androidx.core.app.NotificationCompat$BubbleMetadata: int FLAG_AUTO_EXPAND_BUBBLE
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object L$0
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mGravity
kotlin.UShortArray$Iterator: int index
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: androidx.lifecycle.LifecycleCoroutineScope this$0
androidx.fragment.app.FragmentStateManager: java.lang.String FRAGMENT_STATE_KEY
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.plugin.common.MethodChannel channel
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object L$0
io.flutter.plugin.editing.InputConnectionAdaptor: java.lang.String TAG
androidx.core.view.MotionEventCompat: int ACTION_POINTER_UP
io.flutter.plugin.editing.ListenableEditingState: java.lang.String TAG
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_LIST
kotlinx.coroutines.internal.Segment: java.util.concurrent.atomic.AtomicIntegerFieldUpdater cleanedAndPointers$FU
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: int label
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateParentMetricsPredicate$1: androidx.window.embedding.SplitRule $splitRule
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: kotlin.sequences.Sequence $this_runningFold
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner
androidx.customview.R$styleable: int ColorStateListItem_android_alpha
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption[] $VALUES
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.Object mInfo
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.java.core.CallbackToFlowAdapter callbackToFlowAdapter
androidx.core.view.KeyEventDispatcher: boolean sDialogFieldsFetched
kotlin.ranges.CharProgression: int step
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicLongFieldUpdater sequenceNumber$FU
androidx.fragment.app.Fragment$AnimationInfo: boolean mEnterTransitionPostponed
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: int I$0
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_CACHED_ENGINE_ID
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_UNIFORM
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.EmbeddingAdapter$Companion Companion
kotlinx.coroutines.DefaultExecutor: int ACTIVE
androidx.activity.ComponentDialog: androidx.savedstate.SavedStateRegistryController savedStateRegistryController
kotlin.io.path.ExceptionsCollector: int totalExceptions
kotlin.text.CharCategory: kotlin.text.CharCategory PRIVATE_USE
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$0
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_SLICE_URI
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: kotlin.jvm.functions.Function2 $predicate
androidx.window.embedding.RuleController: androidx.window.embedding.EmbeddingBackend embeddingBackend
androidx.core.app.NotificationCompat$TvExtender: java.lang.String EXTRA_SUPPRESS_SHOW_OVER_APPS
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.internal.SafeCollector: int collectContextSize
androidx.core.os.MessageCompat: boolean sTrySetAsynchronous
kotlin.enums.EnumEntriesList: kotlin.jvm.functions.Function0 entriesProvider
androidx.window.embedding.SplitRule: androidx.window.embedding.SplitRule$Companion Companion
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: kotlinx.coroutines.channels.BufferedChannel this$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: kotlin.jvm.internal.Ref$BooleanRef $isEmpty
kotlin.text.Typography: char rightGuillemet
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentTitle
kotlinx.coroutines.DebugKt: java.lang.String DEBUG_PROPERTY_VALUE_AUTO
androidx.fragment.app.FragmentStateManager$1: androidx.fragment.app.FragmentStateManager this$0
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object L$1
androidx.core.view.WindowInsetsCompat$BuilderImpl29: android.view.WindowInsets$Builder mPlatBuilder
androidx.core.R$id: int accessibility_custom_action_31
androidx.core.view.ContentInfoCompat: int SOURCE_CLIPBOARD
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Field sConsumedField
androidx.window.R$id: int topToBottom
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object L$1
androidx.core.text.PrecomputedTextCompat: int[] mParagraphEnds
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
androidx.loader.R$styleable: int[] GradientColor
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
kotlin.io.encoding.EncodeOutputStream: int byteBufferLength
androidx.fragment.app.BackStackRecordState: int[] mOldMaxLifecycleStates
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: java.lang.Iterable $this_asSequence$inlined
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.jvm.functions.Function3 $transform
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: java.lang.Object mInfo
androidx.collection.LruCache: int createCount
androidx.loader.content.CursorLoader: java.lang.String mSelection
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_SELECTION
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$0
androidx.viewpager.widget.ViewPager: int mPageTransformerLayerType
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller
androidx.lifecycle.SavedStateHandlesVM: java.util.Map handles
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.DisposableHandle handle
androidx.profileinstaller.DexProfileData: int classSetSize
androidx.core.location.LocationRequestCompat$Builder: int mMaxUpdates
kotlinx.coroutines.JobSupport$Finishing: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleting$FU
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String ACTION_INSTALL_PROFILE
androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.graphics.drawable.IconCompat mIcon
androidx.loader.R$styleable: int ColorStateListItem_android_lStar
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: int label
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.viewpager.R$styleable: int GradientColor_android_gradientRadius
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_FLAGS_KEY
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_POLITE
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_UP
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_TO_FILE
androidx.core.view.ViewGroupKt$special$$inlined$Sequence$1: android.view.ViewGroup $this_descendants$inlined
io.flutter.embedding.android.FlutterTextureView: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: kotlin.jvm.functions.Function6 $transform$inlined$1
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_EXIT
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AUTOMATICALLY_REGISTER_PLUGINS_METADATA_KEY
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object L$2
androidx.lifecycle.ComputableLiveData: java.util.concurrent.atomic.AtomicBoolean computing
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: androidx.collection.ArraySet splitRules
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
androidx.core.R$styleable: int ColorStateListItem_android_lStar
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: java.lang.String EXTRA_SYSTEM_FALLBACK_PICK_IMAGES_MAX
androidx.core.provider.DocumentsContractCompat: java.lang.String PATH_TREE
androidx.core.app.NotificationChannelCompat: android.net.Uri mSound
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: kotlin.jvm.functions.Function0 $iterator
kotlin.jvm.internal.Ref$IntRef: int element
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object result
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.os.HandlerThread sHandlerThread
io.flutter.embedding.engine.FlutterJNI: float displayWidth
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_TARGET_FRAGMENT_USAGE
androidx.core.view.ContentInfoCompat$CompatImpl: int mSource
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.RectF mDstRectF
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Object value
androidx.core.R$styleable: int GradientColor_android_endY
androidx.core.provider.RequestExecutor$HandlerExecutor: android.os.Handler mHandler
androidx.core.content.res.ResourcesCompat: java.util.WeakHashMap sColorStateCaches
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: long[] $this_asList
androidx.lifecycle.Transformations$switchMap$2: androidx.arch.core.util.Function $switchMapFunction
androidx.customview.widget.ViewDragHelper: boolean mReleaseInProgress
kotlin.jvm.internal.CharCompanionObject: char MAX_SURROGATE
kotlin.collections.builders.ListBuilder: java.lang.Object[] array
androidx.core.R$id: int accessibility_custom_action_0
androidx.window.area.utils.DeviceMetrics: java.lang.String model
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater sendSegment$FU
androidx.customview.R$dimen: int compat_button_padding_vertical_material
androidx.annotation.Dimension$Companion: int PX
androidx.lifecycle.LifecycleDispatcher: java.util.concurrent.atomic.AtomicBoolean initialized
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher mCipher
androidx.fragment.app.FragmentTransaction: int mPopEnterAnim
androidx.core.app.NotificationCompat$TvExtender: boolean mSuppressShowOverApps
androidx.fragment.app.FragmentManager$RestoreBackStackState: androidx.fragment.app.FragmentManager this$0
androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners
androidx.fragment.app.SpecialEffectsController$Operation: java.util.List completionListeners
kotlin.ranges.UIntProgressionIterator: int step
androidx.core.app.FrameMetricsAggregator: int COMMAND_INDEX
androidx.core.util.LongSparseArrayKt$valueIterator$1: android.util.LongSparseArray $this_valueIterator
io.flutter.Build$API_LEVELS: int API_31
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MEDIA_SESSION
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object result
androidx.core.view.PointerIconCompat: int TYPE_ALIAS
androidx.core.graphics.RegionKt$iterator$1: boolean hasMore
androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnPictureInPictureModeChangedListener
androidx.activity.OnBackPressedDispatcher$1: androidx.activity.OnBackPressedDispatcher this$0
androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1$1: androidx.window.area.WindowAreaControllerImpl this$0
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int I$0
androidx.lifecycle.LifecycleRegistry: int addingObserverCounter
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: boolean $ignoreCase
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: androidx.core.view.AccessibilityDelegateCompat mCompat
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_LOCAL_ONLY
kotlin.jvm.internal.LongCompanionObject: int SIZE_BYTES
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate keyboardDelegate
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
kotlinx.coroutines.selects.OnTimeout: long timeMillis
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_FRAGMENT_TAG_USAGE
kotlin.jvm.internal.DoubleCompanionObject: double NaN
androidx.loader.content.Loader: int mId
kotlin.jvm.internal.FloatCompanionObject: kotlin.jvm.internal.FloatCompanionObject INSTANCE
kotlin.ULongArray$Iterator: long[] array
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: int label
androidx.core.app.NotificationCompat$TvExtender: java.lang.String EXTRA_CONTENT_INTENT
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER
org.intellij.lang.annotations.PrintFormatPattern: java.lang.String TEXT
androidx.core.util.ContinuationConsumer: kotlin.coroutines.Continuation continuation
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object L$1
androidx.lifecycle.SavedStateHandleSupport: java.lang.String VIEWMODEL_KEY
androidx.core.content.LocusIdCompat: java.lang.String mId
kotlin.text.CharCategory: kotlin.text.CharCategory FINAL_QUOTE_PUNCTUATION
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int I$1
androidx.core.content.res.CamColor: float CHROMA_SEARCH_ENDPOINT
androidx.core.text.ICUCompat: java.lang.String TAG
androidx.collection.ArraySet: int CACHE_SIZE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_START_PAUSED
androidx.core.app.NotificationCompat: java.lang.String EXTRA_INFO_TEXT
kotlin.collections.EmptyMap: long serialVersionUID
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_AUTHOR
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_FORWARD
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object L$0
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.graphics.drawable.IconCompat mIcon
androidx.window.embedding.SplitPlaceholderRule$Builder: java.lang.String tag
kotlin.UByte: byte data
androidx.core.app.AppLocalesStorageHelper: java.lang.Object sAppLocaleStorageSync
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onVisitFileFailed
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CALL_PERSON_COMPAT
androidx.viewpager.R$styleable: int GradientColorItem_android_offset
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: char[] $this_asIterable$inlined
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.ThreadLocal threadLocal
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object L$2
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: kotlinx.coroutines.CancellableContinuation $cont
androidx.core.text.util.LinkifyCompat$LinkSpec: java.lang.String url
androidx.fragment.app.Fragment$6: androidx.fragment.app.Fragment this$0
androidx.core.app.ActivityRecreator$2: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean automaticallyRegisterPlugins
androidx.core.net.MailTo: java.util.HashMap mHeaders
kotlin.time.Duration: kotlin.time.Duration$Companion Companion
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: java.util.concurrent.CompletableFuture $future
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
kotlin.ranges.ULongProgression: long last
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: java.lang.String TAG
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.lang.Object[] $this_groupingBy
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: int label
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean isSerial
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST
androidx.core.graphics.WeightTypefaceApi21: java.lang.reflect.Method sNativeCreateFromTypeface
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
androidx.core.util.PatternsCompat: java.lang.String EMAIL_ADDRESS_DOMAIN
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancelAll
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
kotlin.sequences.SubSequence$iterator$1: int position
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.CancellableContinuation continuation
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
androidx.fragment.app.LogWriter: java.lang.StringBuilder mBuilder
androidx.lifecycle.DispatchQueue: java.util.Queue queue
androidx.lifecycle.SavedStateHandle: java.lang.String VALUES
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.jvm.functions.Function3 $currentFunction$inlined
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: kotlinx.coroutines.EventLoopImplBase this$0
com.getkeepsafe.relinker.elf.Elf$Header: int ELFDATA2MSB
io.flutter.embedding.android.FlutterTextureView: boolean isPaused
androidx.core.view.MotionEventCompat: int AXIS_SIZE
kotlinx.coroutines.EventLoop: long useCount
androidx.lifecycle.BlockRunner$cancel$1: androidx.lifecycle.BlockRunner this$0
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: kotlin.ranges.IntRange $this_asFlow$inlined
androidx.loader.content.CursorLoader: androidx.loader.content.Loader$ForceLoadContentObserver mObserver
androidx.loader.R$id: int action_text
androidx.fragment.app.SpecialEffectsController: boolean isContainerPostponed
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: android.media.ImageReader reader
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.internal.SendingCollector $collector
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
kotlin.jvm.internal.LongCompanionObject: kotlin.jvm.internal.LongCompanionObject INSTANCE
androidx.core.util.Pools$SimplePool: java.lang.Object[] pool
androidx.annotation.RequiresOptIn$Level: androidx.annotation.RequiresOptIn$Level ERROR
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
androidx.loader.content.ModernAsyncTask: int MAXIMUM_POOL_SIZE
androidx.fragment.app.FragmentManager: java.lang.String TAG
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.util.concurrent.atomic.AtomicInteger $nonClosed
androidx.core.graphics.WeightTypefaceApi14: java.lang.Object sWeightCacheLock
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature mSignature
androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData target
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
androidx.core.app.NotificationCompat$WearableExtender: int mContentIconGravity
androidx.fragment.app.FragmentTransaction: int OP_HIDE
kotlin.ranges.OpenEndFloatRange: float _start
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
androidx.core.view.LayoutInflaterCompat: boolean sCheckedField
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_KEY
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Integer previousVisibility
androidx.core.view.ViewKt$postDelayed$runnable$1: kotlin.jvm.functions.Function0 $action
androidx.window.area.WindowAreaControllerImpl: androidx.window.area.WindowAreaCapability$Status currentRearDisplayModeStatus
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: int label
androidx.core.R$layout: int notification_action
androidx.fragment.app.FragmentStore: java.util.HashMap mSavedState
androidx.loader.R$styleable: int GradientColor_android_centerX
kotlin.time.DurationUnitKt__DurationUnitJvmKt$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.text.BidiFormatter: boolean mIsRtlContext
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: int label
androidx.core.content.res.CamColor: float mBstar
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: kotlin.jvm.functions.Function2 $transform
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: androidx.window.extensions.layout.WindowLayoutComponent component
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: int TRANSACTION_onIsPermissionRevocationEnabledForAppResult
io.flutter.plugin.editing.FlutterTextUtils: int CANCEL_TAG
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_TOUCH_EXPLORATION_MODE
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object L$1
kotlin.UShort: short data
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: int label
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: int index
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object L$0
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: int index
kotlin.collections.AbstractMap: java.util.Set _keys
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedClipData
androidx.core.view.MenuKt$iterator$1: android.view.Menu $this_iterator
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration val$configurationToRemove
androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.contract.ActivityResultContract val$contract
androidx.collection.LongSparseArray: long[] mKeys
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: java.lang.Object L$0
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancel
androidx.fragment.app.BackStackRecordState: boolean mReorderingAllowed
androidx.core.text.util.FindAddress: java.lang.String NL
com.getkeepsafe.relinker.elf.Elf$DynamicStructure: int DT_NULL
kotlinx.coroutines.flow.StartedLazily$command$1$1: kotlin.jvm.internal.Ref$BooleanRef $started
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object L$1
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.lang.String TAG
androidx.fragment.app.FragmentManager: androidx.core.util.Consumer mOnMultiWindowModeChangedListener
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String dispatcher
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object L$0
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget EXPRESSION
io.flutter.plugin.editing.TextEditingDelta: java.lang.String TAG
androidx.fragment.app.FragmentTransaction: boolean mReorderingAllowed
kotlinx.coroutines.flow.internal.SendingCollector: kotlinx.coroutines.channels.SendChannel channel
android.support.v4.os.IResultReceiver$Stub: int TRANSACTION_send
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: int label
androidx.core.content.FileProvider: java.lang.String ATTR_PATH
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
androidx.loader.content.CursorLoader: java.lang.String mSortOrder
androidx.customview.R$dimen: int notification_small_icon_size_as_large
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$5
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.transition.TransitionKt$addListener$5: androidx.core.transition.TransitionKt$addListener$5 INSTANCE
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4: java.lang.Object $mergedTransition
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String mSystemFontFamilyName
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode SYNCHRONIZED
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat mIcon
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: java.lang.String TAG
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: int label
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
androidx.window.R$attr: int primaryActivityName
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: int mPriority
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitAttributes defaultSplitAttributes
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_REMOTE_INPUTS
androidx.core.R$attr: int lStar
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int nextIndex
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: kotlinx.coroutines.channels.ReceiveChannel[] $channels
androidx.viewpager.widget.ViewPager: int[] LAYOUT_ATTRS
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kDirectionalPad
androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: int label
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] $VALUES
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceArray array
androidx.window.embedding.SplitAttributes$LayoutDirection: androidx.window.embedding.SplitAttributes$LayoutDirection TOP_TO_BOTTOM
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: kotlin.jvm.functions.Function2 $transform$inlined$1
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_DISPOSED
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onCancel
androidx.activity.OnBackPressedDispatcher: androidx.core.util.Consumer onHasEnabledCallbacksChanged
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_ENABLED
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: int label
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport parent
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
androidx.window.core.ConsumerAdapter$createSubscription$1: java.lang.reflect.Method $removeMethod
androidx.fragment.app.SpecialEffectsController$Operation$State$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MAJOR
kotlin.text.RegexOption: kotlin.text.RegexOption[] $VALUES
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: short[] $this_withIndex
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1: kotlin.jvm.functions.Function4 $beforeTextChanged
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE
androidx.core.R$string: int call_notification_answer_video_action
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol RESUMING_BY_RCV
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.collection.SimpleArrayMap: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastFlutterState
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration previousEnqueuedConfiguration
androidx.fragment.app.FragmentTabHost$TabInfo: java.lang.String tag
androidx.core.util.RangeKt$toClosedRange$1: android.util.Range $this_toClosedRange
kotlin.sequences.MergingSequence: kotlin.jvm.functions.Function2 transform
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray sessionIdToState
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope TESTS
androidx.core.app.NotificationCompat$Builder: int mVisibility
androidx.core.view.NestedScrollingChildHelper: android.view.View mView
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
androidx.core.view.DragStartHelper: androidx.core.view.DragStartHelper$OnDragStartListener mListener
kotlin.collections.RingBuffer: int capacity
androidx.collection.SparseArrayCompat: java.lang.Object[] mValues
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_APP_BUNDLE_PATH
androidx.core.R$styleable: int FontFamilyFont_fontStyle
androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy mStrictModePolicy
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: kotlinx.coroutines.flow.Flow $this_launchIn
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ALLOWED_DATA_TYPES
androidx.core.app.NotificationCompat: java.lang.String EXTRA_VERIFICATION_TEXT
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.window.core.ActivityComponentInfo: java.lang.String packageName
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: androidx.lifecycle.LifecycleCoroutineScope this$0
io.flutter.embedding.engine.systemchannels.NavigationChannel: java.lang.String TAG
androidx.loader.R$styleable: int GradientColor_android_startY
io.flutter.embedding.engine.systemchannels.ScribeChannel: java.lang.String METHOD_IS_FEATURE_AVAILABLE
androidx.core.content.IntentSanitizer$Builder: java.util.Map mAllowedExtras
androidx.core.text.util.FindAddress: java.util.regex.Pattern sLocationNameRe
androidx.customview.widget.ViewDragHelper: int EDGE_ALL
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
kotlin.ranges.UIntProgressionIterator: boolean hasNext
androidx.core.location.LocationRequestCompat: long mMinUpdateIntervalMillis
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbShortTitleText
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long minDelayUntilStealableTaskNs
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1 this$0
kotlinx.coroutines.internal.ThreadState: int i
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object L$0
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
androidx.activity.FullyDrawnReporter: java.util.List onReportCallbacks
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.app.ActivityOptions mActivityOptions
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_COLUMN_INT
androidx.core.provider.RequestExecutor$ReplyRunnable$1: java.lang.Object val$result
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1 this$0
androidx.fragment.app.Fragment: java.lang.String mWho
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_LINK_URI_KEY
androidx.core.text.util.LocalePreferences: java.lang.String[] WEATHER_FAHRENHEIT_COUNTRIES
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_DETACH
kotlin.time.DurationUnit: kotlin.time.DurationUnit DAYS
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: int NANOS_ROUNDING_VALUE
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: java.lang.Object result
androidx.fragment.app.BackStackRecord: int mIndex
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String name
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: long idleWorkerKeepAliveNs
androidx.window.area.EmptyDecorator: androidx.window.area.EmptyDecorator INSTANCE
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence mText
androidx.viewpager.widget.PagerTabStrip: boolean mDrawFullUnderline
androidx.core.widget.CompoundButtonCompat: java.lang.reflect.Field sButtonDrawableField
kotlin.ranges.ULongProgression: kotlin.ranges.ULongProgression$Companion Companion
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol SUSPEND
kotlin.io.LineReader: java.nio.CharBuffer charBuf
kotlin.io.LineReader: byte[] bytes
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl: boolean sRebaseMethodFetched
kotlin.collections.ArrayDeque: java.lang.Object[] emptyElementData
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: androidx.window.area.WindowAreaControllerImpl this$0
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
androidx.core.transition.TransitionKt$addListener$3: androidx.core.transition.TransitionKt$addListener$3 INSTANCE
androidx.core.view.VelocityTrackerFallback: int HISTORY_SIZE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
androidx.core.widget.ContentLoadingProgressBar: java.lang.Runnable mDelayedHide
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean singleConsumer
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: java.util.WeakHashMap mPanesToVisible
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_CALL
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
androidx.core.R$id: int info
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.android.HandlerContext this$0
androidx.core.R$attr: int fontVariationSettings
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object result
kotlin.jvm.internal.Ref$BooleanRef: boolean element
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Map mAllowedViolations
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
io.flutter.embedding.engine.FlutterEngineGroupCache: io.flutter.embedding.engine.FlutterEngineGroupCache instance
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
androidx.core.view.ViewGroupKt$descendants$1$1: androidx.core.view.ViewGroupKt$descendants$1$1 INSTANCE
androidx.window.area.WindowAreaController$Companion: java.lang.String TAG
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
kotlin.text.Typography: kotlin.text.Typography INSTANCE
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.View mChild
androidx.activity.BackEventCompat: int swipeEdge
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sContentInsets
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper mHelper
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl INSTANCE
androidx.fragment.app.FragmentManager: boolean USE_PREDICTIVE_BACK
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: short[] $this_asSequence$inlined
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: android.util.DisplayMetrics displayMetrics
kotlinx.coroutines.flow.SharingConfig: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: int label
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.List subscribers
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: kotlin.sequences.Sequence $this_runningFoldIndexed
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_CONFIRM_LABEL
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$5
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String VM_SNAPSHOT_DATA_KEY
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: java.lang.String TAG
androidx.core.R$dimen: int notification_action_text_size
androidx.fragment.app.FragmentTransaction: int OP_UNSET_PRIMARY_NAV
kotlin.ranges.UIntProgression: int first
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List increasedValueAttributes
androidx.lifecycle.Transformations$map$1: kotlin.jvm.functions.Function1 $transform
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemNavigationBarContrastEnforced
androidx.core.view.PointerIconCompat: int TYPE_TEXT
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onPostVisitDirectory
androidx.lifecycle.LiveData: boolean mChangingActiveState
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence oldText
androidx.core.view.MotionEventCompat: int AXIS_HSCROLL
androidx.loader.R$styleable: int GradientColorItem_android_color
io.flutter.embedding.android.KeyboardMap: long kValueMask
androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.viewmodel.CreationExtras$Key DEFAULT_ARGS_KEY
androidx.core.view.ViewCompat: java.lang.reflect.Method sChildrenDrawingOrderMethod
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: kotlinx.coroutines.flow.FlowKt__CountKt$count$4 this$0
androidx.customview.widget.ViewDragHelper: float[] mLastMotionX
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: java.lang.Object[] $this_asIterable$inlined
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object mProvider
kotlinx.coroutines.channels.BufferedChannel: int capacity
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_FAILED
androidx.core.R$id: int accessibility_custom_action_25
androidx.viewpager.R$dimen: int compat_button_padding_vertical_material
io.flutter.view.AccessibilityBridge: java.lang.String TAG
androidx.viewpager.R$styleable: int GradientColor_android_endColor
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: java.lang.String locale
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object result
kotlin.time.DurationUnit: kotlin.time.DurationUnit MILLISECONDS
androidx.core.app.NotificationCompat$Action: java.lang.String EXTRA_SEMANTIC_ACTION
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
kotlinx.coroutines.flow.SharingConfig: int extraBufferCapacity
io.flutter.view.AccessibilityBridge: int SCROLLABLE_ACTIONS
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object L$1
androidx.core.app.NotificationManagerCompat: java.lang.Object sLock
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol UNINITIALIZED
androidx.fragment.app.FragmentStatePagerAdapter: boolean mExecutingFinishUpdate
androidx.lifecycle.Transformations$distinctUntilChanged$1: androidx.lifecycle.MediatorLiveData $outputLiveData
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2 this$0
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlinx.coroutines.debug.internal.StackTraceFrame creationStackBottom
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object $element
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.content.Context mContext
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
kotlin.jvm.internal.TypeReference: int IS_MUTABLE_COLLECTION_TYPE
androidx.activity.result.ActivityResultRegistry: java.lang.String KEY_COMPONENT_ACTIVITY_PENDING_RESULTS
androidx.profileinstaller.ProfileInstaller: int DIAGNOSTIC_REF_PROFILE_EXISTS
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_ATOP
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: java.lang.Object result
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int requestedBufferHeight
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
androidx.core.app.NotificationCompat$BigPictureStyle: boolean mShowBigPictureWhenCollapsed
kotlin.KotlinVersion: int minor
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_WITH_TEXT
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.channels.ReceiveChannel channel
androidx.core.R$id: int icon_group
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String backgroundMode
androidx.core.R$styleable: int[] FontFamily
kotlin.text.Charsets: kotlin.text.Charsets INSTANCE
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mHeadsUpContentView
androidx.customview.R$string: int status_bar_notification_info_overflow
androidx.core.content.FileProvider: java.lang.String DISPLAYNAME_FIELD
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: boolean $reuseBuffer$inlined
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: androidx.window.extensions.layout.WindowLayoutComponent component
androidx.core.util.TimeUtils: int SECONDS_PER_DAY
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater sendersAndCloseStatus$FU
androidx.customview.R$id: int notification_background
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: int label
kotlin.random.PlatformRandom: kotlin.random.PlatformRandom$Companion Companion
androidx.savedstate.Recreator: java.lang.String COMPONENT_KEY
androidx.core.app.NotificationCompat: java.lang.String TAG
androidx.activity.FullyDrawnReporter: java.util.concurrent.Executor executor
kotlin.sequences.GeneratorSequence$iterator$1: int nextState
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
androidx.core.util.LruCacheKt$lruCache$2: androidx.core.util.LruCacheKt$lruCache$2 INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING
kotlinx.coroutines.AwaitAll$AwaitAllNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _disposer$FU
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type ownerType
androidx.core.app.NotificationCompat$Builder: int mBadgeIcon
androidx.fragment.app.FragmentTabHost: android.widget.FrameLayout mRealTabContent
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions
androidx.core.location.LocationManagerCompat$Api30Impl: java.lang.Class sLocationRequestClass
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback mCallback
androidx.viewpager.widget.ViewPager: float mInitialMotionY
androidx.loader.content.Loader$ForceLoadContentObserver: androidx.loader.content.Loader this$0
androidx.core.R$style: int Widget_Compat_NotificationActionText
androidx.core.view.MenuKt$iterator$1: int index
androidx.fragment.app.FragmentTransaction: int OP_SET_MAX_LIFECYCLE
io.flutter.embedding.android.AndroidTouchProcessor: int cachedVerticalScrollFactor
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: int label
kotlinx.coroutines.scheduling.CoroutineScheduler: int PARKED
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String[] contentCommitMimeTypes
androidx.profileinstaller.WritableFileSection: boolean mNeedsCompression
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.lang.String initialRoute
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core this$0
kotlin.jvm.internal.CallableReference: java.lang.String name
androidx.core.graphics.WeightTypefaceApi21: java.lang.reflect.Constructor sConstructor
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object L$2
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_AUTOMATICALLY_HANDLE_ON_BACK_PRESSED
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PHYSICAL_DISPLAY_PLATFORM_VIEW
io.flutter.embedding.engine.FlutterOverlaySurface: int id
androidx.core.view.ContentInfoCompat$CompatImpl: android.content.ClipData mClip
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: int label
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
androidx.core.graphics.WeightTypefaceApi26: java.lang.String NATIVE_CREATE_FROM_TYPEFACE_WITH_EXACT_STYLE_METHOD
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU
kotlin.collections.builders.MapBuilder: boolean isReadOnly
kotlinx.coroutines.sync.MutexImpl: kotlin.jvm.functions.Function3 onSelectCancellationUnlockConstructor
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.Class owner
androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey
androidx.customview.R$dimen: int notification_top_pad
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $VALUES
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
androidx.window.area.WindowAreaControllerImpl: java.lang.String REAR_DISPLAY_BINDER_DESCRIPTOR
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: boolean mOnDrawScheduled
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: kotlinx.coroutines.selects.SelectInstanceInternal select
androidx.viewpager.R$styleable: int ColorStateListItem_lStar
androidx.window.embedding.EmbeddingAdapter: android.os.Binder INVALID_SPLIT_INFO_TOKEN
kotlinx.coroutines.flow.SharingStarted: kotlinx.coroutines.flow.SharingStarted$Companion Companion
kotlin.DeepRecursiveScopeImpl: kotlin.jvm.functions.Function3 function
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: kotlin.jvm.functions.Function1 $selector
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality WHITESPACE
androidx.core.content.res.FontResourcesParserCompat: int DEFAULT_TIMEOUT_MILLIS
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String DEFAULT
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_FLAGS
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$4
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: android.app.PendingIntent mPendingIntent
androidx.core.app.NotificationCompat: int GROUP_ALERT_CHILDREN
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT_EMBEDDING
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mVariationSettings
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
kotlin.UByte: int SIZE_BITS
androidx.core.text.util.LocalePreferences$HourCycle: java.lang.String H24
androidx.core.view.ViewKt$doOnPreDraw$1: kotlin.jvm.functions.Function1 $action
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$2
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol NO_RECEIVE_RESULT
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: java.util.concurrent.Executor mExecutor
androidx.collection.CircularArray: int mCapacityBitmask
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] $VALUES
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_SCROLLED
androidx.core.content.pm.ShortcutXmlParser: java.lang.String META_DATA_APP_SHORTCUTS
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType NONE
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object L$0
kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.Job coroutine
androidx.core.text.util.LocalePreferences$1: int[] $SwitchMap$android$icu$text$DateFormat$HourCycle
androidx.lifecycle.Transformations$switchMap$2: androidx.lifecycle.MediatorLiveData $result
kotlinx.coroutines.ThreadLocalEventLoop: java.lang.ThreadLocal ref
androidx.loader.R$attr: int fontStyle
androidx.fragment.app.Fragment$AnimationInfo: int mEnterAnim
androidx.lifecycle.LifecycleRegistry: kotlinx.coroutines.flow.MutableStateFlow _currentStateFlow
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper
kotlin.ranges.ULongProgressionIterator: long finalElement
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.ref.WeakReference _context
kotlin.text.CharCategory: kotlin.text.CharCategory PARAGRAPH_SEPARATOR
androidx.core.view.animation.PathInterpolatorApi14: float PRECISION
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_END
kotlin.ranges.UIntProgressionIterator: int finalElement
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl: java.lang.reflect.Method sRebaseMethod
kotlin.text.CharCategory: kotlin.text.CharCategory TITLECASE_LETTER
androidx.core.text.util.FindAddress: int MIN_ADDRESS_WORDS
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1 INSTANCE
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1: kotlin.jvm.functions.Function1 $afterTextChanged
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: io.flutter.embedding.engine.systemchannels.SpellCheckChannel this$0
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object result
androidx.fragment.app.FragmentManager$1: androidx.fragment.app.FragmentManager this$0
androidx.window.embedding.SplitPairFilter: androidx.window.core.ActivityComponentInfo _secondaryActivityName
androidx.window.embedding.ActivityEmbeddingController: androidx.window.embedding.EmbeddingBackend backend
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_FLOAT
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
kotlin.jvm.internal.FloatCompanionObject: float POSITIVE_INFINITY
kotlin.properties.Delegates$vetoable$1: kotlin.jvm.functions.Function3 $onChange
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MUTE
kotlin.collections.AbstractList$IteratorImpl: int index
androidx.core.view.HapticFeedbackConstantsCompat: int GESTURE_END
androidx.fragment.app.FragmentLayoutInflaterFactory: java.lang.String TAG
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler processTextMethodHandler
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: int label
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
androidx.lifecycle.LifecycleController: androidx.lifecycle.LifecycleEventObserver observer
androidx.concurrent.futures.DirectExecutor: androidx.concurrent.futures.DirectExecutor INSTANCE
kotlinx.coroutines.DisposableFutureHandle: java.util.concurrent.Future future
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN_ACK
kotlinx.coroutines.DispatchedTaskKt: int MODE_UNDISPATCHED
androidx.viewpager.widget.ViewPager: boolean mFirstLayout
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
androidx.core.provider.FontsContractCompat$FontRequestCallback: int RESULT_OK
androidx.core.graphics.PaintCompat: java.lang.String EM_STRING
androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry _lifecycleRegistry
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object L$0
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: kotlin.jvm.functions.Function1 $selector
com.getkeepsafe.relinker.elf.ElfParser: java.nio.channels.FileChannel channel
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object NULL
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: java.util.Comparator $comparator
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalTop
kotlin.jvm.internal.TypeReference$WhenMappings: int[] $EnumSwitchMapping$0
androidx.loader.R$drawable: int notification_bg_low_pressed
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_IN_DIRECTION
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String PERSIAN
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState HIDDEN
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
androidx.collection.SimpleArrayMap: int mSize
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.nio.file.Path $this_copyToRecursively
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1: kotlin.jvm.functions.Function1 $action$inlined
androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbTitleText
kotlinx.coroutines.DefaultExecutor: int SHUTDOWN_REQ
io.flutter.plugin.text.ProcessTextPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: java.lang.Object[] $this_asFlow$inlined
kotlin.KotlinVersion: int major
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: java.lang.Object result
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE
kotlinx.coroutines.internal.LockFreeLinkedListKt: int FAILURE
androidx.window.R$attr: int splitMinHeightDp
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT1
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object L$0
kotlin.text.Typography: char copyright
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader mShader
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TRACE_SKIA
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: android.graphics.Rect bounds
kotlin.UShortArray$Iterator: short[] array
androidx.viewpager.R$color: int notification_action_color_filter
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object L$0
androidx.core.R$id: int forever
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.os.Handler handler
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_COMPILED_WITH_PROFILE
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle lifecycle
androidx.core.widget.NestedScrollView$SavedState: int scrollPosition
androidx.viewpager.widget.ViewPager: long mFakeDragBeginTime
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence mCancelLabel
androidx.core.R$styleable: int GradientColor_android_startColor
androidx.viewpager.R$styleable: int GradientColor_android_startColor
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlinx.coroutines.flow.MutableSharedFlow $shared
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_INHERIT
androidx.lifecycle.ClassesInfoCache: int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.util.Set onModeChangeListeners
io.flutter.plugin.common.MethodCall: java.lang.String method
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: int label
androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_STORE_OWNER_KEY
kotlin.jvm.internal.FunctionReference: int flags
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onStart$inlined
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: androidx.window.layout.WindowInfoTrackerImpl this$0
androidx.window.R$styleable: int SplitPlaceholderRule_splitMaxAspectRatioInPortrait
androidx.core.R$styleable: int FontFamily_fontProviderQuery
androidx.core.app.FrameMetricsAggregator: int DRAW_DURATION
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$2: androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$2 INSTANCE
androidx.viewpager.widget.PagerTabStrip: int mTouchSlop
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: int label
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: int label
kotlin.math.Constants: kotlin.math.Constants INSTANCE
androidx.window.embedding.SplitAttributes$SplitType: androidx.window.embedding.SplitAttributes$SplitType$Companion Companion
kotlin.text.DelimitedRangesSequence$iterator$1: int nextSearchIndex
kotlin.collections.AbstractIterator: kotlin.collections.State state
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.layout.adapter.sidecar.SidecarCompat$Companion Companion
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag PENALTY_LOG
androidx.window.embedding.SplitRule: int SPLIT_MIN_DIMENSION_DP_DEFAULT
io.flutter.embedding.engine.FlutterEngineGroup: java.util.List activeEngines
kotlin.collections.RingBuffer$iterator$1: int index
androidx.core.app.NotificationCompat$Builder: boolean mLocalOnly
kotlin.random.Random: kotlin.random.Random defaultRandom
androidx.core.R$id: int accessibility_custom_action_2
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int ADD_CLOSED
kotlinx.coroutines.scheduling.WorkQueueKt: int STEAL_BLOCKING_ONLY
androidx.window.core.BuildConfig: androidx.window.core.BuildConfig INSTANCE
androidx.core.view.DifferentialMotionFlingController: androidx.core.view.DifferentialMotionFlingTarget mTarget
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: androidx.core.app.JobIntentService$JobServiceEngineImpl this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
androidx.fragment.app.FragmentHostCallback: int windowAnimations
androidx.core.R$id: int accessibility_custom_action_11
androidx.fragment.app.FragmentState: boolean mHidden
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.ConcurrentWeakMap callerInfoCache
androidx.customview.R$id: int time
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object result
kotlin.text.Typography: char notEqual
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: int label
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object $element
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: byte[] $this_asSequence$inlined
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String EXTRA_SKIP_FILE_OPERATION
androidx.viewpager.widget.ViewPager: int MIN_DISTANCE_FOR_FLING
androidx.fragment.app.FragmentContainerView: boolean drawDisappearingViewsFirst
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: int label
androidx.fragment.app.FragmentStore: java.util.ArrayList mAdded
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: java.lang.Object mInfo
androidx.core.app.NotificationChannelGroupCompat: java.lang.String mDescription
androidx.core.app.TaskStackBuilder: java.lang.String TAG
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ERROR
androidx.window.reflection.WindowExtensionsConstants: java.lang.String WINDOW_AREA_COMPONENT_CLASS
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly INSTANCE
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String EXTRA_BENCHMARK_OPERATION_DROP_SHADER_CACHE
androidx.fragment.app.DialogFragment: java.lang.String SAVED_THEME
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_DATA_ONLY_REMOTE_INPUTS
kotlin.sequences.DropWhileSequence$iterator$1: kotlin.sequences.DropWhileSequence this$0
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: int[] $this_withIndex
androidx.customview.widget.ViewDragHelper: int DIRECTION_VERTICAL
kotlin.coroutines.CombinedContext$writeReplace$1: kotlin.coroutines.CoroutineContext[] $elements
androidx.savedstate.SavedStateRegistry: boolean isRestored
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.customview.R$styleable: int GradientColor_android_centerY
androidx.viewpager.widget.PagerTitleStrip: androidx.viewpager.widget.ViewPager mPager
androidx.core.provider.FontRequestWorker$3: java.lang.String val$id
androidx.core.R$styleable: int[] ColorStateListItem
kotlinx.coroutines.DebugKt: boolean ASSERTIONS_ENABLED
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_DESCRIPTION_INTEROP_KEY
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: java.util.Map mAllowedViolations
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark mark
androidx.core.util.PatternsCompat: java.lang.String RELAXED_DOMAIN_NAME
androidx.window.embedding.SplitAttributes$LayoutDirection: int value
androidx.core.R$attr: int nestedScrollViewStyle
androidx.core.R$id: int accessibility_custom_action_14
io.flutter.Build$API_LEVELS: int API_35
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: int label
androidx.core.util.SparseIntArrayKt$valueIterator$1: android.util.SparseIntArray $this_valueIterator
androidx.core.app.RemoteInput$Builder: java.lang.CharSequence mLabel
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList sharedElementLastInViews
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: kotlin.reflect.KClass $klass$inlined
androidx.window.area.SafeWindowAreaComponentProvider$isWindowAreaProviderValid$1: androidx.window.area.SafeWindowAreaComponentProvider this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
androidx.fragment.app.FragmentTabHost: boolean mAttached
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
com.getkeepsafe.relinker.ReLinkerInstance$2: com.getkeepsafe.relinker.ReLinkerInstance this$0
androidx.viewpager.R$dimen: int notification_right_icon_size
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_ACCESSIBILITY_FOCUS
androidx.customview.widget.ViewDragHelper: int BASE_SETTLE_DURATION
kotlin.io.path.ExceptionsCollector: java.nio.file.Path path
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object result
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator
kotlin.text.Typography: char registered
androidx.window.reflection.WindowExtensionsConstants: java.lang.String WINDOW_CONSUMER
kotlinx.coroutines.android.HandlerDispatcherKt: long MAX_DELAY
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String MONDAY
androidx.core.text.util.FindAddress: java.lang.String HOUSE_COMPONENT
androidx.viewpager.widget.ViewPager: int CLOSE_ENOUGH
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int ADD
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
androidx.core.R$styleable: int GradientColor_android_centerX
io.flutter.embedding.android.FlutterFragmentActivity: int FRAGMENT_CONTAINER_ID
androidx.profileinstaller.ProfileVersion: byte[] V009_O_MR1
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state
androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: kotlin.jvm.functions.Function3 $transform
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidthDp
androidx.fragment.app.FragmentStateManager: java.lang.String REGISTRY_STATE_KEY
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_CLIP_BOUNDS
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_PARTICIPANTS
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: kotlin.jvm.functions.Function3 $transform
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mContentUri
androidx.core.content.UnusedAppRestrictionsConstants: int API_30_BACKPORT
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.sequences.GeneratorSequence$iterator$1: kotlin.sequences.GeneratorSequence this$0
androidx.core.view.InputDeviceCompat: int SOURCE_UNKNOWN
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_MISSED_CALL
androidx.core.view.InputDeviceCompat: int SOURCE_STYLUS
androidx.profileinstaller.ProfileVerifier: java.lang.Object SYNC_OBJ
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String dartEntrypoint
io.flutter.plugin.common.StandardMessageCodec: byte FALSE
androidx.fragment.app.FragmentManager$4: androidx.fragment.app.FragmentManager this$0
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.nio.file.Path $target
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int bufferWidth
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: kotlin.jvm.functions.Function3 $transform
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function2 $action$inlined
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSettingsText
androidx.loader.R$styleable: int FontFamilyFont_fontWeight
androidx.viewpager.R$dimen: int notification_action_icon_size
kotlin.sequences.SubSequence$iterator$1: kotlin.sequences.SubSequence this$0
androidx.window.embedding.SplitPairRule$Builder: int minWidthDp
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: kotlinx.coroutines.channels.BufferedChannel this$0
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: android.view.View val$v
io.flutter.view.VsyncWaiter$DisplayListener: android.hardware.display.DisplayManager displayManager
androidx.window.core.ExtensionsUtil: androidx.window.core.ExtensionsUtil INSTANCE
kotlin.jvm.internal.StringCompanionObject: kotlin.jvm.internal.StringCompanionObject INSTANCE
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: int label
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: boolean $followLinks
androidx.window.core.ExtensionsUtil: java.lang.String TAG
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.concurrent.atomic.AtomicReferenceFieldUpdater core$FU
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_ACCESSIBILITY_DATA_SENSITIVE
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: androidx.core.view.LayoutInflaterFactory mDelegateFactory
io.flutter.view.VsyncWaiter$FrameCallback: long cookie
androidx.profileinstaller.DexProfileData: int[] classes
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$0
androidx.lifecycle.Lifecycling: java.util.Map classToAdapters
androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.BlockRunner blockRunner
androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.HashMap onSendInternalResult
androidx.core.view.WindowInsetsCompat$Type: int WINDOW_DECOR
androidx.core.content.pm.ShortcutXmlParser: java.lang.Object GET_INSTANCE_LOCK
androidx.fragment.app.FragmentTabHost$SavedState: java.lang.String curTab
androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted
kotlin.io.ConstantsKt: int DEFAULT_BLOCK_SIZE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
androidx.window.area.WindowAreaInfo: androidx.window.layout.WindowMetrics metrics
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_CLOSED
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_ENUM
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
kotlin.io.LinesSequence: java.io.BufferedReader reader
androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId
androidx.activity.FullyDrawnReporter: int reporterCount
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
androidx.core.view.PointerIconCompat: int TYPE_WAIT
androidx.window.core.ConsumerAdapter$ConsumerHandler: kotlin.reflect.KClass clazz
androidx.core.R$style: int TextAppearance_Compat_Notification_Title
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedActions
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol NONE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int I$0
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int MAX_IMAGES
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlinx.coroutines.scheduling.CoroutineScheduler: long CREATED_MASK
androidx.window.core.FailedSpecification: androidx.window.core.Logger logger
androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged
io.flutter.embedding.android.AndroidTouchProcessor: int DEFAULT_HORIZONTAL_SCROLL_FACTOR
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
androidx.viewpager.widget.PagerTabStrip: int mMinTextSpacing
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope GROUP_ID
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_APPLICATION
androidx.fragment.app.Fragment: boolean mCalled
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: int label
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object L$1
kotlin.enums.EnumEntriesKt$enumEntries$1: java.lang.Enum[] $entries
androidx.customview.R$styleable: int GradientColorItem_android_color
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlinx.coroutines.flow.Flow[] $flows
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.flow.SharedFlow $$delegate_0
androidx.core.app.PictureInPictureModeChangedInfo: boolean isInPictureInPictureMode
kotlin.sequences.SequencesKt___SequencesKt$minus$4: kotlin.sequences.Sequence $elements
androidx.core.widget.NestedScrollView: int mActivePointerId
kotlin.jvm.internal.FloatCompanionObject: float MIN_VALUE
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: kotlinx.coroutines.sync.SemaphoreImpl this$0
kotlin.text.Typography: char leftGuillemet
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_SYMBOL
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: kotlinx.coroutines.flow.Flow[] $flowArray
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList enteringNames
androidx.core.app.NotificationManagerCompat: int INTERRUPTION_FILTER_ALL
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.CoroutineContext context
androidx.core.graphics.TypefaceCompatApi28Impl: int RESOLVE_BY_FONT_TABLE
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kGamepad
androidx.window.embedding.SplitRule: androidx.window.embedding.EmbeddingAspectRatio maxAspectRatioInLandscape
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: long $delayMillis
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask mExtractTask
androidx.core.content.res.ViewingConditions: float mC
androidx.core.R$drawable: int ic_call_decline
androidx.core.net.MailTo: java.lang.String MAILTO
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object result
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: double[] $this_asSequence$inlined
kotlin.DeprecationLevel: kotlin.DeprecationLevel ERROR
androidx.customview.R$styleable: int FontFamily_fontProviderSystemFontFamily
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator iterator1
androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
androidx.core.util.SparseArrayKt$valueIterator$1: android.util.SparseArray $this_valueIterator
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
androidx.activity.OnBackPressedDispatcher$Api33Impl: androidx.activity.OnBackPressedDispatcher$Api33Impl INSTANCE
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object result
io.flutter.embedding.android.KeyboardMap$PressingGoal: int mask
kotlin.jvm.internal.AdaptedFunctionReference: boolean isTopLevel
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_WRONG_NESTED_HIERARCHY
kotlin.sequences.DistinctSequence: kotlin.sequences.Sequence source
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: java.lang.String GMS_EXTRA_PICK_IMAGES_MAX
androidx.fragment.app.BackStackRecord: boolean mBeingSaved
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object L$1
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity3ParamsMethod
kotlin.text.Typography: char rightGuillemete
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.scheduling.DefaultIoScheduler INSTANCE
androidx.core.view.ContentInfoCompat: int SOURCE_APP
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.core.app.NotificationCompat$Builder: boolean mProgressIndeterminate
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object L$0
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String dartEntrypoint
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_CONTENT_URI_KEY
kotlin.collections.builders.MapBuilder: int[] hashArray
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_CLOSED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: kotlinx.coroutines.channels.ReceiveChannel $this_take
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object result
androidx.fragment.app.FragmentContainerView: java.util.List disappearingFragmentChildren
androidx.core.app.JobIntentService$CommandProcessor: androidx.core.app.JobIntentService this$0
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: kotlinx.coroutines.flow.SharedFlowImpl flow
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: androidx.window.layout.adapter.sidecar.SidecarWindowBackend globalInstance
kotlin.text.Regex: java.util.regex.Pattern nativePattern
kotlinx.coroutines.flow.SubscribedFlowCollector: kotlin.jvm.functions.Function2 action
androidx.window.reflection.WindowExtensionsConstants: java.lang.String WINDOW_EXTENSIONS_PROVIDER_CLASS
androidx.viewpager.widget.ViewPager: int INVALID_POINTER
androidx.lifecycle.Transformations$switchMap$1$1: androidx.lifecycle.MediatorLiveData $result
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List hintAttributes
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: kotlin.jvm.functions.Function3 $onError
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: kotlin.jvm.internal.Ref$ObjectRef $accumulator
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_BRIDGE_TAG
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object L$1
androidx.concurrent.futures.AbstractResolvableFuture: boolean GENERATE_CANCELLATION_CAUSES
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: long[] $this_withIndex
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1: androidx.window.layout.SafeWindowLayoutComponentProvider this$0
androidx.core.content.pm.ShortcutManagerCompat: androidx.core.content.pm.ShortcutInfoCompatSaver sShortcutInfoCompatSaver
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9 this$0
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.AbstractLongTimeSource timeSource
androidx.core.graphics.RegionKt$iterator$1: android.graphics.Rect rect
kotlin.SynchronizedLazyImpl: java.lang.Object _value
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_DRAG_DROPPED
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable
androidx.window.R$id: int always
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
androidx.window.layout.adapter.sidecar.SidecarAdapter: java.lang.String TAG
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode[] $VALUES
androidx.window.core.Version: int patch
androidx.core.R$attr: int shortcutMatchRequired
kotlin.text.CharCategory: kotlin.text.CharCategory MODIFIER_SYMBOL
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$2
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: java.lang.Object result
androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher onBackPressedDispatcher
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: long J$0
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: java.util.Comparator $comparator
androidx.core.app.NotificationChannelCompat: boolean mLights
kotlin.jvm.internal.TypeReference$asString$args$1: kotlin.jvm.internal.TypeReference this$0
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mDataOnlyRemoteInputs
androidx.collection.ArraySet$1: androidx.collection.ArraySet this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: int label
kotlinx.coroutines.BlockingCoroutine: java.lang.Thread blockedThread
androidx.core.util.Pools$SimplePool: int poolSize
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: kotlinx.coroutines.flow.FlowCollector $$this$flow$inlined
androidx.fragment.app.FragmentTransaction: java.lang.String mName
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$2
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: io.flutter.view.FlutterCallbackInformation callbackHandle
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker ruleTracker
androidx.window.embedding.SplitRule: int minWidthDp
androidx.core.text.util.FindAddress: java.util.regex.Pattern sSuffixedNumberRe
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.viewpager.widget.ViewPager: int mScrollState
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String EXTRA_SKIP_FILE_OPERATION_DELETE
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.ref.WeakReference mView
androidx.collection.CircularIntArray: int[] mElements
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String TIMESTAMP_PREFIX
androidx.core.location.LocationRequestCompat$Api19Impl: java.lang.reflect.Method sSetQualityMethod
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY
kotlinx.coroutines.internal.Segment: long id
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String PANE_TITLE_KEY
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: kotlin.jvm.functions.Function2 $transform
androidx.activity.result.ActivityResultRegistry: int INITIAL_REQUEST_CODE_VALUE
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.Flow $inner
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.ViewGroup mParent
androidx.lifecycle.LifecycleDispatcher: androidx.lifecycle.LifecycleDispatcher INSTANCE
androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners
androidx.customview.widget.ViewDragHelper: int STATE_IDLE
androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING_ARRAY
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject mCryptoObject
androidx.profileinstaller.DeviceProfileWriter: java.lang.String mProfileMetaSourceLocation
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_FORWARD
androidx.profileinstaller.ProfileInstaller: int RESULT_DELETE_SKIP_FILE_SUCCESS
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object L$1
androidx.core.app.NotificationManagerCompat$NotificationWithIdAndTag: android.app.Notification mNotification
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: int label
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
androidx.core.content.PermissionChecker: int PERMISSION_DENIED
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int I$0
kotlinx.coroutines.InvokeOnCancel: kotlin.jvm.functions.Function1 handler
androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object value
androidx.viewpager.widget.PagerTitleStrip: int mTextColor
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: java.lang.Object currentlyRecreatingToken
androidx.core.graphics.WeightTypefaceApi21: androidx.collection.LongSparseArray sWeightTypefaceCache
androidx.viewpager.R$dimen: int notification_content_margin_start
androidx.core.widget.AutoScrollHelper: int DEFAULT_EDGE_TYPE
androidx.fragment.app.FragmentManager$ClearBackStackState: java.lang.String mName
androidx.core.graphics.BlendModeUtils$1: int[] $SwitchMap$androidx$core$graphics$BlendModeCompat
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: kotlinx.coroutines.flow.Flow[] $flows$inlined
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: int label
androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_BUNDLE
kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: int label
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.ScribePlugin scribePlugin
kotlin.jvm.internal.TypeParameterReference: boolean isReified
androidx.customview.R$styleable: int FontFamilyFont_android_fontWeight
kotlin.text.StringsKt__StringsKt$iterator$1: java.lang.CharSequence $this_iterator
androidx.core.view.DisplayCompat$ModeCompat: android.view.Display$Mode mMode
androidx.activity.contextaware.ContextAwareHelper: java.util.Set listeners
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_START
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption FOLLOW_LINKS
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List valueAttributes
kotlin.jvm.internal.ArrayDoubleIterator: double[] array
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription mDescription
androidx.core.R$styleable: int[] GradientColor
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.List imageReaderProducers
androidx.fragment.app.FragmentManager: java.lang.String RESULT_KEY_PREFIX
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: int label
com.getkeepsafe.relinker.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: java.util.Map contextToListeners
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsIn
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult TERMINATE
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
androidx.activity.SystemBarStyle: kotlin.jvm.functions.Function1 detectDarkMode
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
androidx.core.app.NotificationCompat: int FLAG_INSISTENT
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: kotlin.jvm.internal.Ref$IntRef $skipped
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.jvm.functions.Function3 $transform
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUMMARY_TEXT
androidx.profileinstaller.ProfileVersion: byte[] METADATA_V001_N
androidx.viewpager.R$dimen: int notification_large_icon_height
androidx.window.embedding.EmbeddingBackend$Companion: androidx.window.embedding.EmbeddingBackend$Companion $$INSTANCE
androidx.fragment.app.FragmentTransaction: boolean mAllowAddToBackStack
androidx.core.content.res.CamUtils: float[] WHITE_POINT_D65
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion Companion
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $flow$inlined
kotlin.collections.RingBuffer: int size
androidx.core.os.PersistableBundleApi22ImplKt: androidx.core.os.PersistableBundleApi22ImplKt INSTANCE
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: int label
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityY
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOWS_CHANGED
androidx.customview.R$id: int line3
androidx.core.view.ViewCompat: int TYPE_TOUCH
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.fragment.app.SpecialEffectsController$Operation firstOut
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
androidx.core.R$attr: int fontProviderSystemFontFamily
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
kotlin.io.FileTreeWalk$FileTreeWalkIterator: java.util.ArrayDeque state
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object L$0
androidx.core.os.TraceCompat: java.lang.reflect.Method sTraceCounterMethod
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object result
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.String signature
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Class sFontFamily
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: kotlin.jvm.functions.Function2 $predicate$inlined
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext context
androidx.core.util.ContinuationRunnable: kotlin.coroutines.Continuation continuation
io.flutter.view.VsyncWaiter$DisplayListener: io.flutter.view.VsyncWaiter this$0
androidx.core.location.LocationManagerCompat$LocationListenerKey: androidx.core.location.LocationListenerCompat mListener
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_SHORT
kotlinx.coroutines.selects.SelectImplementation$ClauseData: int indexInSegment
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0
androidx.viewpager.R$styleable: int[] GradientColor
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String MAPPING_KEY
androidx.viewpager.widget.ViewPager: int MAX_SETTLE_DURATION
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat EXCLUSION
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater head$FU
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater receivers$FU
androidx.customview.R$color: int notification_icon_bg_color
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object L$0
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat mInfo
androidx.fragment.app.FragmentTabHost$TabInfo: java.lang.Class clss
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT_LINES
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object result
androidx.fragment.app.FragmentTransaction: java.lang.ClassLoader mClassLoader
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: int label
kotlin.jvm.internal.PrimitiveSpreadBuilder: java.lang.Object[] spreads
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitRule$FinishBehavior finishPrimaryWithPlaceholder
kotlin.text.Typography: char section
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.fragment.app.ListFragment: java.lang.CharSequence mEmptyText
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX
androidx.fragment.app.strictmode.FragmentReuseViolation: java.lang.String previousFragmentId
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String ABORT_CREATION_METHOD
androidx.core.widget.ContentLoadingProgressBar: java.lang.Runnable mDelayedShow
kotlin.jvm.internal.ArrayByteIterator: int index
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
kotlin.text.CharCategory: kotlin.text.CharCategory ENCLOSING_MARK
io.flutter.Build$API_LEVELS: int API_32
androidx.core.util.AndroidXContinuationConsumer: kotlin.coroutines.Continuation continuation
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_DIRECTION_INT
androidx.core.provider.FontRequestWorker$1: java.lang.String val$id
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object result
kotlin.time.TimeSource: kotlin.time.TimeSource$Companion Companion
androidx.core.graphics.Insets: int left
androidx.core.content.IntentSanitizer$Builder: androidx.core.util.Predicate mAllowedData
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SOCIAL
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object L$2
androidx.core.app.NotificationCompat$Builder: java.lang.Object mSmallIcon
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object L$0
androidx.core.app.NotificationCompat: int FLAG_HIGH_PRIORITY
androidx.core.app.NotificationCompat: java.lang.String EXTRA_REMOTE_INPUT_HISTORY
io.flutter.view.FlutterRunArguments: java.lang.String entrypoint
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
androidx.core.view.InputDeviceCompat: int SOURCE_ROTARY_ENCODER
kotlin.ranges.IntProgression: int step
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: kotlin.random.Random $random
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
androidx.loader.R$id: int icon
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.Job job
androidx.core.app.ActivityRecreator$1: java.lang.Object val$token
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.app.job.JobWorkItem mJobWork
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_SUSPEND
androidx.viewpager.R$id: int info
kotlin.io.path.ExceptionsCollector: int limit
androidx.core.content.ContextCompat: java.lang.Object sSync
androidx.core.location.GpsStatusWrapper: int SBAS_PRN_MAX
androidx.core.app.NotificationManagerCompat: java.lang.Object sEnabledNotificationListenersLock
androidx.viewpager.R$styleable: int GradientColor_android_endY
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: androidx.window.SafeWindowExtensionsProvider safeWindowExtensionsProvider
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode
androidx.fragment.app.BackStackRecordState: java.lang.CharSequence mBreadCrumbShortTitleText
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence mLabel
androidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DexProfileData[] mProfile
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
androidx.viewpager.R$id: int tag_unhandled_key_listeners
androidx.core.content.IntentSanitizer: boolean mAllowIdentifier
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: int label
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext $$delegate_0
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
androidx.core.app.NotificationCompat: java.lang.String EXTRA_DECLINE_COLOR
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlin.sequences.SequenceBuilderIterator: java.util.Iterator nextIterator
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: int I$0
io.flutter.Build$API_LEVELS: int API_28
androidx.core.util.PatternsCompat: java.lang.String HOST_NAME
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.lang.Object sharedElementTransition
androidx.window.embedding.SplitRule$FinishBehavior: java.lang.String description
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
kotlin.sequences.TakeWhileSequence: kotlin.sequences.Sequence sequence
androidx.lifecycle.SavedStateHandleController: java.lang.String key
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: kotlinx.coroutines.CancellableContinuationImpl $$delegate_0
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
androidx.customview.R$id: int chronometer
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: io.flutter.embedding.engine.systemchannels.NavigationChannel this$0
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: int label
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: int[] $this_asSequence$inlined
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object $receiver$inlined
androidx.core.os.TraceCompat: java.lang.reflect.Method sIsTagEnabledMethod
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2 this$0
kotlin.text.CharCategory: kotlin.text.CharCategory CURRENCY_SYMBOL
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
kotlinx.coroutines.flow.StartedLazily$command$1: kotlinx.coroutines.flow.StateFlow $subscriptionCount
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DISABLE_SERVICE_AUTH_CODES
io.flutter.plugin.common.StandardMessageCodec: byte STRING
androidx.viewpager.widget.ViewPager$ItemInfo: float offset
kotlin.text.Typography: char bullet
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_NAVIGATION
kotlinx.coroutines.flow.internal.SafeCollector: kotlinx.coroutines.flow.FlowCollector collector
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1 INSTANCE
androidx.core.location.LocationManagerCompat$GpsStatusTransport: androidx.core.location.GnssStatusCompat$Callback mCallback
androidx.core.app.NotificationCompat$InboxStyle: java.lang.String TEMPLATE_CLASS_NAME
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: java.lang.Class fragmentClass
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlinx.coroutines.channels.ReceiveChannel $this_mapIndexed
androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed
androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom
androidx.core.view.OneShotPreDrawListener: java.lang.Runnable mRunnable
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1: kotlin.jvm.functions.Function4 $onTextChanged
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object result
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.versionedparcelable.VersionedParcel: int TYPE_VERSIONED_PARCELABLE
kotlin.jvm.internal.CharCompanionObject: char MAX_VALUE
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay$Callback callback
androidx.core.os.ContinuationOutcomeReceiver: kotlin.coroutines.Continuation continuation
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedPackages
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: kotlin.jvm.internal.Ref$ObjectRef $fromDownstream
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int[] $this_asList
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol PERMIT
io.flutter.view.AccessibilityBridge: float DISABLED_TRANSITION_ANIMATION_SCALE
androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: kotlinx.coroutines.flow.internal.ChannelFlowOperator this$0
kotlin.io.encoding.DecodeInputStream: int byteBufferStartIndex
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$exitingViews
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
androidx.versionedparcelable.VersionedParcel: int EX_ILLEGAL_STATE
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: java.lang.String encodedName
androidx.core.app.NotificationCompat$Builder: int mFgsDeferBehavior
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$2: androidx.core.util.Consumer $listener
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_SHOW_BACKGROUND_ONLY
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: int label
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_9
io.flutter.Build$API_LEVELS: int API_26
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
androidx.fragment.R$animator: int fragment_close_enter
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ACTION_INTENT
androidx.core.location.LocationRequestCompat: int QUALITY_LOW_POWER
androidx.core.app.NotificationCompat$TvExtender: java.lang.String EXTRA_FLAGS
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
androidx.fragment.app.FragmentManager: boolean mExecutingActions
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mEnded
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object L$1
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchTimeout
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1 this$0
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean notifiedDestroy
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$1
kotlin.jvm.internal.FunctionReference: int arity
kotlin.io.path.FileVisitorImpl: kotlin.jvm.functions.Function2 onVisitFileFailed
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object L$1
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedTypes
kotlin.collections.MapsKt__MapsJVMKt: int INT_MAX_POWER_OF_TWO
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.jvm.functions.Function1 dynamicAttach
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object result
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1 INSTANCE
androidx.activity.SystemBarStyle: int nightMode
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] $VALUES
io.flutter.plugin.editing.SpellCheckPlugin: android.view.textservice.SpellCheckerSession mSpellCheckerSession
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: int label
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PICTURE_CONTENT_DESCRIPTION
androidx.viewpager.R$attr: int fontStyle
androidx.viewpager.R$styleable: int FontFamilyFont_fontVariationSettings
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: kotlin.jvm.functions.Function3 $operation
androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object result
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
androidx.window.area.RearDisplaySessionImpl: androidx.window.extensions.area.WindowAreaComponent windowAreaComponent
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: java.lang.Object result
androidx.profileinstaller.ProfileInstaller: int RESULT_SAVE_PROFILE_SIGNALLED
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_LONG
kotlin.io.TextStreamsKt$readLines$1: java.util.ArrayList $result
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: kotlin.reflect.KClass clazzT
androidx.core.app.NotificationChannelCompat: long[] mVibrationPattern
androidx.core.provider.SelfDestructiveThread$2$1: androidx.core.provider.SelfDestructiveThread$2 this$1
androidx.core.R$id: int accessibility_custom_action_19
androidx.core.view.WindowInsetsAnimationCompat$Impl: float mAlpha
androidx.core.app.NotificationCompat$Builder: boolean mGroupSummary
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: kotlin.jvm.functions.Function3 $onError
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: int label
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.coroutines.CoroutineContext $context
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
android.support.v4.os.ResultReceiver$MyRunnable: android.os.Bundle mResultData
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_IF_ROOM
androidx.fragment.app.FragmentStore: java.lang.String TAG
androidx.fragment.app.FragmentStatePagerAdapter: int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT
androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List VIEWMODEL_SIGNATURE
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mFileName
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3 this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: int label
androidx.profileinstaller.FileSectionType: long mValue
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object L$0
androidx.core.app.PendingIntentCompat$GatedCallback: boolean mSuccess
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.jvm.functions.Function1 safeCast
androidx.core.app.FrameMetricsAggregator: int SYNC_INDEX
androidx.fragment.app.FragmentManager$5: androidx.fragment.app.FragmentManager this$0
androidx.collection.SparseArrayCompat: int mSize
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String TAG
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_INTEROP_ACTION
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
androidx.viewpager.R$id: int text2
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel
androidx.window.layout.adapter.extensions.ExtensionWindowBackend: androidx.window.layout.adapter.WindowBackend backend
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object L$0
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PICTURE
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.layout.adapter.sidecar.SidecarAdapter sidecarAdapter
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: int I$1
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
androidx.versionedparcelable.ParcelUtils: java.lang.String INNER_BUNDLE_KEY
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlin.jvm.internal.Ref$ObjectRef $previousKey
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1: java.util.stream.Stream $this_asSequence$inlined
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mContentIntent
androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract
androidx.core.location.LocationRequestCompat: long mDurationMillis
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object result
androidx.core.view.WindowInsetsCompat$Type: int IME
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: kotlin.jvm.functions.Function1 $block
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: kotlinx.coroutines.Deferred $this_asCompletableFuture
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String FLUTTER_ASSETS_DIR_KEY
androidx.core.location.LocationRequestCompat: long IMPLICIT_MIN_UPDATE_INTERVAL
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String FONT_FAMILY_CLASS
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
androidx.activity.R$id: int report_drawn
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality NONSPACING_MARK
kotlin.jvm.internal.IntCompanionObject: int MAX_VALUE
androidx.core.graphics.drawable.IconCompat: int TYPE_DATA
androidx.core.content.pm.ShortcutInfoCompat: android.os.Bundle mTransientExtras
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
androidx.fragment.app.ListFragment: int INTERNAL_PROGRESS_CONTAINER_ID
kotlin.sequences.TakeSequence: int count
androidx.core.os.ExecutorCompat$HandlerExecutor: android.os.Handler mHandler
androidx.customview.widget.ViewDragHelper: int MAX_SETTLE_DURATION
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object result
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kJoystick
io.flutter.Build$API_LEVELS: int API_24
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: int label
androidx.core.app.ServiceCompat: int FOREGROUND_SERVICE_TYPE_ALLOWED_SINCE_U
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaY
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_STARTUP
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol PARAM_CLAUSE_0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
androidx.window.area.WindowAreaInfo$Type: java.lang.String description
androidx.core.R$drawable: int notification_oversize_large_icon_bg
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
androidx.core.provider.SelfDestructiveThread$3: androidx.core.provider.SelfDestructiveThread this$0
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
androidx.core.location.LocationManagerCompat: java.lang.reflect.Field sContextField
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.core.app.AppOpsManagerCompat: int MODE_DEFAULT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$1
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence mLongLabel
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.nio.file.Path $this_copyToRecursively
androidx.window.embedding.EmbeddingCompat$setEmbeddingCallback$1: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface $embeddingCallback
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.CancellableContinuationImpl child
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY
com.getkeepsafe.relinker.ReLinkerInstance: com.getkeepsafe.relinker.ReLinker$LibraryInstaller libraryInstaller
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: int label
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_REMINDER
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: int label
kotlinx.coroutines.internal.WeakMapCtorCache: java.util.WeakHashMap exceptionCtors
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind VALUE
androidx.window.area.utils.DeviceMetrics: java.lang.String manufacturer
androidx.core.graphics.WeightTypefaceApi26: java.lang.reflect.Constructor sConstructor
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
io.flutter.embedding.engine.loader.ResourceExtractor: android.content.res.AssetManager mAssetManager
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_NO_PERSONALIZED_LEARNING
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String FRIDAY
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: java.lang.String EXTRA_SEND_INTENT_EXCEPTION
kotlinx.coroutines.channels.BufferedChannel$onSend$2: kotlinx.coroutines.channels.BufferedChannel$onSend$2 INSTANCE
androidx.core.view.ViewCompat: int IMPORTANT_FOR_CONTENT_CAPTURE_AUTO
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: int installations
androidx.window.embedding.SplitAttributes$SplitType: androidx.window.embedding.SplitAttributes$SplitType SPLIT_TYPE_HINGE
androidx.core.provider.SelfDestructiveThread: java.lang.Object mLock
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object result
androidx.core.app.NotificationCompat$Builder: int mNumber
androidx.core.location.LocationRequestCompat$Builder: long mDurationMillis
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DUMP_SHADER_SKP_ON_SHADER_COMPILATION
io.flutter.embedding.android.FlutterView: android.view.textservice.TextServicesManager textServicesManager
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int mResultCode
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onResume
kotlinx.coroutines.flow.SubscribedSharedFlow: kotlin.jvm.functions.Function2 action
androidx.core.app.SharedElementCallback: int MAX_IMAGE_SIZE
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment flutterFragment
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$exitTransition
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: androidx.savedstate.SavedStateRegistry $registry
kotlin.collections.builders.MapBuilder: java.lang.Object[] valuesArray
androidx.core.view.ContentInfoCompat: int SOURCE_AUTOFILL
androidx.lifecycle.SavedStateViewModelFactory: android.app.Application application
androidx.core.app.NotificationCompat$WearableExtender: int UNSET_ACTION_INDEX
androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT_ARRAY
androidx.activity.result.IntentSenderRequest$Builder: android.content.Intent fillInIntent
androidx.core.graphics.drawable.IconCompat: java.lang.String mString1
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String EXTRA_WEARABLE_EXTENSIONS
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String ACTION_SKIP_FILE
io.flutter.plugin.editing.FlutterTextUtils: int ZERO_WIDTH_JOINER
kotlinx.coroutines.future.CompletableFutureCoroutine: java.util.concurrent.CompletableFuture future
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceTextureEntry texture
androidx.fragment.app.FragmentTabHost: int mContainerId
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener listener
io.flutter.Log: int ERROR
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.activity.contextaware.ContextAwareHelper: android.content.Context context
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: kotlin.jvm.internal.Ref$ObjectRef $result
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo INSTANCE
androidx.core.R$id: int accessibility_custom_action_9
androidx.core.R$styleable: int FontFamilyFont_font
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
androidx.lifecycle.BlockRunner: kotlinx.coroutines.CoroutineScope scope
kotlin.collections.IndexedValue: java.lang.Object value
androidx.window.embedding.SplitPlaceholderRule$Builder: int minSmallestWidthDp
androidx.fragment.app.DialogFragment$5: androidx.fragment.app.FragmentContainer val$fragmentContainer
androidx.loader.R$styleable: int GradientColor_android_startX
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object L$1
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesTouch
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.view.DisplayCompat: int DISPLAY_SIZE_4K_HEIGHT
androidx.core.R$id: int right_icon
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.coroutines.CoroutineContext $context
androidx.core.widget.ContentLoadingProgressBar: long mStartTime
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: androidx.core.text.PrecomputedTextCompat$Params mParams
androidx.core.app.NotificationCompat$Builder: int mProgress
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_HEADING
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable endExclusive
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
androidx.customview.R$id: int actions
kotlin.io.encoding.Base64: int bytesPerGroup
kotlin.jvm.internal.Ref$FloatRef: float element
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag PENALTY_DEATH
androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex
kotlin.UShort: int SIZE_BITS
androidx.core.graphics.drawable.IconCompat: int AMBIENT_SHADOW_ALPHA
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object L$0
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TYPE
kotlin.collections.EmptySet: long serialVersionUID
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_NONE
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: int maxPoolSize
kotlinx.coroutines.channels.BufferedChannelKt: int CLOSE_STATUS_ACTIVE
androidx.core.app.NotificationCompat$CallStyle: java.lang.Integer mDeclineButtonColor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_ALWAYS
androidx.profileinstaller.ProfileTranscoder: int INLINE_CACHE_MEGAMORPHIC_ENCODING
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand STOP
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.contract.ActivityResultContract val$contract
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.SpellCheckPlugin: android.view.textservice.TextServicesManager mTextServicesManager
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $VALUES
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached
kotlin.jvm.internal.TypeReference: java.util.List arguments
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: java.lang.Runnable block
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: int $count
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: kotlinx.coroutines.sync.MutexImpl this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterView val$flutterView
kotlin.text.RegexOption: kotlin.text.RegexOption DOT_MATCHES_ALL
io.flutter.plugin.common.StandardMessageCodec: byte FLOAT_ARRAY
androidx.core.R$id: int tag_accessibility_actions
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
kotlin.text.CharCategory: kotlin.text.CharCategory COMBINING_SPACING_MARK
androidx.loader.R$style: int Widget_Compat_NotificationActionText
kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.util.List clausesToRegister
androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mMasterOutput
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CommandProcessor mCurProcessor
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
androidx.core.R$string: int call_notification_screening_text
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat HARD_LIGHT
androidx.fragment.app.FragmentHostCallback: android.os.Handler handler
org.jetbrains.annotations.Nls$Capitalization: org.jetbrains.annotations.Nls$Capitalization NotSpecified
io.flutter.view.FlutterRunArguments: java.lang.String bundlePath
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest this$0
kotlin.ranges.OpenEndFloatRange: float _endExclusive
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
androidx.core.view.PointerIconCompat: int TYPE_HELP
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_FLAGS
kotlinx.coroutines.internal.ThreadSafeHeap: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _size$FU
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
androidx.core.animation.AnimatorKt$addListener$1: androidx.core.animation.AnimatorKt$addListener$1 INSTANCE
kotlin.ranges.UIntProgression: int step
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager fragmentManager
androidx.core.app.JobIntentService: boolean mDestroyed
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: int combiningCharacter
androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.ActivityResultRegistry this$0
androidx.core.provider.FontsContractCompat$FontFamilyResult: int mStatusCode
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BACKGROUND_IMAGE_URI
kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_TITLE
androidx.core.R$id: int tag_on_receive_content_mime_types
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
kotlin.io.FileTreeWalk: int maxDepth
androidx.fragment.app.FragmentActivity: boolean mResumed
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderValues valuesView
androidx.fragment.R$animator: int fragment_fade_exit
kotlinx.coroutines.debug.AgentPremain: kotlinx.coroutines.debug.AgentPremain INSTANCE
com.getkeepsafe.relinker.ReLinkerInstance: boolean force
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
androidx.core.animation.AnimatorKt$addListener$2: androidx.core.animation.AnimatorKt$addListener$2 INSTANCE
androidx.fragment.app.Fragment: boolean mAdded
androidx.core.widget.NestedScrollView: float mPhysicalCoeff
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_FILTER_KEY_EVENTS
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
kotlin.text.Typography: char less
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup
kotlin.sequences.TakeSequence$iterator$1: int left
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
androidx.core.animation.AnimatorKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onRepeat
androidx.window.layout.adapter.sidecar.SidecarAdapter: androidx.window.core.VerificationMode verificationMode
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTER_INITIALIZATION_ARGS
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.util.Consumer val$consumer
androidx.viewpager.R$drawable: int notification_template_icon_bg
androidx.customview.R$layout: int notification_action
io.flutter.BuildConfig: boolean PROFILE
androidx.core.content.IntentSanitizer$Builder: int RECEIVER_FLAGS
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.loader.R$id: int right_side
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.String TAG
kotlin.collections.ArrayDeque: int head
androidx.tracing.Trace: int MAX_TRACE_LABEL_LENGTH
androidx.viewpager.R$id: int blocking
androidx.fragment.app.FragmentManager: androidx.core.view.MenuProvider mMenuProvider
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: int label
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object result
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1: androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture this$0
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: kotlin.jvm.functions.Function2 predicate
androidx.core.location.LocationCompat: java.lang.reflect.Method sSetIsFromMockProviderMethod
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object L$0
androidx.viewpager.R$integer: int status_bar_notification_info_maxnum
androidx.core.app.JobIntentService: java.lang.String TAG
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.CallbackWithHandler this$0
androidx.fragment.app.Fragment$AnimationInfo: int mPopExitAnim
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mTappableElementInsets
androidx.core.view.MotionEventCompat: int AXIS_ORIENTATION
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: kotlin.jvm.functions.Function3 $onError
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence mInProgressLabel
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityX
androidx.core.app.FrameMetricsAggregator: int INPUT_INDEX
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater completedExpandBuffersAndPauseFlag$FU
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object result
androidx.core.provider.SelfDestructiveThread: android.os.Handler mHandler
androidx.core.provider.FontRequest: java.lang.String mProviderPackage
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
androidx.versionedparcelable.VersionedParcel: int EX_NETWORK_MAIN_THREAD
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: kotlin.jvm.functions.Function5 $transform$inlined$1
androidx.startup.AppInitializer: java.lang.Object sLock
androidx.core.R$dimen: int notification_right_icon_size
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedComponents
androidx.core.util.PatternsCompat: java.util.regex.Pattern IP_ADDRESS
androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sRegisterGnssMeasurementsCallbackMethod
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: int label
androidx.window.R$attr: int stickyPlaceholder
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
androidx.core.location.LocationManagerCompat$Api19Impl: java.lang.Class sLocationRequestClass
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
io.flutter.plugin.text.ProcessTextPlugin: io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementTargetNames
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner this$1
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_3
com.getkeepsafe.relinker.ApkLibraryInstaller: int COPY_BUFFER_SIZE
androidx.core.location.LocationManagerCompat$CancellableLocationListener: java.util.concurrent.Executor mExecutor
androidx.fragment.app.FragmentTransitionCompat21$2: android.view.View val$fragmentView
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1 this$0
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 onCancellationConstructor
androidx.core.text.TextDirectionHeuristicsCompat: int STATE_UNKNOWN
kotlin.text.StringsKt___StringsKt$withIndex$1: java.lang.CharSequence $this_withIndex
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: int mDesiredHeight
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlinx.coroutines.flow.Flow[] $flows
androidx.viewpager.widget.ViewPager: int mCloseEnough
kotlin.DeepRecursiveKt: java.lang.Object UNDEFINED_RESULT
io.flutter.plugin.common.BasicMessageChannel: java.lang.String TAG
androidx.core.app.NotificationChannelCompat: android.media.AudioAttributes mAudioAttributes
androidx.viewpager.R$styleable: int[] GradientColorItem
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: java.lang.String EXTRA_INTENT_SENDER_REQUEST
kotlin.Unit: kotlin.Unit INSTANCE
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: java.lang.Iterable flows
kotlin.io.path.LinkFollowing: java.util.Set followVisitOption
androidx.viewpager.R$dimen: int compat_button_inset_horizontal_material
androidx.fragment.app.FragmentTransaction: int OP_ADD
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.graphics.drawable.IconCompat: int mInt1
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
kotlin.ranges.LongRange: kotlin.ranges.LongRange EMPTY
androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_MIRROR
kotlin.io.encoding.Base64: int bitsPerByte
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat sEmptyLocaleList
kotlin.text.Regex$findAll$1: kotlin.text.Regex this$0
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_ManyNotReady
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode FIXED_DELAY
androidx.concurrent.futures.AbstractResolvableFuture: long SPIN_THRESHOLD_NANOS
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersionCurrentValue INSTANCE
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorListener val$listener
androidx.activity.SystemBarStyle$Companion$auto$1: androidx.activity.SystemBarStyle$Companion$auto$1 INSTANCE
androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit
androidx.lifecycle.ComputableLiveData: androidx.lifecycle.LiveData _liveData
androidx.loader.R$style: int Widget_Compat_NotificationActionContainer
androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3 this$0
kotlin.text.RegexOption: kotlin.text.RegexOption LITERAL
androidx.core.content.UnusedAppRestrictionsConstants: int API_30
androidx.savedstate.SavedStateRegistryController: boolean attached
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_EXPANDED
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
androidx.core.content.pm.ShortcutInfoCompat: android.content.ComponentName mActivity
kotlin.ranges.OpenEndDoubleRange: double _endExclusive
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.ConcurrentLinkedQueue queue
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl info
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.String TAG
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int physicalTouchSlop
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext lastEmissionContext
androidx.loader.R$styleable: int FontFamilyFont_fontVariationSettings
kotlinx.coroutines.internal.LimitedDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater runningWorkers$FU
io.flutter.plugin.editing.SpellCheckPlugin: io.flutter.plugin.common.MethodChannel$Result pendingResult
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: float[] $this_withIndex
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$1
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.EmbeddingAspectRatio maxAspectRatioInPortrait
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: kotlin.jvm.functions.Function1 $predicate
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object L$0
androidx.fragment.R$styleable: int FragmentContainerView_android_tag
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
androidx.fragment.app.FragmentState: java.lang.String mClassName
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_PERSON_COUNT
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_catch$inlined
androidx.fragment.app.FragmentTransaction: boolean mAddToBackStack
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
androidx.core.content.ContextCompat: java.lang.String TAG
kotlin.collections.builders.MapBuilder$EntryRef: int index
androidx.core.view.animation.PathInterpolatorApi14: float[] mY
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedCategories
androidx.fragment.app.FragmentManager: java.lang.String EXTRA_CREATED_FILLIN_INTENT
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult[] $VALUES
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object L$1
io.flutter.embedding.android.KeyData: int FIELD_COUNT
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: int label
kotlin.random.XorWowRandom: int z
io.flutter.embedding.android.FlutterSurfaceView: boolean isPaused
androidx.core.internal.view.SupportMenu: int USER_MASK
androidx.core.app.ActivityRecreator$2: android.app.Application val$application
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCH_NAVIGATION
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener
androidx.window.R$styleable: int[] SplitPairFilter
androidx.core.content.PermissionChecker: int PERMISSION_GRANTED
androidx.viewpager.widget.ViewPager$LayoutParams: int gravity
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: int label
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: java.lang.ClassLoader loader
androidx.window.embedding.SplitController$splitInfoList$1: int label
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 processResFunc
kotlinx.coroutines.DefaultExecutor: int FRESH
androidx.core.app.NotificationManagerCompat: int MAX_SIDE_CHANNEL_SDK_VERSION
androidx.customview.widget.ViewDragHelper: int EDGE_SIZE
androidx.activity.ComponentActivity: int mContentLayoutId
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.viewpager.R$id: int tag_unhandled_key_event_manager
androidx.lifecycle.ComputableLiveData: androidx.lifecycle.LiveData liveData
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: kotlinx.coroutines.selects.SelectImplementation this$0
com.getkeepsafe.relinker.ReLinkerInstance$1: android.content.Context val$context
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_CACHED_ENGINE_GROUP_ID
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
androidx.core.app.Person: boolean mIsImportant
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object sharedElementTransition
androidx.loader.R$styleable: int GradientColor_android_centerColor
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
kotlin.ranges.CharProgression: char last
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
kotlinx.coroutines.scheduling.LimitingDispatcher: kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher dispatcher
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_11
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String cachedEngineGroupId
androidx.tracing.Trace: java.lang.String TAG
androidx.viewpager.widget.ViewPager: java.lang.String TAG
androidx.core.view.ViewCompat: int LAYER_TYPE_NONE
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: java.lang.Object result
androidx.customview.R$dimen: int compat_notification_large_icon_max_width
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object clauseObject
kotlin.text.CharCategory: kotlin.text.CharCategory SPACE_SEPARATOR
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_DART_FLAGS
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object L$0
androidx.fragment.app.DialogFragment: boolean mDialogCreated
androidx.fragment.app.FragmentLayoutInflaterFactory: androidx.fragment.app.FragmentManager mFragmentManager
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String MIN_DURATION_BETWEEN_CONTENT_CHANGES_KEY
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.util.List dartEntrypointArgs
kotlin.text.Typography: char leftDoubleQuote
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
kotlin.KotlinVersion: int patch
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.concurrent.futures.ResolvableFuture mResultFuture
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object result
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: androidx.window.sidecar.SidecarDeviceState mLastDeviceState
androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean DEBUG
androidx.core.view.ViewCompat: int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
androidx.window.embedding.SplitPlaceholderRule$Builder: int minHeightDp
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: androidx.window.layout.adapter.sidecar.SidecarAdapter mAdapter
androidx.window.java.area.WindowAreaControllerCallbackAdapter: androidx.window.area.WindowAreaController controller
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence title
androidx.activity.FullyDrawnReporterKt$reportWhenComplete$1: java.lang.Object L$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId
kotlin.collections.builders.MapBuilder: int maxProbeDistance
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.atomic.AtomicReference val$holder
androidx.core.widget.AutoScrollHelper: boolean mNeedsCancel
androidx.core.app.NotificationCompat$Builder: int mGroupAlertBehavior
androidx.core.content.pm.ActivityInfoCompat: int CONFIG_UI_MODE
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
androidx.core.R$attr: int font
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableIMEPersonalizedLearning
androidx.core.view.inputmethod.InputConnectionCompat$2: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: boolean mSelected
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention[] $VALUES
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: kotlin.jvm.functions.Function2 $action
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
androidx.window.area.WindowAreaCapability$Status: androidx.window.area.WindowAreaCapability$Status WINDOW_AREA_STATUS_UNKNOWN
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String TAG
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlinx.coroutines.flow.FlowCollector $collector
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object L$0
androidx.customview.R$dimen: int notification_subtext_size
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: kotlinx.coroutines.JobSupport this$0
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CHANNEL_ID
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int FROZEN_SHIFT
kotlinx.coroutines.ThreadState: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _state$FU
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
androidx.loader.R$styleable: int[] GradientColorItem
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int NONE
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: io.flutter.view.TextureRegistry$OnTrimMemoryListener trimMemoryListener
androidx.core.app.NotificationChannelCompat: boolean mCanBubble
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode FIXED_PERIOD
androidx.viewpager.widget.PagerTabStrip: int mTabPadding
androidx.fragment.app.ListFragment: int INTERNAL_LIST_CONTAINER_ID
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CONTENT_ACTION_INDEX
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
androidx.core.view.PointerIconCompat: int TYPE_CELL
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_LOAD_ERROR
androidx.core.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_BITMAP
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROMO
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl api1Impl
androidx.core.os.UserHandleCompat: java.lang.reflect.Method sGetUserIdMethod
io.flutter.plugin.editing.ScribePlugin: io.flutter.embedding.engine.systemchannels.ScribeChannel mScribeChannel
androidx.fragment.app.Fragment: boolean mRemoving
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.core.R$id: int accessibility_custom_action_7
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: java.util.concurrent.atomic.AtomicBoolean hasEnded
kotlin.enums.EnumEntriesSerializationProxy: long serialVersionUID
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
androidx.core.app.FrameMetricsAggregator: int ANIMATION_INDEX
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.Class fragmentClass
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
androidx.core.content.IntentCompat: java.lang.String EXTRA_START_PLAYBACK
androidx.window.java.core.CallbackToFlowAdapter: java.util.Map consumerToJobMap
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_REMOTE_INPUTS
androidx.viewpager.widget.ViewPager: boolean mNeedCalculatePageOffsets
kotlinx.coroutines.scheduling.TasksKt: int TASK_PROBABLY_BLOCKING
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$1
androidx.loader.R$id: int line1
androidx.core.app.NotificationCompat: int FOREGROUND_SERVICE_IMMEDIATE
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: java.util.ArrayList mTmpRunningAnimations
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
kotlin.io.LinesSequence$iterator$1: boolean done
androidx.core.app.NotificationChannelCompat: int mLockscreenVisibility
androidx.core.app.RemoteInput: int SOURCE_FREE_FORM_INPUT
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: int label
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.DeepRecursiveScopeImpl this$0
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MINOR
io.flutter.plugin.common.StandardMessageCodec: byte LIST
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_LONG_LIVED
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlin.jvm.functions.Function2 $transform
androidx.core.app.NotificationCompat$Builder: java.lang.String mCategory
androidx.window.core.ConsumerAdapter$createSubscription$2: java.lang.reflect.Method $removeMethod
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DIFFERENCE
androidx.core.R$id: int accessibility_custom_action_27
androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_CLAMP
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: boolean isPop
androidx.viewpager.widget.PagerTabStrip: int FULL_UNDERLINE_HEIGHT
androidx.activity.ComponentActivity$1$1: androidx.activity.ComponentActivity$1 this$1
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
com.getkeepsafe.relinker.elf.Elf$Header: long shoff
androidx.viewpager.widget.ViewPager: int mActivePointerId
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener
kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES
androidx.customview.R$id: int forever
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object L$1
androidx.core.app.FrameMetricsAggregator: androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl mInstance
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object L$0
kotlinx.coroutines.channels.ConflatedBufferedChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: kotlin.jvm.functions.Function1 $onBackStarted
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.Class activityClass
io.flutter.plugin.platform.PlatformViewWrapper: int prevTop
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
androidx.customview.R$styleable: int GradientColor_android_centerColor
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_RECOMMENDATION
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_NOTIFICATION_PERSON
kotlin.collections.builders.ListBuilder: boolean isReadOnly
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget TYPEALIAS
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1 this$0
androidx.core.text.util.FindAddress$ZipRange: int mHigh
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlin.jvm.internal.Ref$ObjectRef $state
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
androidx.customview.R$id: int tag_unhandled_key_listeners
kotlinx.coroutines.channels.Channel$Factory: int BUFFERED
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets
androidx.window.layout.adapter.sidecar.SidecarCompat: java.util.Map componentCallbackMap
androidx.profileinstaller.DeviceProfileWriter: java.lang.String mApkName
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
kotlin.sequences.SequencesKt__SequencesKt$flatten$3: kotlin.sequences.SequencesKt__SequencesKt$flatten$3 INSTANCE
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.graphics.Insets mUpperBound
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: kotlinx.coroutines.flow.Flow $this_timeoutInternal
androidx.core.location.LocationRequestCompat: long mMaxUpdateDelayMillis
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mDestroyed
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
androidx.loader.R$dimen: int notification_right_side_padding_top
io.flutter.BuildConfig: boolean DEBUG
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object L$1
androidx.window.area.WindowAreaCapability$Status: androidx.window.area.WindowAreaCapability$Status WINDOW_AREA_STATUS_ACTIVE
androidx.core.R$drawable: int ic_call_answer
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_ARCHIVE
androidx.core.app.NotificationCompat$CallStyle: boolean mIsVideo
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler cancelHandler
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String initialRoute
kotlinx.coroutines.Empty: boolean isActive
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStartTime
kotlin.time.TimedValue: long duration
androidx.fragment.app.strictmode.FragmentTagUsageViolation: android.view.ViewGroup parentContainer
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: int label
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
androidx.core.content.UnusedAppRestrictionsBackportService: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub mBinder
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: kotlinx.coroutines.flow.SharedFlowImpl this$0
androidx.core.view.WindowInsetsAnimationCompat: boolean DEBUG
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_IN_PROGRESS_LABEL
androidx.core.util.SparseIntArrayKt$valueIterator$1: int index
kotlinx.coroutines.ResumeAwaitOnCompletion: kotlinx.coroutines.CancellableContinuationImpl continuation
androidx.core.util.PatternsCompat: java.util.regex.Pattern EMAIL_ADDRESS
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
androidx.fragment.app.Fragment$9: androidx.fragment.app.Fragment this$0
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int TAIL_SHIFT
kotlinx.coroutines.channels.Channel$Factory: int CONFLATED
kotlinx.coroutines.Active: kotlinx.coroutines.Active INSTANCE
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object L$4
androidx.viewpager.R$dimen: int notification_large_icon_width
androidx.window.area.WindowAreaInfo: androidx.window.extensions.area.WindowAreaComponent windowAreaComponent
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: kotlinx.coroutines.flow.CancellableFlowImpl$collect$2 this$0
android.support.v4.os.ResultReceiver$MyRunnable: android.support.v4.os.ResultReceiver this$0
androidx.core.app.RemoteInput: java.util.Set mAllowedDataTypes
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: androidx.concurrent.futures.AbstractResolvableFuture delegate
kotlin.text.CharCategory: kotlin.text.CharCategory LINE_SEPARATOR
androidx.window.core.PredicateAdapter: java.lang.ClassLoader loader
androidx.core.app.ActivityRecreator: java.lang.reflect.Field mainThreadField
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder mBuilder
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand STOP_AND_RESET_REPLAY_CACHE
androidx.core.os.BuildCompat: androidx.core.os.BuildCompat INSTANCE
androidx.core.util.LruCacheKt$lruCache$4: kotlin.jvm.functions.Function2 $sizeOf
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: int label
androidx.core.app.NotificationCompat$Builder: int mProgressMax
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality OTHER_NEUTRALS
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.flow.FlowCollector $collector
androidx.profileinstaller.ProfileVerifier: java.lang.String PROFILE_FILE_NAME
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
androidx.core.view.DifferentialMotionFlingController: androidx.core.view.DifferentialMotionFlingController$DifferentialVelocityProvider mVelocityProvider
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object L$0
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
androidx.core.view.InputDeviceCompat: int SOURCE_JOYSTICK
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.String EXTRA_PERMISSION_GRANT_RESULTS
androidx.core.provider.FontRequestWorker$3: int val$style
kotlinx.coroutines.AwaitAll$AwaitAllNode: java.lang.Object _disposer
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion Companion
androidx.viewpager.R$id: int time
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_CACHE_SKSL
kotlinx.coroutines.EventLoop_commonKt: int SCHEDULE_OK
androidx.core.app.Person: java.lang.String IS_BOT_KEY
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.annotation.VisibleForTesting$Companion: int PACKAGE_PRIVATE
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PEOPLE
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
androidx.core.widget.AutoScrollHelper: int DEFAULT_RAMP_UP_DURATION
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_VIRTUAL_FALLBACK
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.viewpager.R$styleable: int GradientColor_android_startX
androidx.lifecycle.LifecycleKt$eventFlow$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: kotlin.jvm.functions.Function2 $transform$inlined$1
androidx.core.view.ViewCompat: int TYPE_NON_TOUCH
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object result
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.fragment.app.Fragment mFragment
org.jetbrains.annotations.Nls$Capitalization: org.jetbrains.annotations.Nls$Capitalization[] $VALUES
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.os.Handler onImageAvailableHandler
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext left
androidx.viewpager.widget.PagerAdapter: int POSITION_UNCHANGED
kotlin.text.CharCategory: kotlin.text.CharCategory OTHER_PUNCTUATION
androidx.core.app.NotificationCompat$BubbleMetadata: int mDesiredHeightResId
androidx.profileinstaller.DeviceProfileWriter: java.util.concurrent.Executor mExecutor
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStarted
androidx.fragment.app.Fragment$4: androidx.fragment.app.SpecialEffectsController val$controller
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: java.lang.Object result
androidx.fragment.app.Fragment: int VIEW_CREATED
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: androidx.core.view.WindowInsetsCompat val$startingInsets
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object L$0
androidx.loader.R$dimen: int notification_small_icon_size_as_large
androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions DEFAULT
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl INSTANCE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] elements
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: androidx.core.location.GnssStatusCompat$Callback mCallback
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: java.util.Map pressedState
kotlin.io.ConstantsKt: int MINIMUM_BLOCK_SIZE
androidx.collection.ArraySet: java.lang.Object[] mArray
androidx.window.area.SafeWindowAreaComponentProvider: androidx.window.extensions.WindowExtensions windowExtensions
kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS
kotlin.reflect.KVariance: kotlin.reflect.KVariance IN
androidx.window.core.FailedSpecification: java.lang.String tag
io.flutter.embedding.android.KeyData: int BYTES_PER_FIELD
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: java.lang.Object result
androidx.fragment.app.FragmentManager$10: androidx.fragment.app.FragmentManager this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.core.view.ContentInfoCompat: androidx.core.view.ContentInfoCompat$Compat mCompat
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: int label
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE_BIG
androidx.loader.content.Loader: androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.nio.file.Path $target
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlinx.coroutines.internal.CtorCache ctorCache
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener listener
io.flutter.embedding.android.AndroidTouchProcessor: int BYTES_PER_FIELD
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ASSIST_READING_CONTEXT
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: android.content.Context mContext
androidx.core.util.LogWriter: java.lang.String mTag
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom
androidx.customview.R$attr: int fontProviderFetchTimeout
androidx.fragment.R$styleable: int Fragment_android_id
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
androidx.core.util.PatternsCompat: java.lang.String PORT_NUMBER
androidx.core.view.HapticFeedbackConstantsCompat: int SEGMENT_FREQUENT_TICK
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: kotlin.sequences.Sequence $this_shuffled
androidx.fragment.app.FragmentHostCallback: android.app.Activity activity
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_SETTLING
androidx.window.core.ValidSpecification: androidx.window.core.Logger logger
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitRule$FinishBehavior finishPrimaryWithSecondary
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.BroadcastChannelImpl broadcast
androidx.viewpager.widget.ViewPager: int mCurItem
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mBigContentView
androidx.window.EmptyDecoratorWindowSdk: androidx.window.EmptyDecoratorWindowSdk INSTANCE
androidx.core.R$id: int tag_window_insets_animation_callback
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SafeWindowLayoutComponentProvider: androidx.window.core.ConsumerAdapter consumerAdapter
androidx.core.content.IntentSanitizer$Builder: boolean mAllowSelector
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Builder mBuilder
androidx.core.app.NotificationCompat$Action$Builder: boolean mAllowGeneratedReplies
androidx.viewpager.widget.PagerAdapter: int POSITION_NONE
androidx.fragment.app.FragmentActivity: java.lang.String LIFECYCLE_TAG
androidx.window.R$styleable: int ActivityRule_alwaysExpand
kotlinx.coroutines.BlockingCoroutine: kotlinx.coroutines.EventLoop eventLoop
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: androidx.window.area.WindowAreaPresentationSessionCallback windowAreaPresentationSessionCallback
androidx.viewpager.widget.ViewPager$SavedState: java.lang.ClassLoader loader
androidx.core.os.TraceCompat: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: int label
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$2
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_CONTEXT_CLICKED
androidx.core.app.NotificationCompat$Action$Builder: java.util.ArrayList mRemoteInputs
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: boolean isPop
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String tag
androidx.core.app.JobIntentService: java.lang.Object sLock
kotlin.jvm.internal.SpreadBuilder: java.util.ArrayList list
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES
androidx.core.view.MenuHostHelper$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets mPlatformInsets
androidx.loader.R$dimen: int notification_action_icon_size
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
androidx.fragment.app.Fragment: boolean mHidden
androidx.core.R$id: int accessibility_custom_action_20
androidx.loader.R$style: int TextAppearance_Compat_Notification_Info
androidx.loader.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.String THREAD_NAME_STEM
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
androidx.window.R$styleable: int ActivityRule_tag
kotlin.text.StringsKt___StringsKt$windowed$1: kotlin.text.StringsKt___StringsKt$windowed$1 INSTANCE
kotlin.jvm.internal.ArrayShortIterator: int index
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: int label
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$1
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: java.lang.String backgroundMode
kotlin.jvm.internal.ArrayBooleanIterator: boolean[] array
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$1
io.flutter.plugin.common.BinaryCodec: io.flutter.plugin.common.BinaryCodec INSTANCE
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
androidx.window.embedding.SplitRule$Api34Impl: androidx.window.embedding.SplitRule$Api34Impl INSTANCE
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_STATUS
androidx.fragment.app.Fragment: int mContainerId
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.jvm.functions.Function3 $transform
androidx.core.text.util.FindAddress: java.lang.String WORD_DELIM
kotlinx.coroutines.DispatchersKt: java.lang.String IO_PARALLELISM_PROPERTY_NAME
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
androidx.viewpager.widget.PagerAdapter: android.database.DataSetObservable mObservable
kotlin.jvm.internal.FloatCompanionObject: int SIZE_BYTES
kotlin.collections.State: kotlin.collections.State Failed
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
androidx.window.area.WindowAreaControllerImpl: androidx.window.extensions.core.util.function.Consumer rearDisplaySessionConsumer
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: int label
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.Configuration mConfiguration
androidx.core.location.LocationRequestCompat: long mIntervalMillis
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object L$0
androidx.core.widget.NestedScrollView: float mVerticalScrollFactor
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality RIGHT_TO_LEFT_EMBEDDING
androidx.core.util.PatternsCompat: java.lang.String TLD_CHAR
kotlin.text.CharCategory: kotlin.text.CharCategory CONTROL
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object result
io.flutter.plugin.platform.PlatformOverlayView: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityDelegate
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean recursive
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: char[] $delimiters
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: int mFieldId
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Object workerAllocationLock
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1 INSTANCE
androidx.viewpager.widget.PagerTitleStrip: int TEXT_SPACING
kotlin.reflect.KVariance: kotlin.reflect.KVariance OUT
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2 this$0
androidx.core.provider.SelfDestructiveThread$2$1: java.lang.Object val$result
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlinx.coroutines.CompletableDeferred $result
androidx.core.R$id: int async
androidx.window.R$styleable: int SplitPairRule_splitMaxAspectRatioInPortrait
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClassName
androidx.core.app.NotificationCompat$BigPictureStyle: java.lang.CharSequence mPictureContentDescription
androidx.customview.widget.ViewDragHelper: int mEdgeSize
androidx.core.graphics.PathSegment: android.graphics.PointF mEnd
androidx.fragment.app.FragmentTransaction: int OP_REPLACE
androidx.core.view.HapticFeedbackConstantsCompat: int VIRTUAL_KEY_RELEASE
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1 INSTANCE
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: int label
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
androidx.core.provider.FontsContractCompat$FontRequestCallback: int RESULT_SUCCESS
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Field sDialogKeyListenerField
kotlinx.coroutines.CancellableContinuationImplKt: int NO_INDEX
kotlin.text.ScreenFloatValueRegEx: kotlin.text.Regex value
androidx.core.view.WindowInsetsAnimationCompat$Impl: long mDurationMillis
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 processResFunc
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String IMPELLER_VULKAN_GPU_TRACING_DATA_KEY
androidx.core.app.ShareCompat$IntentBuilder: java.lang.CharSequence mChooserTitle
androidx.core.app.NotificationCompat: java.lang.String EXTRA_AUDIO_CONTENTS_URI
androidx.core.content.res.CamColor: float DE_MAX
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function3 regFunc
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel$StreamHandler handler
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String TAG
androidx.core.app.NotificationCompatBuilder: android.os.Bundle mExtras
androidx.collection.CircularArray: java.lang.Object[] mElements
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
kotlin.text.Typography: char doubleDagger
kotlin.jvm.internal.DoubleSpreadBuilder: double[] values
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
androidx.core.content.ContextCompat: java.lang.String DYNAMIC_RECEIVER_NOT_EXPORTED_PERMISSION_SUFFIX
androidx.fragment.app.LogWriter: java.lang.String mTag
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mResourceId
kotlin.text.RegexOption: kotlin.text.RegexOption COMMENTS
kotlin.text.CharCategory: kotlin.text.CharCategory MATH_SYMBOL
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: kotlin.sequences.SequencesKt__SequencesKt$flatten$2 INSTANCE
androidx.core.content.FileProvider: java.lang.String TAG_ROOT_PATH
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore store
androidx.customview.R$styleable: int FontFamily_fontProviderCerts
kotlin.time.DurationJvmKt: boolean durationAssertionsEnabled
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: int label
androidx.core.content.res.CamColor: float mAstar
androidx.core.os.LocaleListCompatWrapper: java.util.Locale EN_LATN
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: java.lang.String backgroundMode
androidx.core.graphics.WeightTypefaceApi26: java.lang.String TAG
androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener this$0
androidx.core.app.JobIntentService$WorkEnqueuer: boolean mHasJobId
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object disposableHandleOrSegment
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.core.os.CancellationSignal transitionSignal
androidx.core.graphics.PathParser$ExtractFloatResult: int mEndPosition
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
kotlinx.coroutines.flow.internal.ChannelFlowOperator: kotlinx.coroutines.flow.Flow flow
androidx.loader.R$styleable: int FontFamily_fontProviderCerts
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.FragmentManager mFragmentManager
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_BIG_PICTURE_AMBIENT
kotlin.text.CharCategory: kotlin.text.CharCategory END_PUNCTUATION
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_CONVERSATION
androidx.window.embedding.RuleParser: androidx.window.embedding.RuleParser INSTANCE
kotlin.text.RegexOption: int mask
kotlin.ranges.CharProgression: kotlin.ranges.CharProgression$Companion Companion
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer
androidx.core.view.WindowInsetsControllerCompat$Impl30: android.view.WindowInsetsController mInsetsController
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_TRACE_TO_FILE
kotlin.KotlinVersion: int MAX_COMPONENT_VALUE
androidx.window.embedding.SplitRule$FinishBehavior: androidx.window.embedding.SplitRule$FinishBehavior NEVER
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel$Factory $$INSTANCE
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String mDataMimeType
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.core.app.NotificationCompat: int PRIORITY_HIGH
androidx.core.os.ProcessCompat$Api19Impl: boolean sResolved
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.internal.Symbol NO_VALUE
androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller
androidx.fragment.app.Fragment: int mState
kotlin.io.FileSystemException: java.lang.String reason
androidx.savedstate.SavedStateRegistry: androidx.savedstate.Recreator$SavedStateProvider recreatorProvider
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlin.jvm.functions.Function2 $transform
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_PERSON
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object L$0
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
androidx.viewpager.widget.PagerTabStrip: int TAB_SPACING
kotlin.text.StringsKt__IndentKt$prependIndent$1: java.lang.String $indent
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: int MAGIC
androidx.core.widget.NestedScrollView: long mLastScroll
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.jvm.functions.Function1 $iterator
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType GRAVITY
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.core.view.GravityCompat: int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_WHEN
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: java.lang.Iterable $this_withIndex
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST
androidx.core.R$id: int icon
kotlin.collections.builders.MapBuilderValues: kotlin.collections.builders.MapBuilder backing
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.core.text.util.FindAddress: java.lang.String WS
io.flutter.embedding.android.AndroidTouchProcessor: int POINTER_DATA_FIELD_COUNT
androidx.core.app.RemoteInput: int mEditChoicesBeforeSending
kotlin.text.RegexOption: int value
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.graphics.Insets mStableInsets
kotlinx.coroutines.JobSupport$onAwaitInternal$2: kotlinx.coroutines.JobSupport$onAwaitInternal$2 INSTANCE
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
androidx.collection.SimpleArrayMap: int BASE_SIZE
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
kotlin.text.Regex$splitToSequence$1: java.lang.CharSequence $input
com.getkeepsafe.relinker.ReLinkerInstance: com.getkeepsafe.relinker.ReLinker$Logger logger
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object L$1
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int CAPACITY_BITS
io.flutter.embedding.android.KeyboardMap: java.util.HashMap scanCodeToPhysical
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: java.lang.Object[] $elements
androidx.core.view.WindowInsetsAnimationControllerCompat: androidx.core.view.WindowInsetsAnimationControllerCompat$Impl mImpl
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlinx.coroutines.flow.internal.ChannelFlow this$0
androidx.core.app.NotificationManagerCompat$NotifyTask: int id
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENABLE_DART_PROFILING
io.flutter.plugin.editing.InputConnectionAdaptor: int batchEditNestDepth
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.core.graphics.TypefaceCompatBaseImpl$1: androidx.core.graphics.TypefaceCompatBaseImpl this$0
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: long[] $this_asSequence$inlined
androidx.core.app.AppLocalesStorageHelper: java.lang.String LOCALE_RECORD_ATTRIBUTE_TAG
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object L$0
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] EMPTY
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_ACTION
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.util.concurrent.atomic.AtomicIntegerFieldUpdater controlState$FU
androidx.core.app.NotificationCompat$WearableExtender: int mContentActionIndex
androidx.window.R$styleable: int[] SplitPairRule
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: int label
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_dropWhile$inlined
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String HINT_TEXT_KEY
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$2: androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$2 INSTANCE
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String TAG
androidx.viewpager.R$styleable: int ColorStateListItem_alpha
androidx.core.app.NotificationChannelCompat: boolean mVibrationEnabled
androidx.customview.R$styleable: int GradientColor_android_type
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: int label
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
androidx.fragment.app.FragmentPagerAdapter: int mBehavior
androidx.window.embedding.SplitAttributes: androidx.window.embedding.SplitAttributes$LayoutDirection layoutDirection
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$4
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_DART_FLAGS
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: java.lang.String initialRoute
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: long mLatestTimestamp
androidx.core.content.res.CamColor: float mQ
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DARKEN
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int I$0
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1: boolean $isHideOperation
androidx.viewpager.widget.PagerTabStrip: int TAB_PADDING
androidx.window.core.Version: java.lang.String description
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
androidx.core.view.ViewKt$doOnDetach$1: kotlin.jvm.functions.Function1 $action
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE
androidx.viewpager.widget.PagerTitleStrip: androidx.viewpager.widget.PagerTitleStrip$PageListener mPageListener
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: kotlinx.coroutines.flow.Flow[] $flows$inlined
androidx.viewpager.widget.PagerTitleStrip: int mLastKnownCurrentPage
androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object result
androidx.customview.R$styleable: int FontFamily_fontProviderQuery
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.jvm.functions.Function3 $transform
androidx.core.R$dimen: int compat_control_corner_material
androidx.core.R$color: int androidx_core_secondary_text_default_material_light
androidx.core.app.PendingIntentCompat$GatedCallback: java.util.concurrent.CountDownLatch mComplete
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: android.app.Activity $activity
kotlin.collections.AbstractMap$values$1: kotlin.collections.AbstractMap this$0
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue
io.flutter.plugin.common.EventChannel: java.lang.String TAG
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2: androidx.core.view.WindowInsetsAnimationCompat val$anim
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object result
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState
io.flutter.plugin.platform.PlatformViewWrapper: io.flutter.embedding.android.AndroidTouchProcessor touchProcessor
androidx.activity.BackEventCompat: int EDGE_LEFT
androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime
androidx.fragment.app.FragmentState: boolean mFromLayout
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGES
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL
kotlin.io.LinesSequence$iterator$1: java.lang.String nextValue
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: kotlin.text.StringsKt___StringsKt$chunkedSequence$1 INSTANCE
androidx.core.location.LocationRequestCompat$Builder: float mMinUpdateDistanceMeters
androidx.fragment.app.FragmentTransaction: int OP_REMOVE
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
io.flutter.plugin.mouse.MouseCursorPlugin$2: long serialVersionUID
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.fragment.app.BackStackRecordState: int mIndex
androidx.lifecycle.SavedStateHandle: androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mFocusedView
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_CACHE
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator iterator
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality BOUNDARY_NEUTRAL
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mWeight
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler handler
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_HTML_ELEMENT
kotlinx.coroutines.selects.SelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl cont
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_ON_READ
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
androidx.core.app.RemoteInput: android.os.Bundle mExtras
androidx.core.app.NotificationManagerCompat: java.lang.String OP_POST_NOTIFICATION
io.flutter.plugin.platform.VirtualDisplayController: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object result
kotlin.collections.builders.ListBuilder$Itr: int index
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.nio.file.Path $this_copyToRecursively
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_DEFAULT
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean debugDisableSurfaceClear
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: int label
androidx.window.R$attr: int splitMinSmallestWidthDp
androidx.core.content.IntentSanitizer$Builder: boolean mAllowIdentifier
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2 INSTANCE
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Class sFontFamily
androidx.activity.OnBackPressedDispatcher: android.window.OnBackInvokedDispatcher invokedDispatcher
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: androidx.window.layout.adapter.sidecar.SidecarCompat this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object result
androidx.window.area.WindowAreaInfo: java.util.HashMap capabilityMap
androidx.viewpager.widget.PagerTabStrip$2: androidx.viewpager.widget.PagerTabStrip this$0
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: int label
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: java.util.concurrent.Executor executor
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsCached
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1 this$0
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mTransitionEnded
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
io.flutter.Log: int VERBOSE
androidx.customview.R$drawable: int notification_bg
androidx.core.text.util.LocalePreferences$HourCycle: java.lang.String H12
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean ANDROID_DETECTED
androidx.fragment.app.FragmentActivity: boolean mStopped
androidx.viewpager.R$attr: int fontProviderFetchStrategy
androidx.core.app.JobIntentService: java.util.ArrayList mCompatQueue
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mTickerView
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection$Companion Companion
androidx.tracing.Trace: java.lang.reflect.Method sTraceCounterMethod
androidx.viewpager.R$drawable: int notification_bg_normal
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: int mFlags
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean attemptedSetting
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object result
kotlin.UInt: kotlin.UInt$Companion Companion
androidx.core.os.BuildCompat: int AD_SERVICES_EXTENSION_INT
androidx.core.R$attr: int fontWeight
androidx.activity.result.IntentSenderRequest: android.content.IntentSender intentSender
androidx.lifecycle.LiveDataScopeImpl$emit$2: int label
androidx.core.app.NotificationCompat$Builder: java.lang.String mChannelId
kotlinx.coroutines.flow.CancellableFlowImpl: kotlinx.coroutines.flow.Flow flow
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$2
kotlin.jvm.internal.ShortCompanionObject: kotlin.jvm.internal.ShortCompanionObject INSTANCE
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_RETRY_LISTENER_QUEUE
androidx.viewpager.widget.PagerTabStrip: int MIN_PADDING_BOTTOM
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int UNKNOWN
androidx.window.layout.util.ContextCompatHelper: androidx.window.layout.util.ContextCompatHelper INSTANCE
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object param
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
androidx.fragment.app.FragmentPagerAdapter: boolean DEBUG
kotlin.time.DurationJvmKt: java.lang.ThreadLocal[] precisionFormats
androidx.window.core.FailedSpecification: java.lang.String message
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mSystemWindowInsets
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: androidx.window.core.ConsumerAdapter consumerAdapter
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
kotlin.text.CharCategory: kotlin.text.CharCategory LETTER_NUMBER
kotlin.io.ByteStreamsKt$iterator$1: java.io.BufferedInputStream $this_iterator
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$3
kotlin.properties.ObservableProperty: java.lang.Object value
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mContentView
androidx.annotation.RequiresOptIn$Level: androidx.annotation.RequiresOptIn$Level WARNING
androidx.core.text.BidiFormatter: int DIR_UNKNOWN
androidx.core.provider.FontRequestWorker$3: android.content.Context val$context
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object L$1
androidx.lifecycle.SavedStateHandlesProvider: androidx.savedstate.SavedStateRegistry savedStateRegistry
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.EmbeddingAspectRatio maxAspectRatioInPortrait
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
androidx.core.content.res.ViewingConditions: float mN
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: kotlinx.coroutines.JobSupport this$0
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
androidx.core.R$dimen: int notification_right_side_padding_top
kotlinx.coroutines.channels.Channel$Factory: int OPTIONAL_CHANNEL
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: int label
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation delegate
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String WEDNESDAY
androidx.core.view.InputDeviceCompat: int SOURCE_MOUSE
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
androidx.lifecycle.SavedStateHandle: java.util.Map liveDatas
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_ACTION_ID_KEY
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
androidx.viewpager.R$id: int normal
androidx.core.app.NotificationManagerCompat$CancelTask: boolean all
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object L$0
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: java.lang.reflect.Constructor $constructor
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object L$0
androidx.versionedparcelable.VersionedParcel: int TYPE_INTEGER
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Rect mDstRect
androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader
androidx.core.R$styleable: int GradientColor_android_startY
androidx.core.app.FrameMetricsAggregator: int COMMAND_DURATION
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
androidx.core.app.NotificationCompat$Action$Builder: boolean mShowsUserInterface
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SRC_OUT
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: int label
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onEmpty$inlined
kotlin.text.Typography: char rightDoubleQuote
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String NATIVE_SPELL_CHECK_SERVICE_DEFINED
kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage
androidx.loader.R$styleable: int GradientColor_android_startColor
androidx.core.location.GpsStatusWrapper: int BEIDOU_PRN_OFFSET
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory
androidx.fragment.app.Fragment: boolean mUserVisibleHint
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: kotlinx.coroutines.flow.StartedWhileSubscribed this$0
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl this$0
androidx.fragment.app.FragmentManager: boolean mStateSaved
androidx.fragment.app.FragmentManagerViewModel: java.lang.String TAG
androidx.core.app.AppOpsManagerCompat: int MODE_ALLOWED
kotlinx.coroutines.channels.Channel$Factory: int CHANNEL_DEFAULT_CAPACITY
androidx.lifecycle.LiveData: java.lang.Object mDataLock
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent
androidx.core.location.GpsStatusWrapper: int GLONASS_PRN_OFFSET
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings: int[] $EnumSwitchMapping$0
androidx.viewpager.widget.PagerTitleStrip: float mLastKnownPositionOffset
androidx.core.view.WindowInsetsControllerCompat$Impl30$1: androidx.core.view.WindowInsetsAnimationControlListenerCompat val$listener
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult TERMINATE
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPeople
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List labelAttributes
io.flutter.embedding.android.KeyboardMap$TogglingGoal: int mask
kotlinx.coroutines.channels.ChannelSegment: kotlinx.coroutines.channels.BufferedChannel _channel
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object L$0
kotlin.io.path.DirectoryEntriesReader: kotlin.collections.ArrayDeque entries
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: kotlin.sequences.Sequence $this_windowedSequence$inlined
androidx.fragment.app.FragmentPagerAdapter: boolean mExecutingFinishUpdate
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: int label
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: kotlin.sequences.Sequence $this_groupingBy
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
kotlin.text.SystemProperties: java.lang.String LINE_SEPARATOR
io.flutter.embedding.engine.FlutterEngineGroup$Options: android.content.Context context
androidx.viewpager.R$styleable: int FontFamily_fontProviderQuery
io.flutter.Build$API_LEVELS: int API_29
androidx.core.R$id: int accessibility_custom_action_17
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: kotlin.jvm.functions.Function2 $predicate$inlined
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: int label
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray mCapturedKeys
io.flutter.plugin.platform.SingleViewWindowManager: android.view.WindowManager delegate
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: kotlinx.coroutines.flow.Flow $this_debounceInternal
androidx.core.view.KeyEventDispatcher: boolean sActionBarFieldsFetched
kotlinx.coroutines.scheduling.CoroutineScheduler: long BLOCKING_MASK
androidx.core.hardware.display.DisplayManagerCompat: java.lang.String DISPLAY_CATEGORY_PRESENTATION
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
androidx.fragment.app.FragmentLayoutInflaterFactory$1: androidx.fragment.app.FragmentLayoutInflaterFactory this$0
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSubText
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: kotlin.coroutines.Continuation cont
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$inNames
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1 INSTANCE
io.flutter.Build$API_LEVELS: int API_33
androidx.window.R$styleable: int ActivityFilter_activityAction
androidx.core.graphics.TypefaceCompatUtil: java.lang.String CACHE_FILE_PREFIX
androidx.core.transition.TransitionKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onStart
androidx.fragment.app.FragmentTransaction$Op: boolean mFromExpandedOp
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PagerObserver mObserver
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean sanitizeStackTraces
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.SpellCheckPlugin spellCheckPlugin
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1 INSTANCE
androidx.core.text.HtmlCompat: int FROM_HTML_OPTION_USE_CSS_COLORS
androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim
androidx.core.transition.TransitionKt$addListener$1: androidx.core.transition.TransitionKt$addListener$1 INSTANCE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlin.jvm.functions.Function3 $transform
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
kotlin.DeepRecursiveScopeImpl: java.lang.Object value
io.flutter.plugin.common.EventChannel: java.lang.String name
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
androidx.lifecycle.BlockRunner: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object L$4
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlin.text.Typography: char nbsp
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ON_OFF_SWITCH_LABELS
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection star
androidx.lifecycle.Lifecycling: androidx.lifecycle.Lifecycling INSTANCE
kotlin.sequences.SequenceBuilderIterator: java.lang.Object nextValue
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind EXACTLY_ONCE
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
io.flutter.embedding.android.KeyboardMap$TogglingGoal: boolean enabled
androidx.viewpager.R$id: int italic
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2 INSTANCE
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.Boolean mIsGroupConversation
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4: android.view.ViewGroup $container
androidx.core.location.GpsStatusWrapper: int GLONASS_PRN_COUNT
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: int label
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.CoroutineContext $scopeContext
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.core.text.util.FindAddress: java.lang.String HOUSE_END
androidx.lifecycle.Lifecycling: int GENERATED_CALLBACK
androidx.lifecycle.DefaultLifecycleObserverAdapter: androidx.lifecycle.DefaultLifecycleObserver defaultLifecycleObserver
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES
androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object L$0
androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache
kotlin.io.encoding.Base64: int bitsPerSymbol
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: int label
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 regFunc
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow _subscriptionCount
androidx.viewpager.R$styleable: int FontFamily_fontProviderCerts
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
androidx.lifecycle.SavedStateHandleController: boolean isAttached
androidx.customview.widget.ViewDragHelper: int EDGE_LEFT
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType kHdmi
kotlinx.coroutines.CancelFutureOnCompletion: java.util.concurrent.Future future
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
kotlinx.coroutines.debug.internal.StackTraceFrame: java.lang.StackTraceElement stackTraceElement
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CUSTOM_CONTENT_HEIGHT
androidx.core.text.util.LocalePreferences$TemperatureUnit: java.lang.String FAHRENHEIT
androidx.core.util.TypedValueCompat: float INCHES_PER_MM
androidx.window.embedding.ActivityEmbeddingController: androidx.window.embedding.ActivityEmbeddingController$Companion Companion
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: kotlin.jvm.functions.Function1 $selector
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
kotlin.text.StringsKt__StringsKt$iterator$1: int index
androidx.core.app.NotificationCompat: int GROUP_ALERT_ALL
kotlinx.coroutines.scheduling.LimitingDispatcher: int taskMode
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: kotlinx.coroutines.channels.ReceiveChannel $this_consumes
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.coroutines.Continuation $cont$inlined
androidx.core.view.WindowInsetsCompat$Type: int LAST
androidx.core.util.PatternsCompat: java.lang.String PATH_AND_QUERY
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2 INSTANCE
kotlin.collections.IndexingIterator: int index
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.sequences.Sequence $source
kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type elementType
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mAnimating
androidx.core.view.WindowInsetsControllerCompat$Impl30$1: androidx.core.view.WindowInsetsControllerCompat$Impl30 this$0
kotlin.UByte: byte MIN_VALUE
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlinx.coroutines.channels.TickerMode $mode
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode LOG
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: int I$0
androidx.core.widget.PopupWindowCompat: java.lang.String TAG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_SUPPORTS_GRANULAR_SCROLLING
io.flutter.plugin.common.StandardMessageCodec: byte INT_ARRAY
kotlin.io.path.PathRelativizer: java.nio.file.Path parentPath
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
kotlin.coroutines.SafeContinuation: kotlin.coroutines.SafeContinuation$Companion Companion
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.core.text.util.LocalePreferences$TemperatureUnit: java.lang.String KELVIN
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: boolean rootVisited
androidx.core.os.CancellationSignal: java.lang.Object mCancellationSignalObj
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int MIN_ADD_SPIN_CAPACITY
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object L$0
androidx.core.app.NotificationCompat$Action$Builder: boolean mAuthenticationRequired
androidx.versionedparcelable.VersionedParcel: int TYPE_FLOAT
androidx.versionedparcelable.VersionedParcel: int EX_SECURITY
io.flutter.embedding.engine.systemchannels.BackGestureChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: java.lang.Class activityClass
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: kotlin.jvm.functions.Function2 $transform$inlined
kotlin.io.FilePathComponents: java.util.List segments
androidx.core.app.ActivityRecreator: android.os.Handler mainHandler
androidx.profileinstaller.ProfileInstaller: int RESULT_INSTALL_SKIP_FILE_SUCCESS
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveData $source
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: androidx.window.extensions.WindowExtensions windowExtensions
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
android.support.v4.os.ResultReceiver$MyRunnable: int mResultCode
kotlin.jvm.internal.ClassReference: java.util.Map FUNCTION_CLASSES
androidx.loader.R$styleable: int FontFamilyFont_android_font
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String tag
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object L$0
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_SELECTION_CHANGED
androidx.core.provider.FontsContractCompat$FontInfo: int mTtcIndex
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SELF_DISPLAY_NAME
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
androidx.core.content.pm.ShortcutManagerCompat: int DEFAULT_MAX_ICON_DIMENSION_DP
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler
androidx.core.os.BuildCompat: int S_EXTENSION_INT
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.view.TextureRegistry$OnTrimMemoryListener trimMemoryListener
androidx.core.content.IntentCompat: java.lang.String CATEGORY_LEANBACK_LAUNCHER
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VIRTUAL_DISPLAY_PLATFORM_VIEW
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader reader
androidx.core.R$layout: int custom_dialog
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_READ
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlinx.coroutines.channels.ReceiveChannel $this_takeWhile
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
androidx.profileinstaller.DexProfileData: long dexChecksum
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 UrlSafe
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: boolean Z$0
androidx.core.R$attr: int fontStyle
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR_OVERLAY
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
androidx.loader.R$dimen: int notification_media_narrow_margin
androidx.core.widget.AutoScrollHelper: boolean mAnimating
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] $VALUES
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.BitmapShader mBitmapShader
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList cancellables
androidx.startup.AppInitializer: android.content.Context mContext
androidx.core.R$style: int TextAppearance_Compat_Notification_Line2
androidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback mDiagnostics
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
androidx.fragment.app.Fragment: int AWAITING_ENTER_EFFECTS
androidx.loader.R$attr: int fontProviderPackage
kotlinx.coroutines.channels.BufferedChannelKt: int SENDERS_CLOSE_STATUS_SHIFT
androidx.window.layout.adapter.extensions.MulticastConsumer: android.content.Context context
io.flutter.plugin.platform.PlatformViewWrapper: java.lang.String TAG
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.core.app.NotificationCompat$TvExtender: int mFlags
androidx.core.app.NotificationChannelGroupCompat: java.util.List mChannels
androidx.core.view.GravityCompat: int START
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.FragmentTransaction mCurTransaction
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object nextItem
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
kotlinx.coroutines.scheduling.WorkQueueKt: int STEAL_CPU_ONLY
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $transform$inlined
androidx.core.widget.NestedScrollView: int DEFAULT_SMOOTH_SCROLL_DURATION
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object result
androidx.loader.content.ModernAsyncTask: int MESSAGE_POST_PROGRESS
kotlin.time.DurationUnit: kotlin.time.DurationUnit MICROSECONDS
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
io.flutter.plugin.text.ProcessTextPlugin: android.content.pm.PackageManager packageManager
kotlinx.coroutines.internal.ConcurrentKt: java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL
com.getkeepsafe.relinker.elf.Elf$Header: int ELFCLASS64
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$2
androidx.collection.CircularIntArray: int mTail
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_HIDE_ICON
kotlin.ranges.CharRange: kotlin.ranges.CharRange$Companion Companion
kotlin.random.Random$Default$Serialized: long serialVersionUID
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_INVISIBLE_ACTIONS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: java.lang.String mColumnTitle
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sSetWindowLayoutTypeMethod
androidx.core.view.WindowInsetsCompat$Type: int SIZE
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
kotlin.jvm.internal.ArrayShortIterator: short[] array
io.flutter.embedding.android.FlutterFragment: androidx.activity.OnBackPressedCallback onBackPressedCallback
androidx.lifecycle.ViewModelLazy: kotlin.jvm.functions.Function0 storeProducer
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
kotlin.time.MonotonicTimeSource: kotlin.time.MonotonicTimeSource INSTANCE
androidx.loader.R$styleable: int[] FontFamilyFont
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.graphics.drawable.IconCompat mIcon
io.flutter.view.AccessibilityBridge$5: int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType
androidx.core.graphics.PathParser$ExtractFloatResult: boolean mEndWithNegOrDot
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference internalScopeRef
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.view.inputmethod.InputContentInfo mObject
kotlin.sequences.FilteringSequence: kotlin.jvm.functions.Function1 predicate
androidx.loader.R$styleable: int FontFamily_fontProviderQuery
androidx.core.R$drawable: int notification_template_icon_bg
androidx.core.app.NotificationManagerCompat: int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
androidx.core.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String VMSERVICE_SNAPSHOT_LIBRARY
androidx.core.text.util.LocalePreferences$HourCycle: java.lang.String U_EXTENSION_TAG
androidx.core.location.GnssStatusCompat: int CONSTELLATION_IRNSS
kotlinx.coroutines.AwaitAll: kotlinx.coroutines.Deferred[] deferreds
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object result
androidx.core.R$id: int time
kotlinx.coroutines.internal.ConcurrentLinkedListKt: int POINTERS_SHIFT
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: kotlin.jvm.functions.Function3 $operation
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_DESCRIPTION_KEY
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int allocated
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object L$2
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object L$2
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$1
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _closeCause$FU
kotlinx.coroutines.internal.LimitedDispatcher: int parallelism
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments
androidx.window.core.ConsumerAdapter$createSubscriptionNoActivity$1: java.lang.reflect.Method $removeMethod
androidx.core.location.LocationRequestCompat$Builder: int mQuality
androidx.window.R$id: int androidx_window_activity_scope
io.flutter.view.AccessibilityBridge: int MIN_ENGINE_GENERATED_NODE_ID
androidx.core.R$attr: int fontProviderQuery
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_IDLE
androidx.customview.R$id: int text2
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.ref.ReferenceQueue weakRefQueue
androidx.core.view.PointerIconCompat: int TYPE_CONTEXT_MENU
androidx.fragment.app.FragmentTransitionCompat21$2: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.viewpager.R$drawable: int notification_template_icon_low_bg
androidx.core.location.GnssStatusCompat: int CONSTELLATION_QZSS
kotlin.DeprecationLevel: kotlin.DeprecationLevel HIDDEN
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_ON_REPLY
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
androidx.customview.R$drawable: int notification_tile_bg
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.lang.Object controller
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.sync.MutexKt$withLock$1: int label
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: int label
androidx.core.view.WindowInsetsAnimationCompat: androidx.core.view.WindowInsetsAnimationCompat$Impl mImpl
androidx.lifecycle.SavedStateHandle: java.lang.Class[] ACCEPTABLE_CLASSES
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.String TAG
androidx.tracing.Trace: long sTraceTagApp
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
kotlin.sequences.SequencesKt___SequencesKt$minus$2: kotlin.sequences.Sequence $this_minus
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: androidx.core.content.UnusedAppRestrictionsBackportServiceConnection this$0
androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_ATOP
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
io.flutter.plugin.common.BinaryCodec: io.flutter.plugin.common.BinaryCodec INSTANCE_DIRECT
androidx.core.view.PointerIconCompat: int TYPE_CROSSHAIR
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ROLE_DESCRIPTION_KEY
kotlin.text.Regex: kotlin.text.Regex$Companion Companion
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object L$0
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: boolean mHasBoundService
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] $VALUES
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_KEY_TOGGLE_IMPELLER
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object L$0
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_UNSPECIFIED
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object L$1
androidx.core.view.ViewCompat: int IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS
androidx.core.widget.NestedScrollView: int[] mScrollConsumed
androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems
androidx.core.view.WindowInsetsAnimationCompat$Callback: int DISPATCH_MODE_STOP
kotlin.collections.RingBuffer: java.lang.Object[] buffer
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_SELECTION
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object L$0
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object L$0
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: boolean isAnimLoaded
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$3
androidx.core.widget.AutoScrollHelper: int VERTICAL
androidx.core.R$styleable: int[] GradientColorItem
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2: androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2 INSTANCE
io.flutter.plugin.common.StandardMessageCodec: java.lang.String TAG
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: int mDesiredHeightResId
androidx.activity.result.ActivityResult: int mResultCode
androidx.lifecycle.ClassesInfoCache: int CALL_TYPE_PROVIDER
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: java.util.Set flags
kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder map
androidx.collection.ArraySet: boolean DEBUG
androidx.core.app.NotificationChannelCompat: boolean DEFAULT_SHOW_BADGE
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
androidx.core.text.BidiFormatter$DirectionalityEstimator: int length
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.ScribeChannel scribeChannel
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2 this$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlinx.coroutines.channels.ReceiveChannel $second
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PRESS_AND_HOLD
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.fragment.app.Fragment: int ATTACHED
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
androidx.lifecycle.Lifecycle$Event$WhenMappings: int[] $EnumSwitchMapping$0
kotlin.collections.State: kotlin.collections.State Done
androidx.core.util.SizeFCompat: float mWidth
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object L$0
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_ERROR_PACKAGE_NAME_DOES_NOT_EXIST
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_DURATION
kotlin.time.Duration: long rawValue
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: java.lang.Throwable e
androidx.lifecycle.ViewModelProvider$Factory$Companion: androidx.lifecycle.ViewModelProvider$Factory$Companion $$INSTANCE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path path
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler spellCheckMethodHandler
kotlin.random.Random: kotlin.random.Random$Default Default
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Executor sExecutor
androidx.lifecycle.CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0: kotlin.jvm.functions.Function1 function
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: int mRecreatingHashCode
androidx.lifecycle.CoroutineLiveData: androidx.lifecycle.EmittedSource emittedSource
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: kotlin.jvm.internal.Ref$IntRef $i
kotlinx.coroutines.AwaitKt$joinAll$1: int label
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: double[] $this_asIterable$inlined
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object L$0
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object L$0
androidx.fragment.app.Fragment$AnimationInfo: int mExitAnim
androidx.fragment.app.BackStackRecordState: int mBreadCrumbShortTitleRes
androidx.core.text.util.FindAddress: java.util.regex.Pattern sWordRe
androidx.core.view.DisplayCompat$ModeCompat: boolean mIsNative
kotlinx.coroutines.sync.MutexKt: int TRY_LOCK_SUCCESS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object L$0
io.flutter.plugin.editing.ScribePlugin: android.view.inputmethod.InputMethodManager mInputMethodManager
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode QUIET
androidx.core.text.TextDirectionHeuristicsCompat: int STATE_FALSE
kotlinx.coroutines.ResumeUndispatchedRunnable: kotlinx.coroutines.CancellableContinuation continuation
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: java.lang.String engineId
androidx.customview.R$drawable: int notification_bg_normal_pressed
kotlin.text.Typography: char prime
androidx.activity.result.IntentSenderRequest: int flagsValues
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: kotlinx.coroutines.CoroutineScope $$this$coroutineScope
kotlin.ranges.ClosedFloatRange: float _start
androidx.core.view.ViewCompat: int SCROLL_AXIS_HORIZONTAL
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
androidx.window.embedding.EmbeddingBackend$Companion$reset$1: androidx.window.embedding.EmbeddingBackend$Companion$reset$1 INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.FragmentManager mFragmentManager
androidx.core.widget.AutoScrollHelper: android.view.View mTarget
androidx.core.app.NotificationCompat: java.lang.String EXTRA_COMPACT_ACTIONS
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlinx.coroutines.flow.DistinctFlowImpl this$0
androidx.core.widget.NestedScrollView: boolean mIsLaidOut
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String TOOLTIP_TEXT_KEY
androidx.annotation.Dimension: int DP
androidx.fragment.app.FragmentTransaction: int TRANSIT_NONE
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: kotlin.jvm.functions.Function3 $transform
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN_ARRAY
io.flutter.embedding.engine.systemchannels.LocalizationChannel: java.lang.String TAG
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_UNMUTE
androidx.loader.R$layout: int notification_action
kotlin.jvm.internal.ByteCompanionObject: int SIZE_BITS
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES
kotlin.text.RegexOption: kotlin.text.RegexOption MULTILINE
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed: kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed INSTANCE
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_APPEARED
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlin.jvm.functions.Function3 $transform
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
androidx.lifecycle.ViewModelStore: java.util.Map map
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: int $count$inlined
androidx.core.app.ShareCompat$IntentReader: java.lang.String mCallingPackage
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2 this$0
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PICTURE_ICON
androidx.lifecycle.LiveData$AlwaysActiveObserver: androidx.lifecycle.LiveData this$0
androidx.core.view.VelocityTrackerFallback: int mDataPointsBufferLastUsedIndex
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl this$0
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
io.flutter.Build$API_LEVELS: int API_25
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlin.collections.builders.MapBuilder: int MAGIC
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
androidx.core.provider.SelfDestructiveThread: int mGeneration
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object L$0
androidx.core.content.PermissionChecker: int PERMISSION_DENIED_APP_OP
androidx.core.view.MotionEventCompat: int AXIS_PRESSURE
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.Set onTrimMemoryListeners
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.loader.R$id: int action_container
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture: androidx.concurrent.futures.AbstractResolvableFuture owner
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: kotlinx.coroutines.Job $job
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FLAG_PREFETCH_DESCENDANTS_BREADTH_FIRST
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SYSTEM
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.loader.R$color: int notification_action_color_filter
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: java.lang.String TAG
androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle handle
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.util.Iterator $iterator
androidx.activity.FullyDrawnReporter: java.lang.Runnable reportRunnable
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: io.flutter.view.TextureRegistry$SurfaceTextureEntry surfaceTextureEntry
androidx.customview.R$id: int tag_transition_group
androidx.customview.R$style: int TextAppearance_Compat_Notification_Title
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
androidx.viewpager.widget.ViewPager$4: androidx.viewpager.widget.ViewPager this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: int label
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
kotlin.jvm.internal.ArrayByteIterator: byte[] array
androidx.viewpager.R$drawable: int notification_icon_background
androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo animationInfo
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_INPUT_METHOD
androidx.arch.core.internal.SafeIterableMap: int mSize
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: kotlin.jvm.functions.Function1 $this_createCoroutineUnintercepted$inlined
io.flutter.Log: int INFO
androidx.core.R$attr: int fontProviderAuthority
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: kotlin.jvm.functions.Function1 $onPause
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: int label
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$2
androidx.lifecycle.viewmodel.ViewModelInitializer: kotlin.jvm.functions.Function1 initializer
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention RUNTIME
androidx.core.util.PatternsCompat: java.lang.String EMAIL_ADDRESS_LOCAL_PART
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: android.graphics.Rect childRect
androidx.activity.FullyDrawnReporter: kotlin.jvm.functions.Function0 reportFullyDrawn
androidx.profileinstaller.WritableFileSection: byte[] mContents
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence sequence2
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: int label
kotlin.collections.builders.MapBuilder: int INITIAL_CAPACITY
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 getNextValue
androidx.core.view.WindowInsetsCompat$Type: int MANDATORY_SYSTEM_GESTURES
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1: androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1 INSTANCE
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngineGroup engineGroup
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_4
androidx.window.reflection.WindowExtensionsConstants: java.lang.String WINDOW_LAYOUT_COMPONENT_CLASS
androidx.core.text.BidiFormatter: java.lang.String RLM_STRING
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $VALUES
androidx.core.app.NotificationCompat$BubbleMetadata: int FLAG_SUPPRESS_NOTIFICATION
androidx.core.R$id: int tag_screen_reader_focusable
androidx.core.text.BidiFormatter: java.lang.String EMPTY_STRING
androidx.window.embedding.SplitRule$FinishBehavior: int value
androidx.lifecycle.LifecycleRegistry: boolean handlingEvent
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat
kotlin.jvm.internal.DoubleCompanionObject: double NEGATIVE_INFINITY
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentStore mFragmentStore
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object result
androidx.customview.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
androidx.core.view.contentcapture.ContentCaptureSessionCompat: android.view.View mView
kotlin.UShortArray: short[] storage
kotlin.reflect.WildcardTypeImpl: kotlin.reflect.WildcardTypeImpl$Companion Companion
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.viewpager.widget.PagerTabStrip: int MIN_STRIP_HEIGHT
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type kDown
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.FastServiceLoader INSTANCE
androidx.lifecycle.AbstractSavedStateViewModelFactory: android.os.Bundle defaultArgs
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object L$1
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_ERROR_CODE_BIT_SHIFT
androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: kotlin.jvm.functions.Function1 $this_createCoroutineUnintercepted$inlined
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object L$0
androidx.core.content.res.FontResourcesParserCompat: int INFINITE_TIMEOUT_VALUE
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $cont$inlined
androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl: androidx.core.widget.NestedScrollView this$0
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
androidx.core.app.NotificationCompat$BubbleMetadata: int mDesiredHeight
kotlin.Pair: java.lang.Object second
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_take$inlined
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
io.flutter.embedding.android.KeyChannelResponder: java.lang.String TAG
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: long[] $this_withIndex
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.NonCancellable INSTANCE
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
kotlinx.coroutines.internal.FastServiceLoader: java.lang.String PREFIX
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: int label
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.List transitionInfos
kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$Responder[] responders
androidx.viewpager.R$id: int title
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object result
androidx.customview.R$id: int text
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher dispatcher
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ALLOW_FREE_FORM_INPUT
androidx.core.content.ContextCompat: int RECEIVER_VISIBLE_TO_INSTANT_APPS
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3 INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object L$1
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper
androidx.core.content.FileProvider: java.lang.Object mLock
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: kotlinx.coroutines.selects.SelectInstance $select$inlined
androidx.core.view.DragStartHelper: android.view.View$OnLongClickListener mLongClickListener
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
androidx.core.widget.ContentLoadingProgressBar: boolean mPostedShow
kotlin.text.Typography: char lowSingleQuote
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object L$1
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object L$2
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: int label
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE
androidx.core.view.VelocityTrackerFallback: long ASSUME_POINTER_STOPPED_MS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityViewCommand mCommand
androidx.customview.R$attr: int fontProviderFetchStrategy
androidx.profileinstaller.ProfileTranscoder: int POST_STARTUP
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
androidx.core.graphics.Insets: int bottom
kotlin.jvm.internal.EnumCompanionObject: kotlin.jvm.internal.EnumCompanionObject INSTANCE
kotlin.io.path.PathNode: java.util.Iterator contentIterator
androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_X
androidx.core.util.LongSparseArrayKt$keyIterator$1: android.util.LongSparseArray $this_keyIterator
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
androidx.fragment.app.FragmentStatePagerAdapter: java.util.ArrayList mFragments
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: int label
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
androidx.window.reflection.ReflectionUtils$validateImplementation$1$1: java.lang.reflect.Method $it
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_MAX_LENGTH
androidx.fragment.app.FragmentHostCallback: android.content.Context context
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: java.nio.file.Path $this_copyToRecursively
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
androidx.window.core.ValidSpecification: androidx.window.core.VerificationMode verificationMode
androidx.fragment.app.Fragment: int RESUMED
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object result
androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlinx.coroutines.flow.FlowCollector $collector
androidx.loader.R$attr: int fontWeight
kotlin.collections.builders.SerializedCollection: int tagList
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: kotlinx.coroutines.channels.BufferedChannel this$0
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext collectContext
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: boolean $followLinks
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: int label
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat mIcon
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontStyle
kotlin.UByteArray$Iterator: int index
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int rngState
androidx.core.view.ViewCompat$Api21Impl$1: android.view.View val$v
androidx.core.provider.CallbackWithHandler: android.os.Handler mCallbackHandler
androidx.core.view.GestureDetectorCompat: android.view.GestureDetector mDetector
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object result
kotlin.collections.ArrayDeque: java.lang.Object[] elementData
kotlin.jvm.internal.FloatCompanionObject: float MAX_VALUE
androidx.core.app.NotificationCompat: java.lang.String EXTRA_NOTIFICATION_TAG
androidx.customview.R$attr: int fontProviderQuery
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.core.app.NotificationCompat$Action: boolean mIsContextual
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue
androidx.viewpager.widget.PagerTitleStrip: android.widget.TextView mPrevText
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality SEGMENT_SEPARATOR
androidx.core.transition.TransitionKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onEnd
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol INTERRUPTED_RCV
androidx.window.embedding.ActivityRule: boolean alwaysExpand
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int INITIAL_CAPACITY
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1
androidx.fragment.app.DialogFragment: boolean mDismissed
androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ICON
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsAnimationCompat$Callback mCallback
android.support.v4.os.ResultReceiver: boolean mLocal
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
kotlin.io.ConstantsKt: int DEFAULT_BUFFER_SIZE
androidx.core.view.WindowInsetsControllerCompat: int BEHAVIOR_SHOW_BARS_BY_SWIPE
androidx.core.R$layout: int ime_base_split_test_activity
androidx.fragment.app.FragmentTransitionCompat21$4: androidx.fragment.app.FragmentTransitionCompat21 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
androidx.window.embedding.EmbeddingBackend$Companion: kotlin.jvm.functions.Function1 decorator
androidx.core.app.JobIntentService$CompatWorkItem: int mStartId
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: androidx.viewpager.widget.ViewPager this$0
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$ViewDelegate viewDelegate
androidx.annotation.Dimension: androidx.annotation.Dimension$Companion Companion
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
kotlinx.coroutines.flow.CallbackFlowBuilder: kotlin.jvm.functions.Function2 block
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
androidx.fragment.app.SpecialEffectsController$Operation: boolean isCanceled
androidx.lifecycle.LifecycleKt$eventFlow$1$1: androidx.lifecycle.LifecycleEventObserver $observer
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
androidx.fragment.app.FragmentTransaction: int TRANSIT_ENTER_MASK
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: kotlin.jvm.functions.Function3 $operation
androidx.core.util.PatternsCompat: java.util.regex.Pattern WEB_URL
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object L$0
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentFactory mFragmentFactory
androidx.core.view.DragStartHelper: android.view.View mView
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean mItalic
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.ranges.IntProgressionIterator: int step
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: kotlin.jvm.functions.Function2 $transform
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.BroadcastChannel _channel
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3 this$0
androidx.core.R$id: int accessibility_custom_action_28
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: kotlin.jvm.functions.Function2 $block
androidx.window.layout.adapter.sidecar.SidecarAdapter: androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion Companion
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onEnd
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MINOR
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_CHRONOMETER
kotlinx.coroutines.flow.SubscribedFlowCollector: kotlinx.coroutines.flow.FlowCollector collector
androidx.profileinstaller.ProfileInstaller: androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback EMPTY_DIAGNOSTICS
kotlin.collections.AbstractMap: java.util.Collection _values
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: int label
androidx.core.content.pm.ShortcutInfoCompat: int mExcludedSurfaces
androidx.customview.R$layout: int notification_template_part_time
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
kotlinx.coroutines.scheduling.LimitingDispatcher: int parallelism
androidx.core.app.NotificationCompat$CallStyle: android.app.PendingIntent mDeclineIntent
androidx.core.app.NotificationCompat$Action: boolean mAuthenticationRequired
kotlin.io.encoding.Base64: int mimeGroupsPerLine
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$3
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: java.util.concurrent.CompletableFuture $future
androidx.core.app.FrameMetricsAggregator: int INPUT_DURATION
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mLinkUri
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_MODE
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: android.app.PendingIntent mReadPendingIntent
kotlin.enums.EnumEntriesSerializationProxy: kotlin.enums.EnumEntriesSerializationProxy$Companion Companion
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] EMPTY_STRING_ARRAY
io.flutter.embedding.engine.systemchannels.LifecycleChannel: java.lang.String TAG
androidx.core.content.FileProvider: java.lang.String mAuthority
androidx.collection.ArraySet: int sBaseCacheSize
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_LOW
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CHANNEL_GROUP_ID
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE
androidx.lifecycle.Transformations$switchMap$1: kotlin.jvm.internal.Ref$ObjectRef $liveData
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: kotlin.jvm.functions.Function2 $action
androidx.viewpager.widget.PagerTabStrip: int mMinStripHeight
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.lang.String TAG
androidx.activity.BackEventCompat: int EDGE_RIGHT
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted$Companion $$INSTANCE
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object L$0
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
androidx.core.R$dimen: int notification_small_icon_size_as_large
androidx.lifecycle.LiveDataScopeImpl: kotlin.coroutines.CoroutineContext coroutineContext
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DART_ENTRYPOINT_ARGS
androidx.core.content.res.CamColor: float mM
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: java.lang.Object $element
androidx.loader.R$drawable: int notification_template_icon_low_bg
androidx.versionedparcelable.VersionedParcel: int EX_BAD_PARCELABLE
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
androidx.fragment.app.ListFragment: android.widget.AdapterView$OnItemClickListener mOnClickListener
androidx.core.widget.AutoScrollHelper: int DEFAULT_MAXIMUM_VELOCITY_DIPS
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
androidx.loader.R$drawable: int notification_tile_bg
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object result
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: io.flutter.view.TextureRegistry$ImageTextureEntry textureEntry
kotlin.jvm.internal.IntSpreadBuilder: int[] values
kotlinx.coroutines.stream.StreamFlow$collect$1: int label
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$1
androidx.fragment.app.Fragment$AnimationInfo: float mPostOnViewCreatedAlpha
androidx.fragment.app.FragmentManager: java.util.Map mResultListeners
androidx.core.content.res.ViewingConditions: float mZ
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: kotlin.jvm.functions.Function2 $predicate
androidx.lifecycle.Transformations$map$2: androidx.lifecycle.MediatorLiveData $result
androidx.collection.ArraySet: java.lang.Object[] OBJECT
androidx.window.embedding.SplitAttributes$LayoutDirection: java.lang.String description
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect val$epicenter
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlinx.coroutines.flow.FlowCollector $this_combineInternal
kotlinx.coroutines.flow.SharedFlowImpl: long minCollectorIndex
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_MALFORMED_QUERY
kotlinx.coroutines.JobSupport$Finishing: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _rootCause$FU
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_BLOCKING
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1: kotlin.sequences.Sequence $this_requireNoNulls
androidx.core.util.PatternsCompat: java.lang.String PUNYCODE_TLD
androidx.customview.R$styleable: int GradientColor_android_startY
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: kotlin.sequences.Sequence $this_asIterable$inlined
kotlin.jvm.internal.PackageReference: java.lang.Class jClass
kotlin.Triple: java.lang.Object first
androidx.core.widget.AutoScrollHelper: int DEFAULT_RAMP_DOWN_DURATION
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_DEFAULT
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: java.lang.Object value
kotlin.time.DurationKt: int NANOS_IN_MILLIS
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INFERRED
androidx.core.view.MotionEventCompat: int AXIS_GAS
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: byte[] $this_withIndex
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DRAG_DROP
androidx.window.embedding.SplitPairRule$Builder: boolean clearTop
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DEFAULT_KERNEL_BLOB
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequest val$request
androidx.customview.R$styleable: int FontFamilyFont_font
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: int label
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: java.lang.Object result
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult CONTINUE
androidx.core.view.MotionEventCompat: int AXIS_TILT
androidx.loader.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle mExtras
androidx.core.R$dimen: int notification_action_icon_size
kotlin.jvm.internal.TypeReference: int IS_NOTHING_TYPE
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
kotlin.Result: java.lang.Object value
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOW_CONTENT_CHANGED
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: androidx.fragment.app.SpecialEffectsController$Operation $operation
androidx.core.app.NotificationChannelCompat: boolean mBypassDnd
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.Callable val$callable
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1: kotlin.jvm.functions.Function1 $afterTextChanged
androidx.activity.OnBackPressedCallback: kotlin.jvm.functions.Function0 enabledChangedCallback
androidx.window.R$attr: int finishPrimaryWithPlaceholder
androidx.customview.R$styleable: int ColorStateListItem_lStar
androidx.fragment.app.FragmentManager$9: androidx.fragment.app.FragmentManager this$0
androidx.window.embedding.SplitPairRule$Builder: int minHeightDp
androidx.viewpager.widget.ViewPager: int mTouchSlop
kotlinx.coroutines.flow.SafeFlow: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper sequenceNumber$kotlinx$VolatileWrapper
androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModelProvider$Factory factory
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
androidx.core.provider.RequestExecutor$DefaultThreadFactory: int mPriority
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: java.lang.String cachedEngineId
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
androidx.loader.R$styleable: int FontFamily_fontProviderFetchStrategy
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$2
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER_TERMINATOR
androidx.fragment.app.BackStackRecordState: java.util.ArrayList mSharedElementTargetNames
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence sequence
kotlin.random.KotlinRandom: long serialVersionUID
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_END
kotlinx.coroutines.scheduling.WorkQueueKt: int BUFFER_CAPACITY_BASE
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String state
kotlin.UByteArray$Iterator: byte[] array
kotlin.jvm.internal.ByteCompanionObject: byte MAX_VALUE
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] VIEW_TYPES_REQUIRE_VIRTUAL_DISPLAY
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: kotlinx.coroutines.channels.BroadcastChannel $this_asFlow$inlined
androidx.activity.BackEventCompat: float progress
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_ERROR
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_NEVER
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: int label
androidx.core.view.ViewParentCompat: int[] sTempNestedScrollConsumed
kotlinx.coroutines.debug.internal.StackTraceFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame callerFrame
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: kotlin.jvm.functions.Function5 $transform$inlined
androidx.lifecycle.BlockRunner: kotlin.jvm.functions.Function0 onDone
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1 this$0
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: kotlin.jvm.functions.Function3 $operation
kotlinx.coroutines.flow.internal.ChannelFlow: int capacity
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: int fileIndex
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge
androidx.core.provider.FontsContractCompat: java.lang.String PARCEL_FONT_RESULTS
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object L$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_FOCUS
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlin.jvm.internal.Ref$ObjectRef $lastValue
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: int label
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onRepeat
androidx.core.content.UnusedAppRestrictionsConstants: int DISABLED
androidx.window.R$attr: int splitMinWidthDp
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: kotlinx.coroutines.channels.BufferedChannel$sendImpl$1 INSTANCE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
androidx.core.app.RemoteInput$Builder: java.util.Set mAllowedDataTypes
androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.Lifecycle lifecycle
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter INSTANCE
kotlin.io.encoding.DecodeInputStream: int byteBufferEndIndex
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
androidx.loader.R$drawable: int notification_bg_normal_pressed
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodIsActivityEmbeddedValid$1: androidx.window.embedding.SafeActivityEmbeddingComponentProvider this$0
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.ScribeChannel scribeChannel
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_DART_ENTRYPOINT
androidx.viewpager.R$attr: int fontProviderFetchTimeout
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
androidx.viewpager.R$styleable: int FontFamilyFont_fontStyle
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
kotlin.text.CharDirectionality: kotlin.Lazy directionalityMap$delegate
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: int generationNumber
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence mConfirmLabel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN
kotlin.random.XorWowRandom: kotlin.random.XorWowRandom$Companion Companion
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.flow.SharedFlowImpl: int bufferCapacity
androidx.customview.R$id: int async
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_SENDER
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean shouldAutomaticallyHandleOnBackPressed
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int HEAD_SHIFT
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person mPerson
androidx.core.text.PrecomputedTextCompat: java.lang.Object sLock
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReenterTransition
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: int label
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: boolean shouldRecreateSurfaceForLowMemory
androidx.core.view.WindowInsetsAnimationCompat$Impl: android.view.animation.Interpolator mInterpolator
kotlin.io.encoding.EncodeOutputStream: byte[] symbolBuffer
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource timeSource
androidx.core.app.NotificationCompat: int FLAG_FOREGROUND_SERVICE
androidx.core.R$dimen: int compat_button_padding_vertical_material
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map mViewModelStores
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
kotlinx.coroutines.flow.EmptyFlow: kotlinx.coroutines.flow.EmptyFlow INSTANCE
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mBackStackStateKeys
androidx.fragment.app.DialogFragment: int mBackStackId
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: kotlinx.coroutines.selects.SelectInstance select
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int shift
kotlinx.coroutines.flow.internal.NullSurrogateKt: kotlinx.coroutines.internal.Symbol DONE
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String EXTRA_WEARABLE_EXTENSIONS
androidx.fragment.app.strictmode.Violation: androidx.fragment.app.Fragment fragment
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray keys
androidx.core.app.NotificationManagerCompat$CancelTask: int id
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.String name
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object $fallback
androidx.window.reflection.WindowExtensionsConstants: java.lang.String WINDOW_EXTENSIONS_CLASS
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object result
androidx.customview.R$dimen: int compat_control_corner_material
androidx.loader.R$styleable: int GradientColor_android_centerY
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String BOOLEAN_PROPERTY_KEY
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS
kotlin.time.TimeSource$Companion: kotlin.time.TimeSource$Companion $$INSTANCE
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE
kotlin.io.LineReader: char[] chars
androidx.core.R$drawable: int notification_bg_low_normal
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_START_PAUSED
org.intellij.lang.annotations.PrintFormatPattern: java.lang.String WIDTH
io.flutter.plugin.common.MethodChannel: java.lang.String TAG
androidx.core.location.LocationManagerCompat$GpsStatusTransport: java.util.concurrent.Executor mExecutor
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlinx.coroutines.CoroutineScope $$this$launch
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String ISLAMIC_UMALQURA
androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext
androidx.core.app.AppLaunchChecker: java.lang.String KEY_STARTED_FROM_LAUNCHER
androidx.core.graphics.WeightTypefaceApi21: java.lang.Object sWeightCacheLock
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedData
io.flutter.embedding.android.KeyData: long logicalKey
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CoroutineId: long id
androidx.core.os.CancellationSignal: boolean mCancelInProgress
io.flutter.plugin.platform.PlatformViewsController: boolean synchronizeToNativeViewHierarchy
io.flutter.embedding.android.KeyboardMap$KeyPair: long logicalKey
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_withIndex$inlined
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.jvm.functions.Function3 $transform
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element element
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: int label
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory sInstance
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String ARG_ENDLESS_TRACE_BUFFER
kotlin.jvm.internal.ShortCompanionObject: short MAX_VALUE
androidx.core.location.LocationManagerCompat: java.lang.reflect.Method sGnssRequestBuilderBuildMethod
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: int label
androidx.window.embedding.ActivityFilter: androidx.window.core.ActivityComponentInfo activityComponentInfo
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
androidx.window.reflection.ReflectionUtils$validateImplementation$1$1: java.lang.Class $implementation
androidx.loader.content.ModernAsyncTask$4: int[] $SwitchMap$androidx$loader$content$ModernAsyncTask$Status
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
androidx.lifecycle.CoroutineLiveData$emitSource$1: androidx.lifecycle.CoroutineLiveData this$0
androidx.loader.R$dimen: int notification_main_column_padding_top
io.flutter.embedding.android.KeyboardMap$2: long serialVersionUID
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
androidx.loader.R$styleable: int[] ColorStateListItem
kotlin.jvm.internal.CharCompanionObject: int SIZE_BITS
androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren
androidx.viewpager.R$dimen: int notification_big_circle_margin
kotlinx.coroutines.flow.StateFlowImpl$collect$1: kotlinx.coroutines.flow.StateFlowImpl this$0
androidx.viewpager.widget.ViewPager: int DEFAULT_GUTTER_SIZE
androidx.profileinstaller.ProfileVerifier: java.lang.String PROFILE_INSTALLED_CACHE_FILE_NAME
androidx.core.view.PointerIconCompat: int TYPE_ALL_SCROLL
androidx.core.location.LocationManagerCompat$GnssListenersHolder: androidx.collection.SimpleArrayMap sGnssMeasurementListeners
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
kotlinx.coroutines.flow.ChannelAsFlow: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumed$FU
androidx.core.app.RemoteInput: int EDIT_CHOICES_BEFORE_SENDING_AUTO
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object $value
kotlin.KotlinVersion: kotlin.KotlinVersion$Companion Companion
androidx.core.app.NotificationCompat$Builder: androidx.core.graphics.drawable.IconCompat mLargeIcon
androidx.window.SafeWindowExtensionsProvider: java.lang.ClassLoader loader
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_DART_ENTRYPOINT_ARGS
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
androidx.customview.R$styleable: int[] ColorStateListItem
androidx.core.text.util.LinkifyCompat$LinkSpec: int end
androidx.viewpager.widget.ViewPager: boolean mInLayout
androidx.window.R$styleable: int SplitPairRule_clearTop
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol DONE_RCV
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImplKt: java.lang.String CREATED
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object result
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.String TEMPLATE_CLASS_NAME
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $transform$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_ACCESSIBILITY_FOCUS
androidx.fragment.app.DialogFragment$2: androidx.fragment.app.DialogFragment this$0
androidx.core.graphics.drawable.IconCompat: int TYPE_UNKNOWN
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_MAGNIFICATION_OVERLAY
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: int label
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.WeakHashMap mViewsContainingListeners
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState INACTIVE
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1: kotlin.jvm.functions.Function1 $onEnd
androidx.viewpager.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings: int[] $EnumSwitchMapping$0
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2$1: androidx.lifecycle.MediatorLiveData $this_addDisposableSource
kotlin.jvm.internal.ArrayIterator: int index
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function0 $this_asFlow$inlined
kotlin.jvm.internal.Ref$CharRef: char element
kotlin.collections.IndexingIterable: kotlin.jvm.functions.Function0 iteratorFactory
androidx.core.R$dimen: int notification_content_margin_start
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3: androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3 INSTANCE
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: int label
androidx.loader.content.Loader: boolean mReset
androidx.core.R$id: int accessibility_custom_action_10
androidx.lifecycle.Lifecycling: int REFLECTIVE_CALLBACK
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue localQueue
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object L$0
com.getkeepsafe.relinker.BuildConfig: boolean DEBUG
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] mParticipants
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: int encodedValue
androidx.annotation.Dimension$Companion: int DP
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: int label
kotlinx.coroutines.EventLoop_commonKt: long MAX_MS
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_LARGE_ICON
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TARGETED_BY_SCROLL
androidx.core.view.WindowInsetsCompat$Type: int CAPTION_BAR
kotlin.text.Typography: char ellipsis
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
androidx.core.view.VelocityTrackerFallback: long[] mEventTimes
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransition
androidx.versionedparcelable.VersionedParcel: int EX_PARCELABLE
androidx.core.location.LocationRequestCompat$Builder: long mMaxUpdateDelayMillis
androidx.core.app.NotificationCompat$Action$Builder: boolean mIsContextual
androidx.core.app.NotificationCompatJellybean: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlinx.coroutines.flow.Flow[] $flows
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object result
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: boolean visited
kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder root
androidx.window.area.WindowAreaControllerImpl: java.lang.String TAG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_RESULT_RECEIVER_KEY
androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE
kotlin.sequences.TransformingIndexedSequence: kotlin.sequences.Sequence sequence
io.flutter.plugin.editing.ScribePlugin: android.view.View mView
androidx.fragment.app.FragmentManager$SaveBackStackState: androidx.fragment.app.FragmentManager this$0
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10 this$0
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object L$0
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList exitingNames
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation: androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
androidx.core.graphics.PathSegment: float mStartFraction
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_SHOULD_ATTACH_ENGINE_TO_ACTIVITY
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object L$3
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.collection.ArrayMap lastInViews
androidx.core.text.util.FindAddress$ZipRange: int mException2
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_takeWhile$inlined
com.getkeepsafe.relinker.elf.Elf$DynamicStructure: int DT_STRTAB
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: java.lang.reflect.Constructor $constructor
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray loadingUnitIdToSharedLibraryNames
androidx.profileinstaller.ProfileInstaller: int DIAGNOSTIC_REF_PROFILE_DOES_NOT_EXIST
androidx.viewpager.R$id: int action_container
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: kotlinx.coroutines.debug.internal.StackTraceFrame $bottom
kotlin.reflect.KVariance: kotlin.reflect.KVariance INVARIANT
androidx.activity.result.IntentSenderRequest$Builder: android.content.IntentSender intentSender
com.getkeepsafe.relinker.elf.Elf$DynamicStructure: int DT_NEEDED
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_8
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: int label
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: androidx.lifecycle.Observer $observer
androidx.customview.R$id: int right_side
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: boolean handleDeeplinking
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 emitFun
androidx.window.embedding.EmbeddingAspectRatio: float value
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: kotlinx.coroutines.flow.Flow[] $flowArray$inlined
kotlin.io.path.PathTreeWalk$bfsIterator$1: kotlin.io.path.PathTreeWalk this$0
com.getkeepsafe.relinker.elf.Elf$Header: int shentsize
org.intellij.lang.annotations.PrintFormatPattern: java.lang.String FLAGS
kotlin.ranges.LongProgression: kotlin.ranges.LongProgression$Companion Companion
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FLAG_PREFETCH_SIBLINGS
androidx.core.content.res.CamUtils: float[][] CAM16RGB_TO_XYZ
androidx.profileinstaller.ProfileInstaller: int RESULT_BENCHMARK_OPERATION_SUCCESS
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AOT_VMSERVICE_SHARED_LIBRARY_NAME
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status PENDING
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object L$1
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
kotlinx.coroutines.selects.SelectKt: kotlin.jvm.functions.Function3 DUMMY_PROCESS_RESULT_FUNCTION
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mFullScreenIntent
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: kotlinx.coroutines.CompletableDeferred $result
kotlin.collections.MovingSubList: int fromIndex
androidx.customview.R$styleable: int FontFamilyFont_fontStyle
androidx.fragment.app.FragmentState: java.lang.String mWho
androidx.fragment.app.BackStackState: java.util.List mTransactions
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHSCREEN
io.flutter.embedding.android.KeyboardMap: io.flutter.embedding.android.KeyboardMap$PressingGoal[] pressingGoals
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_2
androidx.core.telephony.SubscriptionManagerCompat: java.lang.reflect.Method sGetSlotIndexMethod
kotlin.sequences.FlatteningSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object L$0
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
kotlin.text.Regex$splitToSequence$1: int label
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: android.util.DisplayMetrics displayMetrics
androidx.core.content.IntentSanitizer$Builder: boolean mAllowAnyComponent
kotlinx.coroutines.flow.DistinctFlowImpl: kotlin.jvm.functions.Function2 areEquivalent
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlinx.coroutines.channels.ReceiveChannel $this_flatMap
androidx.window.core.Version: int minor
kotlin.enums.EnumEntriesSerializationProxy: java.lang.Class c
androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key
androidx.core.location.LocationCompat: java.lang.String EXTRA_MSL_ALTITUDE
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String FREEZE_METHOD
kotlin.time.DurationUnit: kotlin.time.DurationUnit NANOSECONDS
androidx.loader.R$id: int time
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.ResizableAtomicArray workers
androidx.fragment.app.FragmentState: java.lang.String mTargetWho
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.stream.StreamFlow: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumed$FU
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$Companion Companion
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
androidx.core.app.GrammaticalInflectionManagerCompat: int GRAMMATICAL_GENDER_FEMININE
androidx.core.widget.NestedScrollView: int[] mScrollOffset
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object result
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$1: androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$1 INSTANCE
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat windowExtension
androidx.window.embedding.EmbeddingAspectRatio: androidx.window.embedding.EmbeddingAspectRatio ALWAYS_ALLOW
androidx.lifecycle.ProcessLifecycleOwner: long TIMEOUT_MS
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: java.util.concurrent.atomic.AtomicBoolean isRunning
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String LOG_TAG
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mMandatorySystemGestureInsets
androidx.core.location.LocationRequestCompat: int mMaxUpdates
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_SORT_KEY
androidx.core.R$id: int notification_background
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer: kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer INSTANCE
kotlin.ranges.ULongProgressionIterator: long step
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: int label
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: long[] $this_asIterable$inlined
kotlinx.coroutines.flow.SharingConfig: kotlin.coroutines.CoroutineContext context
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: kotlin.io.FilesKt__UtilsKt$copyRecursively$1 INSTANCE
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object L$0
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_TIMESTAMP
kotlinx.coroutines.channels.BufferedChannelKt: long BUFFER_END_UNLIMITED
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mHeadsUpContentView
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String HEBREW
androidx.lifecycle.LiveDataScopeImpl$emit$2: androidx.lifecycle.LiveDataScopeImpl this$0
androidx.core.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object L$0
androidx.core.content.res.CamColor: float mJ
kotlin.sequences.TransformingIndexedSequence: kotlin.jvm.functions.Function2 transformer
androidx.loader.R$style: int TextAppearance_Compat_Notification_Title
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU
androidx.core.text.util.LocalePreferences$TemperatureUnit: java.lang.String CELSIUS
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.util.HashSet mResources
androidx.viewpager.widget.ViewPager: int mChildWidthMeasureSpec
androidx.loader.content.Loader: boolean mProcessingChange
androidx.loader.R$dimen: int compat_notification_large_icon_max_width
androidx.profileinstaller.ProfileVersion: int MIN_SUPPORTED_SDK
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.res.AssetManager mAssetManager
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1: androidx.window.layout.SafeWindowLayoutComponentProvider this$0
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 onLeave
kotlinx.coroutines.channels.Channel: int CONFLATED
androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings: int[] $EnumSwitchMapping$0
kotlin.collections.builders.MapBuilderKeys: kotlin.collections.builders.MapBuilder backing
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.os.Handler sHandler
androidx.core.view.WindowInsetsAnimationCompat$Impl: int mTypeMask
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_BOTTOM
kotlin.ranges.UIntProgression: kotlin.ranges.UIntProgression$Companion Companion
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR
androidx.core.view.ContentInfoCompat: int SOURCE_DRAG_AND_DROP
androidx.customview.R$layout: int notification_template_custom_big
io.flutter.embedding.engine.systemchannels.LifecycleChannel$1: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$LifecycleChannel$AppLifecycleState
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
androidx.core.content.res.FontResourcesParserCompat: int NORMAL_WEIGHT
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
androidx.fragment.app.ListFragment: android.widget.TextView mStandardEmptyView
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1 INSTANCE
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: int index
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.core.provider.SelfDestructiveThread$1: androidx.core.provider.SelfDestructiveThread this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_DOWN
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener listener
androidx.core.util.SparseArrayKt$keyIterator$1: int index
androidx.core.app.Person$Builder: boolean mIsBot
io.flutter.view.FlutterRunArguments: java.lang.String libraryPath
kotlin.collections.builders.ListBuilder: int offset
androidx.core.view.InputDeviceCompat: int SOURCE_ANY
androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService mService
kotlin.collections.builders.MapBuilder: int[] presenceArray
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable
androidx.collection.CircularIntArray: int mHead
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: kotlin.jvm.internal.Ref$ObjectRef $result$inlined
kotlinx.coroutines.stream.StreamFlow$collect$1: kotlinx.coroutines.stream.StreamFlow this$0
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_ManyReady
androidx.loader.content.AsyncTaskLoader: java.lang.String TAG
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_INITIAL_ROUTE
androidx.customview.R$dimen: int compat_notification_large_icon_max_height
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
androidx.customview.R$attr: int alpha
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence mDisabledMessage
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: java.lang.String ACTION_SYSTEM_FALLBACK_PICK_IMAGES
kotlinx.coroutines.channels.BufferedChannelKt: long SENDERS_COUNTER_MASK
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object $expect$inlined
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: java.util.Map mActivityWindowLayoutInfo
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object L$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayCutouts
androidx.fragment.app.SpecialEffectsController: android.view.ViewGroup container
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: java.util.Map contextToListeners
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: char[] $this_asSequence$inlined
io.flutter.embedding.engine.dart.DartMessenger: java.lang.Object handlersLock
kotlinx.coroutines.CancellableContinuationImplKt: int RESUMED
androidx.window.WindowProperties: java.lang.String PROPERTY_COMPAT_ALLOW_RESIZEABLE_ACTIVITY_OVERRIDES
androidx.concurrent.futures.AbstractResolvableFuture: java.util.logging.Logger log
androidx.fragment.R$styleable: int[] FragmentContainerView
kotlin.reflect.TypeVariableImpl: kotlin.reflect.KTypeParameter typeParameter
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: androidx.activity.ComponentActivity this$0
androidx.lifecycle.LifecycleKt$eventFlow$1: int label
kotlin.ranges.IntProgressionIterator: boolean hasNext
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_SHOWS_USER_INTERFACE
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
androidx.fragment.app.FragmentStateManager: java.lang.String CHILD_FRAGMENT_MANAGER_KEY
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
androidx.core.app.NotificationCompatBuilder: androidx.core.app.NotificationCompat$Builder mBuilderCompat
androidx.core.widget.AutoScrollHelper: float DEFAULT_RELATIVE_VELOCITY
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: int label
androidx.core.view.MotionEventCompat: int AXIS_BRAKE
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.view.Surface surface
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: kotlinx.coroutines.debug.internal.ConcurrentWeakMap this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_runningReduce$inlined
androidx.core.R$id: int notification_main_column
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: int $n
kotlin.jvm.internal.ClassReference: java.util.Map simpleNames
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: kotlinx.coroutines.android.HandlerContext this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object result
androidx.lifecycle.Transformations$map$2: androidx.arch.core.util.Function $mapFunction
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat DST_OVER
androidx.core.content.res.ComplexColorCompat: android.content.res.ColorStateList mColorStateList
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
kotlin.sequences.DropSequence$iterator$1: int left
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_END
kotlin.io.path.PathRelativizer: java.nio.file.Path emptyPath
io.flutter.FlutterInjector$Builder$NamedThreadFactory: int threadId
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2: androidx.window.layout.WindowInfoTrackerImpl this$0
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.EmbeddingAdapter$VendorApiLevel2Impl api2Impl
androidx.core.R$styleable: int FontFamilyFont_fontWeight
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PEOPLE_LIST
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level[] $VALUES
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: int label
kotlinx.coroutines.internal.WeakMapCtorCache: kotlinx.coroutines.internal.WeakMapCtorCache INSTANCE
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.CharSequence mBigText
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$1
androidx.lifecycle.ViewModel: boolean mCleared
kotlin.jvm.internal.TypeParameterReference: kotlin.reflect.KVariance variance
androidx.window.core.ValidSpecification: java.lang.Object value
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State GONE
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlin.jvm.functions.Function3 $predicate
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: int label
androidx.core.content.ContextCompat$LegacyServiceMapHolder: java.util.HashMap SERVICES
io.flutter.embedding.android.FlutterView: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: java.lang.Object result
kotlin.sequences.SequencesKt___SequencesKt$minus$1: java.lang.Object $element
kotlin.ULong: long data
androidx.core.R$id: int accessibility_action_clickable_span
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Line2
androidx.window.embedding.EmbeddingAspectRatio: androidx.window.embedding.EmbeddingAspectRatio$Companion Companion
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_FLAGS_KEY
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager fragmentManager
androidx.core.text.util.FindAddress$ZipRange: int mLow
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.internal.Symbol REHASH
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
androidx.core.app.NotificationCompat$Action: int mSemanticAction
androidx.loader.content.ModernAsyncTask: java.util.concurrent.atomic.AtomicBoolean mTaskInvoked
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object $element
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
androidx.core.R$attr: int fontProviderFetchStrategy
androidx.window.layout.adapter.extensions.MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: int label
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: kotlin.jvm.functions.Function3 $operation
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object result
kotlinx.coroutines.sync.MutexImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater owner$FU
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: long id
androidx.savedstate.SavedStateRegistry: androidx.arch.core.internal.SafeIterableMap components
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String CONTENT_SURROUNDING_TEXT_KEY
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1: io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget this$0
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sViewAttachInfoField
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] $VALUES
kotlin.collections.State: kotlin.collections.State NotReady
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback extensionCallback
androidx.core.os.LocaleListPlatformWrapper: android.os.LocaleList mLocaleList
androidx.core.app.NotificationCompat$Builder: boolean mChronometerCountDown
androidx.core.content.pm.ShortcutInfoCompat$Builder: boolean mIsConversation
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.fragment.app.FragmentTransitionImpl transitionImpl
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList
androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decisionAndIndex$FU
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: java.lang.String EXTRA_ACTIVITY_OPTIONS_BUNDLE
io.flutter.embedding.engine.renderer.FlutterRenderer: java.lang.String TAG
kotlin.random.PlatformRandom: java.util.Random impl
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int CLOSED_SHIFT
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.String _state
androidx.core.widget.PopupWindowCompat: boolean sOverlapAnchorFieldAttempted
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String IMPELLER_BACKEND_META_DATA_KEY
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.TaskContext BlockingContext
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_combine$inlined
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
androidx.core.app.NotificationCompat$WearableExtender: int mContentIcon
androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
androidx.core.text.BidiFormatter$DirectionalityEstimator: int DIR_TYPE_CACHE_SIZE
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult ALREADY_SELECTED
androidx.core.util.PatternsCompat: java.lang.String STRICT_TLD
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.customview.R$attr: int fontStyle
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 INSTANCE
androidx.customview.R$dimen: int notification_right_icon_size
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget[] $VALUES
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LOCALE
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String EXTRA_SKIP_FILE_OPERATION_WRITE
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.jvm.functions.Function3 $transform
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1 this$0
kotlinx.coroutines.channels.BufferedChannelKt: int RESULT_SUSPEND_NO_WAITER
kotlinx.coroutines.scheduling.TasksKt: java.lang.String DEFAULT_SCHEDULER_NAME
androidx.core.graphics.WeightTypefaceApi21: java.lang.String TAG
androidx.window.embedding.SplitAttributesCalculatorParams: android.content.res.Configuration parentConfiguration
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: android.view.ViewGroup $container
io.flutter.embedding.android.FlutterFragment$2: io.flutter.embedding.android.FlutterFragment this$0
androidx.core.R$styleable: int[] Capability
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.Job job
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
io.flutter.embedding.android.KeyboardMap$KeyPair: long physicalKey
kotlinx.coroutines.android.HandlerContext: java.lang.String name
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int mId
androidx.core.view.VelocityTrackerFallback: float[] mMovements
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleRegistry registry
androidx.core.text.util.LocalePreferences$TemperatureUnit: java.lang.String DEFAULT
androidx.core.R$styleable: int GradientColor_android_endColor
kotlin.jvm.internal.LongCompanionObject: long MAX_VALUE
androidx.core.app.NotificationManagerCompat: android.app.NotificationManager mNotificationManager
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View$OnFocusChangeListener val$userFocusListener
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK
kotlin.coroutines.ContinuationInterceptor$Key: kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FIELD
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: int[] $this_asIterable$inlined
androidx.fragment.app.FragmentState: int mMaxLifecycleState
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
androidx.core.util.SparseIntArrayKt$keyIterator$1: android.util.SparseIntArray $this_keyIterator
kotlin.enums.EnumEntriesList: java.lang.Enum[] _entries
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory INSTANCE
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
androidx.core.view.ContentInfoCompat: int FLAG_CONVERT_TO_PLAIN_TEXT
androidx.core.app.NotificationCompat: int DEFAULT_LIGHTS
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
kotlinx.coroutines.scheduling.CoroutineScheduler: int TERMINATED
androidx.core.app.NotificationCompat: java.lang.String EXTRA_NOTIFICATION_ID
androidx.core.view.ViewKt$doOnAttach$1: android.view.View $this_doOnAttach
androidx.lifecycle.ComputableLiveData: java.lang.Runnable invalidationRunnable
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String GREGORIAN
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_AUTO
androidx.viewpager.R$drawable: int notification_bg_low_normal
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mActions
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3: java.util.stream.LongStream $this_asSequence$inlined
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint mPaint
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object L$1
androidx.core.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object L$1
androidx.core.view.WindowInsetsControllerCompat$Impl30$1: androidx.core.view.WindowInsetsAnimationControllerCompat mCompatAnimController
androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.animation.Interpolator HIDE_IME_INTERPOLATOR
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1 this$0
androidx.core.R$styleable: int Capability_queryPatterns
androidx.core.widget.AutoScrollHelper: int mActivationDelay
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_STRING1
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: kotlin.jvm.functions.Function4 $transform$inlined
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
androidx.loader.content.CursorLoader: androidx.core.os.CancellationSignal mCancellationSignal
androidx.window.embedding.ExtensionEmbeddingBackend: android.content.Context applicationContext
androidx.lifecycle.ProcessLifecycleOwner: int resumedCounter
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: int lastReportedSessionStatus
io.flutter.plugin.common.StandardMessageCodec: byte MAP
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
androidx.core.net.MailTo: java.lang.String SUBJECT
kotlin.jvm.internal.BooleanSpreadBuilder: boolean[] values
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mClickableSpanActionId
androidx.viewpager.widget.PagerTabStrip: int mTabAlpha
org.intellij.lang.annotations.Flow: java.lang.String THIS_SOURCE
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetEmbeddingRulesValid$1: androidx.window.embedding.SafeActivityEmbeddingComponentProvider this$0
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String packageName
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FLAG_PREFETCH_DESCENDANTS_DEPTH_FIRST
androidx.core.text.BidiFormatter: int DIR_LTR
androidx.core.view.MotionEventCompat: int AXIS_HAT_X
androidx.core.app.NotificationChannelCompat: java.lang.String mParentId
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_COMPILED_WITH_PROFILE_NON_MATCHING
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1: android.view.ViewGroup $container
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: androidx.window.area.WindowAreaPresentationSessionCallback $windowAreaPresentationSessionCallback
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat sInstance
androidx.loader.R$attr: int alpha
androidx.core.internal.view.SupportMenu: int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: kotlin.jvm.functions.Function0 $onBackInvoked
androidx.core.provider.FontRequest: java.lang.String mQuery
io.flutter.embedding.android.KeyData: java.lang.String character
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1: io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget this$0
kotlin.collections.AbstractList$SubList: kotlin.collections.AbstractList list
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.InlineList: java.lang.Object holder
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1: kotlin.jvm.functions.Function4 $onTextChanged
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
androidx.loader.R$drawable: int notification_bg_low_normal
androidx.lifecycle.LifecycleController: androidx.lifecycle.DispatchQueue dispatchQueue
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView this$0
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipData
androidx.window.area.WindowAreaCapability$Operation: androidx.window.area.WindowAreaCapability$Operation$Companion Companion
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentTabHost$TabInfo mLastTab
io.flutter.embedding.android.KeyEmbedderResponder: java.util.HashMap togglingGoals
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: java.lang.String DEFAULT
kotlin.jvm.internal.AdaptedFunctionReference: int arity
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mDeltaTime
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: androidx.core.view.WindowInsetsAnimationCompat val$anim
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: kotlinx.coroutines.flow.Flow[] $flows
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsPinned
androidx.loader.R$styleable: int GradientColor_android_endY
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED
io.flutter.plugin.common.StandardMessageCodec: byte DOUBLE_ARRAY
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_15
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPES_ALL_MASK
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String INSTALL_SHORTCUT_PERMISSION
androidx.viewpager.widget.PagerTitleStrip: int mScaledTextSpacing
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.graphics.drawable.IconCompat mPictureIcon
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: boolean handleDeeplinking
kotlinx.coroutines.DelayKt$awaitCancellation$1: java.lang.Object result
androidx.customview.R$id: int info
kotlinx.coroutines.future.ContinuationHandler: kotlin.coroutines.Continuation cont
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets[] mOverriddenInsets
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.internal.view.SupportMenu: int SUPPORTED_MODIFIERS_MASK
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_SUMMARY
androidx.core.widget.NestedScrollView: java.lang.String TAG
androidx.viewpager.widget.PagerTitleStrip: android.widget.TextView mNextText
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: int label
androidx.core.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.viewpager.R$styleable: int ColorStateListItem_android_lStar
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: kotlin.jvm.functions.Function1 $selector
kotlinx.coroutines.channels.BufferedChannel: kotlin.jvm.functions.Function3 onUndeliveredElementReceiveCancellationConstructor
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: boolean destroyEngineWithActivity
androidx.profileinstaller.ProfileInstaller: java.lang.String PROFILE_BASE_DIR
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.lifecycle.SavedStateHandle: java.util.Map regular
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getModuleMethod
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object L$2
androidx.viewpager.widget.PagerTabStrip: int INDICATOR_HEIGHT
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments
androidx.core.view.VelocityTrackerFallback: long RANGE_MS
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader$OnImageAvailableListener onImageAvailableListener
androidx.core.R$id: int accessibility_custom_action_1
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_DISCONNECTED
androidx.startup.AppInitializer: java.util.Map mInitialized
kotlin.collections.builders.SerializedCollection: int tag
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: java.util.Map consumerToToken
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.core.graphics.drawable.DrawableCompat: java.lang.String TAG
androidx.lifecycle.runtime.R$id: int view_tree_lifecycle_owner
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object L$1
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_TRANSPARENCY_MODE
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Class mType
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object L$0
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
kotlin.jvm.internal.ByteCompanionObject: kotlin.jvm.internal.ByteCompanionObject INSTANCE
androidx.profileinstaller.ProfileVersion: int MAX_SUPPORTED_SDK
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: kotlin.sequences.Sequence $this_runningReduceIndexed
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
androidx.window.reflection.WindowExtensionsConstants: java.lang.String ACTIVITY_EMBEDDING_COMPONENT_CLASS
androidx.core.app.NotificationCompat$Builder: int mPriority
androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus
androidx.core.util.LongSparseArrayKt$valueIterator$1: int index
androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.AbstractSavedStateViewModelFactory$Companion Companion
androidx.window.R$styleable: int SplitPairRule_tag
androidx.lifecycle.SavedStateHandleAttacher: androidx.lifecycle.SavedStateHandlesProvider provider
io.flutter.embedding.engine.FlutterEngine: java.lang.String TAG
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: kotlin.jvm.functions.Function0 $block
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_BACKWARD
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_EXPAND
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat CLEAR
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader
androidx.core.view.ContentInfoCompat$Compat31Impl: android.view.ContentInfo mWrapped
io.flutter.embedding.engine.FlutterEngineGroup$1: io.flutter.embedding.engine.FlutterEngine val$engineToCleanUpOnDestroy
androidx.window.area.WindowAreaCapability$Status: androidx.window.area.WindowAreaCapability$Status WINDOW_AREA_STATUS_UNSUPPORTED
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: android.os.Bundle mBundle
androidx.loader.R$drawable: int notification_icon_background
androidx.core.location.GpsStatusWrapper: android.location.GpsSatellite mCachedSatellite
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
kotlin.jvm.internal.FloatCompanionObject: float NEGATIVE_INFINITY
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: java.util.ArrayList $result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object L$1
kotlinx.coroutines.JobSupport$AwaitContinuation: kotlinx.coroutines.JobSupport job
androidx.core.util.AtomicFile: java.lang.String LOG_TAG
androidx.fragment.app.SpecialEffectsController$Operation: boolean isStarted
kotlin.jvm.internal.Reflection: java.lang.String REFLECTION_NOT_AVAILABLE
kotlin.io.encoding.EncodeOutputStream: kotlin.io.encoding.Base64 base64
kotlinx.coroutines.channels.Channel: int OPTIONAL_CHANNEL
androidx.core.content.res.ViewingConditions: float mAw
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String ACTION_BENCHMARK_OPERATION
androidx.core.view.OneShotPreDrawListener: android.view.View mView
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol NOT_IN_STACK
androidx.window.R$attr: int placeholderActivityName
androidx.startup.AppInitializer: java.lang.String SECTION_NAME
androidx.fragment.app.DialogFragment: java.lang.String SAVED_SHOWS_DIALOG
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: androidx.core.view.WindowInsetsAnimationCompat$Callback mCompat
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackJavaConsumerValid$1: androidx.window.embedding.SafeActivityEmbeddingComponentProvider this$0
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange$Companion Companion
androidx.core.app.NotificationCompat$CallStyle: int CALL_TYPE_ONGOING
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesNonTouch
androidx.core.R$id: int accessibility_custom_action_15
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: boolean DEBUG
io.flutter.embedding.engine.systemchannels.SettingsChannel: java.lang.String CHANNEL_NAME
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
kotlin.collections.builders.SerializedCollection: long serialVersionUID
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object L$1
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode STRICT
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
androidx.window.java.core.CallbackToFlowAdapter: java.util.concurrent.locks.ReentrantLock lock
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
androidx.window.R$attr: int splitMaxAspectRatioInLandscape
androidx.core.R$id: int accessibility_custom_action_23
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: double[] $this_withIndex
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object L$0
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String TAG
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object L$2
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: java.util.Comparator $this_thenByDescending
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
androidx.customview.R$id: int title
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.core.view.ViewKt$doOnPreDraw$1: android.view.View $this_doOnPreDraw
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_MEDIA
androidx.fragment.app.SpecialEffectsController$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow $this_onCompletion$inlined
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType AGGREGATION_COUNT
kotlinx.coroutines.AwaitKt$joinAll$3: java.lang.Object L$0
androidx.core.content.pm.ShortcutInfoCompat: int mRank
androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle mExtras
androidx.activity.SystemBarStyle$Companion$dark$1: androidx.activity.SystemBarStyle$Companion$dark$1 INSTANCE
androidx.core.content.FileProvider: java.util.HashMap sCache
androidx.core.view.InputDeviceCompat: int SOURCE_HDMI
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontWeight
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable adapterState
androidx.activity.result.PickVisualMediaRequest: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType mediaType
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String DISABLE_MERGED_PLATFORM_UI_THREAD_KEY
androidx.profileinstaller.ProfileInstaller: int RESULT_PARSE_EXCEPTION
kotlin.time.DurationUnit: kotlin.time.DurationUnit SECONDS
kotlinx.coroutines.ThreadState: kotlinx.coroutines.DisposableHandle cancelHandle
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE_INTEROP
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
androidx.customview.widget.ViewDragHelper: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: int label
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1 this$0
androidx.customview.widget.ExploreByTouchHelper: java.lang.String DEFAULT_CLASS_NAME
kotlinx.coroutines.AwaitAll: java.util.concurrent.atomic.AtomicIntegerFieldUpdater notCompletedCount$FU
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 INSTANCE
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: int label
androidx.window.area.utils.DeviceUtils: java.util.List deviceList
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
kotlin.ranges.IntProgression: int first
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object result
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object L$1
kotlin.ranges.LongProgression: long last
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$2
kotlin.collections.builders.SerializedCollection: java.util.Collection collection
kotlinx.coroutines.JobSupport$children$1: kotlinx.coroutines.JobSupport this$0
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
androidx.core.widget.AutoScrollHelper: int HORIZONTAL
androidx.loader.R$styleable: int GradientColorItem_android_offset
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CONTENT_ICON_GRAVITY
io.flutter.plugin.common.StandardMessageCodec: byte LONG
androidx.core.view.MotionEventCompat: int AXIS_LTRIGGER
androidx.core.graphics.PathParser: java.lang.String LOGTAG
androidx.fragment.app.FragmentTransaction: int OP_ATTACH
kotlin.text.MatcherMatchResult$groupValues$1: kotlin.text.MatcherMatchResult this$0
androidx.activity.OnBackPressedDispatcher: boolean hasEnabledCallbacks
androidx.window.R$styleable: int SplitPairRule_splitRatio
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat mRootWindowInsets
io.flutter.view.AccessibilityBridge: float DEFAULT_TRANSITION_ANIMATION_SCALE
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders
androidx.viewpager.widget.ViewPager: int mTopPageBounds
androidx.fragment.app.FragmentManager: boolean mBackStarted
androidx.core.app.NotificationCompat: int VISIBILITY_PUBLIC
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: java.lang.String TAG
androidx.core.transition.TransitionKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onCancel
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean mayHaveLocalTasks
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
androidx.core.location.LocationRequestCompat$Builder: long mIntervalMillis
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
androidx.window.R$id: int never
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol INTERRUPTED_SEND
io.flutter.plugin.editing.TextEditingDelta: int newSelectionStart
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback
kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$enterTransition
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_PAGES
androidx.customview.R$style: int TextAppearance_Compat_Notification_Time
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: kotlin.jvm.functions.Function1 $selector
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_ENABLED
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: int label
androidx.lifecycle.Transformations$switchMap$1: kotlin.jvm.functions.Function1 $transform
kotlin.sequences.FilteringSequence: kotlin.sequences.Sequence sequence
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: int unmatchedResume
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: androidx.lifecycle.LiveDataScopeImpl this$0
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: short[] $this_withIndex
androidx.core.view.WindowInsetsCompat$Impl20: boolean sVisibleRectReflectionFetched
androidx.lifecycle.BlockRunner: kotlinx.coroutines.Job runningJob
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 onCancellation
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
kotlin.jvm.internal.CollectionToArray: int MAX_SIZE
kotlin.ULong: kotlin.ULong$Companion Companion
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$Status mStatus
kotlin.io.FileSystemException: java.io.File file
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.LifecycleRegistry$Companion Companion
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Class mViewCommandArgumentClass
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.provider.RequestExecutor$ReplyRunnable this$0
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object L$0
kotlin.text.CharCategory: kotlin.text.CharCategory UPPERCASE_LETTER
io.flutter.plugin.common.StandardMessageCodec: byte INT
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
kotlin._Assertions: boolean ENABLED
kotlin.io.encoding.Base64: byte[] mimeLineSeparatorSymbols
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind UNKNOWN
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL
androidx.core.graphics.PaintCompat: java.lang.ThreadLocal sRectThreadLocal
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner
kotlin.sequences.TransformingSequence$iterator$1: kotlin.sequences.TransformingSequence this$0
kotlin.io.ByteStreamsKt$iterator$1: boolean nextPrepared
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat val$animationBounds
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.view.WindowInsetsCompat CONSUMED
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
androidx.core.app.NotificationCompat$BigPictureStyle: boolean mBigLargeIconSet
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE_EXTEND
androidx.core.R$styleable: int GradientColor_android_centerY
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol RESUMING_BY_EB
androidx.lifecycle.LiveData: boolean mDispatchingValue
androidx.core.os.HandlerCompat: java.lang.String TAG
kotlinx.coroutines.scheduling.WorkQueueKt: int MASK
androidx.core.app.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$1
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality LEFT_TO_RIGHT
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence deltaText
kotlinx.coroutines.flow.internal.ChannelFlowMerge: int concurrency
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object L$1
androidx.core.view.MotionEventCompat: int AXIS_RX
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_LEGACY
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: android.app.Activity $activity
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_MALFORMED_QUERY
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_DRAG_CANCELLED
kotlinx.coroutines.scheduling.WorkQueueKt: int STEAL_ANY
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.String mDataDirPath
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_FULL_SCREEN
kotlin.jvm.internal.ArrayIntIterator: int index
kotlin.text.Regex$Serialized: java.lang.String pattern
androidx.core.app.TaskStackBuilder: java.util.ArrayList mIntents
androidx.fragment.app.FragmentManager: androidx.fragment.app.BackStackRecord mTransitioningOp
kotlinx.coroutines.channels.BufferedChannelKt: int EXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_LOCATION_SHARING
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2: androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2 INSTANCE
androidx.window.core.ConsumerAdapter$createSubscription$2: java.lang.Object $obj
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] $VALUES
kotlinx.coroutines.flow.internal.ChannelFlow: kotlin.coroutines.CoroutineContext context
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
androidx.activity.FullyDrawnReporterKt$reportWhenComplete$1: int label
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
androidx.fragment.app.FragmentManager: int mCurState
kotlinx.coroutines.EventLoop: kotlin.collections.ArrayDeque unconfinedQueue
kotlinx.coroutines.CompletedExceptionally: int _handled
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: java.lang.String ACTION_INTENT_SENDER_REQUEST
androidx.core.view.HapticFeedbackConstantsCompat: int VIRTUAL_KEY
kotlinx.coroutines.scheduling.WorkQueueKt: int BUFFER_CAPACITY
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.view.Surface surface
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$1: androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$1 INSTANCE
kotlin.sequences.FilteringSequence: boolean sendWhen
androidx.collection.CircularArray: int mTail
androidx.window.embedding.EmbeddingAdapter: android.os.Binder INVALID_ACTIVITY_STACK_TOKEN
kotlin.collections.IndexedValue: int index
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback frameCallback
androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint dartEntrypoint
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: kotlin.jvm.functions.Function3 $operation
androidx.core.R$id: int edit_text_id
com.getkeepsafe.relinker.elf.Elf$ProgramHeader: int PT_DYNAMIC
androidx.core.widget.NestedScrollView: androidx.core.view.DifferentialMotionFlingController mDifferentialMotionFlingController
androidx.startup.StartupLogger: java.lang.String TAG
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1: androidx.window.layout.SafeWindowLayoutComponentProvider this$0
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object L$0
androidx.core.view.autofill.AutofillIdCompat: java.lang.Object mWrappedObj
kotlin.io.LineReader: int BUFFER_SIZE
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean mApplyGravity
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sGetWindowLayoutTypeMethod
androidx.core.view.MotionEventCompat: int AXIS_HAT_Y
androidx.window.area.WindowAreaCapability$Operation: androidx.window.area.WindowAreaCapability$Operation OPERATION_PRESENT_ON_AREA
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
kotlin.sequences.DropSequence: kotlin.sequences.Sequence sequence
androidx.window.R$id: int ltr
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: kotlinx.coroutines.sync.MutexImpl this$0
kotlin.collections.ReversedList: java.util.List delegate
androidx.fragment.app.FragmentTransaction: int mBreadCrumbTitleRes
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$DisplayListener listener
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: kotlin.jvm.functions.Function3 $onError
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges
androidx.viewpager.R$id: int right_side
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int arity
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_BACKGROUND
androidx.core.content.pm.ShortcutManagerCompat: int FLAG_MATCH_DYNAMIC
androidx.fragment.app.FragmentTransitionCompat21$5: androidx.fragment.app.FragmentTransitionCompat21 this$0
android.support.v4.os.IResultReceiver: java.lang.String DESCRIPTOR
androidx.window.embedding.SplitAttributes$Builder: androidx.window.embedding.SplitAttributes$LayoutDirection layoutDirection
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
androidx.core.view.DifferentialMotionFlingController: android.view.VelocityTracker mVelocityTracker
androidx.core.graphics.TypefaceCompatUtil: java.lang.String TAG
kotlin.text.SystemProperties: kotlin.text.SystemProperties INSTANCE
androidx.collection.LruCache: int putCount
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1 this$0
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol STATE_REG
androidx.profileinstaller.Encoding: int SIZEOF_BYTE
androidx.core.text.util.FindAddress: int MAX_LOCATION_NAME_DISTANCE
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String CONTENT_SELECTION_HEAD_KEY
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemStatusBarContrastEnforced
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: int mRowSpan
androidx.fragment.app.Fragment: int AWAITING_EXIT_EFFECTS
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.nio.file.Path $target
androidx.core.app.RemoteInput: int SOURCE_CHOICE
androidx.core.R$dimen: int notification_big_circle_margin
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState
androidx.core.app.NotificationManagerCompat$NotificationWithIdAndTag: int mId
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: android.content.ClipData mClip
kotlin.io.path.DirectoryEntriesReader: kotlin.io.path.PathNode directoryNode
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20: android.view.View mView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PASTE
androidx.profileinstaller.ProfileVerifier: java.lang.String TAG
kotlin.io.path.FileVisitorBuilderImpl: kotlin.jvm.functions.Function2 onPreVisitDirectory
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object result
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.core.R$styleable: int ColorStateListItem_lStar
androidx.core.app.Person: java.lang.String mUri
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: kotlin.sequences.SequencesKt___SequencesKt$flatMap$2 INSTANCE
io.flutter.embedding.android.AndroidTouchProcessor: java.util.Map ongoingPans
androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
io.flutter.plugin.common.FlutterException: java.lang.String code
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
androidx.viewpager.widget.PagerTitleStrip: float SIDE_ALPHA
androidx.core.content.res.CamColor: float mHue
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$Companion Companion
kotlin.jvm.internal.TypeParameterReference: java.lang.String name
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType METHODS
androidx.customview.R$id: int italic
androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue
androidx.window.R$attr: int tag
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: java.lang.Object result
kotlin.text.Typography: char amp
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
androidx.core.widget.AutoScrollHelper: float NO_MAX
androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: android.os.Handler mHandler
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: java.util.Comparator $comparator
androidx.fragment.app.FragmentTransaction: int mPopExitAnim
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object result
androidx.lifecycle.ViewModelLazy: kotlin.jvm.functions.Function0 factoryProducer
androidx.core.widget.AutoScrollHelper: boolean mNeedsReset
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object L$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: int label
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU
androidx.core.app.NotificationCompat$WearableExtender: int DEFAULT_GRAVITY
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: int label
androidx.core.provider.CallbackWithHandler: androidx.core.provider.FontsContractCompat$FontRequestCallback mCallback
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: java.lang.Object L$0
kotlinx.coroutines.flow.SharedFlowSlot: long index
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$1: androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$1 INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_TEXT
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object L$2
androidx.customview.widget.ViewDragHelper: float mMinVelocity
io.flutter.embedding.android.AndroidTouchProcessor$PointerChange: int PAN_ZOOM_UPDATE
kotlinx.coroutines.scheduling.WorkQueueKt: long NOTHING_TO_STEAL
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object result
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object L$0
kotlin.text.Regex$findAll$2: kotlin.text.Regex$findAll$2 INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_FOCUS
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: int label
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object disposableHandleOrSegment
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String ENABLE_VULKAN_VALIDATION_META_DATA_KEY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object L$0
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Field sOverlapAnchorField
androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.Observer mObserver
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String backgroundMode
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: java.util.ArrayDeque imageQueue
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets mStableInsets
androidx.core.net.MailTo: java.lang.String BCC
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: int label
androidx.viewpager.widget.PagerTitleStrip$PageListener: int mScrollState
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: java.lang.Object result
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: kotlin.jvm.internal.Ref$IntRef $i
androidx.core.widget.NestedScrollView: float DECELERATION_RATE
androidx.window.embedding.SplitPairRule: java.util.Set filters
androidx.core.app.NotificationCompat$Builder: boolean mColorized
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_NONE
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action FOCUS
androidx.core.app.NotificationChannelGroupCompat: java.lang.CharSequence mName
androidx.loader.R$styleable: int GradientColor_android_type
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: int label
androidx.window.embedding.SplitRule$FinishBehavior: androidx.window.embedding.SplitRule$FinishBehavior$Companion Companion
androidx.core.location.LocationManagerCompat$CancellableLocationListener: boolean mTriggered
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
kotlin.jvm.internal.CharCompanionObject: char MAX_HIGH_SURROGATE
androidx.core.view.VelocityTrackerCompat: java.util.Map sFallbackTrackers
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.ref.WeakReference _lastObservedFrame
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: boolean failed
kotlin.ranges.LongRange: kotlin.ranges.LongRange$Companion Companion
androidx.window.embedding.SplitPlaceholderRule$Builder: android.content.Intent placeholderIntent
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider contentProvider
androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature BOLD_TEXT
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1: androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1 $listener
kotlin.collections.builders.MapBuilder: java.lang.Object[] keysArray
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object L$0
androidx.fragment.app.SpecialEffectsController: java.util.List runningOperations
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object L$0
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPairPredicates$1: java.util.Set $splitPairFilters
androidx.concurrent.futures.AbstractResolvableFuture$Listener: java.util.concurrent.Executor executor
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol POISONED
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String EXTRA_BACKGROUND_MODE
androidx.viewpager.R$id: int async
kotlin.time.TimeSource$Monotonic: kotlin.time.TimeSource$Monotonic INSTANCE
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_AVOID_BACKGROUND_CLIPPING
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8 this$0
androidx.lifecycle.AndroidViewModel: android.app.Application application
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: kotlinx.coroutines.flow.Flow[] $flowArray
androidx.core.R$styleable: int GradientColor_android_tileMode
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: int maxItems
kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String AOT_SHARED_LIBRARY_NAME
androidx.core.R$style: int TextAppearance_Compat_Notification_Info
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: int label
androidx.profileinstaller.DeviceProfileWriter: java.io.File mCurProfile
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: int label
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
kotlinx.coroutines.DebugKt: java.lang.String STACKTRACE_RECOVERY_PROPERTY_NAME
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
io.flutter.Log: int ASSERT
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
androidx.customview.R$color: int notification_action_color_filter
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int[] $this_asList
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.nio.file.Path $target
kotlin.UIntArray$Iterator: int index
androidx.core.app.Person: java.lang.String ICON_KEY
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: int label
androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_PERSISTABLE_BUNDLE
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: java.lang.Comparable $key
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_OK
androidx.core.text.util.FindAddress: java.lang.String HOUSE_POST_DELIM
com.getkeepsafe.relinker.ApkLibraryInstaller: int MAX_TRIES
androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1: androidx.window.layout.SafeWindowLayoutComponentProvider this$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: kotlinx.coroutines.flow.Flow[] $flows$inlined
androidx.core.view.DifferentialMotionFlingController: android.content.Context mContext
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object nextItem
androidx.customview.R$layout: int notification_action_tombstone
androidx.loader.R$id: int blocking
kotlin.UInt: int data
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
kotlinx.coroutines.scheduling.CoroutineScheduler: long PARKED_VERSION_MASK
androidx.core.app.NotificationCompat: java.lang.String EXTRA_HIDDEN_CONVERSATION_TITLE
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: java.lang.Object result
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: kotlinx.coroutines.flow.SubscribedFlowCollector this$0
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _availablePermits$FU
androidx.core.app.NotificationCompat$Builder: boolean mUseChronometer
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object result
androidx.core.app.NotificationCompat$CallStyle: java.lang.Integer mAnswerButtonColor
kotlin.io.encoding.Base64: int mimeLineLength
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
androidx.profileinstaller.ProfileInstaller: androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback LOG_DIAGNOSTICS
androidx.core.app.Person: java.lang.String IS_IMPORTANT_KEY
androidx.core.os.HandlerKt$postAtTime$runnable$1: kotlin.jvm.functions.Function0 $action
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo
androidx.core.widget.NestedScrollView: int mLastMotionY
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: java.util.ArrayList mActivities
androidx.profileinstaller.DexProfileData: int numMethodIds
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future
kotlin.jvm.internal.Ref$ByteRef: byte element
androidx.loader.content.AsyncTaskLoader: boolean DEBUG
androidx.lifecycle.LiveData: java.lang.Object mData
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat SCREEN
androidx.customview.widget.ViewDragHelper: int EDGE_BOTTOM
androidx.viewpager.R$styleable: int FontFamily_fontProviderPackage
kotlin.random.XorWowRandom: int v
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUSED
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport job
kotlin.text.CharDirectionality$Companion$directionalityMap$2: kotlin.text.CharDirectionality$Companion$directionalityMap$2 INSTANCE
kotlin.text.Regex$findAll$1: int $startIndex
androidx.core.view.VelocityTrackerFallback: float mLastComputedVelocity
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
androidx.core.content.pm.ShortcutManagerCompat$1: android.content.IntentSender val$callback
androidx.annotation.Dimension: int PX
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: kotlinx.coroutines.channels.Channel $resultChannel
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_FLAG
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object L$0
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionsField
kotlinx.coroutines.ThreadState: java.lang.Thread targetThread
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: int label
androidx.window.area.RearDisplayPresentationSessionPresenterImpl: androidx.window.extensions.area.ExtensionWindowAreaPresentation presentation
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
androidx.lifecycle.Transformations$switchMap$1: androidx.lifecycle.MediatorLiveData $result
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
kotlin.coroutines.SafeContinuation: kotlin.coroutines.Continuation delegate
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange EMPTY
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
androidx.core.location.LocationManagerCompat$GnssStatusTransport: androidx.core.location.GnssStatusCompat$Callback mCallback
androidx.core.view.DragStartHelper: int mLastTouchY
kotlinx.coroutines.CancelFutureOnCancel: java.util.concurrent.Future future
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_DISMISSAL_ID
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object L$0
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: int label
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: android.app.Activity mActivity
kotlinx.coroutines.channels.Channel: int RENDEZVOUS
androidx.lifecycle.AbstractSavedStateViewModelFactory: java.lang.String TAG_SAVED_STATE_HANDLE_CONTROLLER
androidx.core.view.MotionEventCompat: int AXIS_VSCROLL
androidx.core.app.NotificationCompatJellybean: java.lang.String EXTRA_ALLOW_GENERATED_REPLIES
androidx.viewpager.R$drawable: int notification_bg_normal_pressed
androidx.viewpager.R$dimen: int notification_small_icon_size_as_large
androidx.core.R$id: int tag_transition_group
kotlin.ULong: long MIN_VALUE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: androidx.core.util.Consumer $consumer
io.flutter.embedding.android.AndroidTouchProcessor$PointerSignalKind: int SCROLL_INERTIA_CANCEL
androidx.core.graphics.TypefaceCompat: androidx.collection.LruCache sTypefaceCache
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: androidx.core.content.res.ResourcesCompat$FontCallback mFontCallback
kotlin.io.FileSystemException: java.io.File other
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: boolean isEventHandled
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlinx.coroutines.channels.ReceiveChannel $this_filterIndexed
androidx.fragment.app.ListFragment: android.widget.ListView mList
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object L$2
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mStrategy
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext coroutineContext
androidx.core.content.IntentSanitizer: java.util.Map mAllowedExtras
androidx.core.provider.SelfDestructiveThread: int MSG_INVOKE_RUNNABLE
kotlinx.coroutines.sync.MutexKt: int TRY_LOCK_FAILED
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.fragment.app.DialogFragment: boolean mCreatingDialog
androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect
io.flutter.plugin.editing.TextEditingDelta: int deltaStart
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
kotlin.sequences.SequencesKt__SequenceBuilderKt: int State_Ready
androidx.loader.R$styleable: int ColorStateListItem_android_alpha
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngineGroup group
androidx.core.app.AppLocalesStorageHelper: java.lang.String TAG
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 Mime
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion Companion
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1 this$0
androidx.lifecycle.Transformations$switchMap$2$onChanged$1: androidx.lifecycle.MediatorLiveData $result
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextDirectionHeuristic mTextDir
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: long $retries
androidx.core.app.NotificationCompat: java.lang.String EXTRA_ANSWER_COLOR
androidx.viewpager.widget.ViewPager: int mRestoredCurItem
androidx.profileinstaller.ProfileInstallReceiver: java.lang.String EXTRA_BENCHMARK_OPERATION
kotlinx.coroutines.DispatchedCoroutine: int _decision
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: android.graphics.Rect viewBounds
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlinx.coroutines.channels.Channel $resultChannel
androidx.viewpager.R$dimen: int notification_subtext_size
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
androidx.core.app.ShareCompat$IntentReader: android.content.Context mContext
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] $VALUES
androidx.viewpager.R$styleable: int ColorStateListItem_android_alpha
kotlin.collections.ArrayDeque: int size
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind[] $VALUES
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
io.flutter.embedding.android.KeyboardMap: java.util.HashMap keyCodeToLogical
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
androidx.core.R$id: int accessibility_custom_action_21
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature HIGH_CONTRAST
kotlinx.coroutines.flow.StartedWhileSubscribed: long stopTimeout
androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object result
androidx.core.view.HapticFeedbackConstantsCompat: int NO_HAPTICS
androidx.core.view.MenuHostHelper: java.util.concurrent.CopyOnWriteArrayList mMenuProviders
androidx.activity.result.IntentSenderRequest: androidx.activity.result.IntentSenderRequest$Companion Companion
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1 this$0
kotlin.ranges.UIntProgressionIterator: int next
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: long $delayMillis
androidx.core.R$id: int tag_unhandled_key_listeners
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SMALL_ICON
androidx.customview.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.app.NotificationChannelCompat: int DEFAULT_LIGHT_COLOR
kotlin.jvm.internal.CharCompanionObject: kotlin.jvm.internal.CharCompanionObject INSTANCE
androidx.lifecycle.LifecycleController: androidx.lifecycle.Lifecycle$State minState
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat XOR
androidx.core.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.viewpager.widget.PagerTabStrip: int mMinPaddingBottom
androidx.core.view.ViewCompat: int MEASURED_STATE_TOO_SMALL
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mBatchTextEditingDeltas
androidx.viewpager.widget.ViewPager: int mGutterSize
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1 this$0
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: java.util.Comparator $this_thenComparator
androidx.loader.content.Loader: android.content.Context mContext
androidx.fragment.app.SpecialEffectsController$Effect: boolean isSeekingSupported
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: java.lang.String DEFAULT_KEY
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long TAIL_MASK
androidx.window.embedding.SplitRule: androidx.window.embedding.EmbeddingAspectRatio SPLIT_MAX_ASPECT_RATIO_LANDSCAPE_DEFAULT
androidx.loader.R$styleable: int[] FontFamily
kotlin.io.encoding.DecodeInputStream: java.io.InputStream input
kotlin.text.Typography: char euro
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
io.flutter.embedding.android.FlutterActivity$1: io.flutter.embedding.android.FlutterActivity this$0
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: java.lang.Object $cnt
androidx.core.content.pm.ShortcutXmlParser: java.util.ArrayList sShortcutIds
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.lang.String TAG
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: kotlin.jvm.functions.Function3 $action$inlined
androidx.lifecycle.LiveData: int START_VERSION
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String mBridgeTag
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol CHANNEL_CLOSED
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: int I$0
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: int label
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: kotlin.jvm.functions.Function1 $this_asFlow$inlined
androidx.core.graphics.TypefaceCompat: androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl
androidx.core.content.pm.ShortcutInfoCompat: long mLastChangedTimestamp
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
androidx.viewpager.R$dimen: int notification_media_narrow_margin
androidx.core.os.LocaleListCompatWrapper: java.util.Locale LOCALE_EN_XA
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
kotlin.jvm.internal.ByteCompanionObject: int SIZE_BYTES
com.getkeepsafe.relinker.elf.Elf$ProgramHeader: int PT_LOAD
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
androidx.versionedparcelable.VersionedParcel: int TYPE_SERIALIZABLE
androidx.collection.ArraySet: int BASE_SIZE
androidx.core.R$dimen: int notification_top_pad
com.getkeepsafe.relinker.ReLinkerInstance: java.util.Set loadedLibraries
kotlin.jvm.internal.DoubleCompanionObject: double MIN_VALUE
androidx.core.view.ViewConfigurationCompat: int NO_FLING_MAX_VELOCITY
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
io.flutter.view.AccessibilityBridge$StringAttribute: io.flutter.view.AccessibilityBridge$StringAttributeType type
kotlin.collections.SlidingWindowKt$windowedIterator$1: int I$0
kotlin.Triple: java.lang.Object third
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: kotlin.jvm.functions.Function2 $transform$inlined
androidx.profileinstaller.ProfileInstaller: int RESULT_IO_EXCEPTION
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object L$1
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 transformer
androidx.core.content.res.TypedArrayUtils: java.lang.String NAMESPACE
androidx.core.app.NotificationCompat$TvExtender: java.lang.String EXTRA_TV_EXTENDER
androidx.profileinstaller.ProfileVerifier$Cache: int mResultCode
kotlin.text.Typography: char degree
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConsumedFieldFetched
androidx.activity.result.ActivityResult: android.content.Intent mData
androidx.core.app.FrameMetricsAggregator: int TOTAL_INDEX
kotlin.sequences.DropWhileSequence$iterator$1: int dropState
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPersonList
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.flow.StateFlow $$delegate_0
androidx.core.content.res.CamUtils: float[][] XYZ_TO_CAM16RGB
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean debugForceSurfaceProducerGlTextures
androidx.customview.R$styleable: int ColorStateListItem_android_color
androidx.core.app.GrammaticalInflectionManagerCompat: int GRAMMATICAL_GENDER_NEUTRAL
androidx.savedstate.SavedStateRegistry: boolean attached
androidx.window.R$styleable: int SplitPlaceholderRule_splitMaxAspectRatioInLandscape
androidx.fragment.app.ListFragment: android.view.View mProgressContainer
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object L$1
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object L$1
androidx.core.app.NotificationCompat: int COLOR_DEFAULT
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_END
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object L$1
kotlin.time.DurationKt: long MAX_MILLIS
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2 this$0
androidx.activity.result.ActivityResultRegistry$2: java.lang.String val$key
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState RESUMED
androidx.loader.R$styleable: int GradientColor_android_gradientRadius
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object $receiver$inlined
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object result
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
io.flutter.Build$API_LEVELS: int FLUTTER_MIN
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_XSMALL
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: int label
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbTitleText
kotlin.text.Typography: char quote
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
androidx.core.view.ViewCompat: int IMPORTANT_FOR_CONTENT_CAPTURE_YES
kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec codec
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat mInsets
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30: android.view.View mView
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: java.lang.CharSequence $this_asIterable$inlined
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: int I$0
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Constructor sConstructor
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: long queuedTime
kotlin.LazyKt__LazyJVMKt$WhenMappings: int[] $EnumSwitchMapping$0
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: java.util.List initializers
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: int I$0
androidx.lifecycle.ProcessLifecycleOwner: boolean stopSent
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int MOUSE
androidx.fragment.app.SpecialEffectsController$Operation: boolean isSeeking
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
androidx.core.app.NotificationCompat$CallStyle: androidx.core.graphics.drawable.IconCompat mVerificationIcon
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String DEFAULT_INITIAL_ROUTE
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind EXTENSION_RECEIVER
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object L$0
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_UNREAD
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: kotlinx.coroutines.channels.BroadcastChannelImpl this$0
androidx.core.app.NotificationCompat$CallStyle: android.app.PendingIntent mAnswerIntent
androidx.core.widget.NestedScrollView: boolean mFillViewport
androidx.fragment.app.DialogFragment: java.lang.String SAVED_STYLE
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int I$0
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.RenderMode renderMode
io.flutter.embedding.android.FlutterActivityLaunchConfigs: java.lang.String INITIAL_ROUTE_META_DATA_KEY
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.view.TextureRegistry$OnFrameConsumedListener frameConsumedListener
androidx.viewpager.R$layout: int notification_action
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: kotlin.jvm.internal.Ref$BooleanRef $removed
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$ActivityInitializationListener processListener
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: java.util.List $other
androidx.viewpager.widget.ViewPager$3: androidx.viewpager.widget.ViewPager this$0
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: int label
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: int label
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: int label
kotlin.collections.RingBuffer: int startIndex
io.flutter.plugin.platform.SingleViewWindowManager: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowRootView
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
kotlinx.coroutines.sync.SemaphoreImpl: java.util.concurrent.atomic.AtomicLongFieldUpdater deqIdx$FU
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: int label
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String mPackageName
androidx.activity.ComponentActivity$1$1: int val$requestCode
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int RESULT_CODE_ERROR_CACHE_FILE_EXISTS_BUT_CANNOT_BE_READ
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object L$0
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_RETAIN_INSTANCE_USAGE
androidx.core.content.IntentSanitizer$Builder: boolean mAllowClipDataText
io.flutter.view.AccessibilityBridge: int previousRouteId
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: java.lang.Object result
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel mNonConfig
androidx.core.widget.NestedScrollView: boolean mIsBeingDragged
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object L$1
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String FRAMEWORK_RESTORATION_BUNDLE_KEY
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 iterator
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_DELETE
kotlin.time.MonotonicTimeSource: long zero
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object L$0
androidx.core.view.HapticFeedbackConstantsCompat: int CONFIRM
androidx.profileinstaller.ProfileVerifier$Cache: long mPackageLastUpdateTime
kotlinx.coroutines.JobSupport$children$1: java.lang.Object L$0
kotlin.collections.MutableMapWithDefaultImpl: java.util.Map map
kotlinx.coroutines.EventLoop: boolean shared
io.flutter.embedding.android.FlutterFragment: java.lang.String ARG_FLUTTERVIEW_RENDER_MODE
androidx.core.app.NotificationCompat$Style: boolean mSummaryTextSet
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate mAllowedClipDataUri
androidx.loader.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.view.ViewConfigurationCompat: int RESOURCE_ID_NOT_SUPPORTED
androidx.window.embedding.SplitController$splitInfoList$1$2: androidx.core.util.Consumer $listener
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: android.content.pm.PackageManager mPackageManager
androidx.window.area.WindowAreaInfo$Type: androidx.window.area.WindowAreaInfo$Type TYPE_REAR_FACING
androidx.profileinstaller.ProfileVersion: byte[] V010_P
androidx.core.text.util.LocalePreferences$CalendarType: java.lang.String INDIAN
kotlinx.coroutines.internal.ExceptionsConstructorKt: int throwableFields
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler scribeMethodHandler
androidx.profileinstaller.ProfileInstaller: int RESULT_DESIRED_FORMAT_UNSUPPORTED
kotlin.jvm.internal.CharCompanionObject: char MIN_HIGH_SURROGATE
androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat
kotlinx.coroutines.selects.SelectClause1Impl: java.lang.Object clauseObject
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: int I$1
androidx.profileinstaller.ProfileInstaller: int DIAGNOSTIC_PROFILE_IS_COMPRESSED
androidx.core.R$style: int TextAppearance_Compat_Notification
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object L$1
androidx.lifecycle.ReportFragment: java.lang.String REPORT_FRAGMENT_TAG
androidx.core.internal.view.SupportMenu: int USER_SHIFT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FLAG_PREFETCH_DESCENDANTS_HYBRID
androidx.viewpager.widget.PagerTabStrip: float mInitialMotionY
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray buffer
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.content.Intent mIntent
kotlin.text.DelimitedRangesSequence$iterator$1: int currentStartIndex
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String mId
kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: kotlinx.coroutines.flow.FlowCollector $collector
kotlin.collections.AbstractMap$keys$1$iterator$1: java.util.Iterator $entryIterator
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
androidx.core.graphics.TypefaceCompatApi21Impl: boolean sHasInitBeenCalled
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: int label
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU
androidx.customview.R$styleable: int[] FontFamily
androidx.viewpager.widget.ViewPager: int MIN_FLING_VELOCITY
androidx.customview.R$style: int TextAppearance_Compat_Notification_Info
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM
androidx.fragment.app.Fragment$10: java.util.concurrent.atomic.AtomicReference val$ref
kotlin.collections.IndexingIterator: java.util.Iterator iterator
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
androidx.lifecycle.EmittedSource$dispose$1: androidx.lifecycle.EmittedSource this$0
kotlin.text.MatchGroup: kotlin.ranges.IntRange range
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: kotlinx.coroutines.flow.Flow[] $flows$inlined
androidx.core.R$string: int call_notification_decline_action
androidx.customview.widget.ViewDragHelper: int mTrackingEdges
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
kotlin.jvm.internal.ShortCompanionObject: int SIZE_BITS
kotlin.io.LineReader: kotlin.io.LineReader INSTANCE
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: kotlin.jvm.functions.Function4 $transform$inlined
androidx.core.view.WindowInsetsAnimationCompat: java.lang.String TAG
androidx.viewpager.widget.ViewPager$4: android.graphics.Rect mTempRect
io.flutter.Build$API_LEVELS: int API_34
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol SUSPEND_NO_WAITER
androidx.collection.ArraySet: androidx.collection.MapCollections mCollections
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat[] $VALUES
androidx.fragment.app.Fragment$9: androidx.activity.result.contract.ActivityResultContract val$contract
androidx.lifecycle.DispatchQueue: boolean isDraining
androidx.viewpager.widget.ViewPager$SavedState: int position
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray autofillConfiguration
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: java.util.List mRORunningAnimations
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.EmbeddingAspectRatio maxAspectRatioInLandscape
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler
androidx.loader.R$id: int async
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsLongLived
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
kotlinx.coroutines.InvokeOnCancelling: int _invoked
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: kotlin.jvm.functions.Function2 $transform$inlined
androidx.window.embedding.SplitAttributesCalculatorParams: androidx.window.embedding.SplitAttributes defaultSplitAttributes
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mOps
androidx.loader.R$id: int title
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
androidx.core.app.NotificationManagerCompat: int SIDE_CHANNEL_RETRY_MAX_COUNT
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.PendingIntent mPendingIntent
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String FONT_FAMILY_CLASS
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlin.jvm.functions.Function7 $transform$inlined
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1 INSTANCE
androidx.core.location.GnssStatusCompat: int CONSTELLATION_BEIDOU
androidx.customview.R$styleable: int FontFamilyFont_ttcIndex
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
androidx.startup.AppInitializer: androidx.startup.AppInitializer sInstance
io.flutter.view.AccessibilityBridge: boolean isReleased
androidx.core.view.HapticFeedbackConstantsCompat: int CLOCK_TICK
kotlin.sequences.ConstrainedOnceSequence: java.util.concurrent.atomic.AtomicReference sequenceRef
androidx.customview.R$drawable: int notify_panel_notification_icon_bg
androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CUT
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder mRemote
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$enteringViews
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlinx.coroutines.flow.Flow $flow
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlin.jvm.functions.Function2 $selector
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object L$0
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params mParams
androidx.core.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices
androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE
androidx.loader.R$layout: int notification_template_part_time
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.Delay $$delegate_0
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback val$callback
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2 this$0
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: int label
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget FILE
androidx.fragment.app.SpecialEffectsController$Operation: boolean isComplete
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.core.content.IntentSanitizer: boolean mAllowSelector
io.flutter.plugin.editing.SpellCheckPlugin: java.lang.String SUGGESTIONS_KEY
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object L$3
androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount
kotlin.math.MathKt: double E
androidx.loader.content.ModernAsyncTask: int MESSAGE_POST_RESULT
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: kotlin.jvm.internal.Ref$ObjectRef $accumulator
kotlin.jvm.internal.ArrayIterator: java.lang.Object[] array
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
androidx.core.view.HapticFeedbackConstantsCompat: int SEGMENT_TICK
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object result
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _size$FU
kotlin.collections.AbstractCollection$toString$1: kotlin.collections.AbstractCollection this$0
androidx.lifecycle.EmittedSource: androidx.lifecycle.MediatorLiveData mediator
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion Companion
androidx.core.R$drawable: int notification_bg_low
androidx.lifecycle.SavedStateViewModelFactory: androidx.savedstate.SavedStateRegistry savedStateRegistry
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_HEADING
kotlinx.coroutines.selects.SelectClause2Impl: java.lang.Object clauseObject
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: int label
kotlinx.coroutines.CancellableContinuationImplKt: int UNDECIDED
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object L$1
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
androidx.fragment.app.Fragment: boolean mFromLayout
androidx.window.core.Bounds: int right
kotlinx.coroutines.RunnableKt$Runnable$1: kotlin.jvm.functions.Function0 $block
androidx.core.util.TimeUtils: int SECONDS_PER_HOUR
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
androidx.core.graphics.drawable.WrappedDrawableState: int mChangingConfigurations
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastAndroidState
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object L$0
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_TITLE
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality EUROPEAN_NUMBER
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
androidx.core.R$id: int notification_main_column_container
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: kotlin.io.FileTreeWalk$FileTreeWalkIterator this$0
androidx.viewpager.R$color: int notification_icon_bg_color
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.CharSequence $this_groupingBy
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1 INSTANCE
kotlin.text.Regex$splitToSequence$1: java.lang.Object L$0
androidx.core.provider.SelfDestructiveThread$2: android.os.Handler val$calleeHandler
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object L$1
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: int label
androidx.core.util.PatternsCompat: java.lang.String STRICT_HOST_NAME
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: int label
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation: androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED
androidx.core.view.ViewKt$doOnNextLayout$1: kotlin.jvm.functions.Function1 $action
io.flutter.plugin.platform.PlatformViewWrapper$1: android.view.View$OnFocusChangeListener val$userFocusListener
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object $initialValue
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object L$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
androidx.core.app.AppLocalesStorageHelper: java.lang.String APPLICATION_LOCALES_RECORD_FILE
androidx.loader.R$styleable: int FontFamilyFont_android_fontVariationSettings
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: java.lang.String initialRoute
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: java.lang.String METHOD_PROCESS_TEXT_ACTION
kotlin.jvm.internal.IntCompanionObject: int SIZE_BYTES
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav
androidx.lifecycle.ViewModelLazy: kotlin.reflect.KClass viewModelClass
androidx.loader.R$id: int notification_main_column_container
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
androidx.core.view.ViewGroupKt$iterator$1: android.view.ViewGroup $this_iterator
kotlin.text.MatchResult$Destructured: kotlin.text.MatchResult match
androidx.core.view.WindowInsetsAnimationCompat$Callback: int mDispatchMode
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] $VALUES
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt: kotlin.coroutines.Continuation[] EMPTY_RESUMES
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilderKeys keysView
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlinx.coroutines.flow.Flow $this_transform
androidx.core.app.NotificationCompat$TvExtender: java.lang.String TAG
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1: androidx.fragment.app.SpecialEffectsController$Operation $operation
androidx.core.app.FrameMetricsAggregator: int SYNC_DURATION
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object result
kotlin.collections.builders.MapBuilder: int TOMBSTONE
androidx.loader.content.ModernAsyncTask$AsyncTaskResult: androidx.loader.content.ModernAsyncTask mTask
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function3 processResFunc
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel channel
io.flutter.embedding.android.KeyEmbedderResponder: java.util.HashMap pressingRecords
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowReturnTransitionOverlap
androidx.core.view.VelocityTrackerFallback: int mDataPointsBufferSize
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] generatedAdapters
androidx.versionedparcelable.VersionedParcelStream: int mFieldId
androidx.profileinstaller.Encoding: int UINT_8_SIZE
androidx.loader.R$styleable: int FontFamilyFont_android_fontWeight
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol BROKEN
io.flutter.embedding.android.AndroidTouchProcessor$PointerDeviceKind: int UNKNOWN
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: int replyId
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: int label
kotlin.collections.AbstractList$ListIteratorImpl: kotlin.collections.AbstractList this$0
kotlinx.coroutines.internal.LimitedDispatcher$Worker: java.lang.Runnable currentTask
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: kotlin.jvm.functions.Function2 $predicate
androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
androidx.window.embedding.SplitController$SplitSupportStatus: androidx.window.embedding.SplitController$SplitSupportStatus SPLIT_ERROR_PROPERTY_NOT_DECLARED
androidx.customview.R$id: int blocking
androidx.viewpager.R$attr: int alpha
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: kotlin.jvm.functions.Function1 $keySelector
androidx.core.animation.AnimatorKt$addListener$listener$1: kotlin.jvm.functions.Function1 $onCancel
kotlinx.coroutines.debug.internal.AgentInstallationType: boolean isInstalledStatically
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: int label
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration currentConfiguration
androidx.core.text.util.FindAddress$ZipRange: int mException1
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: kotlinx.coroutines.flow.StartedLazily$command$1$1 this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat mHost
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1: kotlin.jvm.functions.Function3 $action
androidx.fragment.app.FragmentTransaction: int mTransition
androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: kotlin.ranges.LongRange $this_asFlow$inlined
androidx.collection.ArraySet: boolean equals(java.lang.Object)
androidx.core.net.MailTo: java.lang.String getBcc()
kotlin.io.ReadAfterEOFException: ReadAfterEOFException(java.lang.String)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: LockFreeTaskQueueCore$Placeholder(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(long,java.math.MathContext)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI)
kotlin.internal.RequireKotlin: kotlin.DeprecationLevel level()
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: void onBackProgressed(android.window.BackEvent)
androidx.lifecycle.ComputableLiveData: void getInvalidationRunnable$lifecycle_livedata_release$annotations()
androidx.core.graphics.PointKt: int component2(android.graphics.Point)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.flow.MutableSharedFlow: void resetReplayCache()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: PlatformChannel$SystemUiMode(java.lang.String,int,java.lang.String)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.ULong: long plus-WZ4Q5Ns(long,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
kotlin.collections.AbstractMutableMap: java.util.Set getEntries()
kotlin.collections.ArraysKt___ArraysKt: boolean none(boolean[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt singleOrNull--ajY-9A(int[])
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream)
kotlin.collections.ArraysKt___ArraysKt: float single(float[],kotlin.jvm.functions.Function1)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1: CallbackToFutureAdapter$SafeFuture$1(androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: java.lang.String getResultKey(android.app.RemoteInput)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
kotlinx.coroutines.flow.StateFlowImpl: void resetReplayCache()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.internal.PlatformImplementations$ReflectThrowable: PlatformImplementations$ReflectThrowable()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sliceArray-ojwP5H8(short[],java.util.Collection)
androidx.core.location.LocationManagerCompat$Api24Impl: void unregisterGnssMeasurementsCallback(android.location.LocationManager,android.location.GnssMeasurementsEvent$Callback)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder initialRoute(java.lang.String)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext$Key)
androidx.window.embedding.MatcherUtils: void validateComponentName$window_release(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $values()
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: AbstractSharedFlowSlot()
androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData(kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1: ViewKt$doOnLayout$$inlined$doOnNextLayout$1(kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-rL5Bavg(short[])
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List dumpCoroutinesInfo()
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
kotlin.math.MathKt__MathJVMKt: float sign(float)
kotlin.reflect.ParameterizedTypeImpl: java.lang.String getTypeName()
kotlin.jvm.internal.LongCompanionObject: LongCompanionObject()
androidx.core.location.LocationManagerCompat$GpsStatusTransport: void lambda$onGpsStatusChanged$3(java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxWithOrNull(java.lang.Iterable,java.util.Comparator)
androidx.tracing.Trace: java.lang.String truncatedTraceSectionLabel(java.lang.String)
androidx.core.widget.NestedScrollView$SavedState$1: NestedScrollView$SavedState$1()
io.flutter.plugin.platform.PlatformViewWrapper: void onDescendantInvalidated(android.view.View,android.view.View)
androidx.fragment.app.FragmentAnim: androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean)
androidx.core.util.LongSparseArrayKt$keyIterator$1: long nextLong()
kotlin.collections.ArraysKt___ArraysKt: double minByOrThrow(double[],kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult$groups$1$iterator$1: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
kotlinx.coroutines.ThreadState: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
androidx.versionedparcelable.VersionedParcel: void writeSerializable(java.io.Serializable,int)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.flow.ThrowingCollector: ThrowingCollector(java.lang.Throwable)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.window.embedding.EmbeddingAdapter: boolean translateSplitPairRule$lambda$6(androidx.window.embedding.SplitPairRule,android.content.Context,android.view.WindowMetrics)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.OnTimeout: OnTimeout(long)
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: java.lang.Object[] newArray(int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short maxWith(short[],java.util.Comparator)
androidx.core.widget.ScrollerCompat: int getFinalY()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean remove(java.util.Collection,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface,boolean)
kotlin.collections.EmptyList: java.lang.Void get(int)
androidx.core.graphics.MatrixKt: android.graphics.Matrix rotationMatrix(float,float,float)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceCleanup(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.channels.ReceiveChannel,int,kotlinx.coroutines.CoroutineStart)
kotlin.collections.CharIterator: java.lang.Character next()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOfRangeInline(long[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort randomOrNull-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(double[])
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createWeightStyle(android.content.Context,android.graphics.Typeface,int,boolean)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.Collection orEmpty(java.util.Collection)
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUByte(kotlin.sequences.Sequence)
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String,kotlin.jvm.functions.Function1)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(android.view.DisplayCutout)
androidx.window.core.VerificationMode: VerificationMode(java.lang.String,int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: ConcurrentWeakMap()
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbShortTitleRes()
kotlin.reflect.KCallable: kotlin.reflect.KType getReturnType()
kotlin.jvm.internal.FunctionBase: int getArity()
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.platform.PlatformViewsController: void removeOverlaySurfaces()
kotlin.jvm.internal.MagicApiIntrinsics: MagicApiIntrinsics()
kotlin.collections.GroupingKt__GroupingKt: java.util.Map fold(kotlin.collections.Grouping,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3)
androidx.core.graphics.RectKt: android.graphics.Rect and(android.graphics.Rect,android.graphics.Rect)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearPages()
io.flutter.embedding.android.FlutterFragment: boolean stillAttachedForEvent(java.lang.String)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlinx.coroutines.CoroutineStart,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,byte)
kotlin.text.StringsKt__StringsKt: boolean isNullOrBlank(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(long[])
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void getRegionInScreen(android.graphics.Region)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
kotlin.collections.ArraysKt___ArraysKt: double maxOf(int[],kotlin.jvm.functions.Function1)
kotlin.collections.RingBuffer$iterator$1: void computeNext()
androidx.core.app.Person: androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle)
androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailBcc()
androidx.collection.LongSparseArray: void putAll(androidx.collection.LongSparseArray)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(boolean[])
androidx.core.util.LongSparseArrayKt$valueIterator$1: void setIndex(int)
kotlin.math.MathKt__MathJVMKt: double atan2(double,double)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,short)
androidx.core.app.NotificationCompat$Api31Impl: NotificationCompat$Api31Impl()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction openTransaction()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $values()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.fragment.app.SpecialEffectsController$Operation getFirstOut()
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent)
kotlin.math.MathKt__MathJVMKt: float sqrt(float)
io.flutter.embedding.android.FlutterFragmentActivity: void onPostResume()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagBackward()
androidx.core.content.res.TypedArrayKt: int getResourceIdOrThrow(android.content.res.TypedArray,int)
androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()
androidx.core.location.GnssStatusCompat$Callback: void onFirstFix(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreSegment: void set(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer elementAtOrNull(int[],int)
androidx.core.content.pm.ShortcutManagerCompat$1: void onReceive(android.content.Context,android.content.Intent)
androidx.core.content.res.ResourcesCompat: float getFloat(android.content.res.Resources,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(char[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String uppercase(java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: long readLong()
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: void checkOwnership(kotlinx.coroutines.flow.internal.AbortFlowException,kotlinx.coroutines.flow.FlowCollector)
kotlin.io.ByteStreamsKt$iterator$1: void setNextPrepared(boolean)
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy$default(kotlinx.coroutines.CoroutineName,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object)
kotlin.sequences.DropSequence: kotlin.sequences.Sequence take(int)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
androidx.core.view.ViewGroupCompat: int getLayoutMode(android.view.ViewGroup)
androidx.activity.SystemBarStyle: kotlin.jvm.functions.Function1 getDetectDarkMode$activity_release()
androidx.core.app.ServiceCompat$Api24Impl: void stopForeground(android.app.Service,int)
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
io.flutter.plugin.platform.PlatformView: android.view.View getView()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.fragment.app.FragmentManager$2: void onCreateMenu(android.view.Menu,android.view.MenuInflater)
androidx.core.graphics.ColorKt: android.graphics.Color toColor(long)
androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character minWith(char[],java.util.Comparator)
kotlin.ranges.CharRange$Companion: CharRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterTextureView: void pause()
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: java.lang.Object parseResult(int,android.content.Intent)
androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getAppBundlePath()
kotlin.jvm.internal.CharCompanionObject: void getSIZE_BITS$annotations()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
androidx.lifecycle.SavedStateHandle: SavedStateHandle(java.util.Map)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(char[],int)
androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)
androidx.fragment.app.Fragment: boolean getPopDirection()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
kotlin.jvm.internal.ArrayByteIterator: byte nextByte()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
kotlin.text.StringsKt__StringBuilderJVMKt: void toCharArray$default(java.lang.StringBuilder,char[],int,int,int,int,java.lang.Object)
androidx.core.provider.CallbackWithHandler: CallbackWithHandler(androidx.core.provider.FontsContractCompat$FontRequestCallback)
kotlinx.coroutines.InvokeOnCancel: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt: int getDEFAULT_CONCURRENCY()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(long[],java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: boolean isReleased()
androidx.core.view.WindowInsetsControllerCompat$Impl: int getSystemBarsBehavior()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.AbstractCollection: boolean isEmpty()
io.flutter.plugin.common.StandardMessageCodec: void writeFloat(java.io.ByteArrayOutputStream,float)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.core.view.animation.PathInterpolatorApi14: PathInterpolatorApi14(float,float)
kotlin.UIntArray: boolean equals-impl(int[],java.lang.Object)
kotlin.text.StringsKt__IndentKt: java.lang.String prependIndent(java.lang.String,java.lang.String)
androidx.fragment.app.DialogFragment: DialogFragment(int)
kotlin.jvm.internal.PropertyReference: boolean isConst()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxWithOrNull-YmdZ_VM(int[],java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: void resize(int,int)
kotlin.jvm.internal.DefaultConstructorMarker: DefaultConstructorMarker()
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex--ajY-9A(int[])
kotlin.reflect.WildcardTypeImpl: java.lang.String toString()
kotlin.collections.ArrayAsCollection: java.lang.Object[] toArray(java.lang.Object[])
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.location.LocationManagerCompat: void getCurrentLocation(android.location.LocationManager,java.lang.String,androidx.core.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.UInt: int inv-pVg5ArA(int)
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
kotlin.coroutines.EmptyCoroutineContext: java.lang.String toString()
kotlin.text.StringsKt___StringsKt$windowed$1: java.lang.String invoke(java.lang.CharSequence)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.window.RequiresWindowSdkExtension: int version()
androidx.core.util.SparseArrayKt: void putAll(android.util.SparseArray,android.util.SparseArray)
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte maxBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.time.TimedValue: kotlin.time.TimedValue copy-RFiDyg4(java.lang.Object,long)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int lastIndexOf(java.lang.Object)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
com.getkeepsafe.relinker.ApkLibraryInstaller: void closeSilently(java.io.Closeable)
kotlinx.coroutines.ThreadLocalEventLoop: void resetEventLoop$kotlinx_coroutines_core()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
androidx.core.app.ServiceCompat$Api29Impl: void startForeground(android.app.Service,int,android.app.Notification,int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher blocking(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: ViewModelProvider$AndroidViewModelFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$202(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
kotlin.collections.SetsKt__SetsKt: java.util.Set setOfNotNull(java.lang.Object)
kotlin.ranges.CharRange: java.lang.Comparable getEndExclusive()
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String m()
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float min(java.lang.Float[])
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.core.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: LockFreeLinkedListNode$makeCondAddOp$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
kotlin.text.Regex$Companion: java.lang.String escapeReplacement(java.lang.String)
androidx.core.app.NotificationCompat$Action$Builder$Api29Impl: boolean isContextual(android.app.Notification$Action)
kotlin.enums.EnumEntriesList: java.lang.Enum get(int)
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
androidx.core.app.ShareCompat: ShareCompat()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type fromLong(long)
androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
androidx.core.view.LayoutInflaterCompat: LayoutInflaterCompat()
kotlinx.coroutines.AbstractCoroutine: void getContext$annotations()
kotlin.time.Duration$Companion: long days-UwyO8pc(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.core.util.RangeKt$toClosedRange$1: java.lang.Comparable getEndInclusive()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.LiveData: java.lang.Object getValue()
androidx.core.telephony.TelephonyManagerCompat: TelephonyManagerCompat()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: ImageReaderPlatformViewRenderTarget(io.flutter.view.TextureRegistry$ImageTextureEntry)
androidx.fragment.app.FragmentManager: void doPendingDeferredStart()
kotlin.collections.ArraysKt___ArraysKt: float[] reversedArray(float[])
androidx.core.view.ContentInfoCompat$CompatImpl: java.lang.String toString()
androidx.core.content.res.CamColor: float getBStar()
kotlin.UInt: int times-xj2QHRw(int,short)
kotlinx.coroutines.JobSupport: java.lang.Object join(kotlin.coroutines.Continuation)
androidx.customview.widget.ViewDragHelper: int getViewDragState()
androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.CharSequence)
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator asMutableIterator(java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
kotlin.collections.EmptyIterator: boolean hasPrevious()
androidx.window.layout.adapter.sidecar.SidecarCompat: void registerConfigurationChangeListener$lambda$0(androidx.window.layout.adapter.sidecar.SidecarCompat,android.app.Activity,android.content.res.Configuration)
kotlin.time.Duration$Companion: long getNanoseconds-UwyO8pc(double)
kotlin.collections.UArraySortingKt: void sortArray-oBK06Vg(int[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-L4rlFek(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback access$getExtensionCallback$p(androidx.window.layout.adapter.sidecar.SidecarCompat)
kotlinx.coroutines.scheduling.CoroutineSchedulerKt: boolean isSchedulerWorker(java.lang.Thread)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.core.ActivityComponentInfo: ActivityComponentInfo(android.content.ComponentName)
androidx.core.content.IntentSanitizer$Builder: IntentSanitizer$Builder()
androidx.versionedparcelable.VersionedParcel: float readFloat()
kotlinx.coroutines.Deferred: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.time.TestTimeSource: void plusAssign-LRDsOJo(long)
kotlin.UShortArray: boolean add-xj2QHRw(short)
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptyMap: java.util.Collection getValues()
androidx.core.location.LocationCompat$Api26Impl: void setVerticalAccuracyMeters(android.location.Location,float)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: ChannelsKt__DeprecatedKt$distinctBy$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.sequences.IndexingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.IndexingSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-Aa5vz7o(short[],int,int)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String toStringRepr(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
android.support.v4.os.IResultReceiver: void send(int,android.os.Bundle)
kotlinx.coroutines.sync.Mutex: void unlock(java.lang.Object)
androidx.window.embedding.SplitAttributes$SplitType: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
kotlin.time.TestTimeSource: void overflow-LRDsOJo(long)
kotlinx.coroutines.flow.FlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.DefaultSpecialEffectsController: DefaultSpecialEffectsController(android.view.ViewGroup)
kotlin.ranges.RangesKt___RangesKt: int last(kotlin.ranges.IntProgression)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.Set)
kotlin.UNumbersKt: int countTrailingZeroBits-WZ4Q5Ns(int)
androidx.activity.ComponentDialog: void setContentView(int)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isMethodSetEmbeddingRulesValid()
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: ChannelFlowOperator$collectWithContextUndispatched$2(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlin.coroutines.Continuation)
kotlin.text.CharsKt__CharJVMKt: boolean isISOControl(char)
kotlinx.coroutines.scheduling.TaskContext: int getTaskMode()
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructStyleForExtras(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCreationStackBottom()
kotlinx.coroutines.channels.BufferedChannel$onSend$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: ArraysKt___ArraysJvmKt$asList$2(short[])
androidx.fragment.app.ListFragment: void setListAdapter(android.widget.ListAdapter)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: ChannelsKt__DeprecatedKt$filterIndexed$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceIndexedOrNull-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
kotlin.reflect.KParameter$Kind: KParameter$Kind(java.lang.String,int)
androidx.core.content.res.ViewingConditions: float getFlRoot()
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
kotlin.collections.ArraysKt___ArraysKt: int reduceIndexed(int[],kotlin.jvm.functions.Function3)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2: java.lang.Object invoke()
kotlin.reflect.KProperty1: java.lang.Object get(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.String dropLast(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.core.graphics.PathParser: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel drop$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.core.util.SparseIntArrayKt: int getSize(android.util.SparseIntArray)
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArrayDeque: int positiveMod(int)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfByte(java.lang.Iterable)
androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
kotlin.collections.ArraysKt___ArraysKt: float minOrThrow(float[])
androidx.lifecycle.LiveData$AlwaysActiveObserver: LiveData$AlwaysActiveObserver(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
kotlin.UByte: boolean equals-impl0(byte,byte)
androidx.tracing.TraceApi29Impl: TraceApi29Impl()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
androidx.core.util.SparseArrayKt$valueIterator$1: SparseArrayKt$valueIterator$1(android.util.SparseArray)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean trySetNext(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object access$emitSuspend(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.ContentLoadingProgressBar: void lambda$new$0()
androidx.core.app.NotificationCompat$Action: int getSemanticAction()
androidx.activity.OnBackPressedDispatcher: void updateEnabledCallbacks()
kotlin.io.path.PathsKt__PathReadWriteKt: void appendBytes(java.nio.file.Path,byte[])
androidx.activity.ComponentActivity$1: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: CoroutineContextKt$hasCopyableElements$1()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-HwE9HBo(int[],java.lang.Iterable)
androidx.core.view.WindowInsetsControllerCompat: int getSystemBarsBehavior()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $values()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: NestedScrollView$AccessibilityDelegate()
androidx.core.location.LocationCompat: void removeSpeedAccuracy(android.location.Location)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation: int getRequestCode()
kotlin.time.Duration$Companion: kotlin.time.Duration parseOrNull-FghU774(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOf(float[])
androidx.versionedparcelable.VersionedParcelStream: android.os.IBinder readStrongBinder()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
org.jetbrains.annotations.Debug$Renderer: java.lang.String childrenArray()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
io.flutter.embedding.engine.FlutterEngineGroupCache: io.flutter.embedding.engine.FlutterEngineGroupCache getInstance()
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassQualifiedName(java.lang.Class)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Iterable)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(java.lang.Class,android.os.Bundle,java.lang.String)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $values()
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean set(java.lang.Object)
kotlin.text.RegexKt: kotlin.ranges.IntRange range(java.util.regex.MatchResult)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
kotlin.collections.AbstractList$SubList: AbstractList$SubList(kotlin.collections.AbstractList,int,int)
kotlin.text.Regex$findAll$2: Regex$findAll$2()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(int[],int,int,int,int,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.core.content.res.ResourcesCompat$Api23Impl: ResourcesCompat$Api23Impl()
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String,kotlinx.coroutines.Job)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object complete(kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: java.lang.String toString()
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.CancellableContinuationImpl: boolean resetStateReusable()
androidx.core.graphics.drawable.RoundedBitmapDrawable21: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
androidx.fragment.app.Fragment: void noteStateNotSaved()
kotlin.sequences.TransformingIndexedSequence$iterator$1: void setIndex(int)
kotlinx.coroutines.selects.SelectImplementation: kotlinx.coroutines.selects.TrySelectDetailedResult trySelectDetailed(java.lang.Object,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterNot(java.util.Map,kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: FlowLiveDataConversions$asFlow$1$1(androidx.lifecycle.LiveData,androidx.lifecycle.Observer,kotlin.coroutines.Continuation)
androidx.activity.result.contract.ActivityResultContracts$TakeVideo: ActivityResultContracts$TakeVideo()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.core.ValidSpecification: androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.text.UStringsKt: kotlin.UShort toUShortOrNull(java.lang.String)
kotlin.collections.EmptySet: int size()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6(java.lang.Object[])
androidx.window.layout.SafeWindowLayoutComponentProvider: java.lang.Class getFoldingFeatureClass()
kotlin.collections.AbstractList: java.util.ListIterator listIterator()
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.location.LocationCompat$Api29Impl: void removeVerticalAccuracy(android.location.Location)
kotlin.text.DelimitedRangesSequence: java.util.Iterator iterator()
androidx.fragment.app.Fragment: boolean isInLayout()
androidx.fragment.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedRange rangeTo(java.lang.Comparable,java.lang.Comparable)
androidx.window.embedding.EmbeddingInterfaceCompat: void updateSplitAttributes(androidx.window.embedding.SplitInfo,androidx.window.embedding.SplitAttributes)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
androidx.core.os.HandlerKt$postAtTime$runnable$1: void run()
kotlin.collections.builders.MapBuilder: void checkIsMutable$kotlin_stdlib()
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.Pair[])
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: android.content.Intent createIntent(android.content.Context,java.lang.String[])
androidx.fragment.app.FragmentStateManager: void activityCreated()
kotlinx.coroutines.NonDisposableHandle: NonDisposableHandle()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: FlutterActivity$NewEngineInGroupIntentBuilder(java.lang.Class,java.lang.String)
androidx.activity.BackEventCompat: BackEventCompat(android.window.BackEvent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-KJPZfPQ(int[],int[])
kotlin.jvm.internal.FunctionReference: int getArity()
io.flutter.plugin.common.MessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
androidx.activity.ComponentActivity: void onTrimMemory(int)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass createKotlinClass(java.lang.Class)
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(char[])
androidx.activity.SystemBarStyle$Companion: androidx.activity.SystemBarStyle dark(int)
androidx.core.util.ContinuationConsumer: java.lang.String toString()
com.getkeepsafe.relinker.elf.Elf$Header: Elf$Header()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(int[],java.lang.Iterable)
kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: FlowKt__MergeKt$flatMapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.UShort: int compareTo-WZ4Q5Ns(short,int)
androidx.window.embedding.SplitController: void updateSplitAttributes(androidx.window.embedding.SplitInfo,androidx.window.embedding.SplitAttributes)
androidx.activity.result.IntentSenderRequest: int describeContents()
kotlin.UIntArray: boolean contains(java.lang.Object)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender clone()
kotlinx.coroutines.channels.BufferedChannel: int access$updateCellSend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean)
androidx.window.embedding.RuleController$Companion: RuleController$Companion()
androidx.core.location.GnssStatusCompat: float getCn0DbHz(int)
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.String readText(java.nio.file.Path,java.nio.charset.Charset)
androidx.profileinstaller.ProfileInstaller$2: ProfileInstaller$2()
kotlin.collections.ArraysKt___ArraysKt: char component5(char[])
kotlin.collections.MapsKt___MapsKt: boolean any(java.util.Map,kotlin.jvm.functions.Function1)
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
kotlin.sequences.TransformingIndexedSequence$iterator$1: void remove()
kotlinx.coroutines.channels.BufferedChannel: void resumeReceiverOnClosedChannel(kotlinx.coroutines.Waiter)
androidx.core.app.ShareCompat: void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder)
kotlin.reflect.WildcardTypeImpl: java.lang.String getTypeName()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setGravity(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double firstOrNull(double[])
io.flutter.view.AccessibilityBridge: boolean lambda$shouldSetCollectionInfo$0(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.activity.ComponentActivity$1$2: ComponentActivity$1$2(androidx.activity.ComponentActivity$1,int,android.content.IntentSender$SendIntentException)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyInto$default(int[],int[],int,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcelStream: void writeDouble(double)
kotlin.collections.AbstractMap: java.lang.Object get(java.lang.Object)
androidx.core.content.res.CamColor: float distance(androidx.core.content.res.CamColor)
androidx.fragment.app.FragmentManager$3: FragmentManager$3(androidx.fragment.app.FragmentManager)
kotlin.ULong: int hashCode()
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
kotlin.collections.AbstractMap: boolean containsEntry$kotlin_stdlib(java.util.Map$Entry)
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void writeLong(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(short[],short)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityEventCompat: int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object)
androidx.activity.OnBackPressedDispatcher: void dispatchOnBackCancelled()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)
org.jetbrains.annotations.Async: Async()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(int[])
kotlin.collections.IndexedValue: kotlin.collections.IndexedValue copy(int,java.lang.Object)
androidx.core.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
kotlin.time.TimeMark$DefaultImpls: boolean hasNotPassedNow(kotlin.time.TimeMark)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
androidx.fragment.app.strictmode.SetRetainInstanceUsageViolation: SetRetainInstanceUsageViolation(androidx.fragment.app.Fragment)
kotlinx.coroutines.future.FutureKt$await$2$1: FutureKt$await$2$1(java.util.concurrent.CompletableFuture,kotlinx.coroutines.future.ContinuationHandler)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(char[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType nothingType(kotlin.reflect.KType)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow)
androidx.activity.BackEventCompat: android.window.BackEvent toBackEvent()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: android.net.Uri parseResult(int,android.content.Intent)
kotlin.text.StringsKt___StringsKt: double maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(byte[])
kotlinx.coroutines.selects.WhileSelectKt: java.lang.Object whileSelect(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.ViewStructureCompat: void setText(java.lang.CharSequence)
kotlin.time.Duration: void getInSeconds$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(long[])
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle--ajY-9A(int[])
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object get(java.lang.Object)
kotlin.reflect.GenericArrayTypeImpl: java.lang.String getTypeName()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.collections.Grouping groupingBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void lambda$new$0(android.content.res.Configuration)
androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable,char)
androidx.core.app.LocaleManagerCompat$Api21Impl: LocaleManagerCompat$Api21Impl()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int)
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: void invoke()
androidx.core.view.NestedScrollingChild: boolean dispatchNestedFling(float,float,boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
androidx.tracing.TraceApi29Impl: void beginAsyncSection(java.lang.String,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType getType()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(java.lang.String,java.util.Locale,java.lang.Object[])
kotlinx.coroutines.DispatchersKt: kotlinx.coroutines.CoroutineDispatcher getIO(kotlinx.coroutines.Dispatchers)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-ePBmRWY(short[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean none(float[])
kotlin.sequences.TakeSequence$iterator$1: TakeSequence$iterator$1(kotlin.sequences.TakeSequence)
kotlinx.coroutines.channels.BufferedChannel: void updateSendersCounterIfLower(long)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode find(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
androidx.annotation.Size: long multiple()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void commitBackGesture()
androidx.core.net.TrafficStatsCompat$Api24Impl: TrafficStatsCompat$Api24Impl()
kotlin.text.MatchGroup: kotlin.text.MatchGroup copy$default(kotlin.text.MatchGroup,java.lang.String,kotlin.ranges.IntRange,int,java.lang.Object)
androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)
kotlin.collections.ArraysKt___ArraysKt: void reverse(boolean[])
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,java.lang.Long)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTint(int)
androidx.core.content.res.TypedArrayKt: int getColorOrThrow(android.content.res.TypedArray,int)
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: void onCreate()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(long[])
androidx.fragment.app.SpecialEffectsController: void collectEffects(java.util.List,boolean)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void updateDstRect()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceRightIndexedOrNull(int[],kotlin.jvm.functions.Function3)
kotlin.text.RegexKt: int toInt(java.lang.Iterable)
androidx.core.util.Predicate$-CC: boolean lambda$isEqual$4(java.lang.Object,java.lang.Object)
kotlin.UByteArray: java.util.Iterator iterator-impl(byte[])
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl: ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl()
androidx.core.content.FileProvider$SimplePathStrategy: boolean belongsToRoot(java.lang.String,java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
kotlin.collections.ArraysKt___ArraysKt: char[] onEachIndexed(char[],kotlin.jvm.functions.Function2)
kotlin.text.MatchGroupCollection: kotlin.text.MatchGroup get(int)
androidx.core.text.util.LocalePreferences$TemperatureUnit: LocalePreferences$TemperatureUnit()
androidx.core.os.LocaleListCompatWrapper: java.lang.String toLanguageTags()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.CharIterator iterator(char[])
kotlin.jvm.internal.TypeParameterReference: boolean equals(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: boolean containsAll(java.util.Collection,java.util.Collection)
kotlinx.coroutines.flow.internal.NoOpContinuation: void resumeWith(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeRange(java.lang.CharSequence,int,int)
androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minByOrThrow(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isSelected()
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxOrNull-GBYM_sE(byte[])
androidx.core.view.WindowInsetsAnimationCompat: void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)
kotlin.reflect.KFunction: boolean isInline()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)
kotlin.time.DurationKt: void getMicroseconds$annotations(int)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.util.SparseArrayKt: java.lang.Object getOrElse(android.util.SparseArray,int,kotlin.jvm.functions.Function0)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
kotlin.random.URandomKt: long nextULong(kotlin.random.Random)
kotlin.text.StringsKt__StringsKt: boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.core.view.WindowInsetsAnimationControllerCompat: WindowInsetsAnimationControllerCompat(android.view.WindowInsetsAnimationController)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder withNewEngineInGroup(java.lang.String)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
kotlin.text.StringsKt__StringsKt: java.lang.Object ifEmpty(java.lang.CharSequence,kotlin.jvm.functions.Function0)
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
kotlinx.coroutines.internal.AtomicOp: void complete(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] plus-us8wMrg(long[],long[])
androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float maxOf(float,float)
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler component2()
androidx.fragment.app.LogWriter: void close()
androidx.savedstate.ViewTreeSavedStateRegistryOwner: androidx.savedstate.SavedStateRegistryOwner get(android.view.View)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
androidx.core.app.PendingIntentCompat: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle,boolean)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl: MutexImpl(boolean)
androidx.core.widget.NestedScrollView: void doScrollY(int)
androidx.core.content.pm.ShortcutInfoCompat: android.os.Bundle getTransientExtras()
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.embedding.android.FlutterActivity: void startBackGesture(android.window.BackEvent)
io.flutter.plugin.platform.PlatformPlugin$2: PlatformPlugin$2(io.flutter.plugin.platform.PlatformPlugin,android.view.View)
kotlin.ranges.URangesKt___URangesKt: long random(kotlin.ranges.ULongRange,kotlin.random.Random)
androidx.fragment.app.DialogFragment: boolean access$200(androidx.fragment.app.DialogFragment)
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: java.util.List getClipDataUris$activity_release(android.content.Intent)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getCore$FU$p()
androidx.lifecycle.LiveData$ObserverWrapper: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
kotlin.ranges.CharRange: java.lang.Character getStart()
androidx.lifecycle.viewmodel.MutableCreationExtras: java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: int hashCode()
kotlin.collections.AbstractList$Companion: AbstractList$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: java.util.Map backEventToJsonMap(android.window.BackEvent)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: java.lang.Boolean invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelSegment: ChannelSegment(long,kotlinx.coroutines.channels.ChannelSegment,kotlinx.coroutines.channels.BufferedChannel,int)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: NotificationCompat$BubbleMetadata$Builder(java.lang.String)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object[])
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.content.ContextCompat: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
kotlin.text.MatchResult: kotlin.text.MatchGroupCollection getGroups()
kotlin.UShortArray$Iterator: boolean hasNext()
androidx.window.embedding.SplitAttributes$SplitType$Companion: SplitAttributes$SplitType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.time.AbstractLongTimeSource: kotlin.time.DurationUnit getUnit()
kotlin.TypeAliasesKt: void AssertionError$annotations()
androidx.viewpager.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)
kotlin.TypeAliasesKt: void IllegalArgumentException$annotations()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionResume(android.transition.Transition)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float elementAtOrNull(float[],int)
kotlin.text.StringsKt___StringsKt: java.util.List runningReduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.UByteArray: java.lang.String toString-impl(byte[])
androidx.window.area.WindowAreaCapability: androidx.window.area.WindowAreaCapability$Status getStatus()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api30Impl: AccessibilityWindowInfoCompat$Api30Impl()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.drawable.Icon)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.lifecycle.Lifecycle$Event$Companion: Lifecycle$Event$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(int[],java.util.Comparator)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: void finish(boolean)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
kotlin.Suppress: java.lang.String[] names()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
androidx.core.os.LocaleListPlatformWrapper: int size()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-4UcCI2c(byte[],int,int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
kotlin.reflect.KCallable: boolean isOpen()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean canOpenPopup()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropLast(java.lang.CharSequence,int)
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: void setRules(java.util.Set)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: java.lang.Object[] invoke()
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty1 mutableProperty1(kotlin.jvm.internal.MutablePropertyReference1)
kotlinx.coroutines.scheduling.DefaultIoScheduler: DefaultIoScheduler()
kotlinx.coroutines.internal.DispatchedContinuation: void resumeCancellableWith(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: boolean none(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DeferredCoroutine: java.lang.Object await$suspendImpl(kotlinx.coroutines.DeferredCoroutine,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: void getOnSend$annotations()
kotlinx.coroutines.AbstractTimeSourceKt: void parkNanos(java.lang.Object,long)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minOfWith(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(double[])
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(double[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double minOf(double,double[])
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
androidx.core.content.res.ViewingConditions: ViewingConditions(float,float,float,float,float,float,float[],float,float,float)
androidx.core.graphics.RegionKt: android.graphics.Region xor(android.graphics.Region,android.graphics.Rect)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
kotlin.jvm.internal.ClassReference: int hashCode()
kotlin.text.CharsKt__CharJVMKt: char uppercaseChar(char)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: ActivityResultContracts$RequestMultiplePermissions$Companion()
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.graphics.drawable.IconCompat getPictureIcon(android.os.Bundle)
androidx.fragment.app.strictmode.FragmentTagUsageViolation: FragmentTagUsageViolation(androidx.fragment.app.Fragment,android.view.ViewGroup)
androidx.customview.R$layout: R$layout()
kotlinx.coroutines.TimeoutCancellationException: java.lang.Throwable createCopy()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
androidx.core.widget.TextViewKt$addTextChangedListener$3: TextViewKt$addTextChangedListener$3()
kotlin.io.path.DirectoryEntriesReader: DirectoryEntriesReader(boolean)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: FlowKt__DelayKt$sample$2$values$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreScroll(int,int,int[],int[])
kotlin.reflect.KCallable$DefaultImpls: void isOpen$annotations()
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
kotlin.text.StringsKt___StringsKt: java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
androidx.core.view.ViewConfigurationCompat: int getCompatFlingVelocityThreshold(android.content.res.Resources,int,androidx.core.util.Supplier,int)
androidx.core.view.DragAndDropPermissionsCompat$Api24Impl: void release(android.view.DragAndDropPermissions)
kotlin.collections.ArraysKt__ArraysKt: java.lang.Object ifEmpty(java.lang.Object[],kotlin.jvm.functions.Function0)
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1$1: java.lang.Object invoke()
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowPackage(java.lang.String)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: boolean isDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],byte[])
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResources(java.util.Collection)
androidx.core.app.NotificationCompat$WearableExtender: int getContentIconGravity()
androidx.core.view.ViewCompat: void setLayoutDirection(android.view.View,int)
kotlinx.coroutines.JobSupport: void onStart()
androidx.core.view.ViewCompat: void setScreenReaderFocusable(android.view.View,boolean)
kotlinx.coroutines.future.ContinuationHandler: java.lang.Object apply(java.lang.Object,java.lang.Object)
androidx.core.app.JobIntentService$GenericWorkItem: void complete()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.lang.Iterable)
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
androidx.core.location.LocationManagerCompat$Api28Impl: LocationManagerCompat$Api28Impl()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.SemaphoreSegment createSegment(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable castToIterable(java.lang.Object)
kotlin.jvm.internal.ClassReference: boolean isOpen()
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onPageSelected(int)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.Thread getLastObservedThread()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int first--ajY-9A(int[])
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean)
kotlin.text.Charsets: java.nio.charset.Charset UTF32()
kotlin.sequences.EmptySequence: kotlin.sequences.EmptySequence take(int)
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String)
kotlin.jvm.internal.Ref$DoubleRef: Ref$DoubleRef()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.core.app.NotificationCompatBuilder: android.app.Notification build()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOfNotNull(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getNO_CLOSE_CAUSE$p()
androidx.lifecycle.SavedStateHandleController: SavedStateHandleController(java.lang.String,androidx.lifecycle.SavedStateHandle)
androidx.activity.EdgeToEdge: void enable(androidx.activity.ComponentActivity)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean hasValidVendorApiLevel1$window_release()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOrNull(java.lang.Double[])
androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)
androidx.lifecycle.ViewModelLazy: ViewModelLazy(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void dispose(int)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()
kotlin.UByteArray: boolean contains(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable minOf(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender: void setFlag(int,boolean)
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback: void clearWindowLayoutInfo(android.app.Activity)
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList extractBatchTextEditingDeltas()
androidx.window.embedding.ExtensionEmbeddingBackend$splitSupportStatus$2: ExtensionEmbeddingBackend$splitSupportStatus$2(androidx.window.embedding.ExtensionEmbeddingBackend)
kotlin.random.URandomKt: long nextULong-jmpaW-c(kotlin.random.Random,long,long)
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreSegment invoke(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlin.UNINITIALIZED_VALUE: UNINITIALIZED_VALUE()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api34Impl: long getTransitionTimeMillis(android.view.accessibility.AccessibilityWindowInfo)
org.intellij.lang.annotations.MagicConstant: java.lang.String[] stringValues()
kotlin.jvm.internal.TypeIntrinsics: java.util.Map castToMap(java.lang.Object)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: void onStatusChanged(int)
androidx.window.embedding.EmbeddingAspectRatio: androidx.window.embedding.EmbeddingAspectRatio ratio(float)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void onLocationChanged(android.location.Location)
androidx.core.provider.FontRequestWorker: java.lang.String createCacheId(androidx.core.provider.FontRequest,int)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.Triple: kotlin.Triple copy$default(kotlin.Triple,java.lang.Object,java.lang.Object,java.lang.Object,int,java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] getSlots()
androidx.core.graphics.WeightTypefaceApi26: boolean isPrivateApiAvailable()
kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(float[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.SpreadBuilder: int size()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.profileinstaller.ProfileInstaller: void result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object)
kotlin.collections.IndexingIterable: java.util.Iterator iterator()
androidx.core.widget.EdgeEffectCompat: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
kotlin.collections.CollectionsKt___CollectionsKt: double minOrThrow(java.lang.Iterable)
kotlin.random.Random: long nextLong(long,long)
androidx.core.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPredicates$1: java.lang.Boolean invoke(android.app.Activity)
kotlin.sequences.DropWhileSequence$iterator$1: void drop()
kotlin.UShort: int minus-xj2QHRw(short,short)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfInt(kotlin.sequences.Sequence)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.LifecycleRegistry createUnsafe(androidx.lifecycle.LifecycleOwner)
kotlin.reflect.WildcardTypeImpl: kotlin.reflect.WildcardTypeImpl access$getSTAR$cp()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(char[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean contains(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isExecutable(java.nio.file.Path)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: ActivityResultContracts$PickMultipleVisualMedia(int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.viewpager.widget.ViewPager$ItemInfo: ViewPager$ItemInfo()
androidx.profileinstaller.ProfileInstallerInitializer: java.lang.Object create(android.content.Context)
kotlinx.coroutines.CoroutineName: CoroutineName(java.lang.String)
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult[] $values()
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
kotlin.collections.builders.MapBuilderEntries: boolean isEmpty()
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object access$fixedDelayTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[])
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $values()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Appendable joinTo$default(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.viewpager.widget.ViewPager: void sortChildDrawingOrder()
androidx.core.view.WindowCompat: void setDecorFitsSystemWindows(android.view.Window,boolean)
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List getHistoricMessages()
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: java.lang.Object parseResult(int,android.content.Intent)
androidx.core.view.VelocityTrackerCompat: boolean isAxisSupported(android.view.VelocityTracker,int)
kotlin.collections.MapWithDefaultImpl: MapWithDefaultImpl(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set union(java.lang.Iterable,java.lang.Iterable)
kotlin.UInt: int rem-7apg3OU(int,byte)
kotlin.jvm.internal.ArrayByteIterator: ArrayByteIterator(byte[])
io.flutter.embedding.android.KeyEmbedderResponder: KeyEmbedderResponder(io.flutter.plugin.common.BinaryMessenger)
kotlin.reflect.KCallable: java.lang.String getName()
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean hasSharedElementTransition()
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: StringsKt__IndentKt$getIndentFunction$2(java.lang.String)
androidx.customview.widget.ViewDragHelper: void captureChildView(android.view.View,int)
io.flutter.embedding.android.FlutterActivity$1: void onBackStarted(android.window.BackEvent)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int maxOrThrow-U(int[])
androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
kotlinx.coroutines.channels.BroadcastChannelImpl: boolean isClosedForSend()
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object unbox-impl()
kotlin.math.MathKt__MathJVMKt: MathKt__MathJVMKt()
androidx.core.view.WindowInsetsControllerCompat$Impl20: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)
kotlin.jvm.functions.Function0: java.lang.Object invoke()
androidx.core.view.MenuHost: void invalidateMenu()
androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setLightsEnabled(boolean)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException)
androidx.core.app.NavUtils: NavUtils()
kotlin.time.ComparableTimeMark: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.collections.Grouping groupingBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeReference: java.lang.String getArrayClassName(java.lang.Class)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: ActivityResultContracts$RequestMultiplePermissions$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.OutputStreamWriter writer$default(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
androidx.core.content.FileProvider$PathStrategy: android.net.Uri getUriForFile(java.io.File)
kotlin.collections.ArraysKt___ArraysKt: void reverse(boolean[],int,int)
kotlin.ranges.LongRange: java.lang.Comparable getEndExclusive()
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState[] newArray(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.GravityCompat: GravityCompat()
androidx.core.text.util.LocalePreferences: java.util.Locale getDefaultLocale()
androidx.loader.content.AsyncTaskLoader: void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)
androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)
androidx.window.embedding.EmbeddingCompat: void setRules(java.util.Set)
kotlinx.coroutines.sync.MutexImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getOwner$FU$p()
androidx.core.graphics.CanvasKt: void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setLightColor(int)
kotlin.experimental.BitwiseOperationsKt: byte inv(byte)
androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean,boolean)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: LifecycleCoroutineScope$launchWhenCreated$1(androidx.lifecycle.LifecycleCoroutineScope,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.FilePathComponents: kotlin.io.FilePathComponents copy$default(kotlin.io.FilePathComponents,java.io.File,java.util.List,int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findTask(boolean)
androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)
androidx.activity.SystemBarStyle: androidx.activity.SystemBarStyle dark(int)
kotlin.io.path.PathTreeWalkKt: boolean createsCycle(kotlin.io.path.PathNode)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(short[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenByDescending(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.graphics.BitmapKt: boolean contains(android.graphics.Bitmap,android.graphics.PointF)
androidx.versionedparcelable.VersionedParcel: void writeMap(java.util.Map,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean defaultIsRtl()
kotlin.jvm.internal.ClassReference: boolean isInstance(java.lang.Object)
androidx.core.view.accessibility.AccessibilityManagerCompat$Api34Impl: AccessibilityManagerCompat$Api34Impl()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxByOrNull(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.CoroutineExceptionHandler$Key)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.area.WindowAreaInfo: java.util.HashMap getCapabilityMap$window_release()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
kotlin.collections.EmptyIterator: java.lang.Object previous()
kotlin.collections.UArraySortingKt: int partition-Aa5vz7o(short[],int,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
androidx.fragment.app.DialogFragment: android.app.Dialog access$000(androidx.fragment.app.DialogFragment)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression downTo-eb3DHEI(long,long)
androidx.lifecycle.ReportFragment: void onStart()
kotlin.io.TextStreamsKt: long copyTo(java.io.Reader,java.io.Writer,int)
androidx.core.util.LongSparseArrayKt$keyIterator$1: void setIndex(int)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: ModuleNameRetriever()
kotlin.ranges.UIntProgressionIterator: UIntProgressionIterator(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle setVerificationText(java.lang.CharSequence)
kotlin.coroutines.SafeContinuation: java.lang.StackTraceElement getStackTraceElement()
androidx.window.embedding.EmbeddingBackend$Companion$decorator$1: EmbeddingBackend$Companion$decorator$1()
androidx.core.os.TraceCompat$Api29Impl: void setCounter(java.lang.String,long)
androidx.core.app.RemoteInput$Api20Impl: androidx.core.app.RemoteInput fromPlatform(java.lang.Object)
androidx.collection.SimpleArrayMap: SimpleArrayMap(androidx.collection.SimpleArrayMap)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet)
androidx.collection.ArrayMap: boolean removeAll(java.util.Collection)
kotlin.collections.MapsKt__MapsKt: boolean isNullOrEmpty(java.util.Map)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
androidx.activity.result.contract.ActivityResultContracts$GetContent: android.net.Uri parseResult(int,android.content.Intent)
kotlin.time.AdjustedTimeMark: long getAdjustment-UwyO8pc()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isClosed()
kotlin.text.StringsKt__StringsKt: java.lang.String padEnd(java.lang.String,int,char)
kotlinx.coroutines.CancellableContinuationImpl: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.activity.result.IntentSenderRequest$Companion$CREATOR$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.widget.ScrollerCompat: float getCurrVelocity()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.collection.LongSparseArray: java.lang.Object putIfAbsent(long,java.lang.Object)
androidx.core.app.NotificationManagerCompat: void cancel(java.lang.String,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void addSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.ScaleGestureDetectorCompat: ScaleGestureDetectorCompat()
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.RectKt: android.graphics.Rect minus(android.graphics.Rect,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingDeltaJSON(java.util.ArrayList)
kotlin.collections.ReversedList: java.lang.Object set(int,java.lang.Object)
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1: void onTextChanged(java.lang.CharSequence,int,int,int)
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int getSize()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)
kotlin.collections.builders.MapBuilder: boolean containsValue(java.lang.Object)
kotlin.collections.UArraySortingKt: void quickSort-4UcCI2c(byte[],int,int)
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.lang.Object doSelect(kotlin.coroutines.Continuation)
kotlin.ranges.LongProgression: boolean isEmpty()
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: void activityDestroyed()
kotlin.io.path.PathTreeWalk: boolean getFollowLinks()
kotlin.collections.ArraysKt___ArraysKt: float maxOf(byte[],kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcelStream: VersionedParcelStream(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.window.embedding.EmbeddingAspectRatio$Companion: androidx.window.embedding.EmbeddingAspectRatio ratio(float)
androidx.core.graphics.PointKt: android.graphics.PointF toPointF(android.graphics.Point)
androidx.core.widget.TintableCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
kotlin.jvm.internal.ClassReference: boolean isData()
androidx.fragment.app.Fragment$SavedState$1: Fragment$SavedState$1()
kotlinx.coroutines.ExecutorsKt: java.util.concurrent.Executor asExecutor(kotlinx.coroutines.CoroutineDispatcher)
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object getNextItem()
kotlin.time.DurationKt: void getMilliseconds$annotations(long)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendLine(java.lang.Appendable,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(short[])
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable getCloseCause()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
kotlin.sequences.FlatteningSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FlatteningSequence)
kotlin.ranges.ULongProgressionIterator: void remove()
androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)
kotlin.Pair: java.lang.String toString()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.FloatIterator iterator(float[])
androidx.savedstate.SavedStateRegistry: boolean isRestored()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.EmptyMap: int hashCode()
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: FlowKt__MigrationKt$onErrorReturn$1()
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()
androidx.window.layout.adapter.extensions.MulticastConsumer: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: ChannelsKt__DeprecatedKt$takeWhile$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.util.AtomicFile: java.io.FileOutputStream startWrite()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
kotlin.UInt: int div-7apg3OU(int,byte)
kotlin.collections.EmptyIterator: void set(java.lang.Void)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.loader.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.widget.EdgeEffectCompat: boolean onPull(float,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component2-QwZRm1k(long[])
androidx.core.util.Pair: boolean equals(java.lang.Object)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setFlutterJNIFactory(io.flutter.embedding.engine.FlutterJNI$Factory)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.Boolean toBooleanStrictOrNull(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.activity.result.IntentSenderRequest$Builder: IntentSenderRequest$Builder(android.app.PendingIntent)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void onStatusChanged(java.lang.String,int,android.os.Bundle)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
androidx.fragment.app.Fragment$2: Fragment$2(androidx.fragment.app.Fragment)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: ActivityResultContracts$PickVisualMedia$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlin.collections.ArrayDeque$Companion: int newCapacity$kotlin_stdlib(int,int)
androidx.core.app.AlarmManagerCompat: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] toLongArray-QwZRm1k(long[])
androidx.core.location.LocationCompat$Api34Impl: boolean hasMslAltitudeAccuracy(android.location.Location)
androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList,android.content.res.Resources$Theme)
androidx.versionedparcelable.VersionedParcelStream: boolean isStream()
kotlin.WasExperimental: java.lang.Class[] markerClass()
androidx.fragment.app.Fragment: void onLowMemory()
androidx.core.graphics.RectKt: int component3(android.graphics.Rect)
kotlin.io.FilesKt__FileReadWriteKt: void forEachBlock(java.io.File,int,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropLastWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: void updateReceiversCounterIfLower(long)
kotlin.ULong: long xor-VKZWuLQ(long,long)
androidx.core.transition.TransitionKt$addListener$5: TransitionKt$addListener$5()
androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions)
androidx.core.graphics.BitmapCompat$Api31Impl: BitmapCompat$Api31Impl()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(int[])
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)
androidx.annotation.IntRange: long from()
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectIndexed(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
kotlinx.coroutines.channels.ChannelCoroutine: void cancelInternal(java.lang.Throwable)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher(int,int,long,java.lang.String)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$2: void onViewDetachedFromWindow(android.view.View)
androidx.core.text.util.LocalePreferences: java.lang.String getTemperatureUnit(java.util.Locale,boolean)
io.flutter.FlutterInjector: void reset()
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: kotlin.coroutines.CoroutineContext getContext()
androidx.core.app.NotificationCompat$MessagingStyle: void clearCompatExtraKeys(android.os.Bundle)
androidx.core.graphics.BlendModeUtils$Api29Impl: java.lang.Object obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat)
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIsConversation()
androidx.core.app.NotificationCompat: java.lang.String getSortKey(android.app.Notification)
androidx.core.app.NotificationCompat$WearableExtender: android.graphics.Bitmap getBackground()
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
io.flutter.embedding.android.KeyboardMap$TogglingGoal: KeyboardMap$TogglingGoal(int,long,long)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object tryReceive-PtdJZtk()
io.flutter.util.ViewUtils: boolean traverseHierarchy(android.view.View,io.flutter.util.ViewUtils$ViewVisitor)
androidx.core.graphics.ColorKt: int component2(int)
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals-impl(java.lang.Object,java.lang.Object)
kotlin.enums.EnumEntriesList: java.lang.Enum[] getEntries()
androidx.activity.ComponentDialog: void onBackPressed()
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)
kotlin.time.DurationKt: void getMinutes$annotations(long)
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long elementAtOrElse(long[],int,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getLayer()
androidx.activity.SystemBarStyle: int getScrim$activity_release(boolean)
kotlinx.coroutines.flow.SharingStarted$Companion: SharingStarted$Companion()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.util.Preconditions: Preconditions()
kotlin.UShort: short toShort-impl(short)
kotlin.time.Duration: boolean isInMillis-impl(long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: void onAnimationStart(android.view.animation.Animation)
kotlin.properties.Delegates$observable$1: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManager: void dispatchOptionsMenuClosed(android.view.Menu)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.util.RangeKt$toClosedRange$1: RangeKt$toClosedRange$1(android.util.Range)
kotlin.collections.ArraysKt___ArraysKt: double[] onEach(double[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getValue()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.Metadata: int k()
kotlinx.coroutines.flow.SharedFlowImpl: int access$getQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullIAE(java.lang.String)
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
androidx.annotation.RequiresPermission$Read: androidx.annotation.RequiresPermission value()
androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl: NestedScrollView$DifferentialMotionFlingTargetImpl(androidx.core.widget.NestedScrollView)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)
kotlin.text.StringsKt___StringsKt: char random(java.lang.CharSequence)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $values()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance component1()
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
io.flutter.embedding.android.KeyboardManager: KeyboardManager(io.flutter.embedding.android.KeyboardManager$ViewDelegate)
androidx.core.app.NotificationCompat$TvExtender: android.app.PendingIntent getDeleteIntent()
androidx.window.embedding.ActivityRule$Builder: ActivityRule$Builder(java.util.Set)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.text.StringsKt__StringsJVMKt: boolean equals$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setAutomaticallyRegisterPlugins(boolean)
kotlinx.coroutines.time.TimeKt: java.lang.Object withTimeoutOrNull(java.time.Duration,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.window.reflection.ReflectionUtils: boolean doesReturn$window_release(java.lang.reflect.Method,kotlin.reflect.KClass)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(int[])
kotlin.collections.builders.ListBuilder$Itr: void set(java.lang.Object)
androidx.core.location.GnssStatusWrapper: int getConstellationType(int)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveImpl$default(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngineGroupCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngineGroup)
kotlinx.coroutines.NonCancellable: void getOnJoin$annotations()
kotlin.collections.MapsKt__MapWithDefaultKt: java.util.Map withDefault(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-EtDCXyQ(short[],short,int,int)
androidx.core.view.DisplayCompat$Api23Impl: boolean physicalSizeEquals(android.view.Display$Mode,android.view.Display$Mode)
kotlin.reflect.KClass: java.lang.String getQualifiedName()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher access$100(androidx.activity.ComponentActivity)
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent getIntent()
io.flutter.plugin.platform.PlatformViewRenderTarget: long getId()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)
androidx.core.content.MimeTypeFilter: boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[])
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path Path(java.lang.String,java.lang.String[])
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.StackTraceElement getStackTraceElement()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
io.flutter.embedding.android.FlutterFragment: java.util.List getDartEntrypointArgs()
kotlin.io.FilesKt__FileReadWriteKt: java.io.OutputStreamWriter writer$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: android.view.WindowInsetsAnimation$Bounds createPlatformBounds(androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
kotlinx.coroutines.future.FutureKt$asDeferred$2: java.lang.Object invoke(java.lang.Object,java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
kotlin.ULong: long rem-VKZWuLQ(long,long)
kotlin.collections.builders.MapBuilder: boolean putEntry(java.util.Map$Entry)
androidx.core.view.ViewCompat: void setImportantForAccessibilityIfNeeded(android.view.View)
androidx.core.view.ViewStructureCompat$Api23Impl: void setText(android.view.ViewStructure,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapConcat(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.app.AppOpsManagerCompat: int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.lifecycle.LiveData: void onInactive()
kotlin.sequences.TakeWhileSequence$iterator$1: int getNextState()
kotlin.text.CharsKt__CharJVMKt: java.lang.String lowercase(char)
androidx.core.util.AtomicFile: boolean sync(java.io.FileOutputStream)
kotlin.UByte: int floorDiv-xj2QHRw(byte,short)
androidx.startup.InitializationProvider: boolean onCreate()
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.fragment.app.SpecialEffectsController$Operation: void addCompletionListener(java.lang.Runnable)
kotlinx.coroutines.GlobalScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceProducer createSurfaceProducer()
androidx.viewpager.widget.PagerTabStrip: boolean getDrawFullUnderline()
androidx.core.graphics.RectKt: boolean contains(android.graphics.RectF,android.graphics.PointF)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduceIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3)
androidx.core.graphics.PointKt: android.graphics.Point div(android.graphics.Point,float)
androidx.fragment.app.FragmentTransitionImpl: void addTargets(java.lang.Object,java.util.ArrayList)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(java.lang.StringBuffer)
kotlin.sequences.SequencesKt___SequencesKt: long sumOfLong(kotlin.sequences.Sequence)
androidx.profileinstaller.Encoding: void writeUInt32(java.io.OutputStream,long)
kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)
kotlin.collections.State: kotlin.collections.State[] values()
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: void invokeSuspend$lambda$1(androidx.window.area.WindowAreaControllerImpl,kotlinx.coroutines.channels.ProducerScope,androidx.window.extensions.area.ExtensionWindowAreaStatus)
androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)
androidx.window.java.R: R()
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.Ref: Ref()
kotlinx.coroutines.TimeoutCoroutine: void run()
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.time.Duration: double getInNanoseconds-impl(long)
kotlin.collections.ArraysKt___ArraysKt: double single(double[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler: java.lang.String getStringResource(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher prepareCallInternal(androidx.activity.result.contract.ActivityResultContract,androidx.arch.core.util.Function,androidx.activity.result.ActivityResultCallback)
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)
android.support.v4.app.INotificationSideChannel$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat z(float)
kotlinx.coroutines.EventLoopImplBase: java.lang.Runnable dequeue()
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
kotlin.reflect.KTypeProjection: kotlin.reflect.KType component2()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minByOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.enums.EnumEntriesSerializationProxy$Companion: EnumEntriesSerializationProxy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function4)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean isRemoved()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.core.location.GnssStatusCompat$Callback: GnssStatusCompat$Callback()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.UIntArrayKt: int[] uintArrayOf--ajY-9A(int[])
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void shuffleAndRegisterClauses()
androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()
androidx.core.app.NotificationCompatExtras: NotificationCompatExtras()
kotlinx.coroutines.DisposableHandle: void dispose()
kotlin.ULong: long floorDiv-VKZWuLQ(long,long)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.builders.MapBuilder: java.util.Set keySet()
androidx.core.app.ActivityCompat: ActivityCompat()
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay getDefaultDelay()
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1: void onAnimationEnd(android.animation.Animator)
kotlin.text.MatcherMatchResult: kotlin.text.MatchResult next()
kotlin.text.StringsKt___StringsKt: java.lang.Character maxByOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMap: java.util.Set keySet()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onEmpty(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.viewpager.R$id: R$id()
androidx.core.view.NestedScrollingChildHelper: void onDetachedFromWindow()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher: void didChangeEditingState(boolean,boolean,boolean)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
kotlin.ranges.CharRange: boolean contains(char)
kotlin.time.DurationJvmKt: java.text.DecimalFormat createFormatForDecimals(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void startBackGesture(android.window.BackEvent)
androidx.lifecycle.ReportFragment: void onStop()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-X6OPwNk(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
android.support.v4.app.INotificationSideChannel: void cancel(java.lang.String,int,java.lang.String)
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(io.flutter.plugin.common.BinaryMessenger,java.lang.String,int)
androidx.core.app.DialogCompat$Api28Impl: DialogCompat$Api28Impl()
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.InputStreamReader reader(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumesAll(kotlinx.coroutines.channels.ReceiveChannel[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
kotlin.text.CharDirectionality$Companion$directionalityMap$2: java.util.Map invoke()
androidx.window.embedding.EmbeddingAspectRatio: int hashCode()
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
kotlin.jvm.internal.ClassReference: void isOpen$annotations()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: androidx.window.extensions.embedding.ActivityEmbeddingComponent getActivityEmbeddingComponent()
kotlinx.coroutines.scheduling.DefaultIoScheduler: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setAnswerButtonColorHint(android.app.Notification$CallStyle,int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: SequencesKt___SequencesKt$flatMap$2()
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: long get-s-VKNKU(int)
androidx.core.app.NotificationCompat$Style: void hideNormalContent(android.widget.RemoteViews)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(float[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat from(android.content.Context)
androidx.fragment.app.FragmentManager$1: FragmentManager$1(androidx.fragment.app.FragmentManager,boolean)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays()
kotlin.io.encoding.Base64JVMKt: int platformEncodeIntoByteArray(kotlin.io.encoding.Base64,byte[],byte[],int,int,int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.text.MatchResult: kotlin.text.MatchResult$Destructured getDestructured()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String)
androidx.lifecycle.ViewModelProvider$Factory$-CC: androidx.lifecycle.ViewModelProvider$Factory from(androidx.lifecycle.viewmodel.ViewModelInitializer[])
androidx.loader.content.CursorLoader: void onReset()
kotlin.collections.AbstractList: int hashCode()
androidx.core.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlin.UByte: int minus-WZ4Q5Ns(byte,int)
androidx.core.content.res.ResourcesCompat$ThemeCompat: ResourcesCompat$ThemeCompat()
kotlin.ranges.UIntRange: int getStart-pVg5ArA()
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object retrieveElement$kotlinx_coroutines_core(int)
kotlin.jvm.internal.AdaptedFunctionReference: int getArity()
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.viewpager.widget.ViewPager$3: ViewPager$3(androidx.viewpager.widget.ViewPager)
kotlinx.coroutines.internal.Segment: void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
kotlin.collections.ArrayDeque: int internalIndex(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
kotlin.UShort: byte toUByte-w2LRezQ(short)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
kotlin.io.FilesKt__FileReadWriteKt: void appendText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.savedstate.SavedStateRegistry: void performAttach$savedstate_release(androidx.lifecycle.Lifecycle)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(byte[],java.util.Collection)
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.FragmentTabHost$DummyTabFactory: FragmentTabHost$DummyTabFactory(android.content.Context)
kotlin.jvm.internal.PropertyReference0Impl: PropertyReference0Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.ranges.CharProgression$Companion: CharProgression$Companion()
kotlin.collections.MutableMapWithDefaultImpl: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
kotlin.collections.EmptyIterator: int nextIndex()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,byte)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
kotlin.UByteArray: boolean contains-7apg3OU(byte)
kotlinx.coroutines.scheduling.CoroutineScheduler: int createdWorkers(long)
androidx.core.view.ViewCompat: void setScaleY(android.view.View,float)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(java.lang.Object[],java.lang.Iterable)
androidx.core.content.PackageManagerCompat: java.lang.String getPermissionRevocationVerifierApp(android.content.pm.PackageManager)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.String toString()
androidx.collection.ContainerHelpers: int idealByteArraySize(int)
kotlin.NumbersKt__NumbersJVMKt: float fromBits(kotlin.jvm.internal.FloatCompanionObject,int)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: android.content.pm.ResolveInfo getGmsPicker$activity_release(android.content.Context)
kotlinx.coroutines.flow.StateFlowKt: void update(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence reversed(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment$10: Fragment$10(androidx.fragment.app.Fragment,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
androidx.core.app.NotificationCompat$TvExtender: androidx.core.app.NotificationCompat$TvExtender setChannelId(java.lang.String)
kotlin.text.Regex$special$$inlined$fromInt$1: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
androidx.lifecycle.LifecycleRegistry: int getObserverCount()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray getOverlayLayerViews()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
androidx.core.os.BundleCompat: BundleCompat()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence take(java.lang.CharSequence,int)
kotlin.ResultKt: java.lang.Object onSuccess(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.window.embedding.EmbeddingBackend$-CC: void overrideDecorator(androidx.window.embedding.EmbeddingBackendDecorator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: boolean containsValue(java.util.Map,java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.List getTransitionInfos()
kotlin.ULong: short mod-xj2QHRw(long,short)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.location.GpsStatusWrapper: int getConstellationType(int)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2: java.util.Iterator iterator()
kotlin.time.AbstractLongTimeSource: long read()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void showSystemOverlays(java.util.List)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendBroadcast$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.concurrent.futures.AbstractResolvableFuture: void complete(androidx.concurrent.futures.AbstractResolvableFuture)
kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1: BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1(kotlinx.coroutines.CoroutineExceptionHandler$Key)
androidx.versionedparcelable.ParcelField: java.lang.String defaultValue()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(char[],char,int,int,int,java.lang.Object)
kotlin.collections.builders.ListBuilder: void ensureCapacity(int)
io.flutter.embedding.engine.plugins.FlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.util.List)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
kotlin.experimental.BitwiseOperationsKt: short xor(short,short)
androidx.activity.result.contract.ActivityResultContracts$TakeVideo: android.graphics.Bitmap parseResult(int,android.content.Intent)
androidx.lifecycle.Transformations$switchMap$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitAttributes$Companion: SplitAttributes$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.DialogFragment$3: void onDismiss(android.content.DialogInterface)
kotlin.collections.ArraysKt___ArraysKt: short maxByOrThrow(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.builders.SetBuilder: boolean remove(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEditable()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOf(long[],int)
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(long[])
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt: java.io.OutputStream encodingWith(java.io.OutputStream,kotlin.io.encoding.Base64)
androidx.core.os.ProcessCompat$Api24Impl: ProcessCompat$Api24Impl()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopKt: long processNextEventInCurrentThread()
androidx.viewpager.widget.ViewPager: boolean pageRight()
kotlinx.coroutines.channels.BufferedChannel: void invokeCloseHandler()
io.flutter.embedding.android.FlutterFragment: void onFlutterUiNoLongerDisplayed()
androidx.window.embedding.SplitAttributes$SplitType: SplitAttributes$SplitType(java.lang.String,float)
androidx.core.view.ViewPropertyAnimatorCompat: ViewPropertyAnimatorCompat(android.view.View)
kotlin.text.StringsKt__StringsKt: java.lang.String removeRange(java.lang.String,int,int)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toCollection(kotlinx.coroutines.flow.Flow,java.util.Collection,kotlin.coroutines.Continuation)
kotlin.UIntArray: int getSize()
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
kotlin.collections.builders.MapBuilderKeys: java.util.Iterator iterator()
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onDetachedFromContentProvider()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: void closeReader()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
io.flutter.plugin.platform.PlatformViewRegistryImpl: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte getOrNull(byte[],int)
kotlin.collections.ArraysKt___ArraysKt: int first(int[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.ListBuilder: java.lang.String toString()
kotlin.text.MatchGroup: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean contains(java.lang.Object)
androidx.core.content.SharedPreferencesCompat: SharedPreferencesCompat()
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.jvm.JvmClassMappingKt: void getDeclaringJavaClass$annotations(java.lang.Enum)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment$SavedState saveInstanceState()
androidx.versionedparcelable.VersionedParcelStream: double readDouble()
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: kotlin.io.path.CopyActionResult invoke(kotlin.io.path.CopyActionContext,java.nio.file.Path,java.nio.file.Path)
androidx.versionedparcelable.VersionedParcel: float readFloat(float,int)
androidx.fragment.app.FragmentController: androidx.loader.app.LoaderManager getSupportLoaderManager()
kotlinx.coroutines.internal.DispatchedContinuation: void get_state$kotlinx_coroutines_core$annotations()
kotlin.collections.ArraysKt___ArraysKt: float reduceRightIndexed(float[],kotlin.jvm.functions.Function3)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)
kotlin.ranges.RangesKt___RangesKt: double coerceAtMost(double,double)
kotlin.io.path.PathsKt__PathUtilsKt: long fileSize(java.nio.file.Path)
androidx.core.content.res.TypedArrayUtils: boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
kotlin.time.TimeSource: kotlin.time.TimeMark markNow()
androidx.activity.result.contract.ActivityResultContracts$GetContent: java.lang.Object parseResult(int,android.content.Intent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-UCnP4_w(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.fragment.app.DialogFragment$4: void onChanged(androidx.lifecycle.LifecycleOwner)
kotlin.random.AbstractPlatformRandom: long nextLong()
kotlin.text.MatcherMatchResult$groupValues$1: boolean contains(java.lang.String)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.Typography: void getLeftGuillemete$annotations()
kotlin.time.Duration$Companion: void getDays-UwyO8pc$annotations(int)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: void onStart(android.view.ViewGroup)
kotlinx.coroutines.NonCancellable: boolean isCompleted()
kotlin.time.AbstractLongTimeSource$LongTimeMark: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration getConfiguration(int)
androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)
kotlin.collections.ArrayDeque: ArrayDeque(java.util.Collection)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean moveForward$atomicfu$array(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceArray,int,kotlinx.coroutines.internal.Segment)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile$default(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
kotlin.text.Regex$Serialized$Companion: Regex$Serialized$Companion()
androidx.core.graphics.CanvasKt: void withClip(android.graphics.Canvas,android.graphics.RectF,kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean areExtensionsAvailable()
io.flutter.embedding.android.FlutterFragment: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
androidx.core.util.TimeUtils: int printField(char[],int,char,int,boolean,int)
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.core.view.ContentInfoCompat$BuilderCompat: void setFlags(int)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.util.List scanIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: ChannelsKt__ChannelsKt$trySendBlocking$2(kotlinx.coroutines.channels.SendChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.Segment: boolean isRemoved()
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap sortedMapOf(java.util.Comparator,kotlin.Pair[])
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.Deferred$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Deferred,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createWeightStyle(android.content.Context,android.graphics.Typeface,int,boolean)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget valueOf(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component4-QwZRm1k(long[])
androidx.core.view.WindowInsetsControllerCompat$Impl30: int getSystemBarsBehavior()
kotlin.math.MathKt__MathJVMKt: float sin(float)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(float[])
androidx.fragment.app.FragmentTransitionImpl: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(byte[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: long div-UwyO8pc(long,double)
androidx.window.core.ValidSpecification: androidx.window.core.VerificationMode getVerificationMode()
kotlin.collections.ArraysKt___ArraysKt: char getOrElse(char[],int,kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndDoubleRange: int hashCode()
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,char,boolean)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object collectWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.DispatchedCoroutine: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType mutableCollectionType(kotlin.reflect.KType)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(boolean[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
androidx.window.embedding.EmbeddingCompat: void clearSplitAttributesCalculator()
androidx.core.view.SoftwareKeyboardControllerCompat$Impl: void show()
androidx.customview.widget.ExploreByTouchHelper: boolean isVisibleToUser(android.graphics.Rect)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: boolean getTransitioning()
kotlin.collections.CollectionsKt__CollectionsKt: boolean isNotEmpty(java.util.Collection)
androidx.arch.core.executor.ArchTaskExecutor: void lambda$static$1(java.lang.Runnable)
kotlin.collections.AbstractSet: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightNavigationBars(boolean)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: ParcelableCompat$ParcelableCompatCreatorHoneycombMR2(androidx.core.os.ParcelableCompatCreatorCallbacks)
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.util.Set)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UShortArray: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: double reduceIndexed(double[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int indexOf(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: android.view.WindowInsetsAnimation$Bounds toBounds()
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],float)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: FingerprintManagerCompat(android.content.Context)
androidx.lifecycle.viewmodel.CreationExtras: java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key)
kotlinx.coroutines.selects.SelectClause: kotlin.jvm.functions.Function3 getRegFunc()
androidx.core.view.WindowInsetsCompat$Type: int ime()
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: void onServiceDisconnected(android.content.ComponentName)
androidx.window.embedding.EmbeddingAdapter: androidx.window.extensions.embedding.SplitPairRule translateSplitPairRule(android.content.Context,androidx.window.embedding.SplitPairRule,java.lang.Class)
io.flutter.plugin.common.StringCodec: StringCodec()
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: StringsKt___StringsKt$asIterable$$inlined$Iterable$1(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(float[])
androidx.core.view.ContentInfoCompat: android.os.Bundle getExtras()
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
kotlinx.coroutines.TimeoutCancellationException: TimeoutCancellationException(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,int)
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(char[])
androidx.viewpager.widget.PagerTabStrip: void updateTextPositions(int,float,boolean)
androidx.fragment.app.FragmentStore: void moveToExpectedState()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectSend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element)
kotlin.sequences.FilteringSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.flow.Flow)
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean,boolean)
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: FlowKt__DelayKt$timeoutInternal$1$1$1(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingBackend getInstance(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: char reduceIndexed(char[],kotlin.jvm.functions.Function3)
kotlin.jvm.internal.IntSpreadBuilder: IntSpreadBuilder(int)
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,java.util.Map)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean isCancelled()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.util.Iterator)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
kotlinx.coroutines.flow.LintKt: boolean isActive(kotlinx.coroutines.flow.FlowCollector)
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
kotlin.Result$Failure: boolean equals(java.lang.Object)
kotlin.collections.SlidingWindowKt: kotlin.sequences.Sequence windowedSequence(kotlin.sequences.Sequence,int,int,boolean,boolean)
androidx.core.view.ViewGroupKt: android.view.View get(android.view.ViewGroup,int)
androidx.window.embedding.SplitRule$FinishBehavior: java.lang.String toString()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxWithOrNull(int[],java.util.Comparator)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(float[],java.lang.Iterable)
io.flutter.plugin.platform.PlatformViewsController: int access$1400(io.flutter.plugin.platform.PlatformViewsController,double)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel access$300(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
kotlinx.coroutines.Job: java.lang.Object join(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(char[],int)
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$2(boolean)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence subSequence(java.lang.String,int,int)
kotlinx.coroutines.internal.MainDispatcherLoader: MainDispatcherLoader()
kotlin.collections.ArraysKt___ArraysKt: long component1(long[])
androidx.core.os.UserHandleCompat: java.lang.reflect.Constructor getUserHandleConstructor()
kotlin.PreconditionsKt__AssertionsJVMKt: void assert(boolean)
kotlin.UShort: long floorDiv-VKZWuLQ(short,long)
kotlin.internal.UProgressionUtilKt: long getProgressionLastElement-7ftBX0g(long,long,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getCurrent()
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object getNextItem()
androidx.core.content.res.TypedArrayKt: int getDimensionPixelSizeOrThrow(android.content.res.TypedArray,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-Aa5vz7o$default(short[],int,int,int,java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: java.lang.String getInterfaceDescriptor()
androidx.core.app.NotificationCompat$MessagingStyle: boolean hasMessagesWithoutSender()
kotlin.random.jdk8.PlatformThreadLocalRandom: double nextDouble(double)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,java.util.Map)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(boolean[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.customview.widget.FocusStrategy$SequentialComparator: FocusStrategy$SequentialComparator(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: SurfaceTextureSurfaceProducer(long,android.os.Handler,io.flutter.embedding.engine.FlutterJNI,io.flutter.view.TextureRegistry$SurfaceTextureEntry)
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin)
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
kotlinx.coroutines.flow.StateFlowImpl: boolean tryEmit(java.lang.Object)
androidx.core.location.GpsStatusWrapper: int getConstellationFromPrn(int)
androidx.viewpager.widget.ViewPager$PagerObserver: ViewPager$PagerObserver(androidx.viewpager.widget.ViewPager)
androidx.fragment.app.FragmentTransaction: boolean isAddToBackStackAllowed()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)
androidx.core.content.res.CamColor: int toColor(float,float,float,androidx.core.content.res.ViewingConditions)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: void release()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
kotlinx.coroutines.JobSupport: boolean isCompleted()
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: BroadcastChannelImpl$registerSelectForSend$2(kotlinx.coroutines.channels.BroadcastChannelImpl,java.lang.Object,kotlinx.coroutines.selects.SelectInstance,kotlin.coroutines.Continuation)
androidx.core.graphics.ColorKt: float component1(android.graphics.Color)
kotlin.collections.AbstractCollection: boolean removeAll(java.util.Collection)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void onProviderEnabled(java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.os.LocaleListCompatWrapper: int matchScore(java.util.Locale,java.util.Locale)
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.FoldingFeature)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
androidx.loader.content.Loader: Loader(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-QwZRm1k(long[])
androidx.activity.BackEventCompat: float getTouchX()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: long getDurationMillis()
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: FlowKt__CollectKt$launchIn$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.builders.SerializedCollection: void readExternal(java.io.ObjectInput)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.os.Bundle getExtras(android.app.RemoteInput)
androidx.concurrent.futures.AbstractResolvableFuture: void interruptTask()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: FlowKt__ShareKt$launchSharing$1(kotlinx.coroutines.flow.SharingStarted,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.window.WindowProperties: WindowProperties()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChangeCancelled()
androidx.core.view.WindowInsetsCompat: boolean isConsumed()
androidx.fragment.app.FragmentFactory: FragmentFactory()
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setTag(java.lang.String)
androidx.collection.LruCache: LruCache(int)
kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.io.ConsoleKt: void println(char)
androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
kotlin.reflect.KCallable$DefaultImpls: void isAbstract$annotations()
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
kotlin.jvm.internal.ByteSpreadBuilder: int getSize(byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6800(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.io.FilesKt__UtilsKt: boolean copyRecursively(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ArrayIntIterator: boolean hasNext()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.util.List creationStackTrace()
kotlin.collections.ArraysKt___ArraysKt: boolean any(short[],kotlin.jvm.functions.Function1)
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(char[],java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.VirtualDisplayController$1: void onPaused()
kotlin.collections.ArraysKt___ArraysKt: void reverse(java.lang.Object[])
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
kotlin.TuplesKt: java.util.List toList(kotlin.Triple)
kotlin.KotlinVersion$Companion: KotlinVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Iterable)
kotlin.UIntArray: boolean remove(java.lang.Object)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduce(java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: android.net.Uri parseResult(int,android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character randomOrNull(char[])
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getChildCount()
androidx.core.app.NotificationChannelCompat$Api26Impl: void setSound(android.app.NotificationChannel,android.net.Uri,android.media.AudioAttributes)
kotlin.math.MathKt__MathJVMKt: double asin(double)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void restore$kotlinx_coroutines_core()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression reversed(kotlin.ranges.CharProgression)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.flow.Flow unsafeFlow(kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener$-CC: void $default$onBackStackChangeStarted(androidx.fragment.app.FragmentManager$OnBackStackChangedListener,androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: java.lang.String hintOnError()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: boolean handlesCropAndRotation()
kotlin.collections.MapWithDefaultImpl: java.util.Set getEntries()
io.flutter.plugin.common.BinaryMessenger: void enableBufferingIncomingMessages()
kotlin.collections.ArraysKt___ArraysKt: double averageOfFloat(java.lang.Float[])
androidx.core.content.ContextCompat$Api28Impl: ContextCompat$Api28Impl()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void runTransition(java.util.ArrayList,android.view.ViewGroup,kotlin.jvm.functions.Function0)
kotlin.ranges.UIntRange: java.lang.Comparable getStart()
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createSymbolicLinkPointingTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isTextEntryKey()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxWithOrNull-eOHTfZs(short[],java.util.Comparator)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean onActivityResult(android.app.Activity,int,int,android.content.Intent)
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: java.lang.Object invoke(java.lang.Object)
kotlin.text.RegexOption: int getMask()
androidx.fragment.app.FragmentTabHost: void onRestoreInstanceState(android.os.Parcelable)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: CombineKt$zipImpl$1$1$second$1$1(kotlinx.coroutines.channels.ProducerScope)
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object isPresent$$forInline(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.internal.ChannelFlow asChannelFlow(kotlinx.coroutines.flow.Flow)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi24Impl: boolean removeDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri)
androidx.core.view.animation.PathInterpolatorApi14: android.graphics.Path createQuad(float,float)
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1(kotlin.sequences.Sequence)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: TimeSource$Monotonic$ValueTimeMark(long)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger toBigInteger(long)
androidx.lifecycle.CoroutineLiveData: void access$setBlockRunner$p(androidx.lifecycle.CoroutineLiveData,androidx.lifecycle.BlockRunner)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.SortedSet toSortedSet(java.lang.Iterable,java.util.Comparator)
androidx.collection.MapCollections$EntrySet: int size()
com.getkeepsafe.relinker.ApkLibraryInstaller: com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry findAPKWithLibrary(android.content.Context,java.lang.String[],java.lang.String,com.getkeepsafe.relinker.ReLinkerInstance)
kotlinx.coroutines.channels.BufferedChannel: boolean cancel(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: AccessibilityClickableSpanCompat(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)
androidx.core.util.SparseIntArrayKt$keyIterator$1: boolean hasNext()
kotlin.collections.ArraysKt__ArraysKt: java.util.List flatten(java.lang.Object[][])
androidx.savedstate.Recreator$SavedStateProvider: android.os.Bundle saveState()
androidx.fragment.app.FragmentTransitionCompat21$3: FragmentTransitionCompat21$3(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata build()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$400(io.flutter.plugin.platform.PlatformViewsController)
kotlin.io.ByteStreamsKt: java.io.BufferedOutputStream buffered(java.io.OutputStream,int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isActive()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(float[],int)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong minWith-zrEWJaI(long[],java.util.Comparator)
kotlin.text.RegexKt: int access$toInt(java.lang.Iterable)
androidx.fragment.app.FragmentStateManager: void stop()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.core.app.NotificationChannelCompat: androidx.core.app.NotificationChannelCompat$Builder toBuilder()
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
kotlin.sequences.SequencesKt___SequencesKt$sorted$1: java.util.Iterator iterator()
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30: void lambda$hide$0(java.util.concurrent.atomic.AtomicBoolean,android.view.WindowInsetsController,int)
androidx.window.embedding.SplitAttributes$LayoutDirection$Companion: SplitAttributes$LayoutDirection$Companion()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)
kotlin.NotImplementedError: NotImplementedError(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: FlowKt__ReduceKt$first$3(kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler)
io.flutter.embedding.android.KeyboardManager$ViewDelegate: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
kotlin.io.encoding.Base64Kt: void getBase64UrlDecodeMap$annotations()
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol getCHANNEL_CLOSED()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int minOf(int,int)
androidx.core.content.pm.ShortcutXmlParser: java.util.Set parseShortcutIds(android.content.Context)
androidx.core.app.NotificationCompatBuilder$Api29Impl: NotificationCompatBuilder$Api29Impl()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void installDeferredComponent(int,java.lang.String)
kotlin.coroutines.CombinedContext$Serialized$Companion: CombinedContext$Serialized$Companion()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Object[])
androidx.viewpager.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$302(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeParameterReference: TypeParameterReference(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: ChannelsKt__DeprecatedKt$filterNotNull$1(kotlin.coroutines.Continuation)
kotlin.collections.MapsKt__MapsKt: java.util.Map optimizeReadOnlyMap(java.util.Map)
kotlin.jvm.internal.DoubleCompanionObject: void getNaN$annotations()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
kotlinx.coroutines.channels.BufferedChannel: void isClosedForSend$annotations()
androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation: GetTargetFragmentUsageViolation(androidx.fragment.app.Fragment)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection,java.lang.Class)
kotlinx.coroutines.AbstractTimeSource: void parkNanos(java.lang.Object,long)
androidx.core.util.Preconditions: float checkArgumentInRange(float,float,float,java.lang.String)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
kotlin.time.Duration$Companion: void getDays-UwyO8pc$annotations(double)
kotlin.jvm.internal.TypeParameterReference$Companion: TypeParameterReference$Companion()
androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStopped(android.app.Activity)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeLastWhile(java.util.List,kotlin.jvm.functions.Function1)
androidx.core.util.HalfKt: android.util.Half toHalf(short)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padEnd$default(java.lang.CharSequence,int,char,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Void alreadyResumedError(java.lang.Object)
org.jetbrains.annotations.Nls$Capitalization: org.jetbrains.annotations.Nls$Capitalization valueOf(java.lang.String)
io.flutter.embedding.android.FlutterFragment: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder penaltyDeath()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte minOrThrow-U(byte[])
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
kotlin.random.jdk8.PlatformThreadLocalRandom: java.util.Random getImpl()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void access$setReceiveResult$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.app.ActivityCompat$1: void run()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetEmbeddingRulesValid$1: SafeActivityEmbeddingComponentProvider$isMethodSetEmbeddingRulesValid$1(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.EventLoopKt: boolean isIoDispatcherThread(java.lang.Thread)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: DebugProbesImpl$CoroutineOwner(kotlin.coroutines.Continuation,kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl)
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_CLOSED$p()
kotlin.concurrent.TimersKt$timerTask$1: TimersKt$timerTask$1(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement$default(java.lang.ThreadLocal,java.lang.Object,int,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineGroupCache: io.flutter.embedding.engine.FlutterEngineGroup get(java.lang.String)
androidx.core.graphics.ColorKt: int getRed(int)
kotlin.UIntArray: boolean equals-impl0(int[],int[])
androidx.activity.result.contract.ActivityResultContracts$TakePicture: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(long[],kotlin.jvm.functions.Function2)
kotlin.properties.Delegates$observable$1: Delegates$observable$1(java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ActorScope,kotlin.coroutines.Continuation)
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean,boolean)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: NotificationCompat$CallStyle$Api20Impl()
kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.collections.AbstractMutableMap: java.util.Set entrySet()
androidx.collection.MapCollections$ArrayIterator: void remove()
androidx.window.embedding.EmbeddingCompat$setEmbeddingCallback$1: EmbeddingCompat$setEmbeddingCallback$1(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingCompat)
androidx.core.graphics.drawable.WrappedDrawable: void setWrappedDrawable(android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-rL5Bavg(short[])
androidx.window.embedding.EmbeddingInterfaceCompat: android.app.ActivityOptions setLaunchingActivityStack(android.app.ActivityOptions,android.os.IBinder)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterNotNullTo(java.lang.Iterable,java.util.Collection)
androidx.fragment.app.FragmentTabHost$SavedState: java.lang.String toString()
androidx.fragment.app.SpecialEffectsController: void executePendingOperations()
kotlin.io.AccessDeniedException: AccessDeniedException(java.io.File,java.io.File,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()
kotlin.sequences.DropTakeSequence: kotlin.sequences.Sequence take(int)
androidx.core.util.LruCacheKt$lruCache$4: LruCacheKt$lruCache$4(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4)
kotlin.comparisons.ReversedComparator: java.util.Comparator getComparator()
kotlin.sequences.SequencesKt___SequencesKt$minus$2: java.util.Iterator iterator()
androidx.lifecycle.EmittedSource: void removeSource()
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAt(java.util.List,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
kotlin.time.ComparableTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
kotlin.sequences.Sequence: java.util.Iterator iterator()
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfByte(java.lang.Iterable)
kotlin.jvm.internal.FloatCompanionObject: void getSIZE_BYTES$annotations()
kotlin.InitializedLazyImpl: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex--ajY-9A$annotations(int[])
com.getkeepsafe.relinker.elf.Elf$Header: com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
kotlin.io.ConsoleKt: void println(float)
kotlinx.coroutines.Delay: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.layout.adapter.sidecar.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.adapter.sidecar.SidecarCompat)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.collection.ArraySet$1: int colIndexOfValue(java.lang.Object)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: android.content.Intent build(android.content.Context)
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType)
androidx.core.os.UserHandleCompat: UserHandleCompat()
androidx.core.widget.AutoScrollHelper: void startAnimating()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)
androidx.customview.widget.ExploreByTouchHelper$2: ExploreByTouchHelper$2()
androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(short,long)
androidx.core.app.NotificationManagerCompat: boolean canUseFullScreenIntent()
kotlin.io.encoding.Base64JVMKt: byte[] platformCharsToBytes(kotlin.io.encoding.Base64,java.lang.CharSequence,int,int)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-Kr8caGY(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(float[],kotlin.jvm.functions.Function1)
kotlin.io.ByteStreamsKt$iterator$1: void setNextByte(int)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter(java.lang.String,char,java.lang.String,java.lang.String)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
kotlin.Triple: java.lang.Object getThird()
androidx.core.widget.EdgeEffectCompat: boolean onAbsorb(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: void invoke(java.lang.String)
kotlin.collections.UCollectionsKt___UCollectionsKt: short[] toUShortArray(java.util.Collection)
androidx.activity.OnBackPressedCallback: void handleOnBackPressed()
kotlin.collections.EmptyIterator: void add(java.lang.Void)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.versionedparcelable.VersionedParcel: long[] readLongArray(long[],int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean)
androidx.fragment.app.strictmode.WrongFragmentContainerViolation: android.view.ViewGroup getContainer()
kotlin.collections.ArraysKt___ArraysKt: byte[] sortedArray(byte[])
androidx.core.util.TypedValueCompat: float deriveDimension(int,float,android.util.DisplayMetrics)
androidx.activity.SystemBarStyle: androidx.activity.SystemBarStyle light(int,int)
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlin.ranges.URangesKt___URangesKt: short coerceAtLeast-5PvTz6A(short,short)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow receiveAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int maxOf(int,int,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9(kotlin.ranges.IntRange)
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler: void onFrameworkResponse(boolean)
kotlin.UnsignedKt: int uintRemainder-J1ME1BU(int,int)
kotlin.reflect.KParameter$DefaultImpls: void isVararg$annotations()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.PreconditionsKt: PreconditionsKt()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.graphics.ColorKt: float getLuminance(int)
kotlin.random.AbstractPlatformRandom: byte[] nextBytes(byte[])
kotlin.collections.MapsKt__MapsKt: java.util.Map buildMap(kotlin.jvm.functions.Function1)
kotlin.ranges.CharRange: java.lang.Character getEndExclusive()
org.intellij.lang.annotations.Flow: java.lang.String target()
androidx.activity.OnBackPressedCallback: void handleOnBackCancelled()
androidx.core.location.LocationManagerCompat$LocationListenerKey: LocationManagerCompat$LocationListenerKey(java.lang.String,androidx.core.location.LocationListenerCompat)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList$Companion: void checkBoundsIndexes$kotlin_stdlib(int,int,int)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.Result$Companion: Result$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.UArraySortingKt: void sortArray-4UcCI2c(byte[],int,int)
io.flutter.embedding.android.FlutterFragmentActivity: boolean isDebuggable()
androidx.core.os.ConfigurationCompat$Api24Impl: ConfigurationCompat$Api24Impl()
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: java.lang.String toString()
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
androidx.activity.result.IntentSenderRequest$Companion$CREATOR$1: IntentSenderRequest$Companion$CREATOR$1()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
androidx.core.view.GravityCompat: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
kotlin.collections.ArraysKt___ArraysKt: float sum(float[])
io.flutter.view.AccessibilityBridge$1: void onFocus(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.IntIterator iterator(int[])
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatchGroup get(java.lang.String)
androidx.lifecycle.viewmodel.savedstate.R: R()
kotlinx.coroutines.channels.BufferedChannel: void isEmpty$annotations()
com.getkeepsafe.relinker.ReLinker: com.getkeepsafe.relinker.ReLinkerInstance log(com.getkeepsafe.relinker.ReLinker$Logger)
kotlin.collections.builders.ListBuilder: void removeRangeInternal(int,int)
io.flutter.embedding.android.FlutterFragment: boolean attachToEngineAutomatically()
androidx.core.app.NotificationCompat: boolean getOngoing(android.app.Notification)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.extensions.embedding.SplitPlaceholderRule$Builder setDefaultSplitAttributesCompat(androidx.window.extensions.embedding.SplitPlaceholderRule$Builder,androidx.window.embedding.SplitAttributes)
androidx.core.graphics.ColorKt: float getRed(long)
androidx.viewpager.widget.ViewPager: void enableLayers(boolean)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
androidx.fragment.app.FragmentManager: void prepareBackStackTransition()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(short[],kotlin.jvm.functions.Function1)
kotlin.collections.IntIterator: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong maxBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcelize: boolean allowSerialization()
kotlinx.coroutines.selects.SelectKt: void ProcessResultFunction$annotations()
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2: java.lang.Object invoke()
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream inputStream(byte[],int,int)
androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(float[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceRightIndexedOrNull(float[],kotlin.jvm.functions.Function3)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] $values()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
androidx.fragment.app.FragmentManager: void invalidateMenuForFragment(androidx.fragment.app.Fragment)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: FlowKt__DelayKt$debounceInternal$1$3$2(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.ViewKt: void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1)
androidx.lifecycle.ComputableLiveData: ComputableLiveData(java.util.concurrent.Executor,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.Regex: Regex(java.util.regex.Pattern)
kotlin.jvm.functions.Function1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] toUShortArray(short[])
androidx.collection.ArrayMap: java.util.Collection values()
androidx.core.app.NotificationCompat$Builder$Api23Impl: android.graphics.drawable.Icon getLargeIcon(android.app.Notification)
androidx.window.embedding.RuleParser: RuleParser()
kotlin.UIntArray: int hashCode()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
kotlin.collections.AbstractMutableMap: AbstractMutableMap()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: android.view.accessibility.AccessibilityWindowInfo obtain()
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: java.lang.String toString()
androidx.core.animation.AnimatorKt$addListener$2: void invoke(android.animation.Animator)
androidx.core.view.ViewGroupKt$iterator$1: java.lang.Object next()
kotlin.text.StringsKt__RegexExtensionsJVMKt: StringsKt__RegexExtensionsJVMKt()
androidx.core.app.NotificationChannelCompat: java.lang.String getGroup()
androidx.lifecycle.LiveData: void removeObservers(androidx.lifecycle.LifecycleOwner)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float minOf(float,float,float)
kotlinx.coroutines.channels.BufferedChannel: void registerSelectForSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.collection.ArraySet: ArraySet()
kotlin.collections.MapsKt___MapsKt: double maxOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.YieldContext$Key: YieldContext$Key()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion()
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: FlowKt__ReduceKt$fold$2$emit$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-J1ME1BU(int,int)
kotlin.reflect.KClassesImplKt: java.lang.String getQualifiedOrSimpleName(kotlin.reflect.KClass)
androidx.core.net.MailTo: java.lang.String getSubject()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(double)
androidx.fragment.app.FragmentManagerViewModel$1: FragmentManagerViewModel$1()
org.intellij.lang.annotations.RegExp: java.lang.String suffix()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.OnTimeout$selectClause$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
androidx.window.layout.SafeWindowLayoutComponentProvider: androidx.window.extensions.layout.WindowLayoutComponent getWindowLayoutComponent()
androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
kotlinx.coroutines.debug.AgentPremain: void premain(java.lang.String,java.lang.instrument.Instrumentation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyInto-9-ak10g(short[],short[],int,int,int)
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader getLoader(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduceRightIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
androidx.concurrent.futures.CallbackToFutureAdapter$Resolver: java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(short[],kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: boolean contains(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(java.lang.Object[],java.lang.Object,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int indexOf(java.lang.Object)
androidx.core.os.TraceCompat$Api29Impl: void endAsyncSection(java.lang.String,int)
kotlin.coroutines.AbstractCoroutineContextKey: AbstractCoroutineContextKey(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitPairRule: int hashCode()
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.SafePublicationLazyImpl: java.lang.Object writeReplace()
androidx.core.view.ViewCompat$Api28Impl: ViewCompat$Api28Impl()
androidx.activity.SystemBarStyle: int getScrimWithEnforcedContrast$activity_release(boolean)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: FlowKt__ErrorsKt$retry$1(kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte)
kotlin.collections.RingBuffer: java.lang.Object[] access$getBuffer$p(kotlin.collections.RingBuffer)
androidx.customview.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.Job getParent()
androidx.viewpager.widget.PagerTabStrip$2: PagerTabStrip$2(androidx.viewpager.widget.PagerTabStrip)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOrNull(kotlin.sequences.Sequence)
androidx.core.location.GpsStatusWrapper: boolean hasAlmanacData(int)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] s()
androidx.core.util.Predicate: androidx.core.util.Predicate negate()
androidx.profileinstaller.R: R()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7(double[])
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
androidx.core.widget.TextViewCompat$Api24Impl: TextViewCompat$Api24Impl()
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(char[],kotlin.jvm.functions.Function1)
androidx.core.util.AtomicFile: void failWrite(java.io.FileOutputStream)
androidx.core.graphics.Insets: java.lang.String toString()
kotlin.NumbersKt__FloorDivModKt: short mod(int,short)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()
androidx.fragment.app.Fragment$SavedState$1: java.lang.Object[] newArray(int)
io.flutter.plugin.common.BinaryMessenger$-CC: io.flutter.plugin.common.BinaryMessenger$TaskQueue $default$makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
androidx.loader.content.Loader$ForceLoadContentObserver: boolean deliverSelfNotifications()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createWeightStyle(android.content.Context,android.graphics.Typeface,int,boolean)
androidx.core.view.DragStartHelper: void getTouchPosition(android.graphics.Point)
androidx.window.area.WindowAreaInfo$Type$Companion: WindowAreaInfo$Type$Companion()
kotlin.ULongArray: int size()
kotlin.collections.ArraysKt___ArraysKt: boolean all(short[],kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitRule: boolean checkParentMetrics$window_release(android.content.Context,android.view.WindowMetrics)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
kotlin.ranges.OpenEndDoubleRange: java.lang.Comparable getEndExclusive()
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.plugins.PluginRegistry: boolean has(java.lang.Class)
androidx.core.widget.TextViewKt$addTextChangedListener$3: void invoke(android.text.Editable)
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.Object[] toTypedArray(java.util.Collection)
kotlin.reflect.KClass: boolean isSealed()
androidx.core.app.MultiWindowModeChangedInfo: android.content.res.Configuration getNewConfig()
kotlin.collections.ArrayAsCollection: boolean removeAll(java.util.Collection)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip$default(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.lifecycle.PausingDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getCancelLabel()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte lastOrNull-GBYM_sE(byte[])
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicHeight()
androidx.window.embedding.EmbeddingBackend: void addRule(androidx.window.embedding.EmbeddingRule)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxWithOrNull-XMRcp5o(byte[],java.util.Comparator)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean single(boolean[])
androidx.lifecycle.SavedStateHandle: java.lang.Object get(java.lang.String)
androidx.window.embedding.SplitAttributes$SplitType$Companion$ratio$checkedRatio$1: SplitAttributes$SplitType$Companion$ratio$checkedRatio$1(float)
kotlin.reflect.TypeVariableImpl: java.lang.reflect.GenericDeclaration getGenericDeclaration()
kotlin.ranges.IntProgressionIterator: int nextInt()
kotlin.collections.ArraysKt___ArraysKt: float last(float[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage queueImage(android.media.Image)
androidx.loader.content.Loader: void startLoading()
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(byte[])
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator getIterator()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: TickerChannelsKt$fixedDelayTicker$1(kotlin.coroutines.Continuation)
androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()
androidx.core.app.NotificationCompatBuilder: java.util.List combineLists(java.util.List,java.util.List)
kotlinx.coroutines.AwaitAll$AwaitAllNode: void setHandle(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: FlowKt__CollectionKt$toCollection$1(kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.Character findLast(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.graphics.WeightTypefaceApi21: long nativeCreateFromTypefaceWithExactStyle(long,int,boolean)
kotlinx.coroutines.DispatchedCoroutine: boolean trySuspend()
com.getkeepsafe.relinker.ReLinker$LibraryLoader: void loadPath(java.lang.String)
androidx.core.app.NotificationCompat$BubbleMetadata: boolean isNotificationSuppressed()
androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(boolean[],kotlin.jvm.functions.Function1)
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] toByteArray-GBYM_sE(byte[])
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel getDisposer()
androidx.core.view.ContentInfoCompat$CompatImpl: int getFlags()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getRoleDescription()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.fragment.app.strictmode.FragmentStrictMode: void onSetTargetFragmentUsage(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int)
kotlin.random.Random$Default: int nextInt(int)
kotlin.jvm.PurelyImplements: java.lang.String value()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: float single(float[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.experimental.BitwiseOperationsKt: byte xor(byte,byte)
androidx.core.content.OnConfigurationChangedProvider: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.core.app.AppOpsManagerCompat: AppOpsManagerCompat()
android.support.v4.os.IResultReceiver$Stub: IResultReceiver$Stub()
androidx.core.util.SparseArrayKt$keyIterator$1: void setIndex(int)
kotlin.text.MatchResult$Destructured: MatchResult$Destructured(kotlin.text.MatchResult)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,short)
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence access$getSequence2$p(kotlin.sequences.MergingSequence)
androidx.core.content.ContextKt: void withStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1)
androidx.core.internal.view.SupportMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.core.widget.TextViewCompat$OreoCallback: void onDestroyActionMode(android.view.ActionMode)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: void reset()
androidx.loader.content.ModernAsyncTask$WorkerRunnable: ModernAsyncTask$WorkerRunnable()
kotlin.collections.builders.ListBuilderKt: int subarrayContentHashCode(java.lang.Object[],int,int)
androidx.core.util.SparseLongArrayKt: kotlin.collections.LongIterator valueIterator(android.util.SparseLongArray)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(long[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
kotlinx.coroutines.future.CompletableFutureCoroutine: void apply(java.lang.Object,java.lang.Throwable)
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
androidx.core.os.CancellationSignal: void cancel()
kotlin.collections.CollectionsKt___CollectionsKt: boolean none(java.lang.Iterable)
kotlinx.coroutines.channels.BufferedChannel: boolean tryResumeReceiver(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sliceArray-CFIt9YE(int[],java.util.Collection)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlinx.coroutines.ExceptionsKt: void addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlinx.coroutines.channels.ChannelResult: java.lang.String toString()
androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.location.LocationKt: double component1(android.location.Location)
androidx.loader.content.Loader$OnLoadCompleteListener: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
kotlinx.coroutines.scheduling.WorkQueueKt: int getMaskForStealingMode(kotlinx.coroutines.scheduling.Task)
androidx.core.app.NotificationCompat$TvExtender: NotificationCompat$TvExtender()
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
kotlinx.coroutines.internal.LockFreeTaskQueue: LockFreeTaskQueue(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: BroadcastChannelImpl$SubscriberBuffered(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-q8RuPII(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcelParcel: void writeStrongInterface(android.os.IInterface)
kotlin.ranges.URangesKt___URangesKt: long random(kotlin.ranges.ULongRange)
androidx.core.view.DisplayCutoutCompat$Api30Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.content.Intent getIntent()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceRightOrNull(float[],kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.viewpager.widget.ViewPager: boolean resetTouch()
kotlin.ranges.URangesKt___URangesKt: int random(kotlin.ranges.UIntRange)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: ActivityResultContracts$PickMultipleVisualMedia()
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: java.lang.Object invoke()
kotlinx.coroutines.selects.SelectImplementation: void invoke(java.lang.Throwable)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToBackground()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage: FlutterRenderer$ImageReaderSurfaceProducer$PerImage(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,android.media.Image,long)
kotlinx.coroutines.flow.StateFlowSlot: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_state$FU$p()
androidx.core.app.NotificationCompat: int getColor(android.app.Notification)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceRightOrNull-s8dVfGU(long[],kotlin.jvm.functions.Function2)
androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: void invoke(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyOf-r7IrZao(long[],int)
androidx.activity.contextaware.ContextAware: android.content.Context peekAvailableContext()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-GBYM_sE(byte[])
io.flutter.plugin.platform.PlatformViewsController: int toLogicalPixels(double)
androidx.core.app.AppOpsManagerCompat: int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Object access$yieldFrames(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.sequences.SequenceScope,kotlin.coroutines.jvm.internal.CoroutineStackFrame,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
kotlinx.coroutines.flow.FlowKt: java.lang.Object last(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContainerTitle()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst(java.lang.String,java.lang.String,java.lang.String,boolean)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Collection values()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
androidx.collection.ArraySet: void addAll(androidx.collection.ArraySet)
kotlinx.coroutines.flow.FlowKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.core.animation.AnimatorKt$addPauseListener$1: AnimatorKt$addPauseListener$1()
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
androidx.core.view.ViewConfigurationCompat: int getPreApi34MinimumFlingVelocityResId(android.content.res.Resources,int,int)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
androidx.window.embedding.RuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
kotlin.math.MathKt__MathJVMKt: void getUlp$annotations(float)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst$default(java.lang.String,char,char,boolean,int,java.lang.Object)
androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.RenderMode getRenderMode()
kotlinx.coroutines.channels.BufferedChannelKt: long constructSendersAndCloseStatus(long,int)
kotlin.collections.CollectionsKt___CollectionsKt: CollectionsKt___CollectionsKt()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
androidx.customview.widget.ViewDragHelper: int computeAxisDuration(int,int,int)
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
androidx.core.os.UserHandleCompat$Api24Impl: android.os.UserHandle getUserHandleForUid(int)
kotlin.io.path.PathsKt__PathReadWriteKt: java.util.List readLines(java.nio.file.Path,java.nio.charset.Charset)
androidx.core.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: FlowKt__ZipKt$combine$6$2(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,java.lang.String,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
kotlin.CompareToKt: int compareTo(java.lang.Comparable,java.lang.Object)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: void isActive$annotations(kotlinx.coroutines.CoroutineScope)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(double[])
androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class,androidx.lifecycle.SavedStateHandle)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.util.List getDartEntrypointArgs()
kotlin.KotlinVersion: java.lang.String toString()
androidx.loader.content.Loader: java.lang.String dataToString(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Character randomOrNull(java.lang.CharSequence)
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
androidx.lifecycle.Transformations$map$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.StartedWhileSubscribed: long access$getReplayExpiration$p(kotlinx.coroutines.flow.StartedWhileSubscribed)
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeout-KLykuaI(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: java.lang.Object invoke()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: FlowKt__LimitKt$drop$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,int)
io.flutter.embedding.engine.FlutterEngineGroupCache: boolean contains(java.lang.String)
kotlin.time.TimedValue: TimedValue(java.lang.Object,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: kotlinx.coroutines.sync.SemaphoreSegment invoke(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void executeTask(kotlinx.coroutines.scheduling.Task)
androidx.core.provider.FontsContractCompat$Columns: FontsContractCompat$Columns()
kotlin.ULong: long inc-s-VKNKU(long)
kotlin.time.Duration$Companion: long getMilliseconds-UwyO8pc(double)
io.flutter.embedding.android.FlutterViewDelegate: void growViewportMetricsToCaptionBar(android.content.Context,io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationEnd(android.animation.Animator)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.annotation.FloatRange: boolean fromInclusive()
kotlin.collections.ArraysKt___ArraysKt: double single(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long maxByOrThrow-U(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatchedCoroutine: void afterResume(java.lang.Object)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment createDefault()
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getContentUri()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.savedstate.Recreator$SavedStateProvider: void add(java.lang.String)
androidx.window.area.WindowAreaControllerImpl: void updateRearDisplayAvailability(int)
androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)
kotlinx.coroutines.channels.BufferedChannel: boolean updateCellExpandBufferSlow(kotlinx.coroutines.channels.ChannelSegment,int,long)
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(char[],int)
kotlin.UByte: int plus-WZ4Q5Ns(byte,int)
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean requestPermissions(android.app.Activity,java.lang.String[],int)
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.flow.SubscribedFlowCollector: SubscribedFlowCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int,int)
kotlin.coroutines.ContinuationKt: void resume(kotlin.coroutines.Continuation,java.lang.Object)
androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
kotlin.ranges.RangesKt___RangesKt: float coerceAtLeast(float,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: void remove()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.activity.ComponentActivity: ComponentActivity()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOfRangeInline(java.lang.Object[],int,int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareByDescending(kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: BufferedChannel$BufferedChannelIterator(kotlinx.coroutines.channels.BufferedChannel)
androidx.fragment.app.FragmentManager: int getActiveFragmentCount()
androidx.lifecycle.BlockRunner: BlockRunner(androidx.lifecycle.CoroutineLiveData,kotlin.jvm.functions.Function2,long,kotlinx.coroutines.CoroutineScope,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: char random(char[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: FlowKt__EmittersKt$unsafeTransform$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1,kotlin.coroutines.Continuation)
kotlin.collections.ArrayAsCollection: boolean contains(java.lang.Object)
kotlinx.coroutines.sync.SemaphoreImpl: int decPermits()
kotlin.collections.ArraysKt___ArraysKt: float[] sortedArray(float[])
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object minWith(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: CharsKt__CharJVMKt()
androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllState()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
kotlin.collections.ArrayDeque: boolean addAll(int,java.util.Collection)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void endOfStream()
androidx.core.graphics.TypefaceCompat: void clearCache()
androidx.core.net.DatagramSocketWrapper: DatagramSocketWrapper(java.net.DatagramSocket,java.io.FileDescriptor)
kotlin.ranges.CharRange: java.lang.Character getEndInclusive()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
kotlin.text.StringsKt__RegexExtensionsJVMKt: kotlin.text.Regex toRegex(java.util.regex.Pattern)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte minWith(byte[],java.util.Comparator)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect,androidx.core.view.WindowInsetsCompat)
androidx.window.area.reflectionguard.WindowAreaComponentValidator: WindowAreaComponentValidator()
kotlinx.coroutines.flow.LintKt$retry$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short minOf-t1qELG4(short,short[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: ChannelsKt__DeprecatedKt$filter$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
kotlin.text.Regex$Companion: Regex$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int hashCode-impl(long)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void dispose()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(boolean[],kotlin.jvm.functions.Function1)
androidx.core.app.PendingIntentCompat$Api26Impl: PendingIntentCompat$Api26Impl()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$getInstallations$FU$p()
kotlin.collections.ArraysKt___ArraysKt: short[] onEachIndexed(short[],kotlin.jvm.functions.Function2)
kotlin.text.Regex: java.lang.String replaceFirst(java.lang.CharSequence,java.lang.String)
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float minOf(long[],kotlin.jvm.functions.Function1)
androidx.core.widget.EdgeEffectCompat: void finish()
androidx.window.core.PredicateAdapter: java.lang.Object buildPairPredicate(kotlin.reflect.KClass,kotlin.reflect.KClass,kotlin.jvm.functions.Function2)
androidx.core.util.PairKt: java.lang.Object component2(androidx.core.util.Pair)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.Character elementAtOrNull(java.lang.CharSequence,int)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState[] newArray(int)
androidx.profileinstaller.ProfileVerifier: ProfileVerifier()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(android.view.View)
kotlin.collections.builders.MapBuilder: void ensureCapacity(int)
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: java.lang.Object parseResult(int,android.content.Intent)
androidx.activity.OnBackPressedDispatcher: void access$onBackCancelled(androidx.activity.OnBackPressedDispatcher)
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl: boolean close(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.SemaphoreKt: int access$getMAX_SPIN_CYCLES$p()
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object[] newArray(int)
androidx.window.layout.WindowInfoTracker$Companion: boolean access$getDEBUG$p()
androidx.core.view.VelocityTrackerCompat: float getAxisVelocity(android.view.VelocityTracker,int,int)
kotlinx.coroutines.CancelHandlerBase: void invoke(java.lang.Throwable)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface)
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle(androidx.core.app.NotificationCompat$Builder)
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(java.lang.Object[])
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
androidx.activity.result.ActivityResult: ActivityResult(android.os.Parcel)
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
kotlin.time.Duration$Companion: void getSeconds-UwyO8pc$annotations(double)
androidx.core.app.NotificationCompatJellybean: java.lang.Object[] getActionObjectsLocked(android.app.Notification)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
androidx.core.view.MenuItemCompat: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
io.flutter.embedding.android.KeyEmbedderResponder: void updatePressingState(java.lang.Long,java.lang.Long)
androidx.core.view.ViewCompat: void tickleInvalidationFlag(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(short[],short,int,int,int,java.lang.Object)
kotlin.ranges.LongRange: java.lang.String toString()
androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace$Named)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
androidx.activity.EdgeToEdgeBase: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.List filterIsInstance(java.lang.Iterable,java.lang.Class)
androidx.collection.ArraySet: ArraySet(androidx.collection.ArraySet)
kotlin.collections.builders.MapBuilder: boolean containsEntry$kotlin_stdlib(java.util.Map$Entry)
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedByDescending(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.jvm.functions.Function21: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1: void onTransitionEnd(android.transition.Transition)
kotlin.jvm.internal.PropertyReference2: PropertyReference2(java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.core.ConsumerAdapter: androidx.window.core.ConsumerAdapter$Subscription createSubscription(java.lang.Object,kotlin.reflect.KClass,java.lang.String,java.lang.String,android.app.Activity,kotlin.jvm.functions.Function1)
androidx.core.text.util.LocalePreferences: java.lang.String getTemperatureUnit()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt randomOrNull--ajY-9A(int[])
androidx.lifecycle.LiveData$ObserverWrapper: void detachObserver()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minByOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.ranges.LongProgressionIterator: long nextLong()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
kotlin.collections.ArraysKt___ArraysKt: boolean maxByOrThrow(boolean[],kotlin.jvm.functions.Function1)
kotlin.time.LongSaturatedMathKt: long saturatingAddInHalves-pTJri5U(long,long)
androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterTextureView: void init()
androidx.core.view.ViewCompat$2: java.lang.Object frameworkGet(android.view.View)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: PathsKt__PathRecursiveFunctionsKt()
kotlin.UByte: int compareTo-WZ4Q5Ns(byte,int)
kotlin.sequences.SubSequence$iterator$1: SubSequence$iterator$1(kotlin.sequences.SubSequence)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void runWorker()
androidx.collection.CircularIntArray: int get(int)
androidx.core.app.JobIntentService$CommandProcessor: JobIntentService$CommandProcessor(androidx.core.app.JobIntentService)
androidx.concurrent.futures.AbstractResolvableFuture$Failure: AbstractResolvableFuture$Failure(java.lang.Throwable)
androidx.collection.ArrayMap: ArrayMap()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: FingerprintManagerCompat$AuthenticationResult(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
kotlinx.coroutines.sync.SemaphoreKt: java.lang.Object withPermit$$forInline(kotlinx.coroutines.sync.Semaphore,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
kotlin.text.StringsKt__StringsKt: boolean isNullOrEmpty(java.lang.CharSequence)
kotlin.jvm.functions.Function19: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(char[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setKey(java.lang.String)
kotlin.ranges.URangesKt___URangesKt: short coerceIn-VKSA0NQ(short,short,short)
kotlin.ranges.RangesKt___RangesKt: long first(kotlin.ranges.LongProgression)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int lastIndexOf(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean contains(java.lang.Object)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List enhanceStackTraceWithThreadDumpImpl(java.lang.String,java.lang.Thread,java.util.List)
androidx.core.app.NotificationCompat$WearableExtender$Api20Impl: NotificationCompat$WearableExtender$Api20Impl()
io.flutter.view.AccessibilityBridge: void setAccessibilityPaneTitle(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
kotlinx.coroutines.channels.BufferedChannel: void registerSelectForReceive(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: void scheduleEngineFrame()
kotlin.text.Regex$splitToSequence$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMultiLine(boolean)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function3)
androidx.activity.EdgeToEdgeApi26: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
androidx.core.location.LocationManagerCompat$GnssStatusTransport: void onStopped()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task trySteal(int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: boolean toBooleanNullable(java.lang.String)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareByDescending(java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.view.MenuKt: void minusAssign(android.view.Menu,android.view.MenuItem)
kotlin.collections.ArraysKt___ArraysKt: int[] reversedArray(int[])
androidx.viewpager.widget.ViewPager$PagerObserver: void onChanged()
kotlin.collections.EmptySet: java.lang.String toString()
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,kotlin.Pair[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenMerge$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: int decrementCreatedWorkers()
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle forOngoingCall(androidx.core.app.Person,android.app.PendingIntent)
androidx.lifecycle.SavedStateHandleController: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.sequences.SequencesKt___SequencesKt: boolean any(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(int[])
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData distinctUntilChanged(androidx.lifecycle.LiveData)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List chunked(java.lang.Iterable,int)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl: void notifyViewTextChanged(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,java.lang.CharSequence)
androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)
androidx.core.graphics.drawable.RoundedBitmapDrawable21: void getOutline(android.graphics.Outline)
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String)
kotlin.time.Duration: boolean isNegative-impl(long)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression reversed(kotlin.ranges.IntProgression)
kotlin.PreconditionsKt__PreconditionsKt: void check(boolean,kotlin.jvm.functions.Function0)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(double[],double[])
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
kotlin.collections.ArraysKt___ArraysKt: boolean[] onEachIndexed(boolean[],kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])
kotlin.io.TextStreamsKt: java.util.List readLines(java.io.Reader)
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
androidx.core.os.BuildCompat: boolean isAtLeastR()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(java.lang.Object[])
androidx.core.widget.ScrollerCompat: boolean computeScrollOffset()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: boolean cancelImpl(java.lang.Throwable)
androidx.core.app.ActivityCompat$Api28Impl: java.lang.Object requireViewById(android.app.Activity,int)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyInto(short[],short[],int,int,int)
androidx.fragment.app.FragmentManager: void showFragment(androidx.fragment.app.Fragment)
kotlin.UByte: byte dec-w2LRezQ(byte)
kotlin.io.FilesKt__UtilsKt: java.lang.String getExtension(java.io.File)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
kotlinx.coroutines.JobSupport: void access$registerSelectForOnJoin(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void onLocationChanged(java.util.List)
kotlin.reflect.ParameterizedTypeImpl: int hashCode()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
androidx.fragment.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)
kotlin.reflect.TypeVariableImpl: java.lang.reflect.Type[] getBounds()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
kotlinx.coroutines.JobSupport: java.lang.Object onAwaitInternalProcessResFunc(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.loader.content.CursorLoader: android.net.Uri getUri()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtraStreamUriWithAuthority(java.lang.String)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minWithOrNull(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-WpHrYlw(byte[],byte,int,int)
kotlin.jvm.internal.ClassReference: void getVisibility$annotations()
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.core.widget.CheckedTextViewCompat: CheckedTextViewCompat()
androidx.lifecycle.LifecycleKt$eventFlow$1$1: void invoke()
kotlin.collections.EmptyList: int hashCode()
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper: void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
kotlin.time.TimeSource$Monotonic: kotlin.time.TimeMark markNow()
kotlinx.coroutines.selects.OnTimeout$selectClause$1: OnTimeout$selectClause$1()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: FlowKt__ShareKt$launchSharingDeferred$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
kotlin.collections.AbstractCollection: boolean addAll(java.util.Collection)
kotlinx.coroutines.channels.LazyActorCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.lang.Object getSharedElementTransition()
kotlinx.coroutines.debug.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
androidx.customview.widget.ViewDragHelper$1: float getInterpolation(float)
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean isClosed()
kotlin.reflect.KCallable$DefaultImpls: void isFinal$annotations()
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOrThrow(java.lang.Comparable[])
io.flutter.embedding.android.KeyboardManager: void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int lastIndexOf-7apg3OU(byte)
androidx.fragment.app.SpecialEffectsController$Operation: java.util.List getEffects$fragment_release()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],boolean)
kotlin.UByteArray: java.util.Iterator iterator()
kotlin.sequences.TransformingIndexedSequence: java.util.Iterator iterator()
androidx.lifecycle.LiveDataScopeImpl: void setTarget$lifecycle_livedata_release(androidx.lifecycle.CoroutineLiveData)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
kotlin.sequences.SequencesKt__SequencesJVMKt: kotlin.sequences.Sequence asSequence(java.util.Enumeration)
kotlinx.coroutines.channels.ChannelSegment: void setElementLazy(int,java.lang.Object)
kotlin.collections.UCollectionsKt___UCollectionsKt: UCollectionsKt___UCollectionsKt()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat: boolean isPinned()
kotlinx.coroutines.internal.ScopeCoroutine: void afterResume(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean any(double[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long singleOrNull(long[],kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
kotlin.io.encoding.Base64: int decodeIntoByteArray$default(kotlin.io.encoding.Base64,java.lang.CharSequence,byte[],int,int,int,int,java.lang.Object)
kotlin.io.encoding.Base64: byte[] encodeToByteArray$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationIcon(android.app.Notification$CallStyle,android.graphics.drawable.Icon)
androidx.window.embedding.SplitAttributesCalculatorParams: boolean areDefaultConstraintsSatisfied()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $values()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle)
androidx.core.content.res.ViewingConditions: float getZ()
androidx.activity.OnBackPressedCallback: void remove()
androidx.fragment.app.ListFragment: android.widget.ListAdapter requireListAdapter()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object tryReceive-PtdJZtk()
androidx.fragment.app.FragmentTabHost$DummyTabFactory: android.view.View createTabContent(java.lang.String)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation: WrongNestedHierarchyViolation(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int)
kotlin.reflect.TypesJVMKt: java.lang.String access$typeToString(java.lang.reflect.Type)
androidx.profileinstaller.ProfileVerifier$Cache: boolean equals(java.lang.Object)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOrNull(kotlin.sequences.Sequence)
kotlin.sequences.SequencesKt__SequencesKt$flatten$3: SequencesKt__SequencesKt$flatten$3()
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(char[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationCompat$Impl: float getFraction()
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor: int getWeight(java.lang.Object)
kotlin.UByte: UByte(byte)
io.flutter.plugin.platform.PlatformViewsController: void attachToView(io.flutter.embedding.android.FlutterView)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] plus-CFIt9YE(int[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(int[],int)
androidx.core.provider.RequestExecutor$ReplyRunnable: RequestExecutor$ReplyRunnable(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer)
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
kotlin.collections.AbstractMap: int getSize()
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.embedding.SplitRule$Companion: SplitRule$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1: java.lang.Object invoke()
androidx.profileinstaller.ProfileTranscoder: java.lang.String generateDexKey(java.lang.String,java.lang.String,byte[])
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
androidx.fragment.app.FragmentContainerView: void dispatchDraw(android.graphics.Canvas)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.lifecycle.Transformations$switchMap$1: Transformations$switchMap$1(kotlin.jvm.functions.Function1,kotlin.jvm.internal.Ref$ObjectRef,androidx.lifecycle.MediatorLiveData)
androidx.core.transition.TransitionKt$addListener$listener$1: TransitionKt$addListener$listener$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)
androidx.core.view.DisplayCutoutCompat$Api28Impl: DisplayCutoutCompat$Api28Impl()
androidx.window.embedding.SplitAttributes$LayoutDirection: SplitAttributes$LayoutDirection(java.lang.String,int)
androidx.core.app.NotificationCompat$Api26Impl: java.lang.CharSequence getSettingsText(android.app.Notification)
androidx.window.embedding.SplitRule$FinishBehavior$Companion: SplitRule$FinishBehavior$Companion()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator then(java.util.Comparator,java.util.Comparator)
io.flutter.FlutterInjector$Builder: void fillDefaults()
kotlinx.coroutines.JobSupport: void initParentJob(kotlinx.coroutines.Job)
kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
com.example.wellnesshub.MainActivity: MainActivity()
androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.core.location.GpsStatusWrapper: int getSvid(int)
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2: WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,android.view.View)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintHideIcon()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object next(kotlin.coroutines.Continuation)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,int)
androidx.core.view.ViewConfigurationCompat: int getPlatformResId(android.content.res.Resources,java.lang.String,java.lang.String)
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: void addInitializer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean any(char[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LifecycleKt$eventFlow$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
kotlin.TypeAliasesKt: void Exception$annotations()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object single(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.graphics.BitmapCompat$Api27Impl: android.graphics.Bitmap createBitmapWithSourceColorspace(int,int,android.graphics.Bitmap,boolean)
kotlin.NumbersKt__NumbersJVMKt: long rotateRight(long,int)
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.time.Duration: long access$getINFINITE$cp()
io.flutter.embedding.android.KeyEmbedderResponder: void sendKeyEvent(io.flutter.embedding.android.KeyData,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: java.lang.StackTraceElement getStackTraceElement()
io.flutter.embedding.android.FlutterFragment: void onCreate(android.os.Bundle)
kotlinx.coroutines.channels.LazyActorCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[])
androidx.core.graphics.drawable.IconCompat: int getType()
kotlin.collections.UArraySortingKt: void sortArray--nroSd4(long[],int,int)
kotlin.ranges.URangesKt___URangesKt: byte coerceIn-b33U2AM(byte,byte,byte)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat)
androidx.fragment.app.FragmentManager: void removeRetainedFragment(androidx.fragment.app.Fragment)
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat build()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
androidx.activity.EdgeToEdgeApi29: EdgeToEdgeApi29()
androidx.collection.CircularArray: boolean isEmpty()
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.core.content.res.ResourcesCompat: void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.collections.ArrayDeque: java.lang.Object[] toArray()
io.flutter.util.TraceSection: void beginAsyncSection(java.lang.String,int)
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: void disconnectFromService()
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int hashCode()
kotlin.collections.FloatIterator: void remove()
androidx.core.view.WindowCompat$Api16Impl: WindowCompat$Api16Impl()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.random.URandomKt: int nextUInt(kotlin.random.Random,kotlin.ranges.UIntRange)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(boolean[],kotlin.jvm.functions.Function1)
kotlin.ULong: long constructor-impl(long)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List slice(java.util.List,java.lang.Iterable)
kotlin.jvm.internal.ClassReference: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getOpacity()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: java.lang.Object get(int)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment retrieveExistingFlutterFragmentIfPossible()
kotlin.math.MathKt__MathJVMKt: int getSign(long)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.WindowInsets forwardToViewIfNeeded(android.view.View,android.view.WindowInsets)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence takeWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceAtLeast(java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationChannelGroupCompat$Api26Impl: java.lang.String getGroup(android.app.NotificationChannel)
androidx.loader.app.LoaderManager: void destroyLoader(int)
androidx.viewpager.widget.PagerTabStrip: void setBackgroundResource(int)
androidx.fragment.app.DialogFragment: void onStop()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendRange(java.lang.StringBuilder,java.lang.CharSequence,int,int)
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.Object clone()
kotlin.text.StringsKt___StringsKt: java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.ViewKt: int getMarginBottom(android.view.View)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,char)
com.getkeepsafe.relinker.ApkLibraryInstaller: void installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)
kotlin.collections.ArraysKt___ArraysKt: int count(long[])
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.plugin.common.BasicMessageChannel)
androidx.core.util.SparseBooleanArrayKt: boolean isEmpty(android.util.SparseBooleanArray)
kotlin.collections.ArraysKt___ArraysKt: byte[] sliceArray(byte[],java.util.Collection)
androidx.lifecycle.BlockRunner$maybeRun$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: char component2(char[])
androidx.core.content.res.CamUtils: float yFromLStar(float)
kotlin.jvm.internal.MutablePropertyReference2Impl: MutablePropertyReference2Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
androidx.window.embedding.SplitAttributes$SplitType: float getValue$window_release()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.customview.R$attr: R$attr()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
kotlinx.coroutines.flow.internal.FlowCoroutine: boolean childCancelled(java.lang.Throwable)
kotlin.collections.DoubleIterator: void remove()
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set getEntries()
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation,float)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2: FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryResumeNextFromQueue()
kotlin.text.StringsKt__StringsJVMKt: int nativeLastIndexOf(java.lang.String,char,int)
kotlin.collections.ArraysKt___ArraysKt: boolean any(boolean[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtrasWithoutDuplicateData(android.app.Notification,androidx.core.app.NotificationCompat$Style)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence shuffled(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(char[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.window.embedding.SplitRule$FinishBehavior$Companion: SplitRule$FinishBehavior$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(java.util.Locale)
kotlinx.coroutines.JobSupport$ChildCompletion: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(short[])
kotlin.NumbersKt__FloorDivModKt: float mod(float,float)
androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()
org.intellij.lang.annotations.Flow: boolean sourceIsContainer()
kotlin.collections.GroupingKt__GroupingKt: java.util.Map aggregate(kotlin.collections.Grouping,kotlin.jvm.functions.Function4)
kotlin.time.AdjustedTimeMark: boolean hasNotPassedNow()
androidx.core.app.NotificationCompat$Api24Impl: boolean getAllowGeneratedReplies(android.app.Notification$Action)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)
androidx.window.reflection.ReflectionUtils$validateImplementation$1$1: ReflectionUtils$validateImplementation$1$1(java.lang.Class,java.lang.reflect.Method)
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: java.lang.Boolean invoke(kotlin.collections.IndexedValue)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: FragmentStrictMode$Flag(java.lang.String,int)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set createSetBuilder(int)
androidx.viewpager.widget.PagerTitleStrip: int getMinHeight()
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getStableInsets()
kotlin.reflect.WildcardTypeImpl: boolean equals(java.lang.Object)
androidx.activity.contextaware.ContextAwareKt: java.lang.Object withContextAvailable$$forInline(androidx.activity.contextaware.ContextAware,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: SequencesKt___SequencesKt$onEachIndexed$1(kotlin.jvm.functions.Function2)
kotlin.time.DurationKt: void getNanoseconds$annotations(int)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
androidx.window.core.Logger: void debug(java.lang.String,java.lang.String)
kotlin.text.Regex: kotlin.text.MatchResult find(java.lang.CharSequence,int)
androidx.core.app.NotificationChannelCompat$Api26Impl: void setDescription(android.app.NotificationChannel,java.lang.String)
kotlin.NumbersKt__NumbersJVMKt: int countLeadingZeroBits(long)
kotlin.ranges.URangesKt___URangesKt: int last(kotlin.ranges.UIntProgression)
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()
androidx.savedstate.R$id: R$id()
kotlin.text.RegexOption: int getValue()
androidx.core.graphics.ColorKt: int component4(int)
kotlin.time.AbstractLongTimeSource: AbstractLongTimeSource(kotlin.time.DurationUnit)
org.jetbrains.annotations.ApiStatus$ScheduledForRemoval: java.lang.String inVersion()
androidx.activity.result.contract.ActivityResultContracts$RequestPermission: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(short[],kotlin.jvm.functions.Function1)
kotlin.KotlinNullPointerException: KotlinNullPointerException()
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object fixedDelayTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.util.List,java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence Sequence(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend: android.content.Context access$getApplicationContext$p(androidx.window.embedding.ExtensionEmbeddingBackend)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
kotlin.collections.CollectionsKt___CollectionsKt: float maxOrThrow(java.lang.Iterable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void bind(java.net.InetAddress,int)
kotlinx.coroutines.flow.StartedLazily$command$1: StartedLazily$command$1(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult: boolean isClosed-impl(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: void validate$kotlinx_coroutines_core()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: IUnusedAppRestrictionsBackportCallback$Stub()
kotlin.ContextFunctionTypeParams: int count()
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.Regex: Regex(java.lang.String,kotlin.text.RegexOption)
kotlin.reflect.KType$DefaultImpls: void getArguments$annotations()
androidx.collection.CircularIntArray: void clear()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(long[],long,int,int,int,java.lang.Object)
kotlin.collections.RingBuffer: RingBuffer(int)
kotlin.collections.AbstractCollection: boolean remove(java.lang.Object)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path toPath(java.net.URI)
androidx.core.graphics.WeightTypefaceApi26: WeightTypefaceApi26()
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
kotlinx.coroutines.internal.ThreadLocalKt: java.lang.ThreadLocal commonThreadLocal(kotlinx.coroutines.internal.Symbol)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.io.encoding.EncodeOutputStream: int copyIntoByteBuffer(byte[],int,int)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,byte)
kotlinx.coroutines.selects.SelectBuilderImpl: SelectBuilderImpl(kotlin.coroutines.Continuation)
kotlin.reflect.KCallable$DefaultImpls: void getTypeParameters$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceOrNull(short[],kotlin.jvm.functions.Function2)
androidx.customview.widget.FocusStrategy: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4: void invoke()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.core.graphics.RegionKt: android.graphics.Region minus(android.graphics.Region,android.graphics.Region)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.app.Notification$Action$Builder createActionBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(double,java.math.MathContext)
kotlin.io.FileTreeWalk$FileTreeWalkIterator: void computeNext()
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Object[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics: void onResultReceived(int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: ChannelsKt__DeprecatedKt$single$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double min(java.lang.Double[])
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow dropWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$2: ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$2()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader createImageReader29()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setRank(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(short[])
androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
kotlinx.coroutines.ResumeUndispatchedRunnable: void run()
androidx.core.util.Preconditions: void checkState(boolean)
androidx.core.view.KeyEventDispatcher$Component: boolean superDispatchKeyEvent(android.view.KeyEvent)
kotlin.io.ConsoleKt: void print(int)
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult[] $values()
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,androidx.activity.result.PickVisualMediaRequest)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow map(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.view.ViewKt$doOnNextLayout$1: ViewKt$doOnNextLayout$1(kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__IndentKt: java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceFirstCharWithCharSequence(java.lang.String,kotlin.jvm.functions.Function1)
androidx.fragment.app.BackStackRecord: int getBreadCrumbShortTitleRes()
androidx.core.provider.FontProvider$ContentQueryWrapper$-CC: androidx.core.provider.FontProvider$ContentQueryWrapper make(android.content.Context,android.net.Uri)
androidx.activity.OnBackPressedDispatcher: void access$updateEnabledCallbacks(androidx.activity.OnBackPressedDispatcher)
kotlin.ULongArray: void clear()
kotlin.DeepRecursiveScope: java.lang.Void invoke(kotlin.DeepRecursiveFunction,java.lang.Object)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core()
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: SequencesKt___SequencesKt$sortedWith$1(kotlin.sequences.Sequence,java.util.Comparator)
android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)
kotlin.io.FilesKt__FileReadWriteKt: void forEachBlock(java.io.File,kotlin.jvm.functions.Function2)
androidx.activity.result.ActivityResultRegistry$2: void unregister()
kotlin.io.path.ExceptionsCollector: ExceptionsCollector()
androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.core.view.ContentInfoCompat$Compat: android.view.ContentInfo getWrapped()
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair)
kotlin.jvm.jdk8.JvmRepeatableKt: void JvmRepeatable$annotations()
kotlin.text.StringsKt__StringsKt$splitToSequence$1: StringsKt__StringsKt$splitToSequence$1(java.lang.CharSequence)
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context,android.util.AttributeSet)
kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.customview.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)
kotlin.sequences.DropSequence$iterator$1: java.util.Iterator getIterator()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodClearSplitInfoCallbackValid$1: java.lang.Boolean invoke()
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: java.lang.String systemProp(java.lang.String)
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
kotlin.sequences.DropWhileSequence$iterator$1: java.util.Iterator getIterator()
androidx.core.os.BuildCompat: boolean isAtLeastT()
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionExceptionOrNull()
kotlinx.coroutines.NonCancellable: boolean isActive()
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: androidx.core.text.PrecomputedTextCompat call()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8,kotlin.coroutines.Continuation)
androidx.core.os.LocaleListCompatWrapper: boolean isEmpty()
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)
androidx.customview.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollVertically(int)
kotlinx.coroutines.flow.AbstractFlow: AbstractFlow()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(int[],kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRenderTarget makePlatformViewRenderTarget(io.flutter.view.TextureRegistry)
androidx.lifecycle.SavedStateHandle: java.lang.Object remove(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
androidx.core.location.GnssStatusWrapper$Api30Impl: GnssStatusWrapper$Api30Impl()
androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer findLast(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.InlineList: kotlinx.coroutines.internal.InlineList box-impl(java.lang.Object)
kotlin.jvm.internal.ClassReference: boolean isFun()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(androidx.window.core.ActivityComponentInfo,androidx.window.core.ActivityComponentInfo)
kotlin.ULong: long plus-7apg3OU(long,byte)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: char first(char[])
androidx.fragment.app.SpecialEffectsController: void forceCompleteAllOperations()
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setSystemUiChangeListener()
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer decodeMessage(java.nio.ByteBuffer)
androidx.core.view.ViewCompat: float getY(android.view.View)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)
kotlinx.coroutines.internal.ThreadSafeHeapNode: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean)
kotlinx.coroutines.channels.ActorCoroutine: ActorCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseIntArray access$100(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder shouldAttachEngineToActivity(boolean)
kotlin.collections.UArraySortingKt: int partition-oBK06Vg(int[],int,int)
kotlin.random.Random: kotlin.random.Random access$getDefaultRandom$cp()
androidx.core.content.UnusedAppRestrictionsBackportService$1: UnusedAppRestrictionsBackportService$1(androidx.core.content.UnusedAppRestrictionsBackportService)
androidx.core.view.animation.PathInterpolatorCompat: PathInterpolatorCompat()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.List,kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
kotlin.sequences.SequencesKt__SequencesKt$flatten$3: java.lang.Object invoke(java.lang.Object)
androidx.customview.widget.ViewDragHelper: ViewDragHelper(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
androidx.core.graphics.Insets: androidx.core.graphics.Insets add(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
androidx.fragment.app.FragmentTabHost$SavedState$1: androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8(boolean[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(long[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
androidx.core.graphics.PointKt: android.graphics.PointF plus(android.graphics.PointF,android.graphics.PointF)
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.android.FlutterFragment: void onTrimMemory(int)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
kotlin.jvm.internal.PropertyReference1: PropertyReference1(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
kotlin.ULongArray: boolean removeAll(java.util.Collection)
androidx.core.view.DragStartHelper: void detach()
kotlin.jvm.internal.MutablePropertyReference0Impl: java.lang.Object get()
kotlin.ULong: byte mod-7apg3OU(long,byte)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
androidx.startup.InitializationProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: CollectionsKt__MutableCollectionsJVMKt()
kotlin.sequences.TakeSequence: java.util.Iterator iterator()
kotlinx.coroutines.selects.SelectBuilderImpl: void handleBuilderException(java.lang.Throwable)
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcelable)
kotlin.collections.ReversedListReadOnly: int getSize()
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: void onResume()
androidx.lifecycle.Transformations$switchMap$2$onChanged$1: void invoke(java.lang.Object)
androidx.activity.result.ActivityResultRegistry: void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.core.app.RemoteInput: RemoteInput(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,int,android.os.Bundle,java.util.Set)
kotlinx.coroutines.sync.Mutex$DefaultImpls: java.lang.Object lock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4: java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature)
io.flutter.plugin.platform.PlatformViewsController: void lambda$initializePlatformViewIfNeeded$2(int,android.view.View,boolean)
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTooltipText()
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1: void onTransitionStart(android.transition.Transition)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.MotionEventCompat: int getButtonState(android.view.MotionEvent)
kotlin.sequences.GeneratorSequence: GeneratorSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: FlowLiveDataConversions$asFlow$1$2(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
androidx.lifecycle.EmittedSource$disposeNow$2: EmittedSource$disposeNow$2(androidx.lifecycle.EmittedSource,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManagerNonConfig: FragmentManagerNonConfig(java.util.Collection,java.util.Map,java.util.Map)
androidx.startup.StartupLogger: void w(java.lang.String)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream inputStream(byte[])
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: boolean trySelect(java.lang.Object,java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
kotlin.UInt$Companion: UInt$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.util.List deleteRecursivelyImpl$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path)
androidx.activity.result.ActivityResultRegistry$2: ActivityResultRegistry$2(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List filterIsInstance(java.lang.Object[],java.lang.Class)
androidx.fragment.app.FragmentManager$6: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(int[])
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean isEmpty()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
androidx.activity.result.contract.ActivityResultContract$SynchronousResult: java.lang.Object getValue()
kotlin.collections.ArraysKt___ArraysKt: double average(double[])
androidx.core.location.LocationRequestCompat$Api31Impl: android.location.LocationRequest toLocationRequest(androidx.core.location.LocationRequestCompat)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: float maxWithOrThrow(float[],java.util.Comparator)
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutineReusable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: java.lang.Throwable invoke(java.lang.Throwable)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
com.getkeepsafe.relinker.ReLinkerInstance$2: ReLinkerInstance$2(com.getkeepsafe.relinker.ReLinkerInstance,java.lang.String)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.random.PlatformRandomKt: double doubleFromParts(int,int)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(java.lang.StringBuilder)
kotlin.SafePublicationLazyImpl$Companion: SafePublicationLazyImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.provider.DocumentsContractCompat: DocumentsContractCompat()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind[] $values()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
kotlin.collections.AbstractMap$values$1: AbstractMap$values$1(kotlin.collections.AbstractMap)
androidx.fragment.app.FragmentManager: void noteStateNotSaved()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceOrNull-s8dVfGU(long[],kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
kotlin.text.Regex: java.lang.String replace(java.lang.CharSequence,java.lang.String)
androidx.lifecycle.ViewModel: ViewModel()
androidx.core.app.OnNewIntentProvider: void addOnNewIntentListener(androidx.core.util.Consumer)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(char[])
androidx.window.core.Version: Version(int,int,int,java.lang.String)
kotlin.math.MathKt__MathJVMKt: int roundToInt(double)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.String[])
kotlin.collections.DoubleIterator: java.lang.Object next()
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)
androidx.core.view.MenuCompat: MenuCompat()
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(char[])
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Short toShortOrNull(java.lang.String,int)
androidx.core.app.NotificationCompat$Action$WearableExtender: void setFlag(int,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)
kotlin.jvm.internal.ClassReference: boolean isAbstract()
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-QwZRm1k(long[])
kotlin.PropertyReferenceDelegatesKt: java.lang.Object getValue(kotlin.reflect.KProperty0,java.lang.Object,kotlin.reflect.KProperty)
kotlin.math.UMathKt: int max-J1ME1BU(int,int)
androidx.core.view.DisplayCompat$ModeCompat$Api23Impl: int getPhysicalHeight(android.view.Display$Mode)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int minOrThrow-U(int[])
kotlinx.coroutines.flow.DistinctFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.os.PersistableBundleApi22ImplKt: PersistableBundleApi22ImplKt()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)
kotlin.collections.AbstractCollection: java.lang.String toString()
androidx.lifecycle.ViewModel: void clear()
androidx.core.widget.ContentLoadingProgressBar: void onAttachedToWindow()
androidx.lifecycle.CoroutineLiveData$emitSource$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List createListBuilder()
androidx.lifecycle.LiveDataScope: java.lang.Object getLatestValue()
kotlinx.coroutines.TimeoutCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.ArraysKt___ArraysKt: boolean[] sliceArray(boolean[],java.util.Collection)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong elementAtOrNull-r7IrZao(long[],int)
androidx.window.embedding.MatcherUtils: boolean isIntentMatching$window_release(android.content.Intent,androidx.window.core.ActivityComponentInfo)
androidx.core.graphics.RegionKt$iterator$1: android.graphics.Rect next()
androidx.annotation.FloatRange: double to()
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.ArrayIterator: java.lang.Object[] getArray()
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.ranges.OpenEndFloatRange: java.lang.Comparable getEndExclusive()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.loader.content.CursorLoader: java.lang.String getSortOrder()
io.flutter.util.ViewUtils: boolean lambda$hasChildViewOfType$1(java.lang.Class[],android.view.View)
kotlin.random.AbstractPlatformRandom: int nextInt()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
io.flutter.plugin.platform.PlatformViewsController: void onTrimMemory(int)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlin.jvm.internal.Intrinsics: void throwIllegalArgument(java.lang.String)
io.flutter.Log: void i(java.lang.String,java.lang.String)
androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesProvider getSavedStateHandlesProvider(androidx.savedstate.SavedStateRegistryOwner)
androidx.versionedparcelable.ParcelUtils: void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable)
androidx.collection.ArraySet: java.lang.String toString()
androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: void checkClauseObject(java.lang.Object)
androidx.core.graphics.RectKt: android.graphics.Rect plus(android.graphics.Rect,int)
kotlin.collections.CollectionsKt___CollectionsKt: double sumOfDouble(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionStart(android.transition.Transition)
androidx.core.provider.SelfDestructiveThread: boolean isRunning()
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationChannelCompat getNotificationChannelCompat(java.lang.String)
androidx.versionedparcelable.VersionedParcel$ParcelException: VersionedParcel$ParcelException(java.lang.Throwable)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void run()
androidx.core.app.NotificationCompat$Api20Impl: android.os.Bundle getExtras(android.app.RemoteInput)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableListIterator(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char component4(char[])
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlin.time.Duration: long getValue-impl(long)
kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlin.random.URandomKt: int nextUInt(kotlin.random.Random)
kotlin.collections.GroupingKt__GroupingJVMKt: java.util.Map mapValuesInPlace(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: RoundedBitmapDrawableFactory()
androidx.window.layout.adapter.sidecar.SidecarAdapter: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
kotlinx.coroutines.internal.ScopeCoroutine: ScopeCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
com.getkeepsafe.relinker.ReLinkerInstance: void cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(float[],kotlin.jvm.functions.Function1)
kotlin.ranges.UIntProgressionIterator: int next-pVg5ArA()
androidx.core.internal.view.SupportMenuItem: android.content.res.ColorStateList getIconTintList()
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(boolean[],kotlin.jvm.functions.Function1)
kotlin.UShort: java.lang.String toString()
kotlin.collections.builders.ListBuilder: void addAtInternal(int,java.lang.Object)
io.flutter.embedding.android.FlutterFragment: void onViewCreated(android.view.View,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long elementAtOrNull(long[],int)
androidx.lifecycle.CoroutineLiveData: java.lang.Object emitSource$lifecycle_livedata_release(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.common.BasicMessageChannel: void setWarnsOnChannelOverflow(boolean)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
io.flutter.plugin.editing.ScribePlugin: void destroy()
com.getkeepsafe.relinker.elf.Dynamic64Structure: Dynamic64Structure(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int)
kotlin.jvm.internal.MutableLocalVariableReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlinx.coroutines.sync.SemaphoreSegment: int getNumberOfSlots()
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.activity.result.contract.ActivityResultContracts$GetContent: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlin.sequences.SequenceScope: SequenceScope()
kotlin.ULongArray: long[] constructor-impl(long[])
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
androidx.fragment.app.DialogFragment: DialogFragment()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minWithOrNull(byte[],java.util.Comparator)
androidx.window.core.SpecificationComputer: SpecificationComputer()
kotlinx.coroutines.JobSupport: java.lang.String toDebugString()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String getDebugString(kotlinx.coroutines.Job)
androidx.lifecycle.DispatchQueue: void enqueue(java.lang.Runnable)
androidx.annotation.IntDef: boolean flag()
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOf(char[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.WindowManagerHandler access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1)
androidx.core.app.RemoteActionCompat$Api26Impl: android.graphics.drawable.Icon getIcon(android.app.RemoteAction)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(int[])
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.profileinstaller.ProfileInstaller$1: ProfileInstaller$1()
kotlin.ranges.RangesKt___RangesKt: java.lang.Long lastOrNull(kotlin.ranges.LongProgression)
kotlin.text.StringsKt___StringsKt: java.lang.Character singleOrNull(java.lang.CharSequence)
androidx.core.app.NotificationCompat$WearableExtender$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minWithOrNull(long[],java.util.Comparator)
kotlin.UByte: byte inc-w2LRezQ(byte)
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.telephony.SubscriptionManagerCompat: int getSlotIndex(int)
kotlin.reflect.GenericArrayTypeImpl: boolean equals(java.lang.Object)
kotlin.comparisons.NaturalOrderComparator: java.util.Comparator reversed()
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.location.LocationCompat: void setMslAltitudeMeters(android.location.Location,double)
kotlin.experimental.BitwiseOperationsKt: byte or(byte,byte)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: boolean usesVirtualDisplay(int)
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1: void onTransitionResume(android.transition.Transition)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(java.lang.Object)
androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
kotlin.internal.PlatformImplementationsKt: java.lang.Object castToBaseType(java.lang.Object)
kotlin.Metadata: java.lang.String[] d1()
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator)
kotlin.text.StringsKt___StringsKt: java.util.Collection mapIndexedTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)
androidx.fragment.app.Fragment: java.lang.Object getHost()
androidx.versionedparcelable.VersionedParcel: byte readByte(byte,int)
androidx.fragment.app.FragmentContainerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object single(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short[] sliceArray(short[],kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysKt: float minOf(float[],kotlin.jvm.functions.Function1)
androidx.lifecycle.SavedStateHandle$SavingStateLiveData: SavedStateHandle$SavingStateLiveData(androidx.lifecycle.SavedStateHandle,java.lang.String)
androidx.core.app.NotificationCompat: java.lang.CharSequence getContentText(android.app.Notification)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1: java.lang.Object invoke()
androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.Pair findContinuationStartIndex(int,java.lang.StackTraceElement[],java.util.List)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(double[],int)
androidx.loader.content.AsyncTaskLoader: void setUpdateThrottle(long)
kotlin.collections.CollectionsKt__ReversedViewsKt: CollectionsKt__ReversedViewsKt()
kotlinx.coroutines.internal.InternalAnnotationsKt: void IgnoreJreRequirement$annotations()
kotlinx.coroutines.flow.StateFlowSlot: StateFlowSlot()
kotlin.collections.ReversedList: java.lang.Object removeAt(int)
io.flutter.view.TextureRegistry$SurfaceProducer: boolean handlesCropAndRotation()
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: EmbeddingAdapter$VendorApiLevel1Impl(androidx.window.embedding.EmbeddingAdapter,androidx.window.core.PredicateAdapter)
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList)
androidx.core.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int indexOf(java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.fragment.app.FragmentTransitionImpl getTransitionImpl()
kotlin.ULong: long div-WZ4Q5Ns(long,int)
io.flutter.embedding.android.FlutterFragmentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.core.view.DisplayCompat: boolean isSonyBravia4kTv(android.content.Context)
kotlin.UIntKt: int toUInt(byte)
kotlinx.coroutines.Job: java.util.concurrent.CancellationException getCancellationException()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)
androidx.core.location.LocationCompat$Api28Impl: void removeSpeedAccuracy(android.location.Location)
kotlin.collections.builders.ListBuilder: int lastIndexOf(java.lang.Object)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setSource(int)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void removeAccessibilityPane(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: int count(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence)
androidx.activity.SystemBarStyle: int getNightMode$activity_release()
androidx.core.provider.FontRequestWorker: androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
androidx.collection.CircularIntArray: void removeFromEnd(int)
kotlinx.coroutines.Delay: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.IntRange)
kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionStart(android.transition.Transition)
androidx.profileinstaller.ProfileTranscoder: void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invokeVararg(java.lang.Object[])
androidx.viewpager.widget.ViewPager$1: int compare(java.lang.Object,java.lang.Object)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean setException(java.lang.Throwable)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.Set getEntries()
androidx.core.util.SparseArrayKt: java.lang.Object getOrDefault(android.util.SparseArray,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.ColorUtils: int calculateMinimumAlpha(int,int,float)
kotlinx.coroutines.selects.SelectClause2Impl: java.lang.Object getClauseObject()
kotlin.ULong: boolean equals(java.lang.Object)
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
kotlin.UnsignedKt: double uintToDouble(int)
androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,java.lang.Comparable)
androidx.fragment.app.FragmentManager: void lambda$new$1(java.lang.Integer)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: FlowKt__EmittersKt$transform$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-rL5Bavg(short[])
androidx.fragment.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
androidx.core.graphics.RegionKt: java.util.Iterator iterator(android.graphics.Region)
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9,kotlin.coroutines.Continuation)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$State$Companion: androidx.fragment.app.SpecialEffectsController$Operation$State asOperationState(android.view.View)
kotlin.sequences.SequenceBuilderIterator: boolean hasNext()
kotlin.coroutines.ContinuationKt: void getCoroutineContext$annotations()
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(android.view.WindowInsets)
androidx.core.os.LocaleListPlatformWrapper: LocaleListPlatformWrapper(java.lang.Object)
androidx.fragment.app.FragmentManager: boolean isDestroyed()
androidx.window.area.WindowAreaInfo: int hashCode()
androidx.core.graphics.ColorUtils: float constrain(float,float,float)
androidx.fragment.app.FragmentStateManager: void create()
androidx.fragment.app.Fragment$5: Fragment$5(androidx.fragment.app.Fragment)
androidx.activity.OnBackPressedDispatcher$addCancellableCallback$1: java.lang.Object invoke()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(long[],int,int)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOrNull(double[])
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.Job SupervisorJob(kotlinx.coroutines.Job)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.EmptyFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectSend(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int indexOf(java.lang.Object)
androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.lang.Iterable)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.lifecycle.LifecycleCoroutineScopeImpl: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()
androidx.window.core.ConsumerAdapter$ConsumerHandler: boolean isAccept(java.lang.reflect.Method,java.lang.Object[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed removed()
androidx.activity.result.contract.ActivityResultContracts$RequestPermission: java.lang.Object parseResult(int,android.content.Intent)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,double)
kotlinx.coroutines.Dispatchers: void getUnconfined$annotations()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: double component4(double[])
androidx.versionedparcelable.VersionedParcel: void writeLong(long)
kotlin.text.UStringsKt: kotlin.UInt toUIntOrNull(java.lang.String,int)
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(byte[],int,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker$default(kotlinx.coroutines.CoroutineScope,long,long,int,java.lang.Object)
androidx.core.view.ContentInfoCompat$BuilderCompat: void setClip(android.content.ClipData)
kotlin.time.Duration: void getSecondsComponent$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer randomOrNull(int[],kotlin.random.Random)
kotlin.collections.AbstractMap$Companion: AbstractMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence)
androidx.activity.result.ActivityResultCaller: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
androidx.fragment.app.FragmentActivity$HostCallbacks: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
io.flutter.plugin.platform.PlatformViewsController: boolean access$700(io.flutter.plugin.platform.PlatformViewsController)
kotlin.jvm.internal.ClassReference: java.util.Collection getConstructors()
kotlin.text.MatcherMatchResult$groupValues$1: java.lang.String get(int)
kotlin.PreconditionsKt__PreconditionsKt: void check(boolean)
kotlin.time.jdk8.DurationConversionsJDK8Kt: java.time.Duration toJavaDuration-LRDsOJo(long)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.location.LocationRequestCompat: long getIntervalMillis()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])
androidx.customview.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger shl(java.math.BigInteger,int)
androidx.core.app.NotificationChannelCompat$Api26Impl: java.lang.String getDescription(android.app.NotificationChannel)
androidx.lifecycle.SavedStateHandle: void clearSavedStateProvider(java.lang.String)
kotlin.io.encoding.Base64: int decodeIntoByteArray(java.lang.CharSequence,byte[],int,int,int)
androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int)
androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)
kotlin.text.StringsKt__StringsKt: java.lang.Object ifBlank(java.lang.CharSequence,kotlin.jvm.functions.Function0)
kotlin.KotlinVersion: int hashCode()
androidx.lifecycle.Transformations$switchMap$2: androidx.lifecycle.LiveData getLiveData()
kotlinx.coroutines.JobKt__JobKt: boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setDisplayCutout(androidx.core.view.DisplayCutoutCompat)
androidx.core.transition.TransitionKt$addListener$4: java.lang.Object invoke(java.lang.Object)
kotlin.random.Random$Default: double nextDouble(double)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(char[])
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
kotlinx.coroutines.internal.Segment: Segment(long,kotlinx.coroutines.internal.Segment,int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: ViewConfigurationCompat$Api26Impl()
androidx.viewpager.widget.PagerTabStrip: void setTextSpacing(int)
androidx.core.graphics.drawable.IconCompat: int getResId()
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(long[])
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean isCompleted()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
androidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)
kotlinx.coroutines.scheduling.CoroutineScheduler: long incrementBlockingTasks()
androidx.window.area.SafeWindowAreaComponentProvider: androidx.window.extensions.area.WindowAreaComponent getWindowAreaComponent()
androidx.core.graphics.ColorUtils$Api26Impl: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
androidx.annotation.CheckResult: java.lang.String suggest()
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setBubbleMetadata(androidx.core.app.NotificationCompat$BubbleMetadata)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minByOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.UIntArray: boolean contains-WZ4Q5Ns(int[],int)
androidx.window.embedding.SplitAttributes$SplitType$Companion: androidx.window.embedding.SplitAttributes$SplitType ratio(float)
androidx.window.core.FailedSpecification: androidx.window.core.VerificationMode getVerificationMode()
androidx.core.view.ViewConfigurationCompat: ViewConfigurationCompat()
androidx.core.graphics.drawable.RoundedBitmapDrawable: float getCornerRadius()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimalOrNull(java.lang.String)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
kotlinx.coroutines.internal.StackTraceRecoveryKt: void mergeRecoveredTraces(java.lang.StackTraceElement[],java.util.ArrayDeque)
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
kotlinx.coroutines.channels.SendChannel: boolean isClosedForSend()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean isDone()
androidx.core.util.LogWriter: void flush()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(char[],java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(double[],kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1: java.lang.Object invoke()
kotlin.ranges.ULongProgressionIterator: java.lang.Object next()
io.flutter.plugin.editing.TextInputPlugin$MinMax: void inspect(double,double)
androidx.savedstate.SavedStateRegistry$Companion: SavedStateRegistry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(java.lang.Comparable[],int,int)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(boolean[],boolean)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setSystemBarsBehavior(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
kotlin.collections.MapWithDefaultImpl: java.lang.String toString()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.MutableSharedFlow: boolean tryEmit(java.lang.Object)
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String,java.lang.String[])
kotlin.random.Random: double nextDouble(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.util.Map,java.util.Map)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMap(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.SimpleArrayMap: void clear()
kotlin.text.Regex$splitToSequence$1: Regex$splitToSequence$1(kotlin.text.Regex,java.lang.CharSequence,int,kotlin.coroutines.Continuation)
androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: byte[] sortedArrayDescending(byte[])
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.core.app.JobIntentService: android.os.IBinder onBind(android.content.Intent)
kotlin.ULongArray: boolean containsAll(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: boolean endsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
androidx.fragment.app.FragmentController: void doLoaderDestroy()
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
kotlin.jvm.JvmName: java.lang.String name()
kotlin.random.Random$Default: Random$Default(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: int getRow()
androidx.core.location.GnssStatusCompat: float getCarrierFrequencyHz(int)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: TimeoutKt$withTimeoutOrNull$1(kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.content.IntentSanitizer: boolean access$702(androidx.core.content.IntentSanitizer,boolean)
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
kotlin.ranges.RangesKt___RangesKt: java.lang.Character firstOrNull(kotlin.ranges.CharProgression)
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
kotlin.text.CharDirectionality$Companion: java.util.Map getDirectionalityMap()
kotlinx.coroutines.future.ContinuationHandler: ContinuationHandler(kotlin.coroutines.Continuation)
kotlin.time.MonotonicTimeSource: long adjustReading-6QKq23U(long,long)
androidx.core.location.GnssStatusWrapper: float getCarrierFrequencyHz(int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limited(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancelledContinuation: boolean makeResumed()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minByOrNull(boolean[],kotlin.jvm.functions.Function1)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: android.hardware.fingerprint.FingerprintManager$CryptoObject getCryptoObject(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.android.FlutterFragment: void onFlutterUiDisplayed()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(double[],kotlin.jvm.functions.Function1)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowCategory(androidx.core.util.Predicate)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Object[])
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
androidx.loader.content.CursorLoader: java.lang.String[] getProjection()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void lambda$resize$0(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: ArraysKt___ArraysKt$groupingBy$1(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyOf-PpDY95g(byte[],int)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path,java.io.IOException)
androidx.core.app.LocaleManagerCompat$Api33Impl: android.os.LocaleList localeManagerGetSystemLocales(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zip(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: ChannelsKt__DeprecatedKt$elementAt$1(kotlin.coroutines.Continuation)
org.jetbrains.annotations.ApiStatus: ApiStatus()
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object checkNotNull(java.lang.Object,kotlin.jvm.functions.Function0)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: void invoke(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelSegment: kotlinx.coroutines.channels.BufferedChannel getChannel()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: long elementAt-r7IrZao(long[],int)
androidx.lifecycle.LifecycleRegistryOwner: androidx.lifecycle.LifecycleRegistry getLifecycle()
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: UArraysKt___UArraysKt$withIndex$2(long[])
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean cancel(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(int[],kotlin.jvm.functions.Function2)
androidx.core.view.MenuItemCompat: boolean isActionViewExpanded(android.view.MenuItem)
kotlinx.coroutines.scheduling.Task: Task(long,kotlinx.coroutines.scheduling.TaskContext)
androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)
androidx.activity.OnBackPressedDispatcher$Api33Impl: OnBackPressedDispatcher$Api33Impl()
io.flutter.view.VsyncWaiter: long access$002(io.flutter.view.VsyncWaiter,long)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.util.Comparator)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable createCopy()
androidx.core.location.LocationRequestCompat: android.location.LocationRequest toLocationRequest()
io.flutter.embedding.android.FlutterImageView: void resume()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minByOrThrow(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.KeyboardMap: KeyboardMap()
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: short minByOrThrow(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.LimitingDispatcher: LimitingDispatcher(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,java.lang.String,int)
androidx.activity.SystemBarStyle$Companion$dark$1: java.lang.Boolean invoke(android.content.res.Resources)
kotlin.sequences.SubSequence: int access$getEndIndex$p(kotlin.sequences.SubSequence)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setBrieflyShowPassword(boolean)
kotlinx.coroutines.CancellableContinuation: void initCancellability()
androidx.loader.content.Loader: void onForceLoad()
kotlin.UShortArray: boolean equals-impl(short[],java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
androidx.customview.widget.ExploreByTouchHelper: boolean performActionForHost(int,android.os.Bundle)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: long last(kotlin.ranges.LongProgression)
androidx.core.view.ViewKt$allViews$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset)
androidx.core.view.MenuHostHelper: void onCreateMenu(android.view.Menu,android.view.MenuInflater)
androidx.window.layout.adapter.sidecar.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.activity.result.PickVisualMediaRequestKt: androidx.activity.result.PickVisualMediaRequest PickVisualMediaRequest(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator getIterator2()
androidx.core.util.SparseIntArrayKt$valueIterator$1: void setIndex(int)
androidx.core.view.NestedScrollingParent: void onNestedPreScroll(android.view.View,int,int,int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JAKpvQM(byte[],byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: java.io.File step()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceRightOrNull(byte[],kotlin.jvm.functions.Function2)
androidx.collection.SparseArrayCompat: java.lang.Object replace(int,java.lang.Object)
androidx.core.view.ViewStructureCompat: void setClassName(java.lang.String)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: int getTypes()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduceIndexedOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3)
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.window.area.SafeWindowAreaComponentProvider: java.lang.Class getExtensionWindowAreaPresentationClass()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: int compare(java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
kotlin.jvm.internal.TypeParameterReference$Companion: java.lang.String toString(kotlin.reflect.KTypeParameter)
androidx.profileinstaller.ProfileVerifier$Cache: int hashCode()
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean addLast(java.lang.Object)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfInt(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlinx.coroutines.ExecutorCoroutineDispatcher newSingleThreadContext(java.lang.String)
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlin.math.MathKt__MathJVMKt: double tanh(double)
androidx.profileinstaller.ProfileInstaller$1: void onResultReceived(int,java.lang.Object)
kotlin.jvm.internal.ShortCompanionObject: void getSIZE_BITS$annotations()
androidx.viewpager.widget.ViewPager: void completeScroll(boolean)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DebugStringsKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.BroadcastChannel,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceIndexedOrNull(long[],kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: java.util.Iterator invoke()
androidx.activity.result.contract.ActivityResultContracts$RequestPermission: java.lang.Boolean parseResult(int,android.content.Intent)
kotlin.io.encoding.EncodeOutputStream: void flush()
androidx.core.widget.EdgeEffectCompat: boolean onPull(float)
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper: void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread)
kotlinx.coroutines.internal.LocalAtomics_commonKt: void setValue(java.util.concurrent.atomic.AtomicInteger,int)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
kotlin.io.FilePathComponents: int hashCode()
kotlin.time.DurationKt: long toDuration(long,kotlin.time.DurationUnit)
kotlinx.coroutines.flow.SubscribedSharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat$CompatImpl: ContentInfoCompat$CompatImpl(androidx.core.view.ContentInfoCompat$BuilderCompatImpl)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(int[],kotlin.jvm.functions.Function1)
kotlin.collections.IndexedValue: int getIndex()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: int mod(long,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-us8wMrg(long[],long[])
kotlin.text.StringsKt___StringsKt: java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.util.TypedValueCompat$Api34Impl: float deriveDimension(int,float,android.util.DisplayMetrics)
androidx.core.location.LocationRequestCompat: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManager$RestoreBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.AwaitKt: java.lang.Object awaitAll(kotlinx.coroutines.Deferred[],kotlin.coroutines.Continuation)
kotlin.io.encoding.Base64$Default: Base64$Default(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.os.ParcelCompat$Api33Impl: android.util.SparseArray readSparseArray(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
io.flutter.plugin.platform.VirtualDisplayController: int getRenderTargetHeight()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(float[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: android.view.accessibility.AccessibilityNodeInfo getRoot(android.view.accessibility.AccessibilityWindowInfo)
androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)
androidx.viewpager.widget.PagerTitleStrip: void setTextSize(int,float)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],java.util.Collection)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: boolean hasRegisteredListeners()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
kotlin.io.FileAlreadyExistsException: FileAlreadyExistsException(java.io.File,java.io.File,java.lang.String)
androidx.core.graphics.RegionKt: android.graphics.Region or(android.graphics.Region,android.graphics.Rect)
kotlin.jvm.internal.PropertyReference1: PropertyReference1(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List reversed(java.lang.Iterable)
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
kotlin.io.ConsoleKt: java.lang.String readln()
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 access$getMime$cp()
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForSend()
kotlinx.coroutines.CoroutineStart: boolean isLazy()
androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void close()
androidx.fragment.app.FragmentTransaction: void commitNowAllowingStateLoss()
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.util.TraceSection: void close()
kotlin.collections.MapsKt___MapsKt: java.lang.Double minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String c()
androidx.core.view.ViewCompat: float getRotation(android.view.View)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1: FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
androidx.core.graphics.Insets: androidx.core.graphics.Insets min(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String[] supportedAbis()
androidx.core.view.ViewCompat: void ensureAccessibilityDelegateCompat(android.view.View)
kotlin.jvm.internal.DoubleCompanionObject: void getMIN_VALUE$annotations()
kotlin.ranges.ULongRange: ULongRange(long,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toChannel(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int[] toIntArray(java.lang.Integer[])
kotlin.jvm.internal.ByteSpreadBuilder: void add(byte)
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.core.view.WindowInsetsControllerCompat$Impl23: boolean isAppearanceLightStatusBars()
kotlin.collections.ArraysKt___ArraysKt: int count(short[])
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: FlutterFragmentActivity$NewEngineInGroupIntentBuilder(java.lang.Class,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceRightOrNull(short[],kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,java.lang.Iterable)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context)
androidx.window.embedding.EmbeddingBackend$Companion: void overrideDecorator(androidx.window.embedding.EmbeddingBackendDecorator)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isActivityEmbedded(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRightIndexedOrNull(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree$default(java.nio.file.Path,java.nio.file.FileVisitor,int,boolean,int,java.lang.Object)
kotlin.UShort: short inc-Mh2AYeg(short)
kotlin.collections.CollectionsKt__IterablesKt: java.util.List flatten(java.lang.Iterable)
kotlin.collections.EmptyMap: EmptyMap()
_COROUTINE.CoroutineDebuggingKt: java.lang.StackTraceElement access$artificialFrame(java.lang.Throwable,java.lang.String)
androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)
androidx.core.graphics.PathParser: boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(int,int)
kotlin.collections.ArraysKt___ArraysKt: char[] sortedArray(char[])
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartEntrypointArgs(java.util.List)
androidx.core.content.res.TypedArrayKt: int getIntOrThrow(android.content.res.TypedArray,int)
androidx.window.embedding.SplitRule: SplitRule(java.lang.String,int,int,int,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.SplitAttributes)
kotlin.Pair: java.lang.Object component2()
androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(int[],int,int)
kotlin.sequences.EmptySequence: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minByOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.Object useLines$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context)
io.flutter.embedding.engine.plugins.PluginRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
androidx.core.view.GestureDetectorCompat: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)
kotlin.collections.ArrayDeque: java.lang.Object first()
androidx.core.app.Person$Builder: androidx.core.app.Person build()
androidx.lifecycle.SavedStateViewModelFactory: SavedStateViewModelFactory(android.app.Application,androidx.savedstate.SavedStateRegistryOwner)
androidx.window.embedding.SplitController$splitInfoList$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: boolean resumeCancelled(java.lang.Object)
kotlin.sequences.FilteringSequence$iterator$1: int getNextState()
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
androidx.core.view.ContentInfoCompat: android.view.ContentInfo toContentInfo()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)
kotlin.sequences.TakeWhileSequence$iterator$1: void setNextState(int)
kotlinx.coroutines.flow.LintKt: java.lang.Object toList(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)
androidx.activity.R: R()
kotlinx.coroutines.JobSupport: boolean isCancelling(kotlinx.coroutines.Incomplete)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.core.content.ContextCompat: ContextCompat()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean getEnableCreationStackTraces()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
androidx.core.app.NotificationChannelCompat: java.lang.String getId()
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2$1: void invoke(java.lang.Object)
kotlin.io.FilesKt__UtilsKt: boolean startsWith(java.io.File,java.lang.String)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
kotlin.UByte: long toLong-impl(byte)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String repeat(java.lang.CharSequence,int)
androidx.core.text.util.LinkifyCompat: java.lang.String findAddress(java.lang.String)
androidx.fragment.app.FragmentManager: android.os.Bundle lambda$attachController$4()
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$2: ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$2()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder()
kotlin.time.Duration$Companion: void getHours-UwyO8pc$annotations(int)
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind[] values()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtraOutput(java.lang.String)
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getGravity()
androidx.fragment.app.FragmentManager: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
androidx.fragment.app.BackStackRecordState$1: BackStackRecordState$1()
android.support.v4.os.IResultReceiver2$Default: android.os.IBinder asBinder()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte minOf-Kr8caGY(byte,byte)
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
kotlin.reflect.GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()
kotlinx.coroutines.BlockingCoroutine: boolean isScopedCoroutine()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(long[])
androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()
androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ReportFragment$Companion: androidx.lifecycle.ReportFragment get(android.app.Activity)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int nullsFirst$lambda$3$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: java.lang.Void remove()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-2csIQuQ(byte[])
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
kotlinx.coroutines.flow.SubscribedSharedFlow: java.util.List getReplayCache()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler: void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.util.LongSparseArrayKt$valueIterator$1: int getIndex()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1: TransitionKt$doOnStart$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterView$4: void onFlutterUiNoLongerDisplayed()
kotlin.coroutines.jvm.internal.CompletedContinuation: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-QwZRm1k(long[])
io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener: void onUserLeaveHint()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double elementAtOrNull(double[],int)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function4)
androidx.profileinstaller.Encoding: void writeUInt(java.io.OutputStream,long,int)
kotlinx.coroutines.EventLoopImplBase: void closeQueue()
kotlinx.coroutines.internal.ResizableAtomicArray: void setSynchronized(int,java.lang.Object)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getSTATE_CANCELLED$p()
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()
androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.versionedparcelable.VersionedParcel: long readLong(long,int)
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
kotlin.collections.IntIterator: int nextInt()
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,byte)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: java.lang.CharSequence getText()
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1: void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.activity.result.ActivityResultRegistry$2: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeStepGranularity()
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: boolean getIsSerial()
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.customview.R$drawable: R$drawable()
androidx.activity.OnBackPressedDispatcher$3: void invoke()
androidx.fragment.app.ListFragment: android.widget.ListAdapter getListAdapter()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: ChannelsKt__DeprecatedKt$drop$1(int,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.UIntArray: boolean isEmpty-impl(int[])
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3000(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1: java.lang.Class invoke()
androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
androidx.core.app.LocaleManagerCompat$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
androidx.fragment.app.FragmentStatePagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
kotlin.io.encoding.Base64Kt: boolean isInMimeAlphabet(int)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: java.lang.Object getLifecycle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void StackTraceElement$annotations()
androidx.fragment.app.FragmentActivity$HostCallbacks: int onGetWindowAnimations()
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: android.graphics.Bitmap parseResult(int,android.content.Intent)
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
kotlin.coroutines.jvm.internal.DebugMetadata: int[] i()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void dumpCoroutinesSynchronized(java.io.PrintStream)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setHeading(boolean)
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toAdaptiveIcon(android.graphics.Bitmap)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-mazbYpA(short[],short[])
androidx.core.location.LocationManagerCompat$GnssStatusTransport: void onFirstFix(int)
androidx.versionedparcelable.VersionedParcelStream: void writeByteArray(byte[],int,int)
androidx.core.app.NotificationCompat$Style: float constrain(float,float,float)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String,java.util.Locale)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-GBYM_sE(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.internal.PlatformImplementations: kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String)
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: java.lang.Object invoke(java.lang.Object)
androidx.annotation.Dimension: int unit()
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: java.lang.Void invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlinx.coroutines.selects.SelectImplementation: boolean isCancelled()
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds,androidx.core.view.WindowInsetsCompat)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstNotNullOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(byte[])
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceDestroyed(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] toUByteArray(kotlin.UByte[])
kotlin.time.Duration$Companion: void getNanoseconds-UwyO8pc$annotations(long)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: java.lang.Object invoke()
androidx.core.view.ContentInfoCompat: android.util.Pair partition(android.content.ClipData,androidx.core.util.Predicate)
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()
kotlin.UInt: int rem-WZ4Q5Ns(int,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
kotlin.time.Duration: long getInWholeMicroseconds-impl(long)
kotlinx.coroutines.YieldKt: java.lang.Object yield(kotlin.coroutines.Continuation)
androidx.window.area.WindowAreaCapability: int hashCode()
kotlin.ranges.ClosedFloatRange: boolean contains(float)
androidx.fragment.app.FragmentManager: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short[] toTypedArray(short[])
kotlin.collections.ArraysKt__ArraysKt: boolean contentDeepEquals(java.lang.Object[],java.lang.Object[])
kotlinx.coroutines.android.HandlerDispatcherKt: void updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemUiFlag(int)
androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void cleanup()
androidx.window.layout.WindowMetrics: int hashCode()
kotlin.TypeAliasesKt: void UnsupportedOperationException$annotations()
kotlinx.coroutines.JobImpl: boolean handlesException()
androidx.core.net.ConnectivityManagerCompat$Api24Impl: ConnectivityManagerCompat$Api24Impl()
kotlin.sequences.FlatteningSequence$iterator$1: void setItemIterator(java.util.Iterator)
kotlin.io.FilesKt__UtilsKt: java.lang.String getNameWithoutExtension(java.io.File)
kotlin.UShort: long toLong-impl(short)
kotlin.UByteArray: boolean contains-7apg3OU(byte[],byte)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: DistinctElementSidecarCallback(androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.loader.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int)
androidx.core.app.NotificationCompat: android.app.Notification getPublicVersion(android.app.Notification)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable onEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
com.getkeepsafe.relinker.elf.Elf$Header: com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int)
io.flutter.embedding.android.FlutterView: void onAttachedToWindow()
androidx.core.content.res.TypedArrayKt: android.graphics.drawable.Drawable getDrawableOrThrow(android.content.res.TypedArray,int)
kotlin.sequences.DropWhileSequence$iterator$1: int getDropState()
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,short)
androidx.core.util.LruCacheKt$lruCache$4: int sizeOf(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean isEmpty()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(java.util.Map$Entry)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.ListViewCompat: ListViewCompat()
kotlin.collections.AbstractList: java.lang.Object get(int)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
androidx.core.provider.DocumentsContractCompat: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)
androidx.viewpager.widget.ViewPager: void drawableStateChanged()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Object[])
androidx.activity.SystemBarStyle$Companion$dark$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat: android.view.animation.Interpolator getInterpolator()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object tryTakeValue(kotlinx.coroutines.flow.SharedFlowSlot)
androidx.window.embedding.EmbeddingBackend$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterNotTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.UShort: long div-VKZWuLQ(short,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-JM6gNCM(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.graphics.PaintCompat$Api23Impl: PaintCompat$Api23Impl()
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
kotlin.time.Duration: boolean equals-impl0(long,long)
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: SingleViewFakeWindowViewGroup(android.content.Context)
androidx.core.app.NotificationChannelGroupCompat$Builder: androidx.core.app.NotificationChannelGroupCompat$Builder setDescription(java.lang.String)
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
kotlin.collections.builders.SetBuilder: boolean add(java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation: void complete$fragment_release()
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: java.util.Iterator iterator()
androidx.core.text.util.LocalePreferences$Api24Impl: java.lang.String getCalendarType(java.util.Locale)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: AwaitAll$DisposeHandlersOnCancel(kotlinx.coroutines.AwaitAll,kotlinx.coroutines.AwaitAll$AwaitAllNode[])
androidx.core.widget.ContentLoadingProgressBar: void show()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.location.LocationListenerCompat$-CC: void $default$onProviderDisabled(androidx.core.location.LocationListenerCompat,java.lang.String)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)
io.flutter.plugin.platform.PlatformPlugin: void access$1300(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.window.area.WindowAreaInfo: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.core.location.LocationManagerCompat: boolean registerGnssMeasurementsCallback(android.location.LocationManager,android.location.GnssMeasurementsEvent$Callback,android.os.Handler)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(boolean[],kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1: TransitionKt$doOnEnd$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode[] $values()
kotlin.collections.builders.MapBuilder: int addKey$kotlin_stdlib(java.lang.Object)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.fragment.app.Fragment: boolean isHidden()
kotlinx.coroutines.flow.FlowKt__ShareKt: java.lang.Object stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(long)
androidx.core.os.LocaleListCompat: int hashCode()
kotlin.io.FilesKt__UtilsKt: java.io.File relativeTo(java.io.File,java.io.File)
androidx.lifecycle.SavedStateHandle: androidx.lifecycle.MutableLiveData getLiveData(java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job)
androidx.core.graphics.TypefaceCompatBaseImpl$3: boolean isItalic(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: IUnusedAppRestrictionsBackportService$Stub()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
androidx.fragment.app.Fragment: void performLowMemory()
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.ranges.ClosedRange$DefaultImpls: boolean isEmpty(kotlin.ranges.ClosedRange)
androidx.core.app.ActivityOptionsCompat$Api21Impl: ActivityOptionsCompat$Api21Impl()
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler access$000(io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short firstOrNull(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: long coerceIn(long,long,long)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragment createFlutterFragment()
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
androidx.core.util.AtomicFileKt: void writeBytes(android.util.AtomicFile,byte[])
io.flutter.embedding.android.FlutterActivity: void updateSystemUiOverlays()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(int[],kotlin.jvm.functions.Function1)
androidx.activity.result.contract.ActivityResultContract: ActivityResultContract()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)
androidx.core.content.res.ViewingConditions: float getC()
kotlin.UShortArray: boolean contains-xj2QHRw(short)
androidx.window.area.WindowAreaController: kotlinx.coroutines.flow.Flow getWindowAreaInfos()
io.flutter.plugin.common.MethodChannel: void setWarnsOnChannelOverflow(boolean)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[])
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.fragment.app.FragmentController: void dispatchStart()
androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: CombineKt$zipImpl$1$1$1(kotlinx.coroutines.CompletableJob,kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CopyableThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlin.NumbersKt__NumbersKt: byte rotateRight(byte,int)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.PlatformView$-CC: void $default$onInputConnectionUnlocked(io.flutter.plugin.platform.PlatformView)
androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte maxOf(byte,byte[])
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 access$createConstructor(java.lang.Class)
androidx.collection.ArraySet$1: java.util.Map colGetMap()
androidx.core.view.ViewCompat: void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
androidx.versionedparcelable.ParcelUtils: ParcelUtils()
android.support.v4.os.IResultReceiver$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)
kotlin.properties.ReadWriteProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float singleOrNull(float[])
androidx.lifecycle.BlockRunner$cancel$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewGroupCompat: void setTransitionGroup(android.view.ViewGroup,boolean)
kotlinx.coroutines.selects.SelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl access$getCont$p(kotlinx.coroutines.selects.SelectBuilderImpl)
androidx.activity.result.contract.ActivityResultContract: java.lang.Object parseResult(int,android.content.Intent)
kotlinx.coroutines.scheduling.CoroutineScheduler: int getAvailableCpuPermits()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlin.collections.MapsKt__MapsKt: java.util.Map mutableMapOf()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,java.lang.Class)
androidx.window.area.WindowAreaInfo$Type: java.lang.String toString()
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory access$getSInstance$cp()
kotlin.text.StringsKt___StringsKt: java.util.List zipWithNext(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentAnim: int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean)
androidx.startup.StartupLogger: StartupLogger()
androidx.core.R$style: R$style()
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
kotlinx.coroutines.AbstractTimeSource: void unTrackTask()
kotlin.ranges.UIntProgression: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setWaitForRestorationData(boolean)
io.flutter.plugin.platform.PlatformViewRenderTarget: android.view.Surface getSurface()
androidx.core.graphics.WeightTypefaceApi14: WeightTypefaceApi14()
androidx.profileinstaller.ProfileTranscoder: void writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[])
io.flutter.embedding.engine.renderer.FlutterRenderer$2: void onResume(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveCatchingOnNoWaiterSuspend-GKJJFZk(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
androidx.core.graphics.Insets: androidx.core.graphics.Insets wrap(android.graphics.Insets)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
kotlin.text.StringsKt___StringsKt: char reduceRightIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getViewFragment(android.view.View)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setBot(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(long[],kotlin.jvm.functions.Function3)
androidx.core.text.HtmlKt: java.lang.String toHtml$default(android.text.Spanned,int,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: int indexOfLast(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceDestroyed()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberBuffered: boolean cancelImpl(java.lang.Throwable)
androidx.window.core.ConsumerAdapter$ConsumerHandler: boolean isHashCode(java.lang.reflect.Method,java.lang.Object[])
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray$default(java.lang.String,int,int,boolean,int,java.lang.Object)
androidx.fragment.app.FragmentManager: void lambda$new$2(androidx.core.app.MultiWindowModeChangedInfo)
kotlin.ranges.UIntRange: UIntRange(int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void serviceProcessingStarted()
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
io.flutter.view.VsyncWaiter: void init()
androidx.core.location.GpsStatusWrapper: float getAzimuthDegrees(int)
androidx.core.graphics.drawable.DrawableKt: android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendImpl$default(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function4,int,java.lang.Object)
androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl: FontProvider$ContentQueryWrapperApi16Impl(android.content.Context,android.net.Uri)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
kotlin.collections.CollectionsKt__IteratorsJVMKt: CollectionsKt__IteratorsJVMKt()
kotlin.text.UStringsKt: byte toUByte(java.lang.String)
androidx.core.telephony.TelephonyManagerCompat$Api23Impl: TelephonyManagerCompat$Api23Impl()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScope: DeepRecursiveScope()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-rL5Bavg(short[])
com.getkeepsafe.relinker.elf.ElfParser: com.getkeepsafe.relinker.elf.Elf$Header parseHeader()
kotlin.io.path.PathTreeWalk$bfsIterator$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: void setExtras(android.os.Bundle)
kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()
kotlin.collections.ReversedListReadOnly: ReversedListReadOnly(java.util.List)
androidx.core.location.LocationManagerCompat: void requestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,java.util.concurrent.Executor,androidx.core.location.LocationListenerCompat)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object suspendCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: int getLoadPriority()
kotlin.io.FilePathComponents: boolean isRooted()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(double[],kotlin.ranges.IntRange)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap getBitmap()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlin.text.MatcherMatchResult: kotlin.text.MatchResult$Destructured getDestructured()
kotlin.collections.CollectionsKt___CollectionsKt: float maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException,int,java.lang.Object)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.util.SizeFCompat: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(char[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.core.graphics.Insets: androidx.core.graphics.Insets subtract(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
kotlin.time.jdk8.DurationConversionsJDK8Kt: long toKotlinDuration(java.time.Duration)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map buildMapInternal(kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getSelectionMode()
kotlinx.coroutines.CompletedWithCancellation: int hashCode()
androidx.interpolator.R: R()
kotlin.ranges.IntProgression: java.util.Iterator iterator()
kotlin.jvm.internal.CharSpreadBuilder: CharSpreadBuilder(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] reversedArray-QwZRm1k(long[])
kotlin.sequences.SubSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.DeferredCoroutine: java.lang.Object getCompleted()
kotlinx.coroutines.JobImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
androidx.fragment.app.FragmentStore: void resetActiveFragments()
androidx.window.core.SpecificationComputer: java.lang.Object compute()
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
android.support.v4.os.ResultReceiver$MyRunnable: ResultReceiver$MyRunnable(android.support.v4.os.ResultReceiver,int,android.os.Bundle)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: ChannelsKt__DeprecatedKt$flatMap$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: void performDestroyView()
androidx.loader.content.CursorLoader: void setSelectionArgs(java.lang.String[])
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduce-s8dVfGU(long[],kotlin.jvm.functions.Function2)
androidx.versionedparcelable.VersionedParcelStream: boolean readBoolean()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int indexOf(int)
androidx.annotation.RestrictTo$Scope: RestrictTo$Scope(java.lang.String,int)
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2: SavedStateHandlesProvider$viewModel$2(androidx.lifecycle.ViewModelStoreOwner)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
androidx.fragment.app.SpecialEffectsControllerFactory: androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection valueOf(java.lang.String)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: int toInt(java.lang.String)
androidx.fragment.app.FragmentStateManager$1: void onViewDetachedFromWindow(android.view.View)
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: CallbackFlowBuilder$collectTo$1(kotlinx.coroutines.flow.CallbackFlowBuilder,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: float acos(float)
androidx.profileinstaller.DeviceProfileWriter: void result(int,java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper: AbstractResolvableFuture$SynchronizedHelper()
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.app.NotificationCompatBuilder$Api24Impl: NotificationCompatBuilder$Api24Impl()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(double[],kotlin.jvm.functions.Function1)
androidx.core.view.NestedScrollingParent2: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
kotlin.NumbersKt__NumbersKt: int countTrailingZeroBits(short)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(int[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(int[])
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
io.flutter.plugin.platform.PlatformViewsController: long access$800(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.core.view.ViewCompat: void setLabelFor(android.view.View,int)
kotlin.text.StringsKt___StringsKt$windowedSequence$2: java.lang.Object invoke(int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.activity.ViewTreeFullyDrawnReporterOwner: androidx.activity.FullyDrawnReporterOwner get(android.view.View)
kotlin.ranges.ClosedFloatRange: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
androidx.lifecycle.ViewModel: ViewModel(java.io.Closeable[])
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed: ExceptionSuccessfullyProcessed()
androidx.core.graphics.TypefaceCompatApi24Impl: boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRequestFailed(int)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-PpDY95g(byte[],int)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: void run()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.lang.Object tryIgnoreNoSuchFileException$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
kotlinx.coroutines.future.FutureKt$await$2$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: void invoke(java.lang.Throwable)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.profileinstaller.ProfileInstallerInitializer: void writeInBackground(android.content.Context)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)
androidx.fragment.app.FragmentManager: void addBackStackState(androidx.fragment.app.BackStackRecord)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivityForConfigChanges()
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setMinWidthDp(int)
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.String userObjectToString(java.lang.Object)
androidx.core.view.ContentInfoCompat$Builder: ContentInfoCompat$Builder(androidx.core.view.ContentInfoCompat)
kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptible$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationFailed()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionPause(android.transition.Transition)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,double,double,int,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode,java.nio.ByteBuffer)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$NewInstanceFactory)
kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long markFrozen()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short maxOf(short,short[])
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
kotlinx.coroutines.flow.MutableSharedFlow: kotlinx.coroutines.flow.StateFlow getSubscriptionCount()
_COROUTINE.ArtificialStackFrames: java.lang.StackTraceElement coroutineBoundary()
androidx.core.graphics.TypefaceCompatBaseImpl$3: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.core.util.SparseIntArrayKt$valueIterator$1: SparseIntArrayKt$valueIterator$1(android.util.SparseIntArray)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
androidx.core.location.LocationCompat$Api26Impl: boolean hasBearingAccuracy(android.location.Location)
kotlin.UIntArray: int getSize-impl(int[])
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.graphics.Canvas)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.content.Context getContext()
androidx.core.widget.NestedScrollView: float getSplineFlingDistance(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(long[])
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Short toShortOrNull(java.lang.String)
androidx.core.util.SparseArrayKt$keyIterator$1: int getIndex()
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: java.lang.String getRowTitle()
kotlin.text.CharCategory: boolean contains(char)
kotlin.jvm.internal.ArrayLongIterator: ArrayLongIterator(long[])
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: int getRegionCount()
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30: void show()
androidx.fragment.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_EB$p()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object)
androidx.core.provider.FontProvider$ContentQueryWrapper: void close()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int lastIndexOf-VKZWuLQ(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.app.Fragment: void postponeEnterTransition()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: FlowKt__ZipKt$combineTransform$7(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastKt$broadcast$1: BroadcastKt$broadcast$1(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 getRegFunc()
androidx.core.content.res.ViewingConditions: float getNcb()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object get()
androidx.core.graphics.WeightTypefaceApi14: long getNativeInstance(android.graphics.Typeface)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
kotlin.io.path.FileVisitorBuilderImpl: void onVisitFile(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator,int,int)
io.flutter.embedding.android.FlutterFragmentActivity: android.os.Bundle getMetaData()
androidx.lifecycle.AbstractSavedStateViewModelFactory: AbstractSavedStateViewModelFactory()
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: BufferedChannel$onReceiveOrNull$1()
androidx.fragment.app.Fragment$3: Fragment$3(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentContainerView$Api20Impl: FragmentContainerView$Api20Impl()
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getCachedEngineGroupId()
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering()
kotlin.UByte: int mod-WZ4Q5Ns(byte,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean contains-WZ4Q5Ns(int)
androidx.core.location.LocationManagerCompat: boolean registerGnssMeasurementsCallback(android.location.LocationManager,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent$Callback)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void isStylusHandwritingAvailable(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: java.lang.Object get(int)
androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment)
androidx.window.embedding.SplitAttributes: int hashCode()
kotlin.collections.ReversedListReadOnly: java.lang.Object get(int)
androidx.core.graphics.CanvasKt: void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
io.flutter.embedding.engine.dart.DartExecutor: void disableBufferingIncomingMessages()
kotlin.collections.ArraysKt___ArraysKt: double averageOfShort(java.lang.Short[])
kotlin.jvm.internal.FloatCompanionObject: float getMAX_VALUE()
kotlin.ULongArray: boolean isEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sliceArray-kzHmqpY(long[],java.util.Collection)
kotlin.reflect.KProperty2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
androidx.core.graphics.BlendModeColorFilterCompat$Api29Impl: android.graphics.ColorFilter createBlendModeColorFilter(int,java.lang.Object)
kotlin.collections.ArrayDeque: java.lang.Object last()
kotlin.text.StringsKt___StringsKt: java.lang.Character find(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.String toString()
androidx.core.app.NotificationChannelCompat: boolean canBubble()
androidx.profileinstaller.DeviceProfileWriter: byte[] desiredVersion()
androidx.core.app.NotificationChannelCompat: java.lang.CharSequence getName()
kotlin.io.path.PathsKt: PathsKt()
androidx.core.app.GrammaticalInflectionManagerCompat$Api34Impl: void setRequestedApplicationGrammaticalGender(android.content.Context,int)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle createMessagingStyle(java.lang.CharSequence)
kotlinx.coroutines.ResumeAwaitOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,byte)
androidx.core.text.HtmlCompat: HtmlCompat()
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOf(short[],int)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: void updateState$kotlinx_coroutines_core(java.lang.String,kotlin.coroutines.Continuation,boolean)
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean isWindowLayoutComponentAccessible$window_release()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
kotlinx.coroutines.sync.MutexImpl: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)
androidx.profileinstaller.ProfileInstaller: boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)
androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.Boolean)
kotlin.collections.ArraysKt___ArraysKt: int count(boolean[])
kotlinx.coroutines.channels.ConflatedBufferedChannel: void registerSelectForSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(float)
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
androidx.core.os.BundleKt: android.os.Bundle bundleOf()
kotlin.text.Regex$special$$inlined$fromInt$1: Regex$special$$inlined$fromInt$1(int)
kotlin.time.Duration: double div-LRDsOJo(long,long)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float minOrNull(java.lang.Iterable)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
kotlinx.coroutines.internal.ResizableAtomicArray: int currentLength()
androidx.core.view.ActionProvider: android.content.Context getContext()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(byte,long)
kotlin.ranges.UIntProgression: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1: SequencesKt___SequencesKt$requireNoNulls$1(kotlin.sequences.Sequence)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
androidx.window.area.utils.DeviceMetrics: int hashCode()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: ExceptionsConstructorKt$createConstructor$1$2(java.lang.reflect.Constructor)
kotlinx.coroutines.flow.SharedFlowImpl: long getBufferEndIndex()
kotlinx.coroutines.CoroutineName: java.lang.String component1()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setViewIdResourceName(java.lang.String)
kotlin.DeepRecursiveKt: java.lang.Object invoke(kotlin.DeepRecursiveFunction,java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getName(java.nio.file.Path)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationError(int,java.lang.CharSequence)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.embedding.SplitInfo translateCompat(androidx.window.extensions.embedding.SplitInfo)
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter: ViewCompat$OnReceiveContentListenerAdapter(androidx.core.view.OnReceiveContentListener)
androidx.core.graphics.BitmapCompat: void setHasMipMap(android.graphics.Bitmap,boolean)
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionStart(android.transition.Transition)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAmbientBigPicture()
kotlin.system.ProcessKt: java.lang.Void exitProcess(int)
kotlinx.coroutines.JobSupport: kotlin.sequences.Sequence getChildren()
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingActivityIcon()
kotlin.math.MathKt__MathJVMKt: double ln1p(double)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
kotlinx.coroutines.selects.SelectOldKt: void resumeUndispatchedWithException(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,byte)
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: java.lang.Object invoke(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void closeField()
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow transformWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: FlowKt__ReduceKt$reduce$2(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)
kotlin.collections.RingBuffer: int getSize()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.flutter.embedding.android.KeyboardMap$KeyPair: KeyboardMap$KeyPair(long,long)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
kotlin.text.RegexKt: java.util.Set fromInt(int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int then$lambda$1$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object)
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
androidx.activity.ComponentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: UArraysKt___UArraysKt$withIndex$1(int[])
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: WindowInsetsAnimationControllerCompat$Impl()
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findLastAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
kotlin.sequences.MergingSequence: kotlin.jvm.functions.Function2 access$getTransform$p(kotlin.sequences.MergingSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.core.view.ViewCompat$1: void frameworkSet(android.view.View,java.lang.Object)
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
androidx.fragment.app.FragmentManager: void moveToState(int,boolean)
androidx.activity.R$id: R$id()
androidx.fragment.app.BackStackRecordState$1: java.lang.Object[] newArray(int)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(androidx.core.graphics.PathParser$PathDataNode)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowType(androidx.core.util.Predicate)
androidx.core.view.contentcapture.ContentCaptureSessionCompat: void notifyViewTextChanged(android.view.autofill.AutofillId,java.lang.CharSequence)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1: DefaultSpecialEffectsController$AnimatorEffect$onStart$1(android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect)
androidx.core.location.GnssStatusCompat: androidx.core.location.GnssStatusCompat wrap(android.location.GnssStatus)
androidx.core.widget.EdgeEffectCompat: boolean onRelease()
androidx.core.provider.SelfDestructiveThread$3: void run()
kotlinx.coroutines.UndispatchedCoroutine: void afterResume(java.lang.Object)
androidx.window.area.WindowAreaControllerImpl: void presentContentOnWindowArea$lambda$2(androidx.window.area.WindowAreaPresentationSessionCallback)
androidx.core.util.SparseIntArrayKt: void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.CoroutineStackFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],double[])
kotlin.UShort: int toUInt-pVg5ArA(short)
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setVisible(int,boolean)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-F7u83W8(long[],java.lang.Iterable)
androidx.profileinstaller.ProfileInstallerInitializer: androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short maxOf(short,short,short)
androidx.core.app.NotificationManagerCompat: int getImportance()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getRowCount()
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.collection.CircularIntArray: int getFirst()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence)
kotlinx.coroutines.selects.OnTimeout: void getSelectClause$annotations()
kotlin.sequences.FilteringSequence$iterator$1: java.util.Iterator getIterator()
kotlin.ranges.ULongRange: long getEndExclusive-s-VKNKU()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews)
kotlin.ranges.ClosedFloatRange: boolean isEmpty()
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: BinaryMessenger$TaskQueueOptions()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.enums.EnumEntriesList: int indexOf(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.ranges.ULongProgression: ULongProgression(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: java.lang.Object parseResult(int,android.content.Intent)
androidx.fragment.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence onEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-tAntMlw(int[],kotlin.ranges.IntRange)
androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)
androidx.core.widget.CompoundButtonCompat$Api23Impl: CompoundButtonCompat$Api23Impl()
androidx.window.embedding.SplitAttributes$SplitType$Companion$ratio$checkedRatio$1: java.lang.Object invoke(java.lang.Object)
androidx.activity.result.ActivityResultRegistry: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)
androidx.core.animation.AnimatorKt$addPauseListener$2: void invoke(android.animation.Animator)
androidx.core.util.ContinuationRunnable: void run()
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(java.lang.Object[])
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map createMapBuilder()
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.time.AbstractLongTimeSource$LongTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
kotlin.collections.AbstractList$Companion: int orderedHashCode$kotlin_stdlib(java.util.Collection)
kotlin.ULong: int toInt-impl(long)
androidx.core.text.util.LocalePreferences$CalendarType: LocalePreferences$CalendarType()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
androidx.activity.OnBackPressedDispatcherKt: androidx.activity.OnBackPressedCallback addCallback(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.LifecycleOwner,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: void forEach(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage()
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: SpellCheckChannel$1(io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
androidx.profileinstaller.ProfileVerifier$CompilationStatus: boolean isCompiledWithProfile()
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int lastIndexOf(boolean)
kotlin.collections.AbstractList$Companion: void checkRangeIndexes$kotlin_stdlib(int,int,int)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
androidx.core.text.util.LinkifyCompat: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(double[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver access$000()
kotlin.jvm.internal.ClassReference: boolean isFinal()
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
kotlinx.coroutines.DefaultExecutor: DefaultExecutor()
androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt: androidx.lifecycle.ViewModelProvider$Factory viewModelFactory(kotlin.jvm.functions.Function1)
androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)
androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
kotlin.collections.AbstractMap$keys$1$iterator$1: AbstractMap$keys$1$iterator$1(java.util.Iterator)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup)
androidx.core.database.DatabaseUtilsCompat: DatabaseUtilsCompat()
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: ReportFragment$LifecycleCallbacks$Companion()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: void onSessionStarted$lambda$1$lambda$0(androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer,androidx.window.area.WindowAreaSession)
kotlin.UInt: long rem-VKZWuLQ(int,long)
androidx.core.app.NotificationCompat: NotificationCompat()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
kotlin.collections.builders.ListBuilder: ListBuilder(int)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setDescription(java.lang.String)
kotlin.collections.builders.AbstractMapBuilderEntrySet: AbstractMapBuilderEntrySet()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character min(char[])
androidx.core.widget.NestedScrollView$SavedState: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.UByte: long mod-VKZWuLQ(byte,long)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,kotlin.sequences.Sequence)
kotlinx.coroutines.CoroutineExceptionHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
androidx.fragment.app.FragmentActivity: void init()
kotlin.collections.CollectionsKt___CollectionsJvmKt: void reverse(java.util.List)
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler: boolean isFeatureAvailable()
kotlinx.coroutines.DebugKt: boolean getDEBUG()
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder detectFragmentReuse()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$CallStyle: java.lang.String getDefaultText()
androidx.collection.MapCollections$KeySet: void clear()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object access$hasNextOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: DrawableCompat$Api23Impl()
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
io.flutter.plugin.common.BinaryCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.core.content.IntentSanitizer: java.util.Map access$902(androidx.core.content.IntentSanitizer,java.util.Map)
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted getEagerly()
kotlin.jvm.internal.Lambda: Lambda(int)
kotlin.ExceptionsKt__ExceptionsKt: void printStackTrace(java.lang.Throwable)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minOrNull--ajY-9A(int[])
kotlin.jvm.internal.Intrinsics: void checkHasClass(java.lang.String,java.lang.String)
io.flutter.embedding.android.AndroidTouchProcessor: float getVerticalScrollFactorAbove26(android.content.Context)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls: void invoke(kotlinx.coroutines.selects.SelectBuilder,kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyInto(boolean[],boolean[],int,int,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromJch(float,float,float)
kotlinx.coroutines.sync.MutexKt$withLock$1: MutexKt$withLock$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.core.content.IntentCompat: IntentCompat()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.lifecycle.ViewModelLazy$1: androidx.lifecycle.viewmodel.CreationExtras$Empty invoke()
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
androidx.core.app.ActivityOptionsCompat$Api21Impl: android.app.ActivityOptions makeTaskLaunchBehind()
kotlin.collections.ArraysKt___ArraysKt: boolean none(boolean[],kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$addListener$4: TransitionKt$addListener$4()
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.ScopeCoroutine: void afterCompletion(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object findLast(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void dispatchPause()
kotlinx.coroutines.JobSupport: java.lang.Object access$onAwaitInternalProcessResFunc(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.annotation.AnnotationRetention: AnnotationRetention(java.lang.String,int)
androidx.core.location.LocationCompat: float getVerticalAccuracyMeters(android.location.Location)
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator asMutableIterator(java.lang.Object,java.lang.String)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(android.graphics.Path)
androidx.lifecycle.ComputableLiveData$_liveData$1: void onActive()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
androidx.core.view.ViewCompat: void setActivated(android.view.View,boolean)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.TransformingIndexedSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingIndexedSequence)
androidx.window.area.utils.DeviceMetrics: java.lang.String getManufacturer()
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: ReportFragment$LifecycleCallbacks$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
kotlin.sequences.DropWhileSequence$iterator$1: void remove()
kotlinx.coroutines.CoroutineName: int hashCode()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat: float getElevation(android.view.View)
kotlin.reflect.KClass: boolean isFinal()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
org.jetbrains.annotations.NotNull: java.lang.Class exception()
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-QwZRm1k(long[])
androidx.fragment.app.FragmentManagerViewModel: void onCleared()
kotlin.time.TimeSource$Companion: TimeSource$Companion()
kotlin.collections.ArraysKt___ArraysKt: long maxOrThrow(long[])
androidx.core.provider.FontsContractCompat: void resetTypefaceCache()
androidx.viewpager.widget.ViewPager: void fakeDragBy(float)
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function3)
androidx.core.content.ContextCompat$Api26Impl: ContextCompat$Api26Impl()
androidx.fragment.app.FragmentManager: boolean clearBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(int[],kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$addListener$1: TransitionKt$addListener$1()
kotlin.sequences.SequencesKt___SequencesJvmKt: SequencesKt___SequencesJvmKt()
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
kotlin.sequences.IndexingSequence$iterator$1: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.location.LocationManagerCompat$Api24Impl: void unregisterGnssStatusCallback(android.location.LocationManager,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(int[],kotlin.jvm.functions.Function1)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: void getEXTRA_SYSTEM_FALLBACK_PICK_IMAGES_MAX$annotations()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController: void createTransitionEffect(java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodIsActivityEmbeddedValid$1: SafeActivityEmbeddingComponentProvider$isMethodIsActivityEmbeddedValid$1(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.reflect.KParameter: kotlin.reflect.KType getType()
androidx.activity.EdgeToEdgeApi21: EdgeToEdgeApi21()
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ReceiveChannel: boolean isClosedForReceive()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceOrNull(float[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.CompletableDeferred: boolean completeExceptionally(java.lang.Throwable)
kotlin.text.MatchResult$DefaultImpls: kotlin.text.MatchResult$Destructured getDestructured(kotlin.text.MatchResult)
androidx.core.app.NotificationChannelGroupCompat$Api26Impl: NotificationChannelGroupCompat$Api26Impl()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
kotlin.UInt: short toShort-impl(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(byte[],kotlin.jvm.functions.Function1)
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersion get()
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(short[],int,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()
androidx.collection.SparseArrayCompat: void remove(int)
androidx.core.provider.DocumentsContractCompat: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)
kotlin.jvm.internal.FunInterfaceConstructorReference: boolean equals(java.lang.Object)
kotlin.jvm.internal.ClassReference: boolean isInner()
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeFloat(float,int)
kotlinx.coroutines.CompletableDeferredImpl: boolean completeExceptionally(java.lang.Throwable)
androidx.core.location.GnssStatusCompat: int getSatelliteCount()
kotlinx.coroutines.DefaultExecutor: void acknowledgeShutdownIfNeeded()
kotlin.collections.ArrayDeque: void addFirst(java.lang.Object)
androidx.loader.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)
kotlin.collections.UArraySortingKt: void quickSort-oBK06Vg(int[],int,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)
androidx.window.core.Bounds: boolean isZero()
androidx.core.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
kotlin.jvm.internal.Intrinsics: void needClassReification()
androidx.core.app.NotificationCompat$WearableExtender$Api24Impl: NotificationCompat$WearableExtender$Api24Impl()
androidx.core.content.res.ViewingConditions: float getN()
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable append(java.lang.Appendable,java.lang.CharSequence[])
kotlin.RequiresOptIn: java.lang.String message()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(char[],kotlin.jvm.functions.Function1)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] getMetrics()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.String,java.lang.Throwable)
androidx.core.os.PersistableBundleApi22ImplKt: void putBoolean(android.os.PersistableBundle,java.lang.String,boolean)
kotlin.UIntKt: int toUInt(double)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: ViewModelProvider$AndroidViewModelFactory(android.app.Application,int)
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.UByte: long rem-VKZWuLQ(byte,long)
kotlin.sequences.FilteringSequence: FilteringSequence(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1)
kotlin.jvm.optionals.OptionalsKt: java.lang.Object getOrDefault(java.util.Optional,java.lang.Object)
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)
kotlin.collections.ShortIterator: void remove()
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.core.content.res.CamColor: float getJStar()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: double pow(double,int)
kotlin.math.MathKt__MathJVMKt: double exp(double)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions$Companion: android.content.Intent createIntent$activity_release(java.lang.String[])
androidx.viewpager.widget.ViewPager$1: ViewPager$1()
kotlinx.coroutines.DisposeOnCancel: DisposeOnCancel(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle installParentHandle()
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.coroutines.Continuation createOwner(kotlin.coroutines.Continuation,kotlinx.coroutines.debug.internal.StackTraceFrame)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isEnabled()
kotlin.UNumbersKt: short rotateLeft-olVBNx4(short,int)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: SequencesKt__SequencesKt$ifEmpty$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-xTcfx_M(short[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.VirtualDisplayController$2: VirtualDisplayController$2(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
kotlin.collections.MapsKt__MapsKt: void set(java.util.Map,java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)
androidx.core.location.LocationListenerCompat$-CC: void $default$onStatusChanged(androidx.core.location.LocationListenerCompat,java.lang.String,int,android.os.Bundle)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: MapBuilder(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
kotlinx.coroutines.CancellableContinuationImpl: void dispatchResume(int)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow shareIn$default(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int,int,java.lang.Object)
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CompletableJob,kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlinx.coroutines.channels.ProducerCoroutine: void onCancelled(java.lang.Throwable,boolean)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject()
androidx.core.view.ViewKt$ancestors$1: ViewKt$ancestors$1()
androidx.core.math.MathUtils: int subtractExact(int,int)
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForReceive0(long)
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[])
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: long getId()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Comparable max(java.lang.Comparable[])
kotlin.jvm.internal.TypeIntrinsics: java.util.List asMutableList(java.lang.Object,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean minWith(boolean[],java.util.Comparator)
kotlinx.coroutines.JobSupport: boolean cancel(java.lang.Throwable)
kotlin.io.ByteStreamsKt: java.io.OutputStreamWriter writer$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: java.util.Iterator invoke()
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind[] values()
kotlin.ranges.IntRange: java.lang.String toString()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: java.lang.Object fold(kotlin.coroutines.ContinuationInterceptor,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.UByte: long minus-VKZWuLQ(byte,long)
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-QwZRm1k(long[])
androidx.core.os.ProcessCompat: boolean isApplicationUid(int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray access$getValues$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)
kotlinx.coroutines.scheduling.LimitingDispatcher: int getTaskMode()
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt___StringsKt: java.util.Set toSet(java.lang.CharSequence)
kotlin.time.AdjustedTimeMark: AdjustedTimeMark(kotlin.time.TimeMark,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.AbstractCollection: boolean containsAll(java.util.Collection)
kotlin.time.Duration$Companion: long getHours-UwyO8pc(double)
androidx.fragment.app.FragmentManager: void dispatchActivityCreated()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively$default(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Double max(java.lang.Iterable)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte minWith-XMRcp5o(byte[],java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.builders.SerializedMap: SerializedMap(java.util.Map)
androidx.core.text.util.FindAddress$ZipRange: boolean matches(java.lang.String)
androidx.core.widget.ScrollerCompat: int getFinalX()
androidx.window.java.area.WindowAreaControllerCallbackAdapter: kotlinx.coroutines.flow.Flow getWindowAreaInfos()
androidx.core.widget.ScrollerCompat: void notifyHorizontalEdgeReached(int,int,int)
androidx.core.graphics.PathParser: void interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
kotlin.NumbersKt__FloorDivModKt: int floorDiv(byte,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minByOrNull(double[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentResultListener: void onFragmentResult(java.lang.String,android.os.Bundle)
kotlin.math.MathKt__MathJVMKt: long roundToLong(double)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.location.LocationCompat$Api26Impl: void removeBearingAccuracy(android.location.Location)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterKeys(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(short[])
androidx.core.content.ContextCompat$Api24Impl: ContextCompat$Api24Impl()
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringBuilderKt: java.lang.String buildString(int,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)
kotlin.reflect.KClass$DefaultImpls: void isData$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(java.lang.Object[])
androidx.lifecycle.MediatorLiveData: void onActive()
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
androidx.core.app.NotificationChannelCompat$Api29Impl: boolean canBubble(android.app.NotificationChannel)
kotlin.Result: void getValue$annotations()
kotlin.time.Duration$Companion: void getMicroseconds-UwyO8pc$annotations(long)
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: kotlinx.coroutines.CancellableContinuation getCont()
kotlin.io.LinesSequence: java.util.Iterator iterator()
androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)
kotlinx.coroutines.selects.SelectClause: kotlin.jvm.functions.Function3 getProcessResFunc()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
androidx.versionedparcelable.VersionedParcel$1: VersionedParcel$1(androidx.versionedparcelable.VersionedParcel,java.io.InputStream)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence)
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt___StringsKt: java.util.List runningFold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.builders.SerializedMap$Companion: SerializedMap$Companion()
androidx.window.embedding.SplitInfo: java.lang.String toString()
kotlin.text.StringsKt___StringsKt: double sumOfDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt___StringsKt: java.lang.Comparable minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.reflect.TypeVariableImpl: int hashCode()
kotlin.math.MathKt__MathJVMKt: int abs(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int count(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString(char[])
androidx.viewpager.widget.PagerTabStrip$2: void onClick(android.view.View)
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
kotlin.collections.EmptyIterator: java.lang.Object next()
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter: android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo)
kotlin.time.DurationKt: void getNanoseconds$annotations(long)
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon load(android.content.res.Resources,int)
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getExitDir()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object single(kotlin.sequences.Sequence)
androidx.core.view.NestedScrollingParent: boolean onNestedPreFling(android.view.View,float,float)
androidx.core.view.NestedScrollingParent: void onNestedScroll(android.view.View,int,int,int,int)
androidx.customview.widget.ExploreByTouchHelper$2: int size(androidx.collection.SparseArrayCompat)
androidx.lifecycle.LifecycleCoroutineScope: kotlinx.coroutines.Job launchWhenResumed(kotlin.jvm.functions.Function2)
androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)
androidx.concurrent.futures.AbstractResolvableFuture: void afterDone()
kotlinx.coroutines.TimeoutCoroutine: TimeoutCoroutine(long,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment access$createSegment(long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsLast()
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(java.lang.Object,boolean)
androidx.window.core.Version: int hashCode()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter,androidx.window.core.ConsumerAdapter,android.content.Context)
androidx.core.app.NotificationCompat$Builder$Api24Impl: NotificationCompat$Builder$Api24Impl()
kotlinx.coroutines.internal.InlineList: InlineList(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
kotlin.collections.AbstractIterator: boolean tryToComputeNext()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-3bBvP4M(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeMaxTextSize(android.widget.TextView)
androidx.core.util.DebugUtils: DebugUtils()
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object sendBroadcast$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(double[],java.util.Comparator)
io.flutter.view.AccessibilityBridge: void setAccessibleNavigation(boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.ParentJob$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ParentJob,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.Deferred: java.lang.Object await(kotlin.coroutines.Continuation)
kotlin.jvm.internal.SpreadBuilder: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.widget.TextViewCompat$Api34Impl: TextViewCompat$Api34Impl()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte getCachedDirectionality(char)
androidx.window.core.Version: int compareTo(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onWindowFocusChanged(boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: kotlin.Pair invoke(java.lang.Object,java.lang.Object)
androidx.core.location.GnssStatusWrapper: int getSvid(int)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: UnbiasedSelectBuilderImpl$initSelectResult$1(kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl,kotlin.coroutines.Continuation)
kotlin.jvm.internal.AdaptedFunctionReference: boolean equals(java.lang.Object)
kotlinx.coroutines.sync.Mutex$DefaultImpls: void getOnLock$annotations()
kotlin.io.path.PathTreeWalk$bfsIterator$1: PathTreeWalk$bfsIterator$1(kotlin.io.path.PathTreeWalk,kotlin.coroutines.Continuation)
kotlin.collections.builders.ListBuilder: int hashCode()
androidx.core.internal.view.SupportMenuItem: int getNumericModifiers()
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
androidx.core.view.NestedScrollingParent2: void onNestedScroll(android.view.View,int,int,int,int,int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenResumed(androidx.lifecycle.Lifecycle,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.ULong: int toUInt-pVg5ArA(long)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
androidx.core.database.CursorKt: byte[] getBlobOrNull(android.database.Cursor,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-HwE9HBo(int[],java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: SequencesKt___SequencesKt$zipWithNext$2(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.sequences.FilteringSequence$iterator$1: java.lang.Object next()
androidx.window.embedding.SplitRule: SplitRule(java.lang.String,int,int,int,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.SplitAttributes,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectReceive(java.lang.Object,java.lang.Object)
kotlin.ranges.OpenEndFloatRange: OpenEndFloatRange(float,float)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(long[],kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitAttributes: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(short[],int)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void setController(java.lang.Object)
kotlin.UByte: java.lang.String toString-impl(byte)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: ActivityResultContracts$StartActivityForResult()
kotlinx.coroutines.scheduling.DefaultIoScheduler: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: int count(char[])
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: FlowKt__MigrationKt$onErrorReturn$2(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.TakeWhileSequence: TakeWhileSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.os.LocaleListCompat$Api21Impl: boolean isPseudoLocale(java.util.Locale)
kotlinx.coroutines.flow.MutableSharedFlow: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.result.PickVisualMediaRequest$Builder: androidx.activity.result.PickVisualMediaRequest build()
kotlinx.coroutines.flow.StateFlowKt: java.lang.Object getAndUpdate(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.reflect.KTypeProjection$Companion: void getStar$annotations()
androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender()
kotlinx.coroutines.channels.TickerChannelsKt: kotlinx.coroutines.channels.ReceiveChannel ticker$default(long,long,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.TickerMode,int,java.lang.Object)
kotlin.collections.ArrayAsCollection: boolean addAll(java.util.Collection)
androidx.core.graphics.BlendModeUtils$Api29Impl: BlendModeUtils$Api29Impl()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback: void onIsPermissionRevocationEnabledForAppResult(boolean,boolean)
androidx.core.text.TextDirectionHeuristicsCompat: TextDirectionHeuristicsCompat()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateWith(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.NonCancellable: boolean start()
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect: void onCancel(android.view.ViewGroup)
kotlin.time.MonotonicTimeSource: kotlin.time.TimeMark markNow()
androidx.core.view.MenuHostHelper$LifecycleContainer: MenuHostHelper$LifecycleContainer(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver)
androidx.core.app.NotificationCompat$Style: void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews)
io.flutter.util.TraceSection: TraceSection(java.lang.String)
kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)
kotlin.collections.AbstractMap: java.lang.Object remove(java.lang.Object)
androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
kotlinx.coroutines.EventLoopImplBase: long processNextEvent()
kotlinx.coroutines.EventLoop_commonKt: long delayNanosToMillis(long)
kotlin.NumbersKt__NumbersJVMKt: int toBits(float)
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(long[],kotlin.jvm.functions.Function1)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,android.app.Application)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-K6DWlUc(long[],long,int,int)
kotlinx.coroutines.CancellableContinuationImpl: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.PlatformViewWrapper: void release()
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] access$getSlots(kotlinx.coroutines.flow.internal.AbstractSharedFlow)
kotlin.time.Duration$Companion: long getMicroseconds-UwyO8pc(long)
androidx.core.content.IntentCompat$Api33Impl: java.lang.Object getParcelableExtra(android.content.Intent,java.lang.String,java.lang.Class)
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.core.app.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Object)
androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence,char[])
androidx.core.content.res.CamColor: float getJ()
androidx.profileinstaller.ProfileTranscoder: void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData)
kotlin.time.DurationKt: void getDays$annotations(double)
kotlin.text.MatchResult$Destructured: java.lang.String component10()
androidx.core.location.LocationManagerCompat$LocationListenerKey: boolean equals(java.lang.Object)
androidx.core.view.ContentInfoCompat$Compat31Impl: android.view.ContentInfo getWrapped()
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.profileinstaller.Encoding: java.lang.String readString(java.io.InputStream,int)
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectUnbiasedOld(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: StringsKt___StringsKt$chunkedSequence$1()
androidx.core.text.ICUCompat: ICUCompat()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
androidx.profileinstaller.ProfileInstaller$2: void onDiagnosticReceived(int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)
kotlin.UInt: int xor-WZ4Q5Ns(int,int)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.BlockRunner: void maybeRun()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: java.lang.Object firstNotNullOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence scanIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: DebugCoroutineInfoImpl$creationStackTrace$1(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlinx.coroutines.debug.internal.StackTraceFrame,kotlin.coroutines.Continuation)
kotlin.jvm.internal.MutableLocalVariableReference: MutableLocalVariableReference()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(short[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsControllerCompat: WindowInsetsControllerCompat(android.view.Window,android.view.View)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState[] newArray(int)
kotlin.collections.builders.MapBuilder: boolean contentEquals(java.util.Map)
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
kotlinx.coroutines.channels.ChannelCoroutine: boolean isClosedForReceive()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: CombineKt$combineInternal$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1: void onAnimationCancel(android.animation.Animator)
androidx.core.os.BuildCompat: boolean isAtLeastQ()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double minOf(double,double)
androidx.core.location.LocationCompat: float getBearingAccuracyDegrees(android.location.Location)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: LocationManagerCompat$LocationListenerTransport(androidx.core.location.LocationManagerCompat$LocationListenerKey,java.util.concurrent.Executor)
kotlin.UShortArray: int hashCode-impl(short[])
kotlin.text.StringsKt___StringsKt: java.util.List toMutableList(java.lang.CharSequence)
kotlinx.coroutines.JobSupport$onAwaitInternal$1: JobSupport$onAwaitInternal$1()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(short[],java.lang.Iterable)
androidx.lifecycle.HasDefaultViewModelProviderFactory: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
kotlin.collections.builders.ListBuilder$Itr: void add(java.lang.Object)
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List getDisplayCutouts()
androidx.lifecycle.ProcessLifecycleInitializer: java.lang.Object create(android.content.Context)
androidx.lifecycle.MediatorLiveData$Source: void onChanged(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.TypeAliasesKt: void LinkedHashSet$annotations()
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize()
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
kotlin.jvm.internal.ClassReference: void isValue$annotations()
androidx.core.view.ViewCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.loader.R$style: R$style()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.collections.ArrayDeque: boolean filterInPlace(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: boolean[] toBooleanArray(java.util.Collection)
androidx.core.app.NotificationCompat$Builder: android.app.Notification build()
kotlin.ranges.ULongRange$Companion: ULongRange$Companion()
androidx.window.core.FailedSpecification: androidx.window.core.Logger getLogger()
androidx.core.widget.CheckedTextViewCompat: android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: int getPriority()
kotlin.collections.ArraysKt___ArraysKt: double minOrThrow(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.OpenEndRange,byte)
kotlin.io.path.PathTreeWalk: boolean isBFS()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain()
androidx.window.layout.adapter.sidecar.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)
kotlin.collections.AbstractList$ListIteratorImpl: AbstractList$ListIteratorImpl(kotlin.collections.AbstractList,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScopeImpl: void access$setFunction$p(kotlin.DeepRecursiveScopeImpl,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
kotlin.text.UStringsKt: long toULong(java.lang.String,int)
kotlin.UNumbersKt: int countLeadingZeroBits-WZ4Q5Ns(int)
kotlinx.coroutines.channels.BufferedChannel: void isClosedForReceive$annotations()
kotlin.collections.ArrayDeque: int incremented(int)
androidx.fragment.app.FragmentManager$SaveBackStackState: FragmentManager$SaveBackStackState(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.window.core.Bounds: int getLeft()
androidx.core.view.ViewCompat: boolean performHapticFeedback(android.view.View,int,int)
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.savedstate.SavedStateRegistryController: void performAttach()
androidx.window.area.WindowAreaCapability: androidx.window.area.WindowAreaCapability$Operation getOperation()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: java.lang.Object getLifecycle()
kotlinx.coroutines.scheduling.CoroutineScheduler: int createNewWorker()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
kotlin.text.MatchResult: kotlin.ranges.IntRange getRange()
androidx.window.embedding.RuleController$Companion: RuleController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,java.lang.CharSequence)
androidx.fragment.app.FragmentManager: java.util.Map access$200(androidx.fragment.app.FragmentManager)
androidx.lifecycle.LifecycleController: LifecycleController(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,androidx.lifecycle.DispatchQueue,kotlinx.coroutines.Job)
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder)
androidx.core.app.Person$Api22Impl: Person$Api22Impl()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte lastOrNull(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: java.lang.Object invoke(int)
kotlin.io.FilesKt__UtilsKt: java.io.File resolve(java.io.File,java.lang.String)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction valueOf(java.lang.String)
kotlin.TypeCastException: TypeCastException()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,char,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterNot(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompatApi21Impl: TypefaceCompatApi21Impl()
kotlinx.coroutines.CancellableContinuationImplKt: int getDecision(int)
androidx.core.app.NotificationCompat: android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String)
androidx.viewpager.widget.PagerTitleStrip$PageListener: PagerTitleStrip$PageListener(androidx.viewpager.widget.PagerTitleStrip)
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.PendingIntentCompat$GatedCallback: android.app.PendingIntent$OnFinished getCallback()
io.flutter.util.PathUtils: PathUtils()
kotlin.random.Random: int nextBits(int)
kotlin.collections.ArraysKt___ArraysKt: short[] sortedArrayDescending(short[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt(int)
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
androidx.core.graphics.drawable.DrawableKt: void updateBounds$default(android.graphics.drawable.Drawable,int,int,int,int,int,java.lang.Object)
androidx.core.net.UriCompat: java.lang.String toSafeString(android.net.Uri)
kotlin.text.StringsKt___StringsKt: boolean any(java.lang.CharSequence)
androidx.profileinstaller.ProfileVerifier$CompilationStatus: ProfileVerifier$CompilationStatus(int,boolean,boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minOfWithOrNull(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: void recycle()
androidx.activity.result.ActivityResultRegistry: ActivityResultRegistry()
kotlin.text.StringsKt___StringsKt: java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(short[],int,int,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Object[])
kotlinx.coroutines.CoroutinesInternalError: CoroutinesInternalError(java.lang.String,java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__FileReadWriteKt: java.io.FileOutputStream outputStream(java.io.File)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: CombineKt$combineInternal$2$1$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMaxTextLength(int)
kotlin.UNumbersKt: int countOneBits-VKZWuLQ(long)
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.core.view.ViewCompat: void setAlpha(android.view.View,float)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: int getSize()
androidx.window.area.RearDisplaySessionImpl: void close()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
kotlin.text.MatcherMatchResult$groupValues$1: boolean contains(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List mutableListOf()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(double[])
androidx.window.embedding.SplitAttributesCalculatorParams: androidx.window.embedding.SplitAttributes getDefaultSplitAttributes()
androidx.window.reflection.ReflectionUtils$validateImplementation$1$1: java.lang.Boolean invoke()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte singleOrNull-GBYM_sE(byte[])
androidx.loader.content.ModernAsyncTask$3: ModernAsyncTask$3(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable)
androidx.core.util.LongSparseArrayKt$valueIterator$1: java.lang.Object next()
androidx.core.util.AndroidXConsumerKt: androidx.core.util.Consumer asAndroidXConsumer(kotlin.coroutines.Continuation)
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer(java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback,androidx.window.extensions.area.WindowAreaComponent)
kotlin.jvm.internal.Intrinsics: void throwJavaNpe(java.lang.String)
androidx.core.view.ViewCompat$1: java.lang.Object frameworkGet(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.collections.ArraysKt___ArraysJvmKt: double elementAt(double[],int)
com.getkeepsafe.relinker.ReLinker$LoadListener: void failure(java.lang.Throwable)
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderAware: void onAttachedToContentProvider(io.flutter.embedding.engine.plugins.contentprovider.ContentProviderPluginBinding)
kotlinx.coroutines.time.TimeKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,java.time.Duration)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
kotlinx.coroutines.debug.internal.DebuggerInfo: DebuggerInfo(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceCreated()
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler: void startStylusHandwriting()
androidx.core.app.ActivityRecreator$1: void run()
androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrievalFailed(int)
kotlin.collections.UCollectionsKt___UCollectionsKt: byte[] toUByteArray(java.util.Collection)
androidx.collection.CircularIntArray: void addLast(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toMutableSet(java.lang.Iterable)
androidx.versionedparcelable.ParcelUtils: void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List)
androidx.lifecycle.ViewModelProvider$Factory$-CC: androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
kotlin.jvm.internal.InlineMarker: void finallyStart(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void getBoundsInScreen(android.graphics.Rect)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.loader.content.AsyncTaskLoader: void cancelLoadInBackground()
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
androidx.core.view.WindowInsetsAnimationCompat$Impl: float getAlpha()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRightIndexedOrNull(java.util.List,kotlin.jvm.functions.Function3)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleReset(int)
androidx.window.embedding.EmbeddingInterfaceCompat: void clearSplitAttributesCalculator()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: ChannelsKt__DeprecatedKt$firstOrNull$1(kotlin.coroutines.Continuation)
androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutRemoved(java.util.List)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: FlowKt__ReduceKt$first$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: boolean invokeTest(java.lang.Object,android.util.Pair)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sortedArrayDescending-QwZRm1k(long[])
androidx.core.content.IntentCompat$Api33Impl: java.util.ArrayList getParcelableArrayListExtra(android.content.Intent,java.lang.String,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(boolean[])
androidx.core.util.AtomicFile: void finishWrite(java.io.FileOutputStream)
kotlin.io.ByteStreamsKt: long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder initialRoute(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: androidx.window.extensions.embedding.SplitAttributes$SplitType translateSplitType(androidx.window.embedding.SplitAttributes$SplitType)
kotlin.io.FileTreeWalk$WalkState: java.io.File step()
androidx.core.widget.TextViewKt$addTextChangedListener$2: TextViewKt$addTextChangedListener$2()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStarted(android.app.Activity)
kotlin.ranges.ClosedRange: boolean contains(java.lang.Comparable)
kotlin.text.StringsKt___StringsKt: double minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
kotlin.time.AbstractLongTimeSource: kotlin.time.TimeMark markNow()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-GBYM_sE(byte[])
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
androidx.fragment.app.SpecialEffectsController: void commitEffects$fragment_release(java.util.List)
kotlin.sequences.SequencesKt___SequencesKt: float maxOrThrow(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
io.flutter.embedding.engine.dart.DartMessenger: void disableBufferingIncomingMessages()
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: CallbackToFlowAdapter$connect$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.MutableStateFlow: java.lang.Object getValue()
kotlin.coroutines.AbstractCoroutineContextKey: boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.scheduling.CoroutineScheduler: void loop$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(int)
androidx.core.util.SparseArrayKt: boolean containsValue(android.util.SparseArray,java.lang.Object)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.versionedparcelable.VersionedParcel: int[] readIntArray(int[],int)
androidx.core.util.HalfKt: android.util.Half toHalf(float)
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
kotlin.collections.CollectionsKt___CollectionsKt: long[] toLongArray(java.util.Collection)
androidx.fragment.app.FragmentTransitionImpl$1: FragmentTransitionImpl$1(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
kotlin.text.StringsKt___StringsKt: kotlin.Pair partition(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removePrefix(java.lang.CharSequence,java.lang.CharSequence)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2: java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.RenderMode)
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.collections.builders.ListBuilderKt: void resetRange(java.lang.Object[],int,int)
kotlinx.coroutines.flow.StateFlowKt: java.lang.Object updateAndGet(kotlinx.coroutines.flow.MutableStateFlow,kotlin.jvm.functions.Function1)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver getLifecycleObserver()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onSaveInstanceState(android.os.Bundle)
kotlin.KotlinVersion: int compareTo(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.util.Collection flatMapSequenceTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelsCompat()
androidx.core.app.ShareCompat$IntentReader: java.lang.String getType()
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: java.lang.String getLocalizedMessage()
kotlin.NumbersKt__NumbersKt: short takeLowestOneBit(short)
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener: void onIsolateServiceIdAvailable(java.lang.String)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()
androidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getCurrent()
androidx.versionedparcelable.VersionedParcelStream: void writeBoolean(boolean)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.content.Context)
androidx.core.view.WindowInsetsAnimationControllerCompat: int getTypes()
androidx.concurrent.futures.DirectExecutor: androidx.concurrent.futures.DirectExecutor valueOf(java.lang.String)
androidx.window.embedding.ActivityStack: java.util.List getActivitiesInProcess$window_release()
kotlin.collections.ArraysKt___ArraysKt: double random(double[])
kotlinx.coroutines.CompletableDeferredImpl: java.lang.Object getCompleted()
kotlinx.coroutines.EventLoopImplPlatform: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.flow.SharingConfig: SharingConfig(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,kotlin.coroutines.CoroutineContext)
androidx.customview.widget.ExploreByTouchHelper: boolean requestAccessibilityFocus(int)
androidx.core.provider.DocumentsContractCompat$DocumentCompat: DocumentsContractCompat$DocumentCompat()
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
androidx.collection.MapCollections: java.util.Collection getValues()
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.core.util.LogWriter: LogWriter(java.lang.String)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: CancellableFlowImpl$collect$2(kotlinx.coroutines.flow.FlowCollector)
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle createMessagingStyle(android.app.Person)
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: char maxWithOrThrow(char[],java.util.Comparator)
androidx.lifecycle.SavedStateHandleController: boolean isAttached()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: ChannelsKt__DeprecatedKt$dropWhile$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getInvariantSeparatorsPath(java.nio.file.Path)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.ranges.CharRange: boolean equals(java.lang.Object)
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.text.StringsKt___StringsKt: java.util.Collection mapNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
kotlin.time.Duration$Companion: kotlin.time.Duration parseIsoStringOrNull-FghU774(java.lang.String)
kotlin.UShort: short xor-xj2QHRw(short,short)
kotlin.sequences.SequencesKt___SequencesKt$minus$1: java.util.Iterator iterator()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setRowTitle(java.lang.String)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)
androidx.fragment.app.ListFragment: int getSelectedItemPosition()
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
kotlinx.coroutines.channels.ChannelCoroutine: void cancel(java.util.concurrent.CancellationException)
kotlin.time.LongSaturatedMathKt: long saturatingDiff(long,long)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
androidx.window.core.FailedSpecification: androidx.window.core.WindowStrictModeException getException()
kotlin.jvm.internal.ClassReference: void isFinal$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt minWith-YmdZ_VM(int[],java.util.Comparator)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void addDurationItem(android.util.SparseIntArray,long)
kotlin.UIntArray$Iterator: int next-pVg5ArA()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: java.lang.Object parseResult(int,android.content.Intent)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: java.lang.Object invoke()
androidx.core.app.NotificationCompat$Api26Impl: int getGroupAlertBehavior(android.app.Notification)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
android.support.v4.os.IResultReceiver2$Stub$Proxy: java.lang.String getInterfaceDescriptor()
androidx.core.content.pm.ShortcutManagerCompat: void setShortcutInfoChangeListeners(java.util.List)
androidx.fragment.app.FragmentResultOwner: void clearFragmentResult(java.lang.String)
io.flutter.plugin.editing.TextEditingDelta: org.json.JSONObject toJSON()
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.sequences.Sequence)
com.example.wellnesshub.R$style: R$style()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean firstOrNull(boolean[])
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind valueOf(java.lang.String)
androidx.core.content.res.TypedArrayKt: java.lang.CharSequence getTextOrThrow(android.content.res.TypedArray,int)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object poll()
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
androidx.lifecycle.SavedStateHandle: android.os.Bundle savedStateProvider$lambda$0(androidx.lifecycle.SavedStateHandle)
kotlin.UByte: int minus-xj2QHRw(byte,short)
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.os.Parcelable castToParcelable(android.app.Person)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: ActivityResultContracts$PickVisualMedia()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtraOutput$16(java.lang.String,android.net.Uri)
kotlin.sequences.DropWhileSequence: DropWhileSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()
androidx.fragment.app.FragmentManager$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long single-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransitionImpl: void addTarget(java.lang.Object,android.view.View)
androidx.window.layout.SafeWindowLayoutComponentProvider: androidx.window.SafeWindowExtensionsProvider access$getSafeWindowExtensionsProvider$p(androidx.window.layout.SafeWindowLayoutComponentProvider)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
androidx.core.os.TraceCompat: void endSection()
kotlin.UByte: byte constructor-impl(byte)
kotlin.UShort: kotlin.ranges.UIntRange rangeUntil-xj2QHRw(short,short)
kotlin.collections.MapWithDefaultImpl: java.util.Collection values()
kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object singleOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)
kotlin.io.FilePathComponents: java.lang.String getRootName()
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively$destination$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,java.nio.file.Path,java.nio.file.Path)
androidx.startup.InitializationProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.activity.SystemBarStyle$Companion: androidx.activity.SystemBarStyle auto(int,int,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int)
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceRightOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.fragment.app.BackStackRecord: int commitAllowingStateLoss()
kotlin.UByteArray: java.lang.String toString()
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropWhile(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.ULongArray: java.lang.Object[] toArray()
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.core.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyInto(char[],char[],int,int,int)
kotlin.io.path.PathNode: PathNode(java.nio.file.Path,java.lang.Object,kotlin.io.path.PathNode)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object minBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: void run()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: ConcurrentWeakMap$Core(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,int)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(float,io.flutter.embedding.engine.FlutterJNI)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double max(double[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.IntRange)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.content.Context)
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getActions()
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UIntArray: UIntArray(int[])
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunInterfaceConstructorReference: kotlin.reflect.KCallable getReflected()
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: FlutterRenderer$TextureFinalizerRunnable(long,io.flutter.embedding.engine.FlutterJNI)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.provider.FontRequestWorker$2: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
kotlin.collections.builders.MapBuilder: java.lang.Object[] allocateValuesArray()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void onBoundsChange(android.graphics.Rect)
io.flutter.view.AccessibilityBridge: boolean isImportant(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryTerminateWorker()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.StringBuffer)
androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)
androidx.core.view.DragAndDropPermissionsCompat: void release()
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
kotlinx.coroutines.selects.TrySelectDetailedResult: TrySelectDetailedResult(java.lang.String,int)
androidx.fragment.app.DialogFragment: boolean onHasView()
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1: void afterTextChanged(android.text.Editable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: ChannelsKt__DeprecatedKt$last$1(kotlin.coroutines.Continuation)
kotlin.collections.MapsKt___MapsKt: java.util.Collection flatMapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
androidx.window.SafeWindowExtensionsProvider: java.lang.Class getWindowExtensionsProviderClass()
androidx.core.util.Predicate$-CC: androidx.core.util.Predicate not(androidx.core.util.Predicate)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression downTo(char,char)
kotlin.UByte: int rem-7apg3OU(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(short[],java.util.Collection)
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: java.lang.Object invoke(java.lang.Object)
kotlin.random.XorWowRandom: int nextBits(int)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(float[],kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-GBYM_sE(byte[])
kotlinx.coroutines.CompletableDeferred: boolean complete(java.lang.Object)
androidx.window.embedding.EmbeddingAspectRatio: java.lang.String toString()
kotlinx.coroutines.flow.internal.StackFrameContinuation: void resumeWith(java.lang.Object)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker,androidx.window.java.core.CallbackToFlowAdapter)
androidx.core.util.SparseIntArrayKt$valueIterator$1: boolean hasNext()
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: java.util.Iterator iterator()
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$1: ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$1()
kotlin.math.MathKt__MathJVMKt: double floor(double)
androidx.core.app.NotificationChannelCompat: int getImportance()
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal unaryMinus(java.math.BigDecimal)
androidx.window.embedding.EmbeddingCompat$Companion: kotlin.Unit emptyActivityEmbeddingProxy$lambda$2(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
kotlin.text.StringsKt___StringsKt: double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.location.LocationCompat$Api33Impl: void removeVerticalAccuracy(android.location.Location)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toCollection(kotlinx.coroutines.flow.Flow,java.util.Collection,kotlin.coroutines.Continuation)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationCancel(android.animation.Animator)
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
androidx.lifecycle.CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0: kotlin.Function getFunctionDelegate()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(java.lang.Long[])
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(java.lang.Object[])
androidx.versionedparcelable.VersionedParcel$1: java.lang.Class resolveClass(java.io.ObjectStreamClass)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel getDeferredComponentChannel()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
kotlin.jvm.internal.BooleanSpreadBuilder: int getSize(boolean[])
androidx.activity.ViewTreeOnBackPressedDispatcherOwner: void set(android.view.View,androidx.activity.OnBackPressedDispatcherOwner)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isSameFileAs(java.nio.file.Path,java.nio.file.Path)
androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(boolean[])
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(float[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: SequencesKt__SequencesKt$shuffled$1(kotlin.sequences.Sequence,kotlin.random.Random,kotlin.coroutines.Continuation)
kotlin.ranges.LongProgressionIterator: boolean hasNext()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt___MapsKt: java.lang.Object maxOfWith(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component5-rL5Bavg(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-gVVukQo(short[],short[],kotlin.jvm.functions.Function2)
kotlin.UByte: byte toByte-impl(byte)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.time.DurationKt: long durationOf(long,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVibrate(long[])
kotlin.comparisons.ComparisonsKt: ComparisonsKt()
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
androidx.loader.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Object[])
io.flutter.plugin.platform.PlatformViewsController: void lambda$onEndFrame$3()
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: NotificationCompat$CallStyle$Api28Impl()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin,boolean)
kotlin.text.StringsKt__StringsKt: java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlin.reflect.TypeVariableImpl: java.lang.annotation.Annotation[] getDeclaredAnnotations()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: java.util.Iterator iterator()
androidx.core.text.ICUCompat: java.lang.String maximizeAndGetScript(java.util.Locale)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectReceiveCatching(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentActivity$HostCallbacks: void invalidateMenu()
androidx.core.widget.TextViewKt: android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4)
kotlin.reflect.WildcardTypeImpl$Companion: WildcardTypeImpl$Companion()
kotlin.math.MathKt__MathJVMKt: float atanh(float)
kotlin.UShort: int floorDiv-xj2QHRw(short,short)
androidx.core.app.NotificationManagerCompat: void cancel(int)
androidx.core.view.WindowInsetsAnimationControllerCompat: androidx.core.graphics.Insets getHiddenStateInsets()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-QwZRm1k(long[])
androidx.core.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
kotlin.io.path.FileVisitorBuilder: void onVisitFileFailed(kotlin.jvm.functions.Function2)
androidx.core.app.ShareCompat: void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder)
androidx.activity.result.ActivityResultLauncher: androidx.activity.result.contract.ActivityResultContract getContract()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOrNull(float[])
kotlin.NumbersKt__FloorDivModKt: byte mod(int,byte)
io.flutter.embedding.android.FlutterView$4: void onFlutterUiDisplayed()
androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
kotlin.collections.ArraysKt___ArraysJvmKt: char elementAt(char[],int)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
androidx.fragment.app.FragmentState$1: java.lang.Object[] newArray(int)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.app.RemoteInput build(android.app.RemoteInput$Builder)
androidx.fragment.app.FragmentManager: void dispatchMultiWindowModeChanged(boolean,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowAnyComponent()
androidx.lifecycle.CoroutineLiveData: void onActive()
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean access$areExtensionsAvailable(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
androidx.window.area.SafeWindowAreaComponentProvider: java.lang.Class access$getWindowAreaComponentClass(androidx.window.area.SafeWindowAreaComponentProvider)
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl: java.lang.CharSequence getInitialTextAfterCursor(android.view.inputmethod.EditorInfo,int,int)
kotlin.ranges.UIntRange: java.lang.Comparable getEndExclusive()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUInt(java.lang.Iterable)
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized()
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)
androidx.customview.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)
androidx.fragment.app.Fragment: boolean isStateSaved()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceOrNull(double[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double average(short[])
androidx.core.app.RemoteInput$Api28Impl: RemoteInput$Api28Impl()
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$waitUntilSelected(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()
androidx.fragment.app.FragmentManager: boolean prepareBackStackState(java.util.ArrayList,java.util.ArrayList)
kotlin.collections.EmptyList: java.util.Iterator iterator()
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.String readText$default(java.nio.file.Path,java.nio.charset.Charset,int,java.lang.Object)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: ViewModelProvider$AndroidViewModelFactory(android.app.Application)
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
androidx.loader.app.LoaderManager: LoaderManager()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxByOrThrow(java.lang.Object[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String,java.lang.String)
androidx.core.app.ActivityRecreator: boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackWindowConsumerValid$1: java.lang.Boolean invoke()
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: java.util.Iterator invoke()
kotlinx.coroutines.internal.ThreadLocalKey: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setForegroundServiceBehavior(int)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(short[],kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] $values()
androidx.core.graphics.RegionKt: android.graphics.Region not(android.graphics.Region)
kotlin.io.TextStreamsKt$readLines$1: TextStreamsKt$readLines$1(java.util.ArrayList)
kotlin.random.XorWowRandom: XorWowRandom(int,int,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(boolean[],kotlin.jvm.functions.Function1)
kotlin.UShort: java.lang.String toString-impl(short)
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(byte[],kotlin.jvm.functions.Function2)
kotlin.time.Duration: double getInDays-impl(long)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelectSuspend(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(byte[],java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isInPictureInPictureMode()
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ContentInfoCompat$CompatImpl: android.os.Bundle getExtras()
kotlin.text.MatchGroup: kotlin.ranges.IntRange getRange()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] onEachIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPairPredicates$1: EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPairPredicates$1(java.util.Set)
kotlin.properties.Delegates$vetoable$1: Delegates$vetoable$1(java.lang.Object,kotlin.jvm.functions.Function3)
androidx.lifecycle.SavedStateHandleSupport: void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner)
kotlin.collections.builders.ListBuilderKt: boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.DeprecatedSinceKotlin: java.lang.String errorSince()
androidx.core.app.NotificationCompat$MessagingStyle$Api26Impl: NotificationCompat$MessagingStyle$Api26Impl()
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: androidx.core.graphics.Insets getShownStateInsets()
kotlinx.coroutines.channels.ChannelIterator$next0$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,java.lang.String,int,int)
androidx.core.database.DatabaseUtilsCompat: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapIndexedIterableTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,float)
androidx.core.util.SparseLongArrayKt: void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2)
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationFailed()
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
kotlin.time.DurationKt: long toDuration(int,kotlin.time.DurationUnit)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minOrNull(char[])
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.activity.result.ActivityResult: int describeContents()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.util.SizeKt: int component1(android.util.Size)
io.flutter.plugin.text.ProcessTextPlugin: java.util.Map queryTextActions()
kotlin.collections.ArraysKt___ArraysJvmKt: long elementAt(long[],int)
kotlinx.coroutines.DispatchedCoroutine: java.lang.Object getResult()
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,kotlin.sequences.Sequence)
kotlin.time.Duration$Companion: long getMilliseconds-UwyO8pc(long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: DistinctElementSidecarCallback(androidx.window.layout.adapter.sidecar.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.core.text.SpannableStringKt: void set(android.text.Spannable,int,int,java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void updateBackGestureProgress(android.window.BackEvent)
androidx.core.view.inputmethod.EditorInfoCompat: boolean isPasswordInputType(int)
kotlin.UInt: void getData$annotations()
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextEntryKey(boolean)
kotlinx.coroutines.CompletableDeferredImpl: boolean complete(java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: byte mod(short,byte)
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[],int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(java.lang.Object[])
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
kotlinx.coroutines.DelayWithTimeoutDiagnostics$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.DelayWithTimeoutDiagnostics,long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlin.time.Duration: boolean isInNanos-impl(long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: androidx.lifecycle.Lifecycle getLifecycle()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.lifecycle.DispatchQueue: void pause()
kotlinx.coroutines.flow.ChannelFlowBuilder: ChannelFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.reflect.KClass: java.lang.Object getObjectInstance()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()
androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel flatMap$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.UShortArray: boolean remove(java.lang.Object)
androidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean)
kotlin.collections.builders.MapBuilderKeys: MapBuilderKeys(kotlin.collections.builders.MapBuilder)
kotlin.jvm.internal.PropertyReference2Impl: PropertyReference2Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.core.util.PairKt: java.lang.Object component2(android.util.Pair)
io.flutter.plugin.platform.PlatformViewRenderTarget: boolean isReleased()
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlin.jvm.functions.Function1)
androidx.core.view.ViewStructureCompat$Api23Impl: void setContentDescription(android.view.ViewStructure,java.lang.CharSequence)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.android.HandlerContext)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: java.lang.Boolean invoke(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl: boolean isLocked()
androidx.core.graphics.PathParser$ExtractFloatResult: PathParser$ExtractFloatResult()
kotlinx.coroutines.internal.ThreadLocalKey: kotlinx.coroutines.internal.ThreadLocalKey copy(java.lang.ThreadLocal)
kotlin.io.TextStreamsKt: long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,long)
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.profileinstaller.ProfileTranscoder: boolean transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[])
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: void invoke(java.lang.Throwable)
androidx.window.area.RearDisplayPresentationSessionPresenterImpl: RearDisplayPresentationSessionPresenterImpl(androidx.window.extensions.area.WindowAreaComponent,androidx.window.extensions.area.ExtensionWindowAreaPresentation)
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)
androidx.core.app.NotificationChannelGroupCompat$Builder: androidx.core.app.NotificationChannelGroupCompat$Builder setName(java.lang.CharSequence)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void sendState(io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState,boolean)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: java.lang.Void access$noImpl()
androidx.core.util.RangeKt$toClosedRange$1: java.lang.Comparable getStart()
kotlin.coroutines.CoroutineContext$Element: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.jvm.internal.DoubleCompanionObject: void getSIZE_BYTES$annotations()
androidx.core.view.MenuProvider: void onCreateMenu(android.view.Menu,android.view.MenuInflater)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] onEachIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StateFlowSlot: kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.StateFlowImpl)
androidx.fragment.app.FragmentTabHost: void ensureHierarchy(android.content.Context)
kotlinx.coroutines.flow.FlowKt__CollectKt: kotlinx.coroutines.Job launchIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-FGO6Aew(short[],short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short elementAtOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1)
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2: androidx.window.layout.adapter.WindowBackend invoke()
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.core.view.ActionProvider: void reset()
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
kotlin.text.StringsKt__StringsKt: boolean toBooleanStrict(java.lang.String)
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.String toString()
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)
kotlin.text.StringsKt___StringsKt: java.util.List chunked(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
androidx.loader.content.Loader: void rollbackContentChanged()
kotlin.ExceptionsKt__ExceptionsKt: java.lang.String stackTraceToString(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(java.lang.Comparable[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short max(short[])
androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)
io.flutter.embedding.android.FlutterFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(short[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: boolean isCancelled()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character lastOrNull(char[],kotlin.jvm.functions.Function1)
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1: void onAnimationEnd(android.animation.Animator)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence)
androidx.core.app.NotificationCompat: java.lang.String getGroup(android.app.Notification)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(short[],kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManager: void enablePredictiveBack(boolean)
androidx.collection.SimpleArrayMap: boolean isEmpty()
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
kotlin.UNumbersKt: int countOneBits-xj2QHRw(short)
androidx.core.view.inputmethod.EditorInfoCompat: void setStylusHandwritingEnabled(android.view.inputmethod.EditorInfo,boolean)
androidx.core.app.GrammaticalInflectionManagerCompat: int getApplicationGrammaticalGender(android.content.Context)
kotlin.ULongKt: long toULong(int)
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.enums.EnumEntriesList: int indexOf(java.lang.Enum)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
androidx.core.location.GnssStatusCompat$Callback: void onStarted()
androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Mac)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: ParameterizedTypeImpl$getTypeName$1$1()
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointLibraryUri()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context)
androidx.core.graphics.drawable.ColorDrawableKt: android.graphics.drawable.ColorDrawable toDrawable(android.graphics.Color)
androidx.core.view.inputmethod.InputContentInfoCompat: android.content.ClipDescription getDescription()
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentResultOwner: void clearFragmentResultListener(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
kotlin.reflect.KClass: boolean equals(java.lang.Object)
kotlin.PropertyReferenceDelegatesKt: void setValue(kotlin.reflect.KMutableProperty1,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.Collection flatMapIndexedIterableTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.app.TaskStackBuilder: TaskStackBuilder(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object frameworkGet(android.view.View)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)
kotlinx.coroutines.AbstractTimeSourceKt: void unregisterTimeLoopThread()
kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)
androidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State)
kotlin.ranges.LongProgression: java.util.Iterator iterator()
io.flutter.embedding.android.FlutterImageView: void init()
kotlin.collections.ArraysKt___ArraysKt: float component3(float[])
kotlin.time.DurationUnitKt__DurationUnitJvmKt: kotlin.time.DurationUnit toDurationUnit(java.util.concurrent.TimeUnit)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
kotlin.UInt: double toDouble-impl(int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
androidx.core.provider.FontRequestWorker: FontRequestWorker()
kotlin.UByte: short toUShort-Mh2AYeg(byte)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: LoaderManagerImpl$LoaderInfo(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong randomOrNull-JzugnMA(long[],kotlin.random.Random)
androidx.annotation.DeprecatedSinceApi: java.lang.String message()
androidx.core.view.ContentInfoCompat$Compat31Impl: android.content.ClipData getClip()
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(java.lang.Object[])
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(short[])
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createContentView()
androidx.core.app.RemoteInput: boolean getAllowFreeFormInput()
androidx.core.location.LocationCompat$Api34Impl: boolean hasMslAltitude(android.location.Location)
com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry: ApkLibraryInstaller$ZipFileInZipEntry(java.util.zip.ZipFile,java.util.zip.ZipEntry)
kotlinx.coroutines.flow.SharedFlowImpl: int access$getBufferCapacity$p(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.location.GnssStatusCompat: boolean hasAlmanacData(int)
kotlinx.coroutines.flow.SharedFlowKt: void access$setBufferAt(java.lang.Object[],long,java.lang.Object)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOfRangeInline(short[],int,int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_RCV$p()
kotlin.time.DurationKt: void getMicroseconds$annotations(double)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(short[])
kotlinx.coroutines.flow.internal.NopCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.future.CompletableFutureCoroutine: CompletableFutureCoroutine(kotlin.coroutines.CoroutineContext,java.util.concurrent.CompletableFuture)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
androidx.core.view.ViewCompat: void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: int toInt(java.lang.String,int)
androidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)
kotlinx.coroutines.future.FutureKt: kotlinx.coroutines.Deferred asDeferred(java.util.concurrent.CompletionStage)
androidx.annotation.experimental.Experimental$Level: androidx.annotation.experimental.Experimental$Level[] $values()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.plugin.common.BasicMessageChannel,io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.ActionProvider: boolean isVisible()
kotlin.io.encoding.EncodeOutputStream: void close()
androidx.lifecycle.LifecycleRegistryOwner$-CC: androidx.lifecycle.Lifecycle $default$getLifecycle(androidx.lifecycle.LifecycleRegistryOwner)
androidx.window.area.WindowAreaControllerImpl: void startRearDisplayPresentationMode(android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback)
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean containsEntry(java.util.Map$Entry)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flatMapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1)
kotlin.ranges.IntProgression: boolean isEmpty()
kotlin.time.DurationJvmKt: boolean getDurationAssertionsEnabled()
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object getValueOrNull()
androidx.fragment.app.FragmentActivity$HostCallbacks: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion: ActivityResultContracts$StartIntentSenderForResult$Companion()
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(long[],kotlin.jvm.functions.Function2)
kotlin.sequences.TransformingIndexedSequence$iterator$1: boolean hasNext()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVisibility(int)
androidx.fragment.app.strictmode.Violation: Violation(androidx.fragment.app.Fragment,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean singleOrNull(boolean[])
androidx.viewpager.widget.PagerAdapter: PagerAdapter()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(short[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(long[])
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrElse(java.util.List,int,kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate$-CC: void $default$setFrameworkHandlesBack(io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate,boolean)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: void invokeSuspend$lambda$0(androidx.window.area.WindowAreaControllerImpl,kotlinx.coroutines.channels.ProducerScope,java.lang.Integer)
androidx.core.app.NotificationChannelCompat: int getLockscreenVisibility()
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: void onBackStarted(android.window.BackEvent)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.lifecycle.process.R: R()
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(long[],kotlin.jvm.functions.Function1)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setExcludedFromSurfaces(int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1: void onAnimationCancel(android.animation.Animator)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence scan(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.service.quicksettings.TileServiceCompat$Api34Impl: TileServiceCompat$Api34Impl()
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.Long getLogicalKey(android.view.KeyEvent)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.core.app.AppLaunchChecker: boolean hasStartedFromLauncher(android.content.Context)
kotlin.time.Duration$Companion: long days-UwyO8pc(double)
androidx.core.text.PrecomputedTextCompat: PrecomputedTextCompat(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
androidx.core.graphics.PointKt: int component1(android.graphics.Point)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterNot(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.window.embedding.ActivityFilter: androidx.window.core.ActivityComponentInfo getActivityComponentInfo$window_release()
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
androidx.fragment.app.DefaultSpecialEffectsController: void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlin.Result: int hashCode-impl(java.lang.Object)
androidx.core.text.CharSequenceKt: int trimmedLength(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getAvailableExtraData()
androidx.annotation.ReplaceWith: java.lang.String[] imports()
kotlin.io.path.PathsKt__PathUtilsKt: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])
androidx.core.view.DisplayCompat$Api23Impl: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[],int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1: ProcessTextChannel$1(io.flutter.embedding.engine.systemchannels.ProcessTextChannel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte getOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence take(int)
androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle getExtras()
androidx.collection.LruCache: int hitCount()
androidx.core.view.WindowInsetsControllerCompat$Impl: boolean isAppearanceLightStatusBars()
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(char[])
androidx.core.view.NestedScrollingChild2: boolean startNestedScroll(int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short minBy(short[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathTreeWalk$dfsIterator$1: PathTreeWalk$dfsIterator$1(kotlin.io.path.PathTreeWalk,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionStart(android.transition.Transition)
kotlin.math.MathKt__MathJVMKt: double ceil(double)
androidx.core.location.LocationManagerCompat$Api24Impl: LocationManagerCompat$Api24Impl()
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceRange(java.lang.String,kotlin.ranges.IntRange,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt: java.lang.Object reduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(byte[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeReference: java.lang.String asString(kotlin.reflect.KTypeProjection)
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
androidx.core.view.accessibility.AccessibilityViewCommand: boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
kotlinx.coroutines.CancellableContinuationImpl: void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable)
kotlin.collections.builders.MapBuilder: void ensureExtraCapacity(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte last-GBYM_sE(byte[])
kotlin.time.Duration: Duration(long)
androidx.window.embedding.RuleController$Companion: java.util.Set parseRules(android.content.Context,int)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$500(io.flutter.view.AccessibilityBridge)
kotlin.jvm.internal.Intrinsics: void throwNpe()
kotlinx.coroutines.CancellableContinuation: boolean isCancelled()
androidx.core.app.NotificationCompat$Api20Impl: java.lang.CharSequence getLabel(android.app.RemoteInput)
kotlin.collections.AbstractMutableMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi24Impl: TypefaceCompatApi24Impl()
io.flutter.embedding.android.FlutterView: void access$500(io.flutter.embedding.android.FlutterView)
kotlin.ULong: long and-VKZWuLQ(long,long)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal div(java.math.BigDecimal,java.math.BigDecimal)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
kotlinx.coroutines.flow.internal.FlowCoroutineKt: kotlinx.coroutines.flow.Flow scopedFlow(kotlin.jvm.functions.Function3)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.lang.Object getController()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short find(short[],kotlin.jvm.functions.Function1)
androidx.core.location.LocationManagerCompat$LocationListenerKey: int hashCode()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void cleanWeakRef(kotlinx.coroutines.debug.internal.HashedWeakRef)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.ViewKt: void doOnNextLayout(android.view.View,kotlin.jvm.functions.Function1)
io.flutter.plugin.common.JSONUtil: java.lang.Object unwrap(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyInto$default(short[],short[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: void forEachDirectoryEntry$default(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.app.BackStackRecord: void commitNow()
kotlin.text.StringsKt___StringsJvmKt: java.util.SortedSet toSortedSet(java.lang.CharSequence)
androidx.core.location.LocationManagerCompat$Api24Impl: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)
androidx.versionedparcelable.VersionedParcel: java.util.List readList(java.util.List,int)
androidx.collection.MapCollections$KeySet: int hashCode()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
kotlin.UInt: int hashCode-impl(int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: java.lang.Object get(int)
io.flutter.embedding.android.FlutterActivity: android.window.OnBackInvokedCallback createOnBackInvokedCallback()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()
androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
androidx.versionedparcelable.VersionedParcel: long readLong()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: android.content.pm.ResolveInfo getSystemFallbackPicker$activity_release(android.content.Context)
io.flutter.embedding.android.FlutterFragmentActivity: void switchLaunchThemeForNormalTheme()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToBackground()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.core.app.NotificationManagerCompat$NotifyTask: void send(android.support.v4.app.INotificationSideChannel)
kotlin.time.Duration: long getInWholeDays-impl(long)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
kotlinx.coroutines.JobSupport$AwaitContinuation: JobSupport$AwaitContinuation(kotlin.coroutines.Continuation,kotlinx.coroutines.JobSupport)
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: void onSessionFinished()
kotlin.UShortArray: java.lang.String toString()
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.jvm.functions.Function1 getDynamicAttach()
androidx.tracing.TraceApi29Impl: void setCounter(java.lang.String,int)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfShort(java.lang.Iterable)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: int getFlags()
androidx.core.view.WindowInsetsControllerCompat$Impl: WindowInsetsControllerCompat$Impl()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object next()
kotlinx.coroutines.android.HandlerContext: android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: FlutterActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
androidx.core.graphics.RectKt: float component1(android.graphics.RectF)
androidx.core.view.ViewKt$ancestors$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.ListFragment: void ensureList()
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onSend$1: BufferedChannel$onSend$1()
io.flutter.embedding.android.FlutterFragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
androidx.versionedparcelable.VersionedParcelStream: VersionedParcelStream(java.io.InputStream,java.io.OutputStream)
kotlin.time.Duration$Companion: long microseconds-UwyO8pc(long)
kotlin.time.LongSaturatedMathKt: long saturatingFiniteDiff(long,long)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.List map(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: FlowKt__TransformKt$runningFold$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
androidx.core.os.LocaleListCompatWrapper: LocaleListCompatWrapper(java.util.Locale[])
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean maxWithOrThrow(boolean[],java.util.Comparator)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean hasDeliveredData()
kotlin.collections.builders.MapBuilder$KeysItr: java.lang.Object next()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow shareIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int)
kotlin.NumbersKt__NumbersJVMKt: boolean isInfinite(double)
androidx.core.util.LogWriter: void write(char[],int,int)
kotlin.text.CharDirectionality$Companion$directionalityMap$2: CharDirectionality$Companion$directionalityMap$2()
androidx.window.embedding.ActivityEmbeddingController$Companion: ActivityEmbeddingController$Companion()
kotlinx.coroutines.sync.SemaphoreSegment: boolean cas(int,java.lang.Object,java.lang.Object)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.PictureInPictureModeChangedInfo: PictureInPictureModeChangedInfo(boolean,android.content.res.Configuration)
kotlinx.coroutines.TimeoutKt: java.lang.Object setupTimeout(kotlinx.coroutines.TimeoutCoroutine,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: android.content.ContentProvider getContentProvider()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: java.lang.Object getInputContentInfo()
androidx.core.content.pm.PermissionInfoCompat: PermissionInfoCompat()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference0: PropertyReference0(java.lang.Object)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat getMode(android.content.Context,android.view.Display)
androidx.startup.R: R()
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment closeLinkedList()
androidx.core.view.WindowInsetsControllerCompat$Impl20: void show(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character firstOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String substring(java.lang.String,int,int)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
androidx.core.app.LocaleManagerCompat: java.lang.Object getLocaleManagerForApplication(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],long[],kotlin.jvm.functions.Function2)
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
androidx.core.view.MarginLayoutParamsCompat: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
io.flutter.plugin.platform.PlatformViewRenderTarget: void release()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__FileReadWriteKt: void forEachLine$default(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()
kotlinx.coroutines.internal.SegmentOrClosed: boolean isClosed-impl(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)
kotlin.ranges.OpenEndFloatRange: int hashCode()
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
androidx.core.view.NestedScrollingChild: boolean isNestedScrollingEnabled()
kotlinx.coroutines.CancellableContinuationImpl: void update$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View,int)
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
androidx.window.embedding.EmbeddingBackend: void setRules(java.util.Set)
kotlin.NumbersKt__NumbersJVMKt: boolean isFinite(double)
kotlin.collections.ArrayAsCollection: int size()
kotlin.io.ByteStreamsKt: java.io.BufferedInputStream buffered(java.io.InputStream,int)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxWithOrNull(long[],java.util.Comparator)
androidx.lifecycle.EmittedSource$dispose$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
kotlinx.coroutines.selects.SelectImplementation: boolean access$isCancelled(kotlinx.coroutines.selects.SelectImplementation)
androidx.fragment.app.FragmentController: void dispatchDestroy()
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: kotlin.jvm.functions.Function1 invoke(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,java.lang.Object)
androidx.core.view.ViewKt: void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
androidx.collection.ArraySet: void ensureCapacity(int)
androidx.core.app.NotificationCompat$CallStyle: boolean isActionAddedByCallStyle(androidx.core.app.NotificationCompat$Action)
androidx.core.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
_COROUTINE.CoroutineDebuggingKt: java.lang.String getARTIFICIAL_FRAME_PACKAGE_NAME()
kotlin.collections.BooleanIterator: BooleanIterator()
androidx.core.content.res.CamColor: float getS()
androidx.core.location.LocationManagerCompat$Api24Impl: boolean registerGnssMeasurementsCallback(android.location.LocationManager,android.location.GnssMeasurementsEvent$Callback,android.os.Handler)
kotlin.UShortArray: int getSize()
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion: JDK7PlatformImplementations$ReflectSdkVersion()
kotlin.UNumbersKt: int takeLowestOneBit-WZ4Q5Ns(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence dropWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.collection.LongSparseArray: void remove(long)
kotlin.coroutines.ContinuationKt: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlin.collections.CollectionsKt: CollectionsKt()
kotlin.collections.ArrayDeque: java.lang.Object[] testToArray$kotlin_stdlib(java.lang.Object[])
androidx.lifecycle.ProcessLifecycleOwner$Companion: void getTIMEOUT_MS$lifecycle_process_release$annotations()
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.UIntArray: void getStorage$annotations()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.reflect.KCallable$DefaultImpls: void getName$annotations()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: ChannelsKt__DeprecatedKt$elementAtOrNull$1(kotlin.coroutines.Continuation)
androidx.activity.result.contract.ActivityResultContracts$OpenDocument: java.lang.Object parseResult(int,android.content.Intent)
androidx.fragment.app.Fragment: boolean isDetached()
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
kotlin.ranges.UIntProgression: int hashCode()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double random(double[],kotlin.random.Random)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler getScheduler()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence distinct(kotlin.sequences.Sequence)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Object screenFloatValue$StringsKt__StringNumberConversionsJVMKt(java.lang.String,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeWith(java.lang.Object)
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1: ImageDecoderKt$decodeBitmap$1(kotlin.jvm.functions.Function3)
kotlin.time.Duration$Companion: long getMicroseconds-UwyO8pc(int)
kotlinx.coroutines.scheduling.DefaultIoScheduler: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getSUSPEND$p()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.jvm.internal.PropertyReference1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean isArtificial(java.lang.StackTraceElement)
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.core.graphics.PointKt: android.graphics.PointF unaryMinus(android.graphics.PointF)
androidx.fragment.app.FragmentManager: void clearBackStackStateViewModels()
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean equals-impl0(long,long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedWriter bufferedWriter$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object)
kotlinx.coroutines.flow.LintKt: java.lang.Object toList(kotlinx.coroutines.flow.SharedFlow,java.util.List,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: StartedWhileSubscribed$command$1(kotlinx.coroutines.flow.StartedWhileSubscribed,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])
kotlin.jvm.internal.FloatCompanionObject: void getMAX_VALUE$annotations()
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(double[],kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcelStream: void readObject(int,java.lang.String,android.os.Bundle)
androidx.core.content.IntentSanitizer: android.content.Intent sanitizeByThrowing(android.content.Intent)
androidx.core.graphics.ColorUtils: int M3HCTToColor(float,float,float)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionEnd(android.transition.Transition)
androidx.core.view.ViewCompat: boolean performHapticFeedback(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeaturesInNative(int)
kotlin.ranges.ClosedFloatRange: ClosedFloatRange(float,float)
io.flutter.view.FlutterRunArguments: FlutterRunArguments()
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int index(int)
kotlinx.coroutines.channels.ChannelsKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel get_channel()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.ULong: long toLong-impl(long)
androidx.core.widget.PopupWindowCompat: PopupWindowCompat()
kotlin.jvm.internal.KTypeBase: java.lang.reflect.Type getJavaType()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.os.Parcelable castToParcelable(android.app.Person)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)
kotlin.UShortArray: int getSize-impl(short[])
kotlin.collections.CollectionsKt___CollectionsKt: double sumByDouble(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
androidx.core.app.NotificationCompat$WearableExtender$Api31Impl: NotificationCompat$WearableExtender$Api31Impl()
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.BackStackRecord)
kotlin.text.Regex: java.util.List split(java.lang.CharSequence,int)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])
io.flutter.view.AccessibilityBridge$1: void onTap(int)
kotlin.io.encoding.EncodeOutputStream: void checkOpen()
kotlin.collections.AbstractCollection$toString$1: java.lang.CharSequence invoke(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])
androidx.versionedparcelable.VersionedParcelStream: void writeStrongInterface(android.os.IInterface)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: java.lang.Object translateParentMetricsPredicate(android.content.Context,androidx.window.embedding.SplitRule)
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle setVerificationIcon(android.graphics.drawable.Icon)
androidx.fragment.app.Fragment: void performViewCreated()
kotlin.collections.AbstractMap$toString$1: AbstractMap$toString$1(kotlin.collections.AbstractMap)
androidx.core.os.LocaleListPlatformWrapper: int indexOf(java.util.Locale)
androidx.core.view.ViewKt$allViews$1: ViewKt$allViews$1(android.view.View,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invoke(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character max(char[])
androidx.core.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
kotlinx.coroutines.Incomplete: kotlinx.coroutines.NodeList getList()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean contains(java.lang.Object)
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityBridge: boolean access$400(io.flutter.view.AccessibilityBridge)
androidx.core.view.WindowInsetsControllerCompat: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)
kotlin.collections.builders.MapBuilderEntries: boolean containsEntry(java.util.Map$Entry)
androidx.window.layout.util.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toCollection(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.window.embedding.SplitAttributesCalculatorParams: java.lang.String getSplitRuleTag()
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines$default(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,int,java.lang.Object)
kotlin.reflect.KMutableProperty1: void set(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.ArrayMap: java.util.Set keySet()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
kotlin.jvm.internal.MutablePropertyReference2Impl: void set(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.location.LocationCompat$Api26Impl: void setSpeedAccuracyMetersPerSecond(android.location.Location,float)
kotlin.collections.ArraysKt___ArraysKt: byte component3(byte[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$singleOrNull$1: ChannelsKt__DeprecatedKt$singleOrNull$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ActorCoroutine: void onCancelling(java.lang.Throwable)
kotlinx.coroutines.JobSupport$SelectOnJoinCompletionHandler: JobSupport$SelectOnJoinCompletionHandler(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance)
kotlin.NumbersKt__FloorDivModKt: long mod(int,long)
androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()
kotlin.io.path.LinkFollowing: LinkFollowing()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $values()
kotlin.text.StringsKt__StringsKt: java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
androidx.activity.ComponentActivity$6: ComponentActivity$6(androidx.activity.ComponentActivity)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],java.util.Collection)
androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)
androidx.core.app.GrammaticalInflectionManagerCompat: GrammaticalInflectionManagerCompat()
kotlinx.coroutines.NonDisposableHandle: void dispose()
kotlinx.coroutines.flow.SharedFlowImpl: void cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl$Emitter)
androidx.window.core.PredicateAdapter$PredicateStubHandler: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: RestrictedSuspendLambda(int,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short random-s5X_as8(short[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(float[],kotlin.ranges.IntRange)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: DownstreamExceptionContext(java.lang.Throwable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.lifecycle.ReportFragment: ReportFragment()
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(byte[])
kotlin.reflect.KType: kotlin.reflect.KClassifier getClassifier()
kotlin.jvm.internal.MutablePropertyReference0Impl: void set(java.lang.Object)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl: ResourcesCompat$ThemeCompat$Api23Impl()
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollCpu()
kotlinx.coroutines.channels.LazyBroadcastCoroutine: LazyBroadcastCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function2)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: java.lang.Class getActivityEmbeddingComponentClass()
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: void onCommit(android.view.ViewGroup)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1: SafeWindowExtensionsProvider$isWindowExtensionsValid$1(androidx.window.SafeWindowExtensionsProvider)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMap(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.core.app.NotificationBuilderWithBuilderAccessor: android.app.Notification$Builder getBuilder()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object[])
io.flutter.embedding.android.FlutterFragmentActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
androidx.core.content.IntentCompat: java.io.Serializable getSerializableExtra(android.content.Intent,java.lang.String,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(double[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
androidx.lifecycle.Transformations$map$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(byte[])
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSplitAttributesCalculatorValid$1: java.lang.Boolean invoke()
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: void onRequery(androidx.lifecycle.ViewModel)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection)
androidx.core.widget.TextViewOnReceiveContentListener: void replaceSelection(android.text.Editable,java.lang.CharSequence)
kotlin.text.StringsKt___StringsKt: java.util.List runningReduce(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: long coerceAtMost(long,long)
androidx.profileinstaller.Encoding: void writeAll(java.io.InputStream,java.io.OutputStream)
androidx.core.app.JobIntentService$GenericWorkItem: android.content.Intent getIntent()
kotlin.io.FilePathComponents: java.lang.String toString()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: ExceptionsConstructorKt$createConstructor$nullResult$1()
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()
kotlinx.coroutines.internal.ScopeCoroutine: java.lang.StackTraceElement getStackTraceElement()
kotlin.ranges.ClosedDoubleRange: java.lang.Double getEndInclusive()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1: void onImageAvailable(android.media.ImageReader)
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
kotlinx.coroutines.flow.FlowKt__MergeKt: int getDEFAULT_CONCURRENCY()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: BufferedChannel$onReceiveCatching$1()
androidx.core.content.IntentSanitizer: android.content.Intent sanitizeByFiltering(android.content.Intent)
kotlin.ranges.OpenEndFloatRange: boolean isEmpty()
androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List access$getANDROID_VIEWMODEL_SIGNATURE$p()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)
kotlin.random.KotlinRandom$Companion: KotlinRandom$Companion()
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeLastOrNull(java.util.List)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.window.area.WindowAreaCapability$Operation$Companion: WindowAreaCapability$Operation$Companion()
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0: ExtensionWindowBackendApi0()
kotlin.io.FilesKt__UtilsKt: boolean copyRecursively$default(java.io.File,java.io.File,boolean,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.UByte: int div-7apg3OU(byte,byte)
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onLeave(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
kotlin.time.Duration$Companion: void getHours-UwyO8pc$annotations(double)
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
kotlin.collections.CollectionsKt___CollectionsKt: boolean none(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastCoroutine: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Action$Builder$Api31Impl: NotificationCompat$Action$Builder$Api31Impl()
kotlinx.coroutines.JobKt__JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onLongPress(int)
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$2: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentStore: java.util.HashMap getAllSavedState()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padEnd(java.lang.CharSequence,int,char)
androidx.core.view.DisplayCompat: java.lang.String getSystemProperty(java.lang.String)
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,java.lang.Iterable)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
androidx.fragment.app.strictmode.FragmentStrictMode: void onGetTargetFragmentUsage(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentManager: void setStrictModePolicy(androidx.fragment.app.strictmode.FragmentStrictMode$Policy)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object removeAllShortcuts()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.SortedSet toSortedSet(kotlin.sequences.Sequence,java.util.Comparator)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1$emit$1: FlowKt__LimitKt$take$2$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.area.WindowAreaInfo: void setMetrics(androidx.window.layout.WindowMetrics)
kotlinx.coroutines.EventLoopImplBase: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
io.flutter.plugin.common.BasicMessageChannel$MessageHandler: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
kotlin.collections.MapsKt___MapsKt: boolean none(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
kotlin.text.RegexKt: kotlin.text.MatchResult access$matchEntire(java.util.regex.Matcher,java.lang.CharSequence)
kotlinx.coroutines.Job: kotlinx.coroutines.Job getParent()
io.flutter.view.VsyncWaiter: VsyncWaiter(io.flutter.embedding.engine.FlutterJNI)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(byte[])
androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)
kotlin.collections.ArraysKt___ArraysKt: short elementAtOrElse(short[],int,kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsFirst(java.util.Comparator)
androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong lastOrNull(kotlin.ranges.ULongProgression)
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object checkNotNull(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: ChannelsKt__Channels_commonKt$toList$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(char[],java.util.Collection)
androidx.activity.result.IntentSenderRequest: android.content.Intent getFillInIntent()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)
com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat$Action$Builder$Api20Impl: NotificationCompat$Action$Builder$Api20Impl()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation$State: SpecialEffectsController$Operation$State(java.lang.String,int)
androidx.lifecycle.EmittedSource: void dispose()
androidx.core.view.TintableBackgroundView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
androidx.core.app.NotificationCompat: boolean getOnlyAlertOnce(android.app.Notification)
androidx.collection.ArraySet: void clear()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.List,kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.VirtualDisplayController$2$1: void run()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
kotlin.collections.AbstractIterator: void computeNext()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: ChannelsKt__DeprecatedKt$mapIndexed$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
kotlin.reflect.KTypeParameter: java.util.List getUpperBounds()
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: FlowCoroutineKt$scopedFlow$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.WindowSdkExtensions: androidx.window.WindowSdkExtensions getInstance()
androidx.core.view.accessibility.AccessibilityManagerCompat: AccessibilityManagerCompat()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short random-rL5Bavg(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-L83TJbI(int[],int[],kotlin.jvm.functions.Function2)
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: java.lang.Object[] invoke()
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function3)
androidx.core.location.GpsStatusWrapper: boolean usedInFix(int)
kotlin.sequences.SequencesKt___SequencesKt: boolean all(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter(androidx.window.core.PredicateAdapter)
kotlinx.coroutines.Job$Key: Job$Key()
kotlin.collections.ArraysKt___ArraysKt: int first(int[])
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getNO_RECEIVE_RESULT$p()
androidx.core.content.LocusIdCompat$Api29Impl: LocusIdCompat$Api29Impl()
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
androidx.activity.ComponentDialog: ComponentDialog(android.content.Context)
androidx.core.view.ContentInfoCompat: int getSource()
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: FlowKt__DelayKt$timeoutInternal$1$1$2(long,kotlin.coroutines.Continuation)
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.AdaptedFunctionReference: AdaptedFunctionReference(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findCpuTask()
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder addCapabilityBinding(java.lang.String,java.lang.String,java.util.List)
kotlin.collections.ArraysKt___ArraysKt: boolean[] onEach(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.SerializedCollection: java.lang.Object readResolve()
kotlinx.coroutines.selects.SelectKt: boolean access$tryResume(kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)
androidx.activity.ComponentActivity$1$1: ComponentActivity$1$1(androidx.activity.ComponentActivity$1,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult)
io.flutter.plugin.common.MethodCall: boolean hasArgument(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(int[],int,int)
androidx.core.content.OnTrimMemoryProvider: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
io.flutter.plugin.platform.PlatformViewsController: float access$1200(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.core.provider.DocumentsContractCompat: java.lang.String getTreeDocumentId(android.net.Uri)
kotlin.io.path.OnErrorResult: OnErrorResult(java.lang.String,int)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionPause(android.transition.Transition)
kotlin.reflect.KClass$DefaultImpls: void isFun$annotations()
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: void onAnimationUpdate(android.animation.ValueAnimator)
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short findLast(short[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransitionImpl: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable,java.lang.Runnable)
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
androidx.window.core.SpecificationComputer$Companion: androidx.window.core.SpecificationComputer startSpecification(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: boolean validate()
androidx.viewpager.widget.ViewPager: void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo)
kotlinx.coroutines.JobSupport: java.lang.Object getCompletedInternal$kotlinx_coroutines_core()
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: java.lang.Boolean invoke(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isEmpty()
io.flutter.plugin.platform.PlatformViewsController: long configureForVirtualDisplay(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame realCaller(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.fragment.app.FragmentManagerViewModel: FragmentManagerViewModel(boolean)
kotlin.system.TimingKt: long measureTimeMillis(kotlin.jvm.functions.Function0)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrameSlowPath(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: long[] reversedArray(long[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt randomOrNull(kotlin.ranges.UIntRange)
androidx.core.widget.TextViewCompat$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.fragment.app.BackStackRecord: void collapseOps()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.Delay: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder setIntervalMillis(long)
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1: SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1(androidx.window.layout.SafeWindowLayoutComponentProvider)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: SequencesKt___SequencesKt$filterIsInstance$1()
androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)
kotlin.ranges.ComparableRange: java.lang.Comparable getStart()
kotlinx.coroutines.selects.SelectClause2Impl: SelectClause2Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$2: java.lang.CharSequence frameworkGet(android.view.View)
kotlin.time.Duration: int compareTo-LRDsOJo(long,long)
androidx.core.text.util.LocalePreferences: java.lang.String getCalendarType(java.util.Locale,boolean)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceRightIndexedOrNull-z1zDJgo(long[],kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.FlutterJNI$Factory: io.flutter.embedding.engine.FlutterJNI provideFlutterJNI()
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder detectWrongFragmentContainer()
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
kotlin.jvm.internal.Intrinsics: void checkFieldIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder penaltyListener(androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.Channel)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.location.LocationManagerCompat: void requestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationListenerCompat,android.os.Looper)
androidx.core.view.VelocityTrackerFallback: void computeCurrentVelocity(int,float)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,byte)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
kotlin.text.Regex$Companion: kotlin.text.Regex fromLiteral(java.lang.String)
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
androidx.window.embedding.EmbeddingBackend: void addSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.os.BundleApi21ImplKt: BundleApi21ImplKt()
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
androidx.fragment.app.strictmode.FragmentStrictMode: void onSetUserVisibleHint(androidx.fragment.app.Fragment,boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List chunked(java.lang.Iterable,int,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrNull(java.lang.Iterable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
io.flutter.plugin.platform.PlatformPlugin$1: void share(java.lang.String)
androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.EmbeddingBackend$Companion$decorator$1: androidx.window.embedding.EmbeddingBackend invoke(androidx.window.embedding.EmbeddingBackend)
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
kotlin.time.AbstractLongTimeSource$LongTimeMark: boolean hasNotPassedNow()
kotlin.time.Duration: java.lang.String toString()
androidx.core.view.ViewStructureCompat: android.view.ViewStructure toViewStructure()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt: boolean tryResume0$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
androidx.fragment.app.strictmode.SetUserVisibleHintViolation: boolean isVisibleToUser()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void onMoveToForeground()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger toBigInteger(int)
androidx.versionedparcelable.ParcelImpl: ParcelImpl(androidx.versionedparcelable.VersionedParcelable)
kotlin.collections.builders.SetBuilder: boolean addAll(java.util.Collection)
androidx.core.app.NotificationCompat$TvExtender: java.lang.String getChannelId()
androidx.fragment.app.Fragment$9: Fragment$9(androidx.fragment.app.Fragment,androidx.arch.core.util.Function,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt min--ajY-9A(int[])
androidx.core.view.DisplayCompat$ModeCompat: DisplayCompat$ModeCompat(android.view.Display$Mode,boolean)
androidx.fragment.app.FragmentManager$9: FragmentManager$9(androidx.fragment.app.FragmentManager)
kotlin.reflect.KClass: boolean isOpen()
io.flutter.plugin.platform.PlatformViewsController: int toLogicalPixels(double,float)
kotlin.collections.CollectionsKt__CollectionsKt: void throwCountOverflow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
kotlin.jvm.internal.ClassReference: void getSupertypes$annotations()
androidx.fragment.app.FragmentManager: FragmentManager()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte singleOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
kotlinx.coroutines.JobNode: boolean isActive()
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.fragment.app.FragmentManager: void dispatchStateChange(int)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.core.view.WindowInsetsAnimationCompat$Impl: long getDurationMillis()
androidx.fragment.app.FragmentManager: void addRetainedFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent)
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()
kotlin.collections.MapsKt__MapsKt: java.util.Map orEmpty(java.util.Map)
androidx.fragment.app.FragmentManager: void dispatchViewCreated()
kotlinx.coroutines.intrinsics.UndispatchedKt: void startDirect(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.sequences.Sequence)
kotlin.jvm.internal.Reflection: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)
kotlin.jvm.internal.Intrinsics: void checkParameterIsNotNull(java.lang.Object,java.lang.String)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: ChannelFlowTransformLatest(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
io.flutter.plugin.common.ActivityLifecycleListener: void onPostResume()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object putSynchronized(java.lang.Object,java.lang.Object)
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionEnd(android.transition.Transition)
kotlinx.coroutines.EventLoopImplBase: void shutdown()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
kotlinx.coroutines.selects.SelectInstance: void disposeOnCompletion(kotlinx.coroutines.DisposableHandle)
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.TasksKt: boolean isBlocking(kotlinx.coroutines.scheduling.Task)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldDestroyEngineWithHost()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__NumbersJVMKt: int rotateLeft(int,int)
kotlin.collections.ArraysKt___ArraysKt: short minOrThrow(short[])
androidx.window.layout.adapter.extensions.MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.collection.MapCollections$MapIterator: int hashCode()
android.support.v4.app.INotificationSideChannel$_Parcel: INotificationSideChannel$_Parcel()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(float[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntent()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int getIndex()
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
kotlin.reflect.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence)
androidx.window.core.PredicateAdapter: PredicateAdapter(java.lang.ClassLoader)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.StringBuilder)
androidx.viewpager.widget.ViewPager: void addTouchables(java.util.ArrayList)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sliceArray-Q6IL4kU(short[],kotlin.ranges.IntRange)
kotlinx.coroutines.debug.internal.HashedWeakRef: HashedWeakRef(java.lang.Object,java.lang.ref.ReferenceQueue)
androidx.customview.view.AbsSavedState: int describeContents()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow mapNotNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat y(float)
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: ActivityResultContracts$GetMultipleContents$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.flow.StartedLazily$command$1$1: java.lang.Object emit(int,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
androidx.versionedparcelable.VersionedParcelStream$1: VersionedParcelStream$1(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream)
androidx.core.app.RemoteActionCompat$Api26Impl: RemoteActionCompat$Api26Impl()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription getDescription()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate createDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
kotlinx.coroutines.JobSupport: boolean isCompletedExceptionally()
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,long,long,java.lang.Object)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: FlowKt__DistinctKt$defaultKeySelector$1()
io.flutter.embedding.android.FlutterView: void setDelegate(io.flutter.embedding.android.FlutterViewDelegate)
androidx.versionedparcelable.VersionedParcelStream: void writeBundle(android.os.Bundle)
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: int getEnd()
kotlin.ranges.URangesKt___URangesKt: boolean contains-68kG9v0(kotlin.ranges.UIntRange,byte)
androidx.savedstate.SavedStateRegistry: androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(boolean[],int)
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int minByOrThrow(int[],kotlin.jvm.functions.Function1)
androidx.core.provider.DocumentsContractCompat: java.lang.String getDocumentId(android.net.Uri)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOfRangeInline(float[],int,int)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
kotlinx.coroutines.channels.BufferedChannel: void sendImplOnNoWaiter(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlinx.coroutines.Waiter,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.core.widget.NestedScrollView: int scrollBy(int,int,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: boolean random(boolean[])
androidx.loader.content.ModernAsyncTask$1: ModernAsyncTask$1()
androidx.core.app.PictureInPictureModeChangedInfo: android.content.res.Configuration getNewConfig()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-oSF2wD8(byte[],kotlin.random.Random)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Map getMAllowedViolations$fragment_release()
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfFloat(java.lang.Iterable)
androidx.core.util.SparseBooleanArrayKt: int getSize(android.util.SparseBooleanArray)
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1: java.lang.Boolean invoke()
androidx.core.util.AtomicFile: AtomicFile(java.io.File)
kotlin.text.MatchResult$Destructured: java.lang.String component2()
kotlin.NumbersKt__FloorDivModKt: NumbersKt__FloorDivModKt()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInWindow(android.graphics.Rect)
kotlin.ResultKt: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterNotNull(java.lang.Iterable)
androidx.core.text.PrecomputedTextCompat$Api28Impl: android.text.Spannable castToSpannable(android.text.PrecomputedText)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
androidx.core.view.accessibility.AccessibilityRecordCompat: java.util.List getText()
kotlinx.coroutines.AbstractTimeSource: long nanoTime()
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.content.pm.ShortcutManagerCompat: java.util.List removeShortcutsExcludedFromSurface(java.util.List,int)
kotlinx.coroutines.flow.SharedFlowImpl: int getReplaySize()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float min(float[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxOfWithOrNull(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderKeys: void clear()
androidx.window.core.ConsumerAdapter$createSubscriptionNoActivity$1: void dispose()
kotlinx.coroutines.JobImpl: boolean complete()
io.flutter.embedding.android.KeyEmbedderResponder: java.lang.Long getPhysicalKey(android.view.KeyEvent)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.Pair unzip(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: java.lang.Boolean invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.SpecialEffectsController: SpecialEffectsController(android.view.ViewGroup)
androidx.window.area.WindowAreaController$-CC: void reset()
io.flutter.plugin.platform.PlatformViewWrapper: void unsetOnDescendantFocusChangeListener()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
kotlin.collections.ArraysKt___ArraysKt: boolean[] reversedArray(boolean[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(byte[],int)
kotlinx.coroutines.internal.SegmentOrClosed: int hashCode()
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator)
kotlin.collections.MapsKt__MapsKt: boolean isNotEmpty(java.util.Map)
androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.provider.CalleeHandler: CalleeHandler()
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt maxBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: java.lang.Void invoke(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1: FlowKt__MergeKt$flatMapMerge$$inlined$map$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.graphics.ColorKt: float getBlue(long)
androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)
androidx.customview.view.AbsSavedState$2: java.lang.Object[] newArray(int)
kotlinx.coroutines.NonCancellable: NonCancellable()
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
kotlin.collections.builders.MapBuilder: java.lang.Object writeReplace()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(char[],java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt randomOrNull-2D5oskM(int[],kotlin.random.Random)
androidx.activity.ComponentDialog: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.core.view.ViewCompat: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object getDoneValue(java.lang.Object)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: void writeToParcel(android.os.Parcel,int)
kotlin.collections.builders.SetBuilder: boolean isEmpty()
kotlin.sequences.TakeWhileSequence$iterator$1: void remove()
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizeTogglingKey(io.flutter.embedding.android.KeyboardMap$TogglingGoal,boolean,long,android.view.KeyEvent)
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.java.core.CallbackToFlowAdapter: CallbackToFlowAdapter()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int getSize()
kotlin.ranges.LongRange$Companion: LongRange$Companion()
kotlin.io.ConsoleKt: void println(java.lang.Object)
androidx.core.view.ViewGroupKt: kotlin.sequences.Sequence getDescendants(android.view.ViewGroup)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation()
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.core.content.IntentSanitizer$Api29Impl: IntentSanitizer$Api29Impl()
org.jetbrains.annotations.Nls$Capitalization: org.jetbrains.annotations.Nls$Capitalization[] values()
kotlinx.coroutines.channels.TickerChannelsKt: kotlinx.coroutines.channels.ReceiveChannel ticker(long,long,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.TickerMode)
kotlin.ranges.ULongProgression: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[])
kotlin.ranges.UIntProgression$Companion: UIntProgression$Companion()
androidx.profileinstaller.BenchmarkOperation: void dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics)
kotlin.jvm.internal.StringCompanionObject: StringCompanionObject()
androidx.window.area.reflectionguard.WindowAreaComponentValidator: boolean isExtensionWindowAreaStatusValid$window_release(java.lang.Class,int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object removeShortcuts(java.util.List)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
kotlin.enums.EnumEntriesList: java.lang.Object get(int)
androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
kotlinx.coroutines.CoroutineId: CoroutineId(long)
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
androidx.window.embedding.SplitRule: int getMinSmallestWidthDp()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$7: java.util.Iterator iterator()
androidx.versionedparcelable.VersionedParcelParcel: android.os.Bundle readBundle()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emitSuspend(java.lang.Object,kotlin.coroutines.Continuation)
androidx.loader.content.ModernAsyncTask: void onProgressUpdate(java.lang.Object[])
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary(android.content.Context)
org.jetbrains.annotations.UnknownNullability: java.lang.String value()
kotlin.UShort: long mod-VKZWuLQ(short,long)
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)
kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)
androidx.activity.result.contract.ActivityResultContract: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
androidx.core.provider.SelfDestructiveThread$2: SelfDestructiveThread$2(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNotNull(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.view.DragStartHelper$OnDragStartListener: boolean onDragStart(android.view.View,androidx.core.view.DragStartHelper)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransitionImpl: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
kotlin.collections.RingBuffer: int access$getCapacity$p(kotlin.collections.RingBuffer)
kotlin.jvm.internal.TypeReference: kotlin.reflect.KType getPlatformTypeUpperBound$kotlin_stdlib()
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate createDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task)
kotlinx.coroutines.flow.ThrowingCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.SpellCheckPlugin: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutInfo(androidx.core.content.pm.ShortcutInfoCompat)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)
androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)
androidx.core.animation.AnimatorKt$addPauseListener$1: void invoke(android.animation.Animator)
kotlin.collections.AbstractList$Companion: boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection)
kotlin.text.StringsKt__StringBuilderJVMKt: void set(java.lang.StringBuilder,int,char)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(short[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)
io.flutter.embedding.engine.FlutterEngineGroup$1: FlutterEngineGroup$1(io.flutter.embedding.engine.FlutterEngineGroup,io.flutter.embedding.engine.FlutterEngine)
androidx.profileinstaller.ProfileVerifier: long getPackageLastUpdateTime(android.content.Context)
androidx.fragment.app.FragmentTransitionCompat21: FragmentTransitionCompat21()
androidx.core.app.NotificationCompat$Style$Api24Impl: NotificationCompat$Style$Api24Impl()
androidx.versionedparcelable.VersionedParcel: void setOutputField(int)
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.location.LocationManagerCompat$GnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexedNotNull(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int lastIndexOf(java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.UInt: float toFloat-impl(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)
kotlin.jvm.internal.TypeReference: int hashCode()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set subtract(java.lang.Iterable,java.lang.Iterable)
androidx.core.location.LocationManagerCompat$GpsStatusTransport: LocationManagerCompat$GpsStatusTransport(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,android.media.ImageReader)
androidx.lifecycle.BlockRunner: kotlin.jvm.functions.Function2 access$getBlock$p(androidx.lifecycle.BlockRunner)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.CharSequence)
kotlin.Metadata$DefaultImpls: void pn$annotations()
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1: AnimatorKt$doOnCancel$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)
kotlin.collections.AbstractMap: boolean containsKey(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
androidx.core.app.OnUserLeaveHintProvider: void removeOnUserLeaveHintListener(java.lang.Runnable)
androidx.lifecycle.LifecycleCoroutineScope: kotlinx.coroutines.Job launchWhenStarted(kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: java.lang.Short get(int)
androidx.core.location.LocationManagerCompat$GnssStatusTransport: void onStarted()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartEntrypoint(java.lang.String)
kotlin.KotlinVersion: boolean isAtLeast(int,int,int)
androidx.viewpager.widget.ViewPager: void removeView(android.view.View)
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
androidx.core.content.pm.ShortcutInfoCompat$Api33Impl: void setExcludedFromSurfaces(android.content.pm.ShortcutInfo$Builder,int)
androidx.core.location.LocationListenerCompat: void onStatusChanged(java.lang.String,int,android.os.Bundle)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action)
androidx.activity.ComponentActivity: void onBackPressed()
androidx.core.text.BidiFormatter: java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
kotlin.collections.ArraysKt___ArraysKt: long reduceIndexed(long[],kotlin.jvm.functions.Function3)
androidx.window.core.FailedSpecification: FailedSpecification(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.VerificationMode)
kotlinx.coroutines.EventLoopImplBase: void rescheduleAllDelayed()
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],double[])
androidx.window.embedding.RuleController: void removeRule(androidx.window.embedding.EmbeddingRule)
androidx.core.app.RemoteInput$Builder: RemoteInput$Builder(java.lang.String)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.fragment.app.SpecialEffectsController: void forcePostponedExecutePendingOperations()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked mark(java.lang.Object)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)
com.getkeepsafe.relinker.ReLinkerInstance$2: boolean accept(java.io.File,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
androidx.fragment.app.FragmentTransaction: FragmentTransaction(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean contains(java.lang.Object)
kotlin.TypeAliasesKt: void Error$annotations()
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
kotlinx.coroutines.flow.FlowKt: void ensureActive(kotlinx.coroutines.flow.FlowCollector)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(float[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.reflect.KProperty$Accessor: kotlin.reflect.KProperty getProperty()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMax()
androidx.loader.content.CursorLoader: void setUri(android.net.Uri)
androidx.core.graphics.PaintKt: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturnIgnoreTimeout(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentActivity$HostCallbacks: java.lang.Object onGetHost()
androidx.collection.LongSparseArray: LongSparseArray(int)
kotlin.sequences.TakeWhileSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object ensurePresent(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
androidx.versionedparcelable.VersionedParcelParcel: void writeBundle(android.os.Bundle)
kotlin.reflect.ParameterizedTypeImpl: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: FlowKt__ShareKt$launchSharingDeferred$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CompletableDeferred)
com.getkeepsafe.relinker.ApkLibraryInstaller: long copy(java.io.InputStream,java.io.OutputStream)
kotlin.collections.builders.MapBuilderValues: void clear()
androidx.savedstate.SavedStateRegistry: void unregisterSavedStateProvider(java.lang.String)
androidx.core.os.LocaleListCompat: java.lang.Object unwrap()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object fold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsAnimationCompat: WindowInsetsAnimationCompat(android.view.WindowInsetsAnimation)
kotlin.UInt: int hashCode()
androidx.window.core.PredicateAdapter: java.lang.Object buildPredicate(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect: void onCommit(android.view.ViewGroup)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxByOrNull(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$2: ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$2()
androidx.versionedparcelable.VersionedParcelize: java.lang.Class factory()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat setShareIdentityEnabled(boolean)
androidx.core.app.NotificationCompatBuilder$Api31Impl: NotificationCompatBuilder$Api31Impl()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minWithOrNull(char[],java.util.Comparator)
androidx.core.view.ViewCompat: android.graphics.Rect getEmptyTempRect()
androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)
androidx.fragment.app.DialogFragment$2: DialogFragment$2(androidx.fragment.app.DialogFragment)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.String pendingToString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: LifecycleChannel$AppLifecycleState(java.lang.String,int)
kotlinx.coroutines.selects.SelectInstance: void selectInRegistrationPhase(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void removeSplitListenerForActivity(androidx.core.util.Consumer)
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(float[],java.lang.Iterable)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: ProcessLifecycleOwner$Api29Impl()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn$default(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$WearableExtender: boolean getStartScrollBottom()
androidx.core.app.RemoteActionCompat: java.lang.CharSequence getTitle()
kotlinx.coroutines.JobSupport$ChildCompletion: JobSupport$ChildCompletion(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfInt(java.lang.Iterable)
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate: boolean popSystemNavigator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.fragment.app.Fragment: void performPause()
androidx.lifecycle.EmittedSource: java.lang.Object disposeNow(kotlin.coroutines.Continuation)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] remove(android.app.Activity)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.util.PairKt: kotlin.Pair toKotlinPair(android.util.Pair)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(byte[],byte)
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture asCompletableFuture(kotlinx.coroutines.Deferred)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
androidx.window.layout.util.ContextCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.content.Context)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: JobSupport(boolean)
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
kotlinx.coroutines.JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.jvm.internal.Ref$CharRef: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
kotlin.collections.builders.MapBuilder$EntryRef: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(byte[],byte,int,int)
androidx.core.content.res.GrowingArrayUtils: int growSize(int)
androidx.fragment.app.strictmode.FragmentStrictMode: boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class)
kotlinx.coroutines.JobKt__FutureKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component4(java.util.List)
androidx.core.view.ViewCompat: int getMeasuredState(android.view.View)
kotlin.internal.RequireKotlin: kotlin.internal.RequireKotlinVersionKind versionKind()
androidx.fragment.app.SpecialEffectsController: void applyContainerChangesToOperation$fragment_release(androidx.fragment.app.SpecialEffectsController$Operation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component5(java.lang.Object[])
android.support.v4.os.IResultReceiver$Default: IResultReceiver$Default()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-LuipOMY(byte[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.annotation.experimental.Experimental$Level: Experimental$Level(java.lang.String,int)
kotlin.Result: int hashCode()
kotlin.jvm.internal.MutablePropertyReference1Impl: java.lang.Object get(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: ActivityResultRegistry$CallbackAndContract(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean)
androidx.loader.content.Loader$ForceLoadContentObserver: void onChange(boolean)
androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)
androidx.core.view.VelocityTrackerCompat: void computeCurrentVelocity(android.view.VelocityTracker,int,float)
androidx.core.util.SparseBooleanArrayKt: boolean remove(android.util.SparseBooleanArray,int,boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: FlowKt__ZipKt$combine$$inlined$unsafeFlow$3(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$1: FlowKt__ZipKt$combineTransform$7$1(kotlinx.coroutines.flow.Flow[])
androidx.core.animation.AnimatorKt$addListener$4: void invoke(android.animation.Animator)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.fragment.app.SpecialEffectsController$Operation: void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOrNull(float[])
kotlin.UShort: int minus-WZ4Q5Ns(short,int)
kotlin.collections.SetsKt___SetsKt: java.util.Set plusElement(java.util.Set,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean remove()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeLast(java.util.List,int)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getCachedEngineId()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlin.jvm.functions.Function1 consumes(kotlinx.coroutines.channels.ReceiveChannel)
androidx.activity.FullyDrawnReporterKt$reportWhenComplete$1: FullyDrawnReporterKt$reportWhenComplete$1(kotlin.coroutines.Continuation)
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1$1: CallbackToFlowAdapter$connect$1$1$1(androidx.core.util.Consumer)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.StandardKt: StandardKt()
kotlin.UInt: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(byte[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
androidx.fragment.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(androidx.fragment.app.FragmentManager)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: kotlin.Pair invoke(java.lang.CharSequence,int)
io.flutter.embedding.android.FlutterActivity: boolean attachToEngineAutomatically()
kotlin.collections.EmptyIterator: java.lang.Void next()
kotlin.random.Random$Default: int nextInt(int,int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,java.lang.Iterable)
androidx.core.graphics.ColorUtils: double[] getTempDouble3Array()
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Long boxLong(long)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
kotlin.reflect.KClass: java.util.Collection getConstructors()
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence()
kotlin.TypeAliasesKt: void RuntimeException$annotations()
kotlin.coroutines.CombinedContext: boolean containsAll(kotlin.coroutines.CombinedContext)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean cancel(boolean)
kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptible(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: LocationManagerCompat$InlineHandlerExecutor(android.os.Handler)
kotlin.reflect.KClass: boolean isValue()
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
androidx.fragment.app.FragmentManager$2: void onMenuClosed(android.view.Menu)
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void onProviderDisabled(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(float[])
androidx.window.core.FailedSpecification: java.lang.Object getValue()
kotlinx.coroutines.Unconfined: java.lang.String toString()
io.flutter.embedding.android.FlutterFragmentActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback()
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearchBy$default(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walkTopDown(java.io.File)
kotlin.collections.ArraysKt___ArraysKt: char[] sliceArray(char[],kotlin.ranges.IntRange)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object lastOrNull(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int indexOf-VKZWuLQ(long)
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher plus(kotlinx.coroutines.CoroutineDispatcher)
androidx.activity.result.contract.ActivityResultContracts$TakePicture: ActivityResultContracts$TakePicture()
kotlinx.coroutines.flow.SharedFlowImpl: void updateBufferLocked(long,long,long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-oBK06Vg(int[],int,int)
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.BooleanSpreadBuilder: BooleanSpreadBuilder(int)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment)
androidx.profileinstaller.Encoding: void writeString(java.io.OutputStream,java.lang.String)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.OpenEndRange,short)
androidx.core.net.UriKt: java.io.File toFile(android.net.Uri)
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] updateCollectorIndexLocked$kotlinx_coroutines_core(long)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: FingerprintManagerCompat$Api23Impl()
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)
kotlin.enums.EnumEntriesList: int lastIndexOf(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object fold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationText(android.app.Notification$CallStyle,java.lang.CharSequence)
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: LoaderManagerImpl$LoaderObserver(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
kotlin.NumbersKt__NumbersJVMKt: int takeLowestOneBit(int)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.DifferentialMotionFlingController: float getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int)
androidx.fragment.app.FragmentTabHost: void initFragmentTabHost(android.content.Context,android.util.AttributeSet)
androidx.core.app.ShareCompat$IntentReader: boolean isMultipleShare()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(double[],double)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setVisible(int,boolean)
kotlin.ranges.CharProgression: int getStep()
androidx.window.layout.util.ContextCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.content.Context)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: ApplicationInfoLoader()
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
kotlin.collections.builders.ListBuilder: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void setDeferredComponentChannel(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle addMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesBy(java.lang.Object,java.lang.Object,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(short[],kotlin.jvm.functions.Function1)
kotlin.io.encoding.DecodeInputStream: void close()
androidx.core.app.NotificationManagerCompat$Api30Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String,java.lang.String)
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
kotlin.collections.MapsKt___MapsKt: kotlin.sequences.Sequence asSequence(java.util.Map)
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.AbstractMap: AbstractMap()
io.flutter.plugin.platform.PlatformViewsController: long configureForTextureLayerComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.profileinstaller.ProfileInstallerInitializer: void delayAfterFirstFrame(android.content.Context)
androidx.core.app.NotificationCompat$CallStyle: void addCompatExtras(android.os.Bundle)
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()
androidx.loader.content.Loader: android.content.Context getContext()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(char[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void CoroutineStackFrame$annotations()
kotlin.sequences.DropSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.viewpager.widget.ViewPager: boolean pageLeft()
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation: AbstractResolvableFuture$Cancellation(boolean,java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: InterruptibleKt$runInterruptible$2(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: FragmentStrictMode$Policy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceIndexedOrNull-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.annotation.InspectableProperty$EnumEntry: java.lang.String name()
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$600(io.flutter.view.AccessibilityBridge)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.jdk7.AutoCloseableKt: java.lang.Object use(java.lang.AutoCloseable,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: BroadcastChannelImpl$SubscriberConflated(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.sequences.Sequence)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectReceiveCatching(java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
androidx.core.view.ViewCompat$Api24Impl: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
kotlin.UIntArray: void clear()
kotlinx.coroutines.flow.SharedFlowImpl: long access$getHead(kotlinx.coroutines.flow.SharedFlowImpl)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void isEmpty$annotations()
androidx.core.app.GrammaticalInflectionManagerCompat: void setRequestedApplicationGrammaticalGender(android.content.Context,int)
kotlinx.coroutines.CancellableContinuation: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl: void notifyViewsDisappeared(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,long[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.AbstractCollection: int size()
androidx.window.area.WindowAreaControllerImpl: void transferActivityToWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void accept(java.net.SocketImpl)
androidx.fragment.app.FragmentLayoutInflaterFactory$1: FragmentLayoutInflaterFactory$1(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: java.lang.Long get(int)
androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] asUByteArray(byte[])
androidx.activity.OnBackPressedDispatcher$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.jvm.internal.Intrinsics: boolean areEqual(float,java.lang.Float)
androidx.lifecycle.LifecycleKt$eventFlow$1: void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.collections.ArraysKt___ArraysKt: char minByOrThrow(char[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: java.lang.Byte get(int)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypointArgs(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: float maxOrThrow(java.lang.Float[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToForeground()
kotlin.collections.MapsKt___MapsKt: java.util.Map onEachIndexed(java.util.Map,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.util.Map associateByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$TvExtender: NotificationCompat$TvExtender(android.app.Notification)
kotlin.text.StringsKt__StringsKt: java.lang.String removeSurrounding(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)
androidx.core.widget.AutoScrollHelper: void cancelTargetTouch()
kotlin.collections.ArraysKt___ArraysKt: boolean any(short[])
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: DebugCoroutineInfo(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.CoroutineContext)
kotlin.ExceptionsKt__ExceptionsKt: java.util.List getSuppressedExceptions(java.lang.Throwable)
androidx.core.app.PendingIntentCompat: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int,boolean)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,char[])
kotlin.collections.EmptyMap: int size()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.content.Context getContext()
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: void invoke(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-kdPth3s(byte[],byte[])
kotlin.UIntArray$Iterator: boolean hasNext()
androidx.core.graphics.drawable.IconCompat$Api23Impl: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
kotlinx.coroutines.channels.ProducerScope$DefaultImpls: boolean offer(kotlinx.coroutines.channels.ProducerScope,java.lang.Object)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowIdentifier()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterImageView)
androidx.core.view.ContentInfoCompat: android.util.Pair partition(androidx.core.util.Predicate)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.core.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection)
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
kotlinx.coroutines.flow.SharedFlowImpl: long access$tryPeekLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
androidx.core.view.inputmethod.EditorInfoCompat: EditorInfoCompat()
io.flutter.Log: Log()
kotlin.math.MathKt__MathJVMKt: float atan(float)
androidx.window.embedding.EmbeddingBackend$Companion$overrideDecorator$1: EmbeddingBackend$Companion$overrideDecorator$1(java.lang.Object)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String getSystemFontFamilyName()
kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
androidx.viewpager.widget.ViewPager$2: float getInterpolation(float)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String)
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object getDelegate(java.lang.Object)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: java.lang.Object doSelect$suspendImpl(kotlinx.coroutines.selects.UnbiasedSelectImplementation,kotlin.coroutines.Continuation)
kotlin.random.Random$Default: byte[] nextBytes(byte[])
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View)
kotlin.random.Random$Default$Serialized: java.lang.Object readResolve()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyOf-GBYM_sE(byte[])
io.flutter.embedding.engine.FlutterJNI: boolean ShouldDisableAHB()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: FlowKt__ErrorsKt$catchImpl$2$emit$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2,kotlin.coroutines.Continuation)
androidx.core.os.UserManagerCompat$Api24Impl: UserManagerCompat$Api24Impl()
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void captureTransitioningViews(java.util.ArrayList,android.view.View)
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback: void onKeyEventHandled(boolean)
kotlin.time.AbstractLongTimeSource$LongTimeMark: boolean hasPassedNow()
kotlin.text.MatchResult$Destructured: kotlin.text.MatchResult getMatch()
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
kotlinx.coroutines.selects.SelectOldKt: void access$resumeUndispatchedWithException(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable)
androidx.activity.result.ActivityResult$1: androidx.activity.result.ActivityResult[] newArray(int)
kotlin.UShortArray: void set-01HTLdE(short[],int,short)
androidx.core.content.pm.ShortcutInfoCompat: boolean getLongLivedFromExtra(android.os.PersistableBundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
kotlin.sequences.GeneratorSequence$iterator$1: GeneratorSequence$iterator$1(kotlin.sequences.GeneratorSequence)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,kotlin.sequences.Sequence)
androidx.loader.content.Loader: void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(boolean[])
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.customview.widget.ViewDragHelper: void dispatchViewReleased(float,float)
androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintContentIntentLaunchesActivity()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
androidx.fragment.app.FragmentManager$10: FragmentManager$10(androidx.fragment.app.FragmentManager)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int indexOf(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-QwZRm1k(long[])
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walk$default(java.io.File,kotlin.io.FileWalkDirection,int,java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: void getBoundsInParent(int,android.graphics.Rect)
kotlin.collections.builders.MapBuilder: int access$getLength$p(kotlin.collections.builders.MapBuilder)
kotlin.UByte: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sorted(java.lang.Iterable)
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
androidx.core.text.SpannableStringKt: void set(android.text.Spannable,kotlin.ranges.IntRange,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
androidx.core.graphics.ColorUtils: int blendARGB(int,int,float)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(long[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
androidx.core.provider.SelfDestructiveThread$2: void run()
kotlinx.coroutines.flow.ReadonlySharedFlow: java.util.List getReplayCache()
androidx.core.view.DisplayCompat$ModeCompat$Api23Impl: int getPhysicalWidth(android.view.Display$Mode)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
kotlin.math.MathKt__MathJVMKt: float log(float,float)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.ranges.IntProgression: int getLast()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
androidx.core.graphics.BitmapKt: android.graphics.Bitmap applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1)
kotlin.random.Random$Default: float nextFloat()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.Object[] orEmpty(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-XzdR7RA(short[],short)
kotlin.collections.AbstractMap: java.lang.String toString(java.util.Map$Entry)
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onEngineWillDestroy()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1: DebugProbesImpl$dumpCoroutinesInfoImpl$$inlined$sortedBy$1()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-4UcCI2c$default(byte[],int,int,int,java.lang.Object)
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle()
kotlinx.coroutines.channels.ActorScope: kotlinx.coroutines.channels.Channel getChannel()
androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Object)
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.core.text.util.FindAddress: java.util.regex.MatchResult matchHouseNumber(java.lang.String,int)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeUndispatchedWith(java.lang.Object)
androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.core.location.LocationCompat: void removeMslAltitudeAccuracy(android.location.Location)
androidx.core.location.GnssStatusWrapper: int hashCode()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.FileVisitor fileVisitor(kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
kotlinx.coroutines.ChildJob$DefaultImpls: void cancel(kotlinx.coroutines.ChildJob)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
androidx.activity.result.PickVisualMediaRequestKt: androidx.activity.result.PickVisualMediaRequest PickVisualMediaRequest$default(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],java.util.Collection)
androidx.core.view.ViewKt$doOnDetach$1: void onViewAttachedToWindow(android.view.View)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type computeJavaType(kotlin.reflect.KType,boolean)
androidx.window.layout.adapter.sidecar.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.core.graphics.PaintCompat$Api29Impl: void setBlendMode(android.graphics.Paint,java.lang.Object)
androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableCollection(java.lang.Object)
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
io.flutter.plugin.common.BinaryCodec: BinaryCodec()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: void dump(java.lang.String,java.io.PrintWriter)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] onEach-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.internal.UProgressionUtilKt: int differenceModulo-WZ9TVnA(int,int,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean verifyJNI()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setFlags(int)
androidx.core.widget.TintableCompoundButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Path getPath()
kotlin.UShort$Companion: UShort$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.versionedparcelable.VersionedParcelStream: void writeObject(java.lang.Object)
kotlinx.coroutines.Delay$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnTimeout(kotlinx.coroutines.Delay,long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter$Companion: android.os.Binder getINVALID_SPLIT_INFO_TOKEN()
androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()
kotlin.ranges.OpenEndRange$DefaultImpls: boolean contains(kotlin.ranges.OpenEndRange,java.lang.Comparable)
androidx.core.os.ParcelCompat$Api33Impl: java.lang.Object[] readArray(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
kotlinx.coroutines.EventLoopImplBase: void setCompleted(boolean)
androidx.profileinstaller.Encoding: Encoding()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object find(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: long getMilliseconds(int)
androidx.core.text.util.LinkifyCompat: void gatherMapLinks(java.util.ArrayList,android.text.Spannable)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager: void launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.location.GpsStatusWrapper: float getCarrierFrequencyHz(int)
androidx.profileinstaller.ProfileInstaller: void lambda$diagnostic$1(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object)
androidx.core.app.BundleCompat: BundleCompat()
kotlin.reflect.KFunction: boolean isOperator()
androidx.customview.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)
androidx.window.reflection.ReflectionUtils: boolean validateImplementation$window_release(java.lang.Class,java.lang.Class)
androidx.core.app.NotificationChannelCompat$Api26Impl: long[] getVibrationPattern(android.app.NotificationChannel)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: ViewCompat$AccessibilityPaneVisibilityManager()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object findLast(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.app.ShareCompat$IntentReader: java.lang.String getCallingPackage()
kotlin.random.XorWowRandom: XorWowRandom(int,int)
com.getkeepsafe.relinker.elf.Elf$DynamicStructure: Elf$DynamicStructure()
kotlin.collections.ArraysKt___ArraysKt: boolean all(char[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
androidx.viewpager.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
androidx.annotation.RequiresFeature: java.lang.String name()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
androidx.core.view.WindowInsetsControllerCompat$Impl30: boolean isAppearanceLightNavigationBars()
kotlin.collections.MapsKt__MapsKt: java.util.Iterator mutableIterator(java.util.Map)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findViewFragment(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.TintableCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.KParameter: boolean isOptional()
androidx.window.embedding.SplitAttributes$Builder: androidx.window.embedding.SplitAttributes$Builder setSplitType(androidx.window.embedding.SplitAttributes$SplitType)
androidx.profileinstaller.Encoding: void writeUInt16(java.io.OutputStream,int)
kotlin.time.TestTimeSource: TestTimeSource()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
androidx.lifecycle.ComputableLiveData: ComputableLiveData(java.util.concurrent.Executor)
kotlinx.coroutines.internal.InlineList: java.lang.String toString()
io.flutter.embedding.engine.dart.DartExecutor: void enableBufferingIncomingMessages()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.lifecycle.Lifecycle: Lifecycle()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()
kotlin.text.StringsKt___StringsKt: java.lang.String reversed(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
kotlin.ReplaceWith: java.lang.String expression()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object remove(java.lang.Object)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
io.flutter.plugin.platform.PlatformPlugin: void share(java.lang.String)
kotlin.time.MeasureTimeKt: kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource,kotlin.jvm.functions.Function0)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.graphics.Rect getLaunchBounds()
androidx.core.util.AtomicFile: java.io.FileInputStream openRead()
io.flutter.plugin.platform.SingleViewWindowManager: void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer)
androidx.window.core.ActivityComponentInfo: java.lang.String getClassName()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-ciTST-8(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.Waiter: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
androidx.fragment.app.FragmentTransitionCompat21$2: FragmentTransitionCompat21$2(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)
androidx.collection.ArraySet: boolean remove(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxOrNull(long[])
androidx.fragment.app.FragmentManager: void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
kotlin.sequences.TakeWhileSequence$iterator$1: boolean hasNext()
kotlin.math.MathKt__MathJVMKt: float expm1(float)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.activity.ComponentDialog: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayRemoved(int)
kotlin.collections.ArraysKt___ArraysKt: int reduceRight(int[],kotlin.jvm.functions.Function2)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: AccessibilityNodeInfoCompat$Api34Impl()
androidx.core.widget.ScrollerCompat: int getCurrY()
kotlin.ranges.UIntProgression: java.lang.String toString()
kotlin.math.MathKt__MathJVMKt: float log10(float)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder withNewEngine()
kotlin.collections.ArraysKt___ArraysKt: double minOf(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression reversed(kotlin.ranges.LongProgression)
androidx.lifecycle.SavedStateHandle$SavingStateLiveData: void detach()
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object[] newArray(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(char[],kotlin.jvm.functions.Function1)
kotlin.collections.SetsKt__SetsKt: java.util.HashSet hashSetOf()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger inc(java.math.BigInteger)
androidx.versionedparcelable.CustomVersionedParcelable: void onPostParceling()
androidx.window.embedding.SplitAttributes: androidx.window.embedding.SplitAttributes$LayoutDirection getLayoutDirection()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: void onBackCancelled()
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapNotNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.viewpager.R$style: R$style()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
kotlinx.coroutines.flow.SharedFlowImpl: long updateNewCollectorIndexLocked$kotlinx_coroutines_core()
kotlin.random.Random: double nextDouble()
androidx.lifecycle.LegacySavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)
kotlinx.coroutines.internal.Removed: Removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.window.embedding.RuleController: void clearRules()
kotlin.collections.ArraysKt___ArraysKt: char maxByOrThrow(char[],kotlin.jvm.functions.Function1)
androidx.window.core.ActivityComponentInfo: java.lang.String getPackageName()
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
kotlin.jvm.internal.ArrayCharIterator: boolean hasNext()
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KMutableProperty2$Setter getSetter()
kotlin.collections.GroupingKt__GroupingJVMKt: GroupingKt__GroupingJVMKt()
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtra$14(java.lang.Object)
kotlin.sequences.GeneratorSequence$iterator$1: void calcNext()
androidx.core.provider.DocumentsContractCompat: android.net.Uri buildTreeDocumentUri(java.lang.String,java.lang.String)
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$1: android.view.View invoke(android.view.View)
androidx.fragment.app.ListFragment: void setListShown(boolean)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object addShortcuts(java.util.List)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(char[],kotlin.jvm.functions.Function1)
androidx.activity.FullyDrawnReporter: void reportRunnable$lambda$2(androidx.activity.FullyDrawnReporter)
kotlinx.coroutines.ThreadState: void clearInterrupt()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: int[] onEachIndexed(int[],kotlin.jvm.functions.Function2)
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
kotlinx.coroutines.flow.StateFlowImpl: boolean updateState(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.TypeParameterReference: boolean isReified()
androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: boolean access$002(io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget,boolean)
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: ChannelFlowMerge$collectTo$2(kotlinx.coroutines.Job,kotlinx.coroutines.sync.Semaphore,kotlinx.coroutines.channels.ProducerScope,kotlinx.coroutines.flow.internal.SendingCollector)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
kotlin.text.StringsKt__AppendableKt: StringsKt__AppendableKt()
android.support.v4.os.IResultReceiver$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)
androidx.fragment.app.FragmentManager: void restoreSaveStateInternal(android.os.Parcelable)
kotlin.collections.AbstractCollection: java.lang.Object[] toArray()
android.support.v4.os.IResultReceiver$Default: void send(int,android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(double[],int,int)
kotlinx.coroutines.flow.LintKt: void cancel$default(kotlinx.coroutines.flow.FlowCollector,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-uLth9ew(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: java.lang.CharSequence getLabel(android.app.RemoteInput)
kotlin.random.URandomKt: void checkULongRangeBounds-eb3DHEI(long,long)
io.flutter.embedding.engine.loader.ResourceExtractor: void copy(java.io.InputStream,java.io.OutputStream)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.concurrent.ThreadsKt: java.lang.Thread thread(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PrimitiveSpreadBuilder: PrimitiveSpreadBuilder(int)
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlText(int)
kotlin.io.FilePathComponents: kotlin.io.FilePathComponents copy(java.io.File,java.util.List)
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor addResource(java.lang.String)
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.os.ResultReceiver$MyResultReceiver: ResultReceiver$MyResultReceiver(android.support.v4.os.ResultReceiver)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createIconWithBackground(int,int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized: void run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize)
androidx.core.app.NotificationCompatJellybean: int getActionCount(android.app.Notification)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOf(char[],int)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.PackageManagerCompat$Api30Impl: boolean areUnusedAppRestrictionsEnabled(android.content.Context)
androidx.core.graphics.RectKt: android.graphics.RectF minus(android.graphics.RectF,android.graphics.PointF)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
androidx.lifecycle.LegacySavedStateHandleController: void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
io.flutter.embedding.android.FlutterView: boolean lambda$sendUserSettingsToFlutter$0(android.view.textservice.SpellCheckerInfo)
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long getMicroseconds-UwyO8pc(double)
androidx.fragment.app.DefaultSpecialEffectsController$retainMatchingViews$1: java.lang.Boolean invoke(java.util.Map$Entry)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,char,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onUserLeaveHint()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(boolean[])
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.core.graphics.RectKt: android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
kotlin.io.FileTreeWalk$FileTreeWalkIterator: FileTreeWalk$FileTreeWalkIterator(kotlin.io.FileTreeWalk)
kotlin.text.StringsKt___StringsKt: java.util.List chunked(java.lang.CharSequence,int)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.core.location.GnssStatusCompat: float getBasebandCn0DbHz(int)
androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean onStartJob(android.app.job.JobParameters)
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: VersionedParcelStream$FieldBuffer(int,java.io.DataOutputStream)
io.flutter.plugin.platform.VirtualDisplayController: void clearSurface()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)
kotlin.collections.MapWithDefaultImpl: java.util.Set getKeys()
androidx.core.text.BidiFormatter$DirectionalityEstimator: BidiFormatter$DirectionalityEstimator(java.lang.CharSequence,boolean)
kotlin.UNumbersKt: long takeHighestOneBit-VKZWuLQ(long)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: ChannelFlowTransformLatest$flowCollect$3$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector)
kotlin.coroutines.CombinedContext: int size()
androidx.window.layout.adapter.WindowBackend: void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.area.WindowAreaController$Companion: androidx.window.area.WindowAreaController getOrCreate()
androidx.loader.content.Loader: boolean isAbandoned()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minOrNull-rL5Bavg(short[])
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.Fragment getItem(int)
androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
kotlin.UShortArray: void clear()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowClipData(androidx.core.util.Predicate)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.sequences.DropSequence$iterator$1: DropSequence$iterator$1(kotlin.sequences.DropSequence)
kotlinx.coroutines.CopyableThrowable: java.lang.Throwable createCopy()
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getDartEntrypointLibraryUri()
androidx.core.view.MenuKt: android.view.MenuItem get(android.view.Menu,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int lastIndexOf(java.lang.Object)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.core.graphics.CanvasKt: void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double min(double[])
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
androidx.core.app.TaskStackBuilder: android.content.Intent editIntentAt(int)
kotlin.ranges.URangesKt___URangesKt: long coerceIn-sambcqE(long,long,long)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: ExtensionWindowBackendApi2(androidx.window.extensions.layout.WindowLayoutComponent)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api33Impl: AccessibilityWindowInfoCompat$Api33Impl()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short getOrElse-CVVdw08(short[],int,kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat: boolean isExcludedFromSurfaces(int)
kotlin.jvm.internal.PrimitiveSpreadBuilder: int size()
androidx.activity.result.ActivityResultRegistry$2: androidx.activity.result.contract.ActivityResultContract getContract()
kotlin.ranges.ClosedRange: boolean isEmpty()
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: java.lang.Object invoke()
kotlin.time.Duration$Companion: long milliseconds-UwyO8pc(long)
kotlin.coroutines.CombinedContext$Serialized: CombinedContext$Serialized(kotlin.coroutines.CoroutineContext[])
androidx.fragment.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean contains(char)
androidx.core.util.Pair: java.lang.String toString()
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int,int)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.String additionalToStringProps()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)
kotlin.collections.CollectionsKt___CollectionsKt: int lastIndexOf(java.util.List,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float maxOf(long[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$2: FlutterRenderer$2(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(double[])
androidx.core.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsFirst()
io.flutter.embedding.android.FlutterEngineConfigurator: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(int[])
androidx.core.location.LocationManagerCompat$Api31Impl: LocationManagerCompat$Api31Impl()
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getViewModelStores()
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy--_j2Y-Q(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean)
kotlin.text.StringsKt___StringsKt: int sumOfUInt(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationCompat$Impl: void setAlpha(float)
kotlinx.coroutines.JobSupport$children$1: JobSupport$children$1(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setClip(android.content.ClipData)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Object next()
kotlin.ranges.ClosedFloatRange: boolean contains(java.lang.Comparable)
kotlin.sequences.SequencesKt___SequencesKt: float sumOfFloat(kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] toUIntArray(kotlin.UInt[])
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(double)
kotlin.collections.AbstractList$IteratorImpl: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-3uqUaXg(long[],long)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: void resize(int,int)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] $values()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,char)
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
kotlin.text.StringsKt___StringsKt: java.util.List zip(java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plusElement(kotlin.sequences.Sequence,java.lang.Object)
kotlin.sequences.IndexingSequence$iterator$1: kotlin.collections.IndexedValue next()
kotlin.UByteArray: boolean remove(java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.util.ArrayList)
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: void setIndex(int)
androidx.core.graphics.RegionKt: void forEach(android.graphics.Region,kotlin.jvm.functions.Function1)
kotlin.UShortArray: UShortArray(short[])
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.PlatformViewRenderTarget,android.view.View$OnFocusChangeListener,int,java.lang.Object)
kotlin.collections.builders.MapBuilderValues: boolean isEmpty()
io.flutter.plugin.common.MessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
kotlin.collections.MapWithDefaultImpl: int getSize()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void release()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)
androidx.core.location.LocationListenerCompat: void onProviderDisabled(java.lang.String)
kotlin.time.TimedValue: java.lang.Object getValue()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(byte[],int,int,int,java.lang.Object)
kotlinx.coroutines.LazyDeferredCoroutine: void onStart()
androidx.core.app.NotificationCompat$Api29Impl: android.content.LocusId getLocusId(android.app.Notification)
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
androidx.core.view.ViewKt$doOnAttach$1: void onViewDetachedFromWindow(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: double reduceRightIndexed(double[],kotlin.jvm.functions.Function3)
kotlin.io.path.FileVisitorBuilderImpl: void checkNotDefined(java.lang.Object,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,kotlin.sequences.Sequence)
kotlin.math.MathKt__MathJVMKt: double sin(double)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
androidx.core.app.ActivityOptionsCompat: void requestUsageTimeReport(android.app.PendingIntent)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(float[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
androidx.core.graphics.BitmapCompat: BitmapCompat()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
kotlin.ranges.CharProgression: kotlin.collections.CharIterator iterator()
kotlinx.coroutines.JobSupport: boolean isCancelled()
androidx.core.view.DisplayCompat$Api23Impl: boolean isCurrentModeTheLargestMode(android.view.Display)
androidx.window.embedding.EmbeddingCompat$setEmbeddingCallback$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine access$100(io.flutter.embedding.android.FlutterView)
kotlinx.coroutines.stream.StreamKt: kotlinx.coroutines.flow.Flow consumeAsFlow(java.util.stream.Stream)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.os.ParcelCompat$Api33Impl: java.util.List readParcelableList(android.os.Parcel,java.util.List,java.lang.ClassLoader,java.lang.Class)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context)
kotlin.random.FallbackThreadLocalRandom: FallbackThreadLocalRandom()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void finalize()
kotlin.jvm.internal.PropertyReference: int hashCode()
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: DebugProbesImpl$Installations$kotlinx$VolatileWrapper(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean find(boolean[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-4UcCI2c(byte[],int,int)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback$lambda$6(kotlinx.coroutines.CancellableContinuation,long)
androidx.core.internal.view.SupportMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String getId()
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Object)
kotlin.UByte: float toFloat-impl(byte)
androidx.fragment.app.FragmentActivity$HostCallbacks: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int random--ajY-9A(int[])
kotlinx.coroutines.SupervisorJobImpl: SupervisorJobImpl(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow emptyFlow()
kotlin.collections.CollectionsKt___CollectionsKt: float[] toFloatArray(java.util.Collection)
kotlin.text.StringsKt___StringsKt: java.lang.Object firstNotNullOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAtOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxWithOrThrow(java.util.Map,java.util.Comparator)
kotlin.KotlinVersion: int versionOf(int,int,int)
androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)
androidx.window.embedding.RuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.content.LocusIdCompat$Api29Impl: java.lang.String getId(android.content.LocusId)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(double[],java.lang.Iterable)
androidx.core.view.ViewGroupKt: void forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)
kotlin.UShort: short unbox-impl()
kotlin.sequences.SequencesKt___SequencesKt: double sumByDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: void removeRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: SettingsChannel$ConfigurationQueue()
androidx.core.database.sqlite.SQLiteCursorCompat$Api28Impl: SQLiteCursorCompat$Api28Impl()
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.core.view.ViewGroupKt: boolean isEmpty(android.view.ViewGroup)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.core.os.CancellationSignal getTransitionSignal()
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationChannelCompat getNotificationChannelCompat(java.lang.String,java.lang.String)
kotlinx.coroutines.sync.MutexImpl: kotlinx.coroutines.selects.SelectClause2 getOnLock()
android.support.v4.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
kotlinx.coroutines.CompletedWithCancellation: CompletedWithCancellation(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletableDeferredImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
androidx.lifecycle.CoroutineLiveData: void onInactive()
androidx.window.embedding.SplitController$splitInfoList$1$2: void invoke()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.UByteArray: boolean equals-impl(byte[],java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[])
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.RuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.customview.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence flatten$kotlin_stdlib(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resume(kotlin.Unit,kotlin.jvm.functions.Function1)
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$Action makeAnswerAction()
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1: TransitionKt$doOnCancel$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String getShortcutInfoCompatWithLowestRank(java.util.List)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long toLongExactOrNull(double)
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean hasValidVendorApiLevel2$window_release()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(int)
kotlin.text.StringsKt__RegexExtensionsKt: kotlin.text.Regex toRegex(java.lang.String,kotlin.text.RegexOption)
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
kotlin.collections.ArraysKt___ArraysKt: short reduce(short[],kotlin.jvm.functions.Function2)
androidx.core.widget.NestedScrollView: void stopNestedScroll()
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List access$1100(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object fixedPeriodTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: double round(double)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.selects.SelectUnbiasedKt: java.lang.Object selectUnbiased(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
androidx.core.app.NotificationChannelCompat: NotificationChannelCompat(android.app.NotificationChannel)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)
androidx.viewpager.widget.ViewPager$ViewPositionComparator: int compare(android.view.View,android.view.View)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()
androidx.core.app.ActivityOptionsCompat$Api24Impl: android.graphics.Rect getLaunchBounds(android.app.ActivityOptions)
androidx.core.content.LocusIdCompat: boolean equals(java.lang.Object)
kotlin.ranges.CharRange: java.lang.Comparable getEndInclusive()
androidx.core.transition.TransitionKt$addListener$1: void invoke(android.transition.Transition)
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.DispatchedCoroutine: void afterCompletion(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KCallable computeReflected()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackJavaConsumerValid$1: java.lang.Object invoke()
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],boolean[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function4)
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty notNull()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.fragment.app.FragmentController: java.util.List getActiveFragments(java.util.List)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(java.lang.Object)
kotlin.collections.AbstractCollection$toString$1: java.lang.Object invoke(java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent getIntent()
kotlin.io.FileSystemException: FileSystemException(java.io.File,java.io.File,java.lang.String)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filterNot(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder$EntriesItr: java.lang.Object next()
kotlin.time.Duration: long minus-LRDsOJo(long,long)
androidx.loader.content.ModernAsyncTask$2: java.lang.Object call()
androidx.core.util.SparseLongArrayKt$valueIterator$1: SparseLongArrayKt$valueIterator$1(android.util.SparseLongArray)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
kotlin.text.StringsKt__RegexExtensionsKt: kotlin.text.Regex toRegex(java.lang.String,java.util.Set)
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals(java.lang.Object)
androidx.core.os.ParcelCompat$Api33Impl: java.lang.Object[] readParcelableArray(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.net.InetAddress,int)
kotlin.text.StringsKt__StringsKt: java.lang.String padStart(java.lang.String,int,char)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Default: android.os.IBinder asBinder()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateSystemUiOverlays()
kotlinx.coroutines.flow.FlowKt__CountKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilderEntries: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.CallbackFlowBuilder: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
androidx.fragment.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)
kotlinx.coroutines.internal.ThreadLocalKt: void CommonThreadLocal$annotations()
androidx.fragment.app.FragmentController: void dispatchCreate()
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(float[],float)
androidx.core.util.Predicate$-CC: boolean $private$lambda$and$0(androidx.core.util.Predicate,androidx.core.util.Predicate,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.Object[] dumpCoroutinesInfoAsJsonAndReferences()
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,float)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(float[],float[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.coroutines.CombinedContext$toString$1: java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(int[],java.util.Collection)
androidx.fragment.app.SpecialEffectsController$Companion: SpecialEffectsController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.app.PictureInPictureModeChangedInfo: boolean isInPictureInPictureMode()
androidx.fragment.app.FragmentStateManager$1: FragmentStateManager$1(androidx.fragment.app.FragmentStateManager,android.view.View)
androidx.core.app.ShareCompat$IntentReader: ShareCompat$IntentReader(android.content.Context,android.content.Intent)
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object remove(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long random-JzugnMA(long[],kotlin.random.Random)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Byte boxByte(byte)
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30: void hide()
kotlinx.coroutines.CoroutineExceptionHandlerKt: kotlinx.coroutines.CoroutineExceptionHandler CoroutineExceptionHandler(kotlin.jvm.functions.Function2)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
androidx.core.graphics.PathSegment: android.graphics.PointF getStart()
androidx.window.layout.WindowLayoutInfo: int hashCode()
kotlin.collections.ArrayDeque: boolean add(java.lang.Object)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: android.os.Bundle createArgs()
io.flutter.embedding.android.FlutterFragmentActivity: void onNewIntent(android.content.Intent)
kotlinx.coroutines.CancellableContinuationImpl: void releaseClaimedReusableContinuation$kotlinx_coroutines_core()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.fragment.app.Fragment: void setNextTransition(int)
androidx.core.widget.CheckedTextViewCompat: android.content.res.ColorStateList getCheckMarkTintList(android.widget.CheckedTextView)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[])
kotlin.collections.builders.ListBuilder: void checkIsMutable()
kotlinx.coroutines.internal.SynchronizedKt: void SynchronizedObject$annotations()
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: CollectionsKt___CollectionsKt$withIndex$1(java.lang.Iterable)
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
kotlin.collections.ArrayDeque$Companion: ArrayDeque$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterActivity: void onWindowFocusChanged(boolean)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],long[])
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int,java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceIndexedOrNull-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlin.reflect.KTypeProjection$Companion: KTypeProjection$Companion()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean contains(byte)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(long[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
kotlin.text.StringsKt__StringBuilderJVMKt: StringsKt__StringBuilderJVMKt()
kotlin.ULongArray: long[] constructor-impl(int)
androidx.fragment.app.FragmentContainerView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.core.app.NotificationCompat$Api26Impl: java.lang.String getShortcutId(android.app.Notification)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$2(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.io.TextStreamsKt: java.lang.Object useLines(java.io.Reader,kotlin.jvm.functions.Function1)
androidx.lifecycle.runtime.R$id: R$id()
androidx.lifecycle.LiveDataScopeImpl: androidx.lifecycle.CoroutineLiveData getTarget$lifecycle_livedata_release()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams()
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
kotlinx.coroutines.InvokeOnCompletion: InvokeOnCompletion(kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float find(float[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
androidx.concurrent.futures.AbstractResolvableFuture: void addDoneString(java.lang.StringBuilder)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort singleOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.time.MeasureTimeKt: kotlin.time.TimedValue measureTimedValue(kotlin.time.TimeSource$Monotonic,kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
androidx.profileinstaller.BenchmarkOperation: boolean deleteFilesRecursively(java.io.File)
kotlin.jvm.internal.ClassReference: java.util.List getSupertypes()
kotlin.coroutines.SafeContinuation: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int lastIndexOf(double)
kotlin.text.Regex$findAll$1: kotlin.text.MatchResult invoke()
androidx.core.math.MathUtils: long addExact(long,long)
kotlin.jvm.internal.ByteSpreadBuilder: ByteSpreadBuilder(int)
com.getkeepsafe.relinker.ReLinker$LibraryLoader: java.lang.String unmapLibraryName(java.lang.String)
androidx.core.util.SparseLongArrayKt$valueIterator$1: long nextLong()
androidx.window.core.ValidSpecification: ValidSpecification(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger)
androidx.window.area.WindowAreaController: void presentContentOnWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback)
kotlin.jvm.internal.PropertyReference0: java.lang.Object getDelegate()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(long[],kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__UtilsKt: boolean deleteRecursively(java.io.File)
kotlin.random.URandomKt: long nextULong(kotlin.random.Random,kotlin.ranges.ULongRange)
kotlinx.coroutines.flow.StateFlowImpl$collect$1: StateFlowImpl$collect$1(kotlinx.coroutines.flow.StateFlowImpl,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,java.lang.Iterable)
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object)
androidx.window.embedding.SplitRule: androidx.window.embedding.EmbeddingAspectRatio getMaxAspectRatioInPortrait()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message setData(android.app.Notification$MessagingStyle$Message,java.lang.String,android.net.Uri)
androidx.core.view.WindowInsetsAnimationCompat$Impl: WindowInsetsAnimationCompat$Impl(int,android.view.animation.Interpolator,long)
kotlin.jvm.internal.IntSpreadBuilder: int getSize(int[])
io.flutter.plugin.platform.PlatformViewsController: void enforceMinimumAndroidApiVersion(int)
kotlin.jvm.internal.Reflection: void setUpperBounds(kotlin.reflect.KTypeParameter,kotlin.reflect.KType[])
kotlinx.coroutines.selects.SelectClause: java.lang.Object getClauseObject()
androidx.window.embedding.ExtensionEmbeddingBackend$splitSupportStatus$2: java.lang.Object invoke()
androidx.window.layout.adapter.extensions.MulticastConsumer: void removeListener(androidx.core.util.Consumer)
kotlin.collections.ArraysKt___ArraysKt: byte minByOrThrow(byte[],kotlin.jvm.functions.Function1)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMapSequence(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.random.PlatformRandom: PlatformRandom(java.util.Random)
kotlin.collections.builders.MapBuilder: int getSize()
kotlin.collections.CharIterator: char nextChar()
kotlin.ranges.CharRange: void getEndExclusive$annotations()
kotlin.ULong: byte toUByte-w2LRezQ(long)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
kotlin.reflect.KProperty: boolean isLateinit()
androidx.core.app.JobIntentService$WorkEnqueuer: JobIntentService$WorkEnqueuer(android.content.ComponentName)
androidx.core.view.ContentInfoCompat$Compat31Impl: android.net.Uri getLinkUri()
androidx.core.content.res.TypedArrayKt: float getDimensionOrThrow(android.content.res.TypedArray,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action build()
io.flutter.embedding.android.FlutterSurfaceView: boolean shouldNotify()
kotlin.sequences.SequencesKt___SequencesKt: java.util.HashSet toHashSet(kotlin.sequences.Sequence)
androidx.core.widget.TextViewCompat: TextViewCompat()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.String invoke(kotlin.ranges.IntRange)
kotlinx.coroutines.flow.StateFlow: java.lang.Object getValue()
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(double)
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlin.jvm.internal.BooleanSpreadBuilder: int getSize(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.MapsKt__MapsKt: boolean contains(java.util.Map,java.lang.Object)
androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(boolean)
kotlin.jvm.internal.ClassReference: kotlin.reflect.KVisibility getVisibility()
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.fragment.app.FragmentManager: void dispatchCreate()
kotlinx.coroutines.flow.SubscribedSharedFlow: SubscribedSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitRule$FinishBehavior: androidx.window.embedding.SplitRule$FinishBehavior getFinishBehaviorFromValue$window_release(int)
kotlin.jvm.internal.TypeReference: void getFlags$kotlin_stdlib$annotations()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp()
androidx.core.content.PackageManagerCompat$Api30Impl: PackageManagerCompat$Api30Impl()
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.lifecycle.CoroutineLiveData$1: void invoke()
androidx.window.area.SafeWindowAreaComponentProvider: boolean isValidExtensionWindowPresentation()
kotlin.ranges.URangesKt___URangesKt: boolean contains-fz5IDCE(kotlin.ranges.UIntRange,long)
androidx.core.view.WindowCompat$Api30Impl: WindowCompat$Api30Impl()
kotlin.random.KotlinRandom: void nextBytes(byte[])
kotlin.ULongArray: boolean remove(java.lang.Object)
androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode nextOrIfClosed(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: BufferedChannel$onReceive$2()
androidx.core.app.ServiceCompat: ServiceCompat()
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.view.VelocityTrackerFallback: float getCurrentVelocity()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivity: void commitBackGesture()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.List windowed$default(java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)
kotlin.UShort: long minus-VKZWuLQ(short,long)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.time.AbstractLongTimeSource$LongTimeMark: long elapsedNow-UwyO8pc()
kotlinx.coroutines.channels.ReceiveChannel$receiveOrNull$1: ReceiveChannel$receiveOrNull$1(kotlin.coroutines.Continuation)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean getSanitizeStackTraces()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: void findNext()
androidx.core.text.HtmlKt: android.text.Spanned parseAsHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)
androidx.core.view.ViewKt$doOnDetach$1: void onViewDetachedFromWindow(android.view.View)
androidx.customview.widget.FocusStrategy: int getWeightedDistanceFor(int,int)
androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)
androidx.window.java.area.WindowAreaControllerCallbackAdapter: void addWindowAreaInfoListListener(java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Set toMutableSet(kotlin.sequences.Sequence)
androidx.activity.SystemBarStyle: androidx.activity.SystemBarStyle auto(int,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] values()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object)
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long maxOrThrow-U(long[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte minOf(byte,byte[])
androidx.core.graphics.PictureKt: android.graphics.Picture record(android.graphics.Picture,int,int,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)
androidx.fragment.app.BackStackRecordState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.util.ObjectsCompat: int hashCode(java.lang.Object)
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 getRegFunc()
kotlinx.coroutines.DispatchedTaskKt: void resumeUnconfined(kotlinx.coroutines.DispatchedTask)
kotlin.ranges.ComparableRange: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
androidx.concurrent.futures.ResolvableFuture: ResolvableFuture()
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List shuffled(java.lang.Iterable,kotlin.random.Random)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle)
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: ActivityResultContracts$TakePicturePreview()
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Object[])
androidx.core.app.ActivityOptionsCompat$Api24Impl: android.app.ActivityOptions setLaunchBounds(android.app.ActivityOptions,android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextSelection(int,int)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$1000(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
androidx.profileinstaller.Encoding: long readUInt(java.io.InputStream,int)
kotlin.sequences.FilteringSequence$iterator$1: void calcNext()
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.MutableStateFlow: boolean compareAndSet(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendRange(java.lang.Appendable,java.lang.CharSequence,int,int)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,androidx.window.embedding.SplitAttributes,java.lang.String,androidx.window.embedding.SplitRule$FinishBehavior,androidx.window.embedding.SplitRule$FinishBehavior,boolean,int,int,int,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.EmbeddingAspectRatio)
androidx.loader.content.ModernAsyncTask: void onPreExecute()
androidx.tracing.Trace: Trace()
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: int getTypes()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.ListBuilderKt: int access$subarrayContentHashCode(java.lang.Object[],int,int)
androidx.core.graphics.TypefaceCompatBaseImpl$3: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow takeWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.versionedparcelable.VersionedParcel: void writeCollection(java.util.Collection)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentRight()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(double[],kotlin.jvm.functions.Function1)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.embedding.SplitAttributes getSplitAttributesCompat(androidx.window.extensions.embedding.SplitInfo)
androidx.collection.SimpleArrayMap: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long find(long[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableList: void add(int,java.lang.Object)
androidx.core.util.SparseLongArrayKt: boolean isEmpty(android.util.SparseLongArray)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendLine(java.lang.Appendable,char)
androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl: android.view.autofill.AutofillId newAutofillId(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.util.List,kotlin.jvm.functions.Function1,boolean)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(char[])
androidx.core.app.RemoteActionCompat$Api28Impl: void setShouldShowIcon(android.app.RemoteAction,boolean)
io.flutter.embedding.android.FlutterFragment: void setFrameworkHandlesBack(boolean)
androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
androidx.core.view.InputDeviceCompat: InputDeviceCompat()
androidx.startup.Initializer: java.util.List dependencies()
androidx.core.util.SparseLongArrayKt: boolean contains(android.util.SparseLongArray,int)
androidx.activity.result.contract.ActivityResultContracts$PickContact: ActivityResultContracts$PickContact()
kotlin.InitializedLazyImpl: boolean isInitialized()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-nl983wc(byte[],java.lang.Object[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: void validateNode$kotlinx_coroutines_core(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.view.ViewStructureCompat: void setDimens(int,int,int,int,int,int)
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getContentDescription()
kotlinx.coroutines.time.TimeKt: long coerceToMillis(java.time.Duration)
androidx.core.content.pm.ShortcutManagerCompat: androidx.core.content.pm.ShortcutInfoCompatSaver getShortcutInfoSaverInstance(android.content.Context)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(double[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule build()
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: boolean isSplitAttributesSupported(androidx.window.embedding.SplitAttributes)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfLast(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minByOrNull(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.math.MathUtils: long negateExact(long)
androidx.collection.SparseArrayCompat: java.lang.Object putIfAbsent(int,java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.lang.Float maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)
io.flutter.embedding.android.FlutterView: android.view.View findViewByAccessibilityIdTraversal(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void initCause(java.lang.Throwable,java.lang.Throwable)
androidx.customview.view.AbsSavedState: AbsSavedState(androidx.customview.view.AbsSavedState$1)
kotlin.text.MatcherMatchResult$groups$1: boolean isEmpty()
kotlin.jvm.internal.SerializedIr: java.lang.String[] b()
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.CallbackFlowBuilder: CallbackFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.MatcherMatchResult: MatcherMatchResult(java.util.regex.Matcher,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue access$100()
androidx.core.text.util.FindAddress: int attemptMatch(java.lang.String,java.util.regex.MatchResult)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: java.lang.String getClassName()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void clearClient()
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
kotlin.ranges.UIntProgressionIterator: UIntProgressionIterator(int,int,int)
androidx.core.util.SparseArrayKt$keyIterator$1: boolean hasNext()
kotlin.reflect.KClass: java.util.Collection getNestedClasses()
io.flutter.plugin.platform.PlatformViewsController: void access$200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: java.util.List parseResult(int,android.content.Intent)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
io.flutter.embedding.engine.dart.DartMessenger: void lambda$dispatchMessageToQueue$0(java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long)
kotlin.PreconditionsKt__PreconditionsKt: void require(boolean)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setVibrationEnabled(boolean)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)
kotlin.time.Duration$Companion: void getMicroseconds-UwyO8pc$annotations(double)
kotlin.collections.ArraysKt___ArraysKt: void forEach(short[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationCompat$Api20Impl: java.lang.String getSortKey(android.app.Notification)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Iterable)
androidx.activity.result.IntentSenderRequest: IntentSenderRequest(android.content.IntentSender,android.content.Intent,int,int)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
io.flutter.plugin.editing.TextEditingDelta: int getNewComposingStart()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1)
kotlin.UShortKt: short toUShort(int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(double[],int,int)
kotlin.collections.AbstractMap$keys$1: AbstractMap$keys$1(kotlin.collections.AbstractMap)
androidx.profileinstaller.ProfileVerifier$Cache: ProfileVerifier$Cache(int,int,long,long)
io.flutter.plugin.platform.SingleViewWindowManager: void removeViewImmediate(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean isEmpty()
androidx.core.widget.ContentLoadingProgressBar: void removeCallbacks()
kotlin.text.StringsKt__StringsKt: java.lang.String substring$default(java.lang.CharSequence,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.ranges.ComparableOpenEndRange: int hashCode()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.jvm.JvmClassMappingKt: void getRuntimeClassOfKClassInstance$annotations(kotlin.reflect.KClass)
androidx.core.graphics.RectKt: int component4(android.graphics.Rect)
androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl: android.view.ViewPropertyAnimator translationZBy(android.view.ViewPropertyAnimator,float)
androidx.core.os.LocaleListCompatWrapper: java.lang.String getLikelyScript(java.util.Locale)
androidx.core.os.ParcelCompat: android.os.Parcelable$Creator readParcelableCreator(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.core.view.MenuKt: void removeItemAt(android.view.Menu,int)
androidx.core.content.ContentResolverCompat: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal)
kotlin.collections.builders.ListBuilder: int indexOf(java.lang.Object)
androidx.core.graphics.PorterDuffKt: android.graphics.PorterDuffXfermode toXfermode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: void onMeasure(int,int)
androidx.versionedparcelable.ParcelField: int value()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow shareIn$default(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int,int,java.lang.Object)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void lambda$onLocationChanged$0(android.location.Location)
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender(androidx.core.app.NotificationCompat$Action)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: android.content.pm.ResolveInfo getGmsPicker$activity_release(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: double minOf(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlow: int getProduceCapacity$kotlinx_coroutines_core()
androidx.core.text.CharSequenceKt: boolean isDigitsOnly(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(byte[])
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRetrieved(android.graphics.Typeface)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: java.lang.Object invoke(int)
androidx.annotation.experimental.Experimental$Level: androidx.annotation.experimental.Experimental$Level[] values()
androidx.core.os.CancellationSignal$OnCancelListener: void onCancel()
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: BufferedChannel$sendImpl$1()
androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
kotlin.collections.builders.MapBuilderEntries: boolean add(java.lang.Object)
androidx.versionedparcelable.VersionedParcelStream: void writeParcelable(android.os.Parcelable)
androidx.core.util.Supplier: java.lang.Object get()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(byte[],kotlin.jvm.functions.Function1)
androidx.loader.content.AsyncTaskLoader: void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short reduceRight(short[],kotlin.jvm.functions.Function2)
io.flutter.plugin.text.ProcessTextPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.SafeWindowExtensionsProvider: androidx.window.extensions.WindowExtensions getWindowExtensions()
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getUnconfined()
androidx.core.app.JobIntentService: boolean onStopCurrentWork()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
kotlin.jvm.internal.ArrayCharIterator: char nextChar()
androidx.core.view.ViewGroupKt: void minusAssign(android.view.ViewGroup,android.view.View)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayChanged(int)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setAutoExpandBubble(boolean)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.content.Context)
kotlin.text.StringsKt__StringsKt: boolean isNotEmpty(java.lang.CharSequence)
kotlinx.coroutines.EventLoopImplBase: kotlinx.coroutines.DisposableHandle scheduleInvokeOnTimeout(long,java.lang.Runnable)
androidx.core.view.ViewKt: kotlin.sequences.Sequence getAncestors(android.view.View)
androidx.activity.result.ActivityResult: java.lang.String toString()
androidx.core.service.quicksettings.TileServiceCompat$Api34Impl: void startActivityAndCollapse(android.service.quicksettings.TileService,android.app.PendingIntent)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder detectWrongNestedHierarchy()
kotlin.NumbersKt__FloorDivModKt: int floorDiv(short,byte)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)
androidx.core.app.NotificationChannelCompat$Api26Impl: int getLockscreenVisibility(android.app.NotificationChannel)
androidx.customview.widget.ExploreByTouchHelper$2: androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduceIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)
kotlin.text.DelimitedRangesSequence$iterator$1: int getNextState()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object minWith(java.lang.Object[],java.util.Comparator)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: FragmentManager$LaunchedFragmentInfo$1()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ShortIterator: ShortIterator()
kotlin.time.TimeSource$Monotonic: TimeSource$Monotonic()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte firstOrNull-GBYM_sE(byte[])
kotlin.reflect.TypeVariableImpl: TypeVariableImpl(kotlin.reflect.KTypeParameter)
androidx.fragment.app.SpecialEffectsController$Effect: void onCancel(android.view.ViewGroup)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)
kotlin.contracts.ContractBuilder: kotlin.contracts.CallsInPlace callsInPlace(kotlin.Function,kotlin.contracts.InvocationKind)
androidx.versionedparcelable.VersionedParcel: java.lang.Exception createException(int,java.lang.String)
kotlin.sequences.DropSequence: DropSequence(kotlin.sequences.Sequence,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean inStack()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent()
androidx.core.util.HalfKt: android.util.Half toHalf(java.lang.String)
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
androidx.lifecycle.ViewModelProvider$Factory$Companion: androidx.lifecycle.ViewModelProvider$Factory from(androidx.lifecycle.viewmodel.ViewModelInitializer[])
androidx.lifecycle.ProcessLifecycleOwner: void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner)
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList getExitingNames()
kotlinx.coroutines.flow.SafeFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.VelocityTrackerCompat: void recycle(android.view.VelocityTracker)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi1: void viewCreated(android.view.View)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1,kotlin.coroutines.Continuation)
androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)
androidx.core.content.ContentProviderCompat: android.content.Context requireContext(android.content.ContentProvider)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.content.Context)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale()
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.FlowCollector access$withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlin.collections.MutableMapWithDefaultImpl: boolean containsValue(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl: android.view.ViewPropertyAnimator z(android.view.ViewPropertyAnimator,float)
kotlin.text.StringsKt___StringsKt$asIterable$$inlined$Iterable$1: java.util.Iterator iterator()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
kotlin.collections.AbstractList$Companion: void checkPositionIndex$kotlin_stdlib(int,int)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: boolean isGmsPickerAvailable$activity_release(android.content.Context)
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getHint()
kotlin.time.Duration$Companion: long nanoseconds-UwyO8pc(long)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createEngine(android.content.Context,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean)
kotlinx.coroutines.EventLoopImplBase: void enqueue(java.lang.Runnable)
kotlin.collections.builders.ListBuilder: java.lang.Object get(int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationChannelGroupCompat: androidx.core.app.NotificationChannelGroupCompat$Builder toBuilder()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: SafeCollector_commonKt$unsafeFlow$1$collect$1(kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.fragment.app.SpecialEffectsController: boolean isPendingExecute()
kotlin.collections.ArraysKt___ArraysKt: boolean any(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float minOrNull(kotlin.sequences.Sequence)
androidx.core.app.NotificationCompat$MessagingStyle: boolean isGroupConversation()
io.flutter.embedding.android.FlutterEngineProvider: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateParentMetricsPredicate$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.result.contract.ActivityResultContracts$TakeVideo: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateSplitPlaceholderRule$lambda$8(androidx.window.embedding.SplitPlaceholderRule,android.app.Activity)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.Region getTransparentRegion()
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.viewpager.widget.ViewPager: boolean isFakeDragging()
androidx.core.view.ContentInfoCompat: java.lang.String flagsToString(int)
kotlin.collections.builders.SetBuilder: int getSize()
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,java.lang.Iterable)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4: DefaultSpecialEffectsController$TransitionEffect$onStart$4(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup,java.lang.Object,kotlin.jvm.internal.Ref$ObjectRef)
kotlin.time.Duration: double toDouble-impl(long,kotlin.time.DurationUnit)
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
androidx.core.net.UriCompat: UriCompat()
kotlinx.coroutines.internal.SegmentOrClosed: int hashCode-impl(java.lang.Object)
kotlin.math.UMathKt: long max-eb3DHEI(long,long)
androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment completeClose(long)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String formatNullable(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[])
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion: SidecarCompat$Companion()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String,io.flutter.embedding.android.FlutterFragment$1)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isHidden(java.nio.file.Path)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4: java.lang.Object invoke()
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
kotlin.time.DurationJvmKt: java.lang.String formatToExactDecimals(double,int)
kotlinx.coroutines.ThreadContextElementKt: kotlinx.coroutines.ThreadContextElement asContextElement(java.lang.ThreadLocal,java.lang.Object)
androidx.core.util.TimeUtils: TimeUtils()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2702(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.area.EmptyWindowAreaControllerImpl: EmptyWindowAreaControllerImpl()
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
kotlin.collections.ArraysKt___ArraysKt: int[] onEach(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Iterable)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
kotlin.time.TimedValue: long component2-UwyO8pc()
kotlin.ranges.CharProgressionIterator: int getStep()
kotlin.time.DurationUnit: java.util.concurrent.TimeUnit getTimeUnit$kotlin_stdlib()
kotlin.io.FilesKt__UtilsKt: FilesKt__UtilsKt()
androidx.core.app.ActivityOptionsCompat$Api21Impl: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
androidx.customview.widget.ViewDragHelper: void dragTo(int,int,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(short[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] plus-ojwP5H8(short[],java.util.Collection)
kotlin.text.StringsKt__AppendableKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],short[])
kotlin.internal.PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlin.collections.MutableMapWithDefaultImpl: int hashCode()
androidx.core.util.LogWriter: void flushBuilder()
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(int)
androidx.fragment.app.FragmentOnAttachListener: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
kotlin.jvm.internal.Intrinsics: int compare(long,long)
kotlinx.coroutines.Unconfined: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment createSegment(long,kotlinx.coroutines.channels.ChannelSegment)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int,int)
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory)
androidx.window.core.SpecificationComputer$Companion: androidx.window.core.SpecificationComputer startSpecification$default(androidx.window.core.SpecificationComputer$Companion,java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: void getDEFAULT_CONCURRENCY_PROPERTY_NAME$annotations()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: boolean performAction(int,int,android.os.Bundle)
androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)
androidx.activity.SystemBarStyle$Companion: androidx.activity.SystemBarStyle light(int,int)
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int)
androidx.core.view.ViewCompat: void setTranslationZ(android.view.View,float)
io.flutter.embedding.android.FlutterFragment: void detachFromFlutterEngine()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.lang.Object putImpl(java.lang.Object,java.lang.Object,kotlinx.coroutines.debug.internal.HashedWeakRef)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: CallbackToFutureAdapter$SafeFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
io.flutter.embedding.android.FlutterFragmentActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
kotlin.ranges.ClosedDoubleRange: boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable)
kotlin.collections.MapsKt__MapsKt: java.lang.Object component1(java.util.Map$Entry)
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)
kotlin.StandardKt__StandardKt: java.lang.Object takeUnless(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.util.List listDirectoryEntries$default(java.nio.file.Path,java.lang.String,int,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.util.List getDartEntrypointArgs()
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: SequencesKt___SequencesKt$minus$1$iterator$1(kotlin.jvm.internal.Ref$BooleanRef,java.lang.Object)
io.flutter.plugin.platform.PlatformView$-CC: void $default$onInputConnectionLocked(io.flutter.plugin.platform.PlatformView)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: WindowAreaControllerImpl$presentContentOnWindowArea$2(androidx.window.area.WindowAreaControllerImpl,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback,kotlin.coroutines.Continuation)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object getUninterruptibly(java.util.concurrent.Future)
androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)
androidx.lifecycle.CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4602(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
kotlinx.coroutines.JobKt__JobKt: java.lang.Throwable orCancellation$JobKt__JobKt(java.lang.Throwable,kotlinx.coroutines.Job)
io.flutter.embedding.android.FlutterFragmentActivity: android.widget.FrameLayout provideRootLayout(android.content.Context)
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf()
androidx.core.util.SparseLongArrayKt: void set(android.util.SparseLongArray,int,long)
androidx.window.area.WindowAreaInfo: androidx.window.area.WindowAreaCapability getCapability(androidx.window.area.WindowAreaCapability$Operation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityEventCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityEvent,boolean)
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.core.os.TraceKt: java.lang.Object trace(java.lang.String,kotlin.jvm.functions.Function0)
androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)
androidx.versionedparcelable.VersionedParcelStream: long readLong()
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object elementAtOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeReference$asString$args$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1: java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature)
androidx.customview.view.AbsSavedState: AbsSavedState()
androidx.core.graphics.ColorKt: float component2(android.graphics.Color)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
androidx.fragment.app.Fragment: int getEnterAnim()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: ComparisonsKt__ComparisonsKt$compareByDescending$1(kotlin.jvm.functions.Function1)
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: TextDirectionHeuristicsCompat$FirstStrong()
kotlin.collections.ArraysKt___ArraysKt: long component2(long[])
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
kotlin.Result: java.lang.String toString()
io.flutter.view.TextureRegistry$TextureEntry: void release()
androidx.core.content.IntentCompat$Api33Impl: java.io.Serializable getSerializableExtra(android.content.Intent,java.lang.String,java.lang.Class)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.TypeParameterReference: java.lang.String getName()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.os.BuildCompat: boolean isAtLeastNMR1()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOf(java.lang.Object[])
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder withNewEngineInGroup(java.lang.String)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.ActorScope)
androidx.core.graphics.TypefaceCompatApi29Impl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.window.embedding.ActivityRule$Builder: androidx.window.embedding.ActivityRule build()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object last(java.lang.Object[])
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrieved(android.graphics.Typeface)
kotlin.collections.builders.ListBuilder: int getSize()
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int,android.view.View)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat: java.lang.String getString(android.content.Context,int)
androidx.core.view.ViewGroupKt$descendants$1$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void onProgress(androidx.activity.BackEventCompat,android.view.ViewGroup)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.collection.CircularIntArray: int getLast()
kotlinx.coroutines.CancellableContinuationImpl: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.collections.builders.MapBuilderKeys: boolean add(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(long[],int,int,int,java.lang.Object)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.ShortIterator iterator(short[])
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: void setAnimator(android.animation.AnimatorSet)
androidx.core.graphics.ColorKt: float getAlpha(long)
kotlinx.coroutines.NonCancellable: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long getOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1)
kotlin.DeprecatedSinceKotlin: java.lang.String warningSince()
kotlinx.coroutines.scheduling.CoroutineScheduler: int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: void setFlags(int)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.lang.String,java.util.Set,android.content.Intent,boolean,androidx.window.embedding.SplitRule$FinishBehavior,int,int,int,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.SplitAttributes,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: int getIndex()
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Intrinsics: void throwJavaNpe()
kotlin.collections.ArraysKt___ArraysKt: long[] sliceArray(long[],java.util.Collection)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
kotlin.text.CharsKt__CharJVMKt: boolean isIdentifierIgnorable(char)
kotlinx.coroutines.flow.SharingCommand: SharingCommand(java.lang.String,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowComponentWithPackage$9(java.lang.String,android.content.ComponentName)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void hideForType(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
kotlin.text.Regex: boolean matches(java.lang.CharSequence)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next(kotlin.coroutines.Continuation)
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
androidx.core.view.ContentInfoCompat: java.lang.String toString()
kotlin.UInt: int constructor-impl(int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: kotlin.io.path.CopyActionResult invoke(kotlin.io.path.CopyActionContext,java.nio.file.Path,java.nio.file.Path)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: boolean extractAPK(java.io.File)
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback getBackportCallback()
kotlin.collections.SetsKt__SetsKt: java.util.Set mutableSetOf(java.lang.Object[])
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOfRange(float[],int,int)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow timeout-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount(java.lang.Class,int)
androidx.core.app.NotificationCompat$Api20Impl: android.app.RemoteInput[] getRemoteInputs(android.app.Notification$Action)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1: void onTransitionEnd(android.transition.Transition)
androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxWidth(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.window.WindowSdkExtensions: void access$setDecorator$cp(androidx.window.WindowSdkExtensionsDecorator)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7(int[])
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.sequences.Sequence,java.util.Map)
androidx.core.text.ICUCompat$Api21Impl: ICUCompat$Api21Impl()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger shr(java.math.BigInteger,int)
kotlin.time.Duration: java.lang.String toString-impl$default(long,kotlin.time.DurationUnit,int,int,java.lang.Object)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)
androidx.core.view.WindowInsetsCompat: boolean hasInsets()
kotlin.io.ConsoleKt: void print(double)
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(short[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDeleteIntent(android.app.PendingIntent)
androidx.startup.StartupException: StartupException(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.IntCompanionObject: IntCompanionObject()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.UIntArray: int size()
kotlinx.coroutines.AbstractTimeSourceKt: long currentTimeMillis()
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object)
androidx.lifecycle.Transformations$map$1: Transformations$map$1(androidx.lifecycle.MediatorLiveData,kotlin.jvm.functions.Function1)
androidx.window.layout.util.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.NumbersKt__NumbersJVMKt: int takeHighestOneBit(int)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: void setIndex(int)
kotlin.text.StringsKt___StringsKt: java.lang.String filterNot(java.lang.String,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationCompat: long getDurationMillis()
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: ArraysKt___ArraysKt$withIndex$4(int[])
androidx.lifecycle.Transformations$map$2: void invoke(java.lang.Object)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
androidx.core.util.AtomicFileKt: void writeText(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset)
androidx.fragment.app.FragmentTabHost$SavedState: FragmentTabHost$SavedState(android.os.Parcel)
kotlin.ranges.LongProgression$Companion: kotlin.ranges.LongProgression fromClosedRange(long,long,long)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Float max(kotlin.sequences.Sequence)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
androidx.collection.ContainerHelpers: int idealIntArraySize(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(int,java.math.MathContext)
androidx.core.util.SizeFCompat: float getWidth()
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,kotlin.text.Regex,int)
kotlin.collections.AbstractMap$Companion: AbstractMap$Companion()
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction[] values()
androidx.window.core.ConsumerAdapter$ConsumerHandler: boolean isToString(java.lang.reflect.Method,java.lang.Object[])
androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData(java.time.Duration,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String)
kotlinx.coroutines.Empty: kotlinx.coroutines.NodeList getList()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.FragmentManager)
androidx.core.content.OnTrimMemoryProvider: void addOnTrimMemoryListener(androidx.core.util.Consumer)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: void onTouchExplorationStateChanged(boolean)
androidx.core.app.NotificationManagerCompat$NotifyTask: NotificationManagerCompat$NotifyTask(java.lang.String,int,java.lang.String,android.app.Notification)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOfRangeInline(boolean[],int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
kotlinx.coroutines.flow.StateFlowSlot: void makePending()
androidx.core.app.AppLaunchChecker: AppLaunchChecker()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
kotlin.ranges.IntProgressionIterator: int getStep()
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigInteger(java.lang.String,int)
androidx.core.content.IntentSanitizer$Api29Impl: android.content.Intent setIdentifier(android.content.Intent,java.lang.String)
androidx.core.view.ViewGroupKt: int getSize(android.view.ViewGroup)
kotlin.collections.AbstractList: int lastIndexOf(java.lang.Object)
androidx.core.app.NotificationCompat$TvExtender: boolean isAvailableOnTv()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.viewpager.R: R()
kotlin.collections.builders.SetBuilder: boolean removeAll(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1: void onTransitionResume(android.transition.Transition)
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper: SharedPreferencesCompat$EditorCompat$Helper()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: boolean toBoolean(java.lang.String)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void queueTask(androidx.core.app.NotificationManagerCompat$Task)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long firstOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: SequencesKt___SequencesKt()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double maxWith(double[],java.util.Comparator)
kotlin.time.ComparableTimeMark$DefaultImpls: kotlin.time.ComparableTimeMark minus-LRDsOJo(kotlin.time.ComparableTimeMark,long)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection castToCollection(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrame(kotlin.coroutines.Continuation)
androidx.collection.LongSparseArray: java.lang.String toString()
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: void resize(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short singleOrNull(short[])
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
androidx.core.os.ParcelCompat$Api29Impl: ParcelCompat$Api29Impl()
kotlin.jvm.internal.TypeReference: int getFlags$kotlin_stdlib()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler)
kotlinx.coroutines.JobSupport: boolean makeCompleting$kotlinx_coroutines_core(java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder setRange(java.lang.StringBuilder,int,int,java.lang.String)
androidx.core.util.SparseLongArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseLongArray)
kotlin.io.LinesSequence$iterator$1: void remove()
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: androidx.core.graphics.Insets getHiddenStateInsets()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: java.lang.Object getInputContentInfo()
androidx.core.app.LocaleManagerCompat$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
androidx.core.os.LocaleListCompatWrapper: boolean equals(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle,int)
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
kotlinx.coroutines.channels.BufferedChannel: boolean isConflatedDropOldest()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(short[],java.lang.Iterable)
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper: boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(float[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: void setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
androidx.fragment.app.SpecialEffectsController$Operation: boolean isComplete()
kotlinx.coroutines.channels.BufferedChannel: boolean isEmpty()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatJellybean: NotificationCompatJellybean()
androidx.fragment.app.FragmentTabHost$TabInfo: FragmentTabHost$TabInfo(java.lang.String,java.lang.Class,android.os.Bundle)
androidx.core.view.WindowInsetsAnimationCompat$Callback: int getDispatchMode()
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void cancel()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-mazbYpA(short[],short[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean contains-7apg3OU(byte)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.window.embedding.SplitController$splitInfoList$1$2: SplitController$splitInfoList$1$2(androidx.window.embedding.SplitController,androidx.core.util.Consumer)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment access$findSegmentSend(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.Unit: Unit()
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,kotlin.text.Regex,int,int,java.lang.Object)
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
androidx.fragment.app.Fragment$6: Fragment$6(androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
kotlinx.coroutines.channels.Channel$DefaultImpls: void cancel(kotlinx.coroutines.channels.Channel)
androidx.core.net.TrafficStatsCompat: void setThreadStatsTag(int)
kotlin.io.FilesKt__UtilsKt: boolean startsWith(java.io.File,java.io.File)
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
kotlin.jvm.internal.ArrayFloatIterator: boolean hasNext()
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder$Itr: kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(long[],long,int,int)
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.os.HandlerKt$postAtTime$runnable$1: HandlerKt$postAtTime$runnable$1(kotlin.jvm.functions.Function0)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(java.lang.Object)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: java.lang.Object getLifecycle()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String)
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1: TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1(kotlin.jvm.functions.Function4)
androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlin.collections.BooleanIterator: void remove()
androidx.lifecycle.Lifecycle$Event$Companion: Lifecycle$Event$Companion()
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minOrNull(short[])
io.flutter.embedding.android.FlutterFragment: boolean popSystemNavigator()
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
kotlin.ranges.ClosedDoubleRange: boolean contains(java.lang.Comparable)
androidx.fragment.app.SpecialEffectsController$Effect: void onCommit(android.view.ViewGroup)
androidx.core.view.WindowInsetsCompat$Type: WindowInsetsCompat$Type()
kotlinx.coroutines.flow.internal.SafeCollector: SafeCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(int[],kotlin.jvm.functions.Function3)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass createKotlinClass(java.lang.Class)
androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOfRangeInline(char[],int,int)
kotlin.jvm.internal.ClassReference: boolean isValue()
androidx.profileinstaller.ProfileVersion: ProfileVersion()
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(int[])
androidx.window.embedding.EmbeddingAspectRatio: java.lang.String getDescription$window_release()
androidx.core.util.Pools$Pool: java.lang.Object acquire()
kotlin.ranges.RangesKt___RangesKt: long coerceAtLeast(long,long)
androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.flutter.plugin.editing.SpellCheckPlugin: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])
kotlin.collections.builders.SerializedCollection: SerializedCollection()
kotlin.collections.ArraysKt___ArraysKt: int indexOf(java.lang.Object[],java.lang.Object)
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduceRight-s8dVfGU(long[],kotlin.jvm.functions.Function2)
androidx.core.view.ContentInfoCompat: ContentInfoCompat(androidx.core.view.ContentInfoCompat$Compat)
kotlin.UInt: int compareTo-7apg3OU(int,byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending--ajY-9A(int[])
kotlin.collections.GroupingKt__GroupingKt: java.util.Map reduce(kotlin.collections.Grouping,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow sample-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel produceIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst(java.lang.String,char,char,boolean)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[])
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.core.app.NotificationCompat$InboxStyle: java.lang.String getClassName()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
kotlin.random.Random: byte[] nextBytes(byte[],int,int)
kotlin.time.DurationKt: long getDays(int)
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object requireNotNull(java.lang.Object,kotlin.jvm.functions.Function0)
androidx.fragment.app.Fragment$4: void run()
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
io.flutter.embedding.android.FlutterSurfaceView: void resume()
kotlin.jvm.internal.ClassReference: java.lang.Object getObjectInstance()
kotlinx.coroutines.flow.DistinctFlowImpl: DistinctFlowImpl(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: java.lang.Class access$getActivityEmbeddingComponentClass(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getInvariantSeparatorsPathString(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(short[])
androidx.lifecycle.ProcessLifecycleOwner: void dispatchStopIfNeeded$lifecycle_process_release()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo--6EtJGI(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void reverse(byte[])
androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl: FontProvider$ContentQueryWrapperApi24Impl(android.content.Context,android.net.Uri)
kotlin.UShortArray: boolean removeAll(java.util.Collection)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,int,boolean)
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource getTimeSource()
kotlin.collections.ArraysKt___ArraysKt: boolean all(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
androidx.core.view.WindowInsetsCompat: boolean isVisible(int)
androidx.core.app.NotificationChannelGroupCompat$Api28Impl: java.lang.String getDescription(android.app.NotificationChannelGroup)
io.flutter.embedding.engine.FlutterEngineGroup$Options: FlutterEngineGroup$Options(android.content.Context)
androidx.core.content.LocusIdCompat: java.lang.String toString()
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$2: java.lang.Object invoke(java.lang.Object)
androidx.core.graphics.RegionKt$iterator$1: java.lang.Object next()
kotlin.ranges.LongRange: kotlin.ranges.LongRange access$getEMPTY$cp()
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
androidx.core.telephony.TelephonyManagerCompat$Api30Impl: int getSubscriptionId(android.telephony.TelephonyManager)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.SortedSet toSortedSet(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeFirstOrNull(java.util.List)
kotlinx.coroutines.selects.SelectBuilderImpl: java.lang.Object getResult()
kotlin.collections.ArraysKt___ArraysKt: void reverse(double[],int,int)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceAvailable()
kotlin.io.path.PathsKt__PathReadWriteKt: void writeText$default(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
androidx.lifecycle.LifecycleRegistryOwner: androidx.lifecycle.Lifecycle getLifecycle()
kotlin.time.DurationKt: long getMilliseconds(long)
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List build(java.util.List)
androidx.core.app.GrammaticalInflectionManagerCompat$Api34Impl: android.app.GrammaticalInflectionManager getGrammaticalInflectionManager(android.content.Context)
kotlinx.coroutines.internal.MainDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int getSize()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo-impl(long,kotlin.time.ComparableTimeMark)
kotlinx.coroutines.channels.BufferedChannel: void onReceiveEnqueued()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sliceArray-c0bezYM(byte[],kotlin.ranges.IntRange)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KProperty2$Getter getGetter()
kotlin.ULong: int compareTo-VKZWuLQ(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(double[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.location.LocationCompat$Api34Impl: void removeMslAltitudeAccuracy(android.location.Location)
androidx.window.area.WindowAreaControllerImpl$Companion: WindowAreaControllerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.Fragment: java.lang.Object requireHost()
kotlinx.coroutines.CancellableContinuationImpl: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
androidx.window.embedding.SplitController$splitInfoList$1$2: java.lang.Object invoke()
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlin.UShort: int compareTo-xj2QHRw(short)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void requestStop()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareBy(kotlin.jvm.functions.Function1[])
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()
kotlin.text.MatcherMatchResult$groups$1$iterator$1: kotlin.text.MatchGroup invoke(int)
kotlinx.coroutines.internal.OnDemandAllocatingPool: boolean isClosed(int)
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
kotlin.jvm.internal.IntCompanionObject: void getSIZE_BYTES$annotations()
androidx.core.provider.FontRequestWorker$1: FontRequestWorker$1(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeShouldDisableAHB()
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(int[],kotlin.jvm.functions.Function1)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.DeepRecursiveFunction: DeepRecursiveFunction(kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.annotation.DeprecatedSinceApi: int api()
kotlin.UNumbersKt: short rotateRight-olVBNx4(short,int)
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutine$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plusElement(java.lang.Iterable,java.lang.Object)
kotlin.Result$Companion: java.lang.Object failure(java.lang.Throwable)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(short,int)
kotlin.math.MathKt__MathJVMKt: double min(double,double)
androidx.window.embedding.SplitAttributesCalculatorParams: androidx.window.layout.WindowLayoutInfo getParentWindowLayoutInfo()
androidx.concurrent.futures.DirectExecutor: java.lang.String toString()
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.Object get(int)
androidx.core.view.OnReceiveContentListener: androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $values()
kotlin.text.StringsKt__StringsJVMKt: int offsetByCodePoints(java.lang.String,int,int)
kotlin.collections.AbstractMap$Companion: boolean entryEquals$kotlin_stdlib(java.util.Map$Entry,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)
androidx.core.util.SparseArrayKt: boolean isEmpty(android.util.SparseArray)
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.ThreadLocal component1()
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(long[])
androidx.core.view.ViewCompat: int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence)
androidx.collection.LongSparseArray: void clear()
androidx.core.util.SparseLongArrayKt$valueIterator$1: boolean hasNext()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlin.jvm.functions.Function1 consumesAll(kotlinx.coroutines.channels.ReceiveChannel[])
kotlin.ranges.URangesKt___URangesKt: byte coerceAtLeast-Kr8caGY(byte,byte)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxWithOrNull-zrEWJaI(long[],java.util.Comparator)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
androidx.core.graphics.drawable.RoundedBitmapDrawable21: RoundedBitmapDrawable21(android.content.res.Resources,android.graphics.Bitmap)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.adapter.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: java.lang.CharSequence[] getChoices(android.app.RemoteInput)
androidx.core.location.LocationKt: double component2(android.location.Location)
androidx.core.animation.AnimatorKt$addListener$3: java.lang.Object invoke(java.lang.Object)
kotlin.ResultKt: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void execute(java.lang.Runnable)
kotlinx.coroutines.EventLoop: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(androidx.core.app.Person)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
androidx.core.graphics.ImageDecoderKt: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)
kotlin.random.Random$Default: byte[] nextBytes(byte[],int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte first-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.location.LocationCompat$Api28Impl: void removeVerticalAccuracy(android.location.Location)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer lastOrNull(kotlin.ranges.IntProgression)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getDisplayId()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.fragment.app.SpecialEffectsController$Companion: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResumeWithException(java.lang.Throwable)
androidx.lifecycle.AbstractSavedStateViewModelFactory: void onRequery(androidx.lifecycle.ViewModel)
androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.lifecycle.viewmodel.CreationExtras)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1: void onAnimationRepeat(android.animation.Animator)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentManager: void handleOnBackPressed()
androidx.core.location.LocationManagerCompat$Api31Impl: boolean registerGnssMeasurementsCallback(android.location.LocationManager,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent$Callback)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
kotlin.io.path.FileVisitorBuilderImpl: void checkIsNotBuilt()
kotlin.text.StringsKt___StringsKt: char reduceIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function3)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double minOf(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatcherExecutor: void execute(java.lang.Runnable)
androidx.core.app.TaskStackBuilder: android.content.Intent getIntent(int)
kotlin.KotlinVersion: KotlinVersion(int,int,int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformView createPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,boolean)
kotlin.io.FileSystemException: java.lang.String getReason()
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
androidx.core.text.util.LocalePreferences: java.lang.String getFirstDayOfWeek(java.util.Locale)
androidx.activity.OnBackPressedDispatcher: void updateBackInvokedCallbackState(boolean)
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.CompletableJob,kotlinx.coroutines.Job)
kotlin.io.FileTreeWalk$WalkState: FileTreeWalk$WalkState(java.io.File)
androidx.core.content.UnusedAppRestrictionsBackportCallback: UnusedAppRestrictionsBackportCallback(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
kotlin.sequences.DistinctIterator: void computeNext()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minWithOrNull(java.lang.Iterable,java.util.Comparator)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String getStateDebugRepresentation()
kotlinx.coroutines.ParentJob$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ParentJob,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: char last(char[])
kotlin.text.StringsKt__StringsKt: boolean contentEqualsImpl(java.lang.CharSequence,java.lang.CharSequence)
kotlinx.coroutines.channels.BufferedChannel: void onClosedReceiveCatchingOnNoWaiterSuspend(kotlinx.coroutines.CancellableContinuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
androidx.lifecycle.LiveDataScopeImpl$emit$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Intrinsics: void throwAssert(java.lang.String)
androidx.arch.core.internal.SafeIterableMap: int size()
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean contains(java.util.Map$Entry)
kotlin.UInt: kotlin.UInt box-impl(int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)
androidx.window.area.WindowAreaCapability$Status: WindowAreaCapability$Status(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()
kotlin.collections.ByteIterator: java.lang.Byte next()
kotlinx.coroutines.channels.ChannelSegment: void cleanElement$kotlinx_coroutines_core(int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentLeft()
androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlinx.coroutines.flow.StateFlowImpl: void setValue(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo()
kotlinx.coroutines.flow.FlowKt__MergeKt: void getDEFAULT_CONCURRENCY$annotations()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object getValue()
kotlin.text.MatchGroup: MatchGroup(java.lang.String,kotlin.ranges.IntRange)
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith$default(java.lang.Object[],java.util.Comparator,int,int,int,java.lang.Object)
kotlin.random.RandomKt: int nextInt(kotlin.random.Random,kotlin.ranges.IntRange)
kotlin.collections.ShortIterator: java.lang.Short next()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlin.text.StringsKt__StringNumberConversionsKt: StringsKt__StringNumberConversionsKt()
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedDescending(kotlin.sequences.Sequence)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: byte get-w2LRezQ(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
androidx.window.embedding.EmbeddingAspectRatio: EmbeddingAspectRatio(java.lang.String,float,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object getSharedElementTransition()
androidx.core.content.res.TypedArrayKt: android.graphics.Typeface getFontOrThrow(android.content.res.TypedArray,int)
kotlin.NumbersKt__NumbersJVMKt: boolean isNaN(float)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(char[],char,int,int)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
androidx.customview.widget.ViewDragHelper: void cancel()
androidx.fragment.app.FragmentManager: void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
kotlinx.coroutines.channels.BufferedChannel: boolean offer(java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setSystemBarsBehavior(int)
io.flutter.plugin.editing.TextEditingDelta: int getDeltaStart()
kotlin.collections.ArraysKt___ArraysKt: byte maxByOrThrow(byte[],kotlin.jvm.functions.Function1)
androidx.core.os.HandlerCompat$Api29Impl: boolean hasCallbacks(android.os.Handler,java.lang.Runnable)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.util.Pools$SynchronizedPool: Pools$SynchronizedPool(int)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: ChannelFlowMerge(kotlinx.coroutines.flow.Flow,int,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: DurationUnitKt__DurationUnitJvmKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],float[])
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningReduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(char[])
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder withNewEngineInGroup(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: FlowKt__LimitKt$collectWhile$1(kotlin.coroutines.Continuation)
kotlin.ranges.LongProgression$Companion: LongProgression$Companion()
kotlinx.coroutines.flow.internal.CombineKt: java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)
io.flutter.embedding.android.FlutterFragment: void onAttach(android.content.Context)
androidx.core.app.PendingIntentCompat: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int,boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String)
androidx.fragment.app.FragmentStateManager: boolean isFragmentViewChild(android.view.View)
androidx.core.app.NotificationCompat$Builder$Api21Impl: NotificationCompat$Builder$Api21Impl()
kotlinx.coroutines.channels.BufferedChannel: void access$onClosedReceiveCatchingOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.CancellableContinuation)
io.flutter.embedding.android.KeyboardMap: io.flutter.embedding.android.KeyboardMap$TogglingGoal[] getTogglingGoals()
androidx.versionedparcelable.VersionedParcelStream: void setSerializationFlags(boolean,boolean)
kotlin.ranges.URangesKt: URangesKt()
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder(android.os.IBinder,int)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType: java.lang.String getMimeType()
androidx.core.provider.RequestExecutor$ReplyRunnable$1: void run()
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1: java.lang.Object invoke(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int)
androidx.core.util.HalfKt: android.util.Half toHalf(double)
androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sliceArray-ZRhS8yI(long[],kotlin.ranges.IntRange)
kotlin.UNumbersKt: byte takeHighestOneBit-7apg3OU(byte)
kotlin.collections.ArraysKt___ArraysKt: long[] sortedArray(long[])
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion: ActivityResultContracts$StartActivityForResult$Companion()
kotlin.reflect.KCallable$DefaultImpls: void isSuspend$annotations()
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.LazyThreadSafetyMode,kotlin.jvm.functions.Function0)
kotlin.jvm.internal.ShortSpreadBuilder: void add(short)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: void run()
androidx.fragment.R$animator: R$animator()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
kotlin.concurrent.TimersKt: java.util.TimerTask scheduleAtFixedRate(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float maxOrNull(java.lang.Iterable)
androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.internal.Symbol access$getREHASH$p()
kotlin.text.StringsKt___StringsKt: float minOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UInt: int inc-pVg5ArA(int)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort minBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.activity.result.IntentSenderRequest: android.content.IntentSender getIntentSender()
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$1: android.view.View invoke(android.view.View)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: float getCurrentAlpha()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,byte)
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)
kotlin.sequences.SequenceBuilderIterator: kotlin.coroutines.Continuation getNextStep()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3)
androidx.core.location.LocationCompat: android.os.Bundle getOrCreateExtras(android.location.Location)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningFold(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.content.res.CamColor: int viewedInSrgb()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: ConcurrentLinkedListNode(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.Fragment getFragment()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.versionedparcelable.VersionedParcelParcel: void writeFloat(float)
androidx.window.embedding.SplitAttributes$SplitType: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.content.UnusedAppRestrictionsBackportCallback: void onResult(boolean,boolean)
kotlin.text.CharsKt__CharJVMKt: boolean isUpperCase(char)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: AccessibilityServiceInfoCompat()
androidx.core.app.TaskStackBuilder: void startActivities()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String,java.util.Locale)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(short,short)
kotlin.random.KotlinRandom: int next(int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: java.util.Iterator iterator()
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSequenceNumber$FU$p()
kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
kotlin.Lazy: boolean isInitialized()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component2(java.util.List)
kotlin.text.StringsKt___StringsKt: java.lang.String takeLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList$ListIteratorImpl: java.lang.Object previous()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean isTerminated()
kotlin.NumbersKt__NumbersJVMKt: NumbersKt__NumbersJVMKt()
androidx.window.core.ValidSpecification: java.lang.String getTag()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean getRecursive()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort[] toTypedArray-rL5Bavg(short[])
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: AbstractResolvableFuture$AtomicHelper(androidx.concurrent.futures.AbstractResolvableFuture$1)
androidx.core.view.accessibility.AccessibilityEventCompat: void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
androidx.core.content.ContextCompat: java.io.File createFilesDir(java.io.File)
kotlinx.coroutines.internal.ThreadLocalKey: java.lang.String toString()
androidx.core.util.SparseBooleanArrayKt: boolean getOrElse(android.util.SparseBooleanArray,int,kotlin.jvm.functions.Function0)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryAcquireCpuPermit()
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
kotlin.sequences.MergingSequence$iterator$1: void remove()
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
kotlin.text.MatchResult$Destructured: java.lang.String component8()
androidx.core.content.IntentSanitizer: void lambda$sanitizeByFiltering$0(java.lang.String)
kotlin.jvm.internal.TypeReference: java.util.List getArguments()
androidx.core.text.util.LocalePreferences: java.lang.String getCalendarType()
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind valueOf(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte min-GBYM_sE(byte[])
kotlin.collections.EmptyList: java.util.List subList(int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JGPC0-M(short[],java.lang.Iterable)
androidx.core.app.ShareCompat$IntentReader: java.lang.String getSubject()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder flutterShellArgs(io.flutter.embedding.engine.FlutterShellArgs)
kotlin.io.path.PathsKt__PathReadWriteKt: java.util.List readLines$default(java.nio.file.Path,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.location.LocationCompat$Api26Impl: float getVerticalAccuracyMeters(android.location.Location)
androidx.fragment.app.FragmentActivity: void onPostResume()
androidx.core.view.inputmethod.InputContentInfoCompat: void requestPermission()
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: SelectBuilderImpl$getResult$1(kotlinx.coroutines.selects.SelectBuilderImpl,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.plugins.service.ServiceAware: void onDetachedFromService()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMap: void clear()
kotlin.ULong: long times-7apg3OU(long,byte)
androidx.fragment.app.DialogFragment$3: DialogFragment$3(androidx.fragment.app.DialogFragment)
androidx.window.area.RearDisplayPresentationSessionPresenterImpl: void close()
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.activity.OnBackPressedDispatcher$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt firstOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int[] sliceArray(int[],java.util.Collection)
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue: void dispatch(java.lang.Runnable)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder appBundlePath(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: java.lang.Object get(int)
kotlinx.coroutines.SupervisorKt: java.lang.Object supervisorScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Ref$LongRef: Ref$LongRef()
io.flutter.view.TextureRegistry$OnFrameConsumedListener: void onFrameConsumed()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(char[],java.lang.Iterable)
kotlin.sequences.DistinctIterator: DistinctIterator(java.util.Iterator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
kotlin.sequences.SequencesKt__SequencesJVMKt: SequencesKt__SequencesJVMKt()
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
kotlin.reflect.KFunction: boolean isInfix()
kotlin.collections.builders.MapBuilder$Itr: void setLastIndex$kotlin_stdlib(int)
androidx.core.text.HtmlKt: android.text.Spanned parseAsHtml$default(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler,int,java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: void removeTarget(java.lang.Object,android.view.View)
kotlinx.coroutines.internal.ThreadSafeHeapNode: void setIndex(int)
androidx.core.view.accessibility.AccessibilityEventCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityEvent)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int)
kotlinx.coroutines.SupervisorJobImpl: boolean childCancelled(java.lang.Throwable)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: android.view.animation.Interpolator getInterpolator()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOf(byte[])
androidx.core.graphics.PathUtils$Api26Impl: PathUtils$Api26Impl()
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Object useDirectoryEntries(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(java.lang.Double[])
kotlin.io.TextStreamsKt: java.lang.String readText$default(java.net.URL,java.nio.charset.Charset,int,java.lang.Object)
androidx.fragment.app.FragmentStateManager: void detach()
kotlin.ULong: long dec-s-VKNKU(long)
androidx.core.graphics.ColorKt: int component1(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex-GBYM_sE$annotations(byte[])
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setTappableElementInsets(androidx.core.graphics.Insets)
androidx.versionedparcelable.VersionedParcel: void writeException(java.lang.Exception,int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,kotlin.Pair)
kotlin.io.encoding.Base64: byte[] encodeToByteArray(byte[],int,int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: WindowInsetsCompat$TypeImpl30()
kotlinx.coroutines.NodeList: NodeList()
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.ConcurrentWeakMap access$getCallerInfoCache$p()
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
androidx.core.view.ViewGroupCompat: ViewGroupCompat()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: android.content.Intent createIntent(android.content.Context,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot(java.lang.Object,int)
androidx.loader.content.AsyncTaskLoader$LoadTask: void waitForLoader()
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int)
kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)
kotlin.collections.MapAccessorsKt: java.lang.Object getVar(java.util.Map,java.lang.Object,kotlin.reflect.KProperty)
androidx.core.content.PermissionChecker: PermissionChecker()
io.flutter.plugin.editing.TextEditingDelta: int getNewSelectionEnd()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void scheduleCommit()
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.TuplesKt: java.util.List toList(kotlin.Pair)
androidx.annotation.experimental.UseExperimental: java.lang.Class[] markerClass()
kotlin.ranges.RangesKt___RangesKt: short coerceAtLeast(short,short)
kotlinx.coroutines.EventLoopImplBase: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
kotlin.ranges.ULongRange$Companion: kotlin.ranges.ULongRange getEMPTY()
androidx.savedstate.SavedStateRegistryController$Companion: SavedStateRegistryController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.IntSpreadBuilder: void add(int)
androidx.core.content.ContextCompat: java.lang.String obtainAndCheckReceiverPermission(android.content.Context)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: void getLastReplayedLocked$annotations()
kotlin.jvm.internal.TypeReference: boolean isMarkedNullable()
io.flutter.embedding.android.FlutterFragment$1: void onWindowFocusChanged(boolean)
androidx.lifecycle.LifecycleKt: androidx.lifecycle.LifecycleCoroutineScope getCoroutineScope(androidx.lifecycle.Lifecycle)
androidx.fragment.app.FragmentManager: boolean checkForMenus()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxByOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Iterable asIterable(kotlin.sequences.Sequence)
androidx.lifecycle.EmittedSource$disposeNow$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarAdapter: SidecarAdapter(androidx.window.core.VerificationMode)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger div(java.math.BigInteger,java.math.BigInteger)
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.SendChannel getChannel()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlin.ranges.ComparableRange: int hashCode()
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.StateFlow)
kotlinx.coroutines.selects.SelectImplementation: boolean trySelect(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.io.TextStreamsKt: java.io.BufferedWriter buffered(java.io.Writer,int)
io.flutter.embedding.engine.FlutterEngine: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
kotlin.collections.ArraysKt___ArraysKt: short single(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Iterable)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.internal.view.SupportMenuItem: int getAlphabeticModifiers()
kotlin.text.CharsKt__CharKt: boolean isSurrogate(char)
kotlin.collections.ArrayDeque: boolean contains(java.lang.Object)
androidx.core.app.NotificationCompat$Action$Builder$Api23Impl: NotificationCompat$Action$Builder$Api23Impl()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: java.util.Iterator iterator()
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture future(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsAnimationCompat$Impl: float getInterpolatedFraction()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setNativeSpellCheckServiceDefined(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(char[])
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
kotlinx.coroutines.CoroutineExceptionHandler$Key: CoroutineExceptionHandler$Key()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(int[],kotlin.jvm.functions.Function1)
kotlin.UInt: int floorDiv-7apg3OU(int,byte)
androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutAdded(java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte maxWithOrThrow-U(byte[],java.util.Comparator)
kotlin.text.StringsKt___StringsKt: java.util.Collection toCollection(java.lang.CharSequence,java.util.Collection)
androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void decrementSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],boolean[])
androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()
kotlin.text.Regex: kotlin.sequences.Sequence findAll$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
androidx.core.view.WindowInsetsAnimationControllerCompat: androidx.core.graphics.Insets getShownStateInsets()
androidx.fragment.app.FragmentManager: void clearFragmentResult(java.lang.String)
com.getkeepsafe.relinker.ReLinkerInstance: com.getkeepsafe.relinker.ReLinkerInstance force()
androidx.core.text.util.FindAddress$ZipRange: FindAddress$ZipRange(int,int,int,int)
kotlin.reflect.KCallable: kotlin.reflect.KVisibility getVisibility()
kotlin.ranges.ULongProgressionIterator: ULongProgressionIterator(long,long,long)
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 getProcessResFunc()
kotlin.ULong: long inv-s-VKNKU(long)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateIntentPredicates$1: java.lang.Boolean invoke(android.content.Intent)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.core.location.GnssStatusWrapper: float getAzimuthDegrees(int)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
androidx.fragment.app.Fragment$9: void onPreAttached()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $values()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(android.content.Context,android.content.pm.ShortcutInfo)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityIntentPredicates$1: EmbeddingAdapter$VendorApiLevel1Impl$translateActivityIntentPredicates$1(java.util.Set)
io.flutter.view.TextureRegistry$OnTrimMemoryListener: void onTrimMemory(int)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineContextKt: boolean hasCopyableElements(kotlin.coroutines.CoroutineContext)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: ChannelFlowOperatorImpl(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.profileinstaller.ProfileTranscoder: java.lang.String extractKey(java.lang.String)
androidx.core.app.NotificationChannelCompat$Api26Impl: boolean canBypassDnd(android.app.NotificationChannel)
androidx.core.location.LocationListenerCompat$-CC: void $default$onProviderEnabled(androidx.core.location.LocationListenerCompat,java.lang.String)
androidx.core.provider.RequestExecutor: void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long wo(long,long)
kotlinx.coroutines.future.FutureKt: void setupCancellation(kotlinx.coroutines.Job,java.util.concurrent.CompletableFuture)
androidx.fragment.app.DialogFragment: androidx.activity.ComponentDialog requireComponentDialog()
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: int component2(int[])
androidx.fragment.app.FragmentManager$10: void onActivityResult(java.util.Map)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningReduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_RCV$p()
kotlinx.coroutines.selects.SelectClause1Impl: SelectClause1Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: char elementAtOrElse(char[],int,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(long[],kotlin.jvm.functions.Function1)
kotlin.properties.ObservableProperty: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(short[],kotlin.jvm.functions.Function1)
androidx.core.graphics.PathParser$PathDataNode: void access$200(android.graphics.Path,float[],char,char,float[])
androidx.core.text.util.LinkifyCompat: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)
kotlin.ULong: long toULong-s-VKNKU(long)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlin.ULong: long times-xj2QHRw(long,short)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FloatCompanionObject: float getPOSITIVE_INFINITY()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
androidx.core.graphics.ColorKt: float getLuminance(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int elementAtOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1)
androidx.loader.content.Loader: boolean isStarted()
kotlinx.coroutines.sync.Semaphore: int getAvailablePermits()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component4--ajY-9A(int[])
kotlin.jvm.internal.ClassReference: void isInner$annotations()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)
androidx.window.embedding.EmbeddingAspectRatio$Companion: EmbeddingAspectRatio$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt: StringsKt()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot()
androidx.arch.core.executor.ArchTaskExecutor: void setDelegate(androidx.arch.core.executor.TaskExecutor)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.JobSupport$onJoin$1: void invoke(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRight(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.concurrent.LocksKt: java.lang.Object withLock(java.util.concurrent.locks.Lock,kotlin.jvm.functions.Function0)
androidx.lifecycle.LiveData$1: LiveData$1(androidx.lifecycle.LiveData)
androidx.window.area.WindowAreaControllerImpl: void startRearDisplayMode(android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback)
io.flutter.embedding.android.FlutterFragment: boolean shouldHandleDeeplinking()
kotlin.jvm.internal.CharCompanionObject: CharCompanionObject()
androidx.annotation.Size: long max()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.FileAttributeView fileAttributesViewOrNull(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.enums.EnumEntriesKt: kotlin.enums.EnumEntries enumEntries(kotlin.jvm.functions.Function0)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
androidx.customview.widget.ViewDragHelper$2: void run()
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt elementAtOrNull-qFRl0hI(int[],int)
kotlinx.coroutines.flow.FlowKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: FlowKt__ShareKt$launchSharing$1$1(kotlin.coroutines.Continuation)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte minOf-Wr6uiD8(byte,byte[])
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setName(java.lang.CharSequence)
kotlin.UInt: int rem-xj2QHRw(int,short)
kotlin.io.path.PathsKt__PathUtilsKt: void getPathString$annotations(java.nio.file.Path)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6600(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.JobSupport: void parentCancelled(kotlinx.coroutines.ParentJob)
kotlin.collections.EmptyList: int getSize()
androidx.annotation.FloatRange: boolean toInclusive()
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor: boolean isItalic(java.lang.Object)
androidx.core.content.ContextCompat$Api23Impl: ContextCompat$Api23Impl()
kotlin.io.encoding.DecodeInputStream: void copyByteBufferInto(byte[],int,int)
kotlin.text.StringsKt___StringsKt: java.lang.Character lastOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenBy(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
androidx.fragment.app.FragmentManager: void forcePostponedTransactions()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: CombineKt$zipImpl$1$1(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.app.ShareCompat$IntentReader: androidx.core.app.ShareCompat$IntentReader from(android.app.Activity)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: ChannelsKt__DeprecatedKt$any$1(kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(java.lang.Object[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.core.widget.TextViewCompat: int getMinLines(android.widget.TextView)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1: void onAnimationStart(android.animation.Animator)
androidx.core.graphics.RectKt: android.graphics.Rect toRect(android.graphics.RectF)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.ActorScope)
kotlin.ULongArray$Iterator: boolean hasNext()
androidx.lifecycle.ComputableLiveData: void refreshRunnable$lambda$0(androidx.lifecycle.ComputableLiveData)
androidx.core.app.NotificationCompat$Builder: long getWhenIfShowing()
androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.BooleanCompanionObject: BooleanCompanionObject()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
kotlinx.coroutines.CoroutineScopeKt: void cancel(kotlinx.coroutines.CoroutineScope,java.util.concurrent.CancellationException)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(long[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptyMap: java.lang.Void get(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minByOrNull(float[],kotlin.jvm.functions.Function1)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.StateFlowSlot[] createSlotArray(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int single-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long)
androidx.profileinstaller.ProfileTranscoder: byte[] readHeader(java.io.InputStream,byte[])
androidx.core.view.MotionEventCompat: int getSource(android.view.MotionEvent)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)
kotlin.collections.builders.SerializedCollection: void writeExternal(java.io.ObjectOutput)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void unregisterForLayoutCallback(android.view.View)
kotlin.ranges.ClosedDoubleRange: java.lang.Comparable getEndInclusive()
androidx.core.view.ContentInfoCompat: java.lang.String sourceToString(int)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: int buildAnimationMask(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,int)
androidx.core.graphics.RectKt: android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: java.lang.Object translateActivityPairPredicates(java.util.Set)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEvent(android.view.View,int)
kotlin.collections.builders.MapBuilder$EntryRef: int hashCode()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
androidx.core.content.UnusedAppRestrictionsBackportService: android.os.IBinder onBind(android.content.Intent)
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.content.IntentSanitizer: void checkOtherMembers(int,android.content.ClipData$Item,androidx.core.util.Consumer)
kotlin.collections.AbstractMap: java.util.Collection values()
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],char[])
kotlin.ResultKt: void throwOnFailure(java.lang.Object)
kotlin.io.FilesKt__FilePathComponentsKt: FilesKt__FilePathComponentsKt()
androidx.core.view.WindowInsetsCompat: void setRootViewData(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: boolean all(long[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
androidx.core.view.ViewCompat: void bindTempDetach()
kotlin.reflect.KTypeProjection: kotlin.reflect.KVariance getVariance()
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.util.LongSparseArrayKt: java.util.Iterator valueIterator(android.util.LongSparseArray)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.extensions.embedding.ActivityRule translateActivityRuleCompat(androidx.window.embedding.ActivityRule,java.lang.Class)
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtra$13(java.lang.Class,androidx.core.util.Predicate,java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
androidx.core.view.ContentInfoCompat: android.util.Pair partition(android.view.ContentInfo,java.util.function.Predicate)
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,java.lang.Object,java.lang.Object)
kotlin.ranges.UIntRange: java.lang.Comparable getEndInclusive()
androidx.core.graphics.drawable.IconCompat$Api26Impl: IconCompat$Api26Impl()
androidx.core.app.RemoteActionCompat$Api26Impl: boolean isEnabled(android.app.RemoteAction)
androidx.profileinstaller.DeviceProfileWriter: boolean requiresMetadata()
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] access$findSlotsToResumeLocked(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation[])
kotlin.KotlinVersion: int compareTo(kotlin.KotlinVersion)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)
androidx.core.app.NotificationManagerCompat$Api23Impl: java.util.List getActiveNotifications(android.app.NotificationManager)
androidx.core.content.res.TypedArrayKt: boolean getBooleanOrThrow(android.content.res.TypedArray,int)
io.flutter.embedding.engine.systemchannels.SettingsChannel: android.util.DisplayMetrics getPastDisplayMetrics(int)
androidx.core.view.ViewStructureCompat$Api23Impl: void setClassName(android.view.ViewStructure,java.lang.String)
androidx.fragment.app.FragmentResultOwner: void setFragmentResult(java.lang.String,android.os.Bundle)
androidx.core.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
kotlinx.coroutines.JobNode: java.lang.String toString()
androidx.tracing.Trace: void endSection()
kotlin.time.Duration$Companion: long milliseconds-UwyO8pc(double)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: ArraysKt___ArraysJvmKt$asList$7(boolean[])
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: java.lang.Object withState(long,kotlin.jvm.functions.Function2)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(android.os.LocaleList)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.app.RemoteInput: java.lang.String getExtraResultsKeyForData(java.lang.String)
kotlin.time.Duration$Companion: long days-UwyO8pc(long)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: java.lang.Object findSegmentAndMoveForward$atomicfu(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,long,kotlinx.coroutines.internal.Segment,kotlin.jvm.functions.Function2)
androidx.core.util.SparseBooleanArrayKt: kotlin.collections.BooleanIterator valueIterator(android.util.SparseBooleanArray)
androidx.savedstate.Recreator: Recreator(androidx.savedstate.SavedStateRegistryOwner)
androidx.fragment.app.DialogFragment$5: DialogFragment$5(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer)
kotlin.collections.AbstractMap$Companion: int entryHashCode$kotlin_stdlib(java.util.Map$Entry)
kotlin.text.StringsKt___StringsKt: int indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.collection.LruCache: java.util.Map snapshot()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: float distanceInfluenceForSnapDuration(float)
kotlin.collections.builders.ListBuilder: java.lang.Object removeAtInternal(int)
androidx.fragment.app.BackStackState: java.util.List instantiate(androidx.fragment.app.FragmentManager,java.util.Map)
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)
kotlin.collections.ArraysKt___ArraysKt: int count(double[],kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: void resumeWith(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.util.AndroidXContinuationConsumer: java.lang.String toString()
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.WritableFileSection createCompressibleClassSection(androidx.profileinstaller.DexProfileData[])
androidx.core.os.TraceCompat$Api29Impl: boolean isEnabled()
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean)
kotlinx.coroutines.channels.ActorScope$DefaultImpls: void cancel(kotlinx.coroutines.channels.ActorScope)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(byte[])
androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: FlowKt__EmittersKt$onEmpty$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletableDeferredImpl: java.lang.Object await(kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfInt(java.lang.Iterable)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.lang.Iterable)
com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
kotlin.Pair: int hashCode()
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
kotlin.collections.ArraysKt___ArraysKt: void reverse(float[])
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path copyTo(java.nio.file.Path,java.nio.file.Path,boolean)
kotlin.ranges.LongProgression: LongProgression(long,long,long)
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.lang.Iterable)
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1)
androidx.lifecycle.SavedStateViewModelFactoryKt: androidx.lifecycle.ViewModel newInstance(java.lang.Class,java.lang.reflect.Constructor,java.lang.Object[])
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: ChannelFlow$collectToFun$1(kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation)
kotlin.Triple: java.lang.String toString()
kotlin.text.MatcherMatchResult$groupValues$1: int getSize()
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: int coerceIn-wuiCnnA(int,kotlin.ranges.ClosedRange)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.ExclusiveAppComponent getExclusiveAppComponent()
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: void removeObserver()
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 access$getOnLeave$p(kotlin.io.FileTreeWalk)
kotlin.collections.jdk8.CollectionsJDK8Kt: boolean remove(java.util.Map,java.lang.Object,java.lang.Object)
kotlin.collections.builders.MapBuilder$Itr: MapBuilder$Itr(kotlin.collections.builders.MapBuilder)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.lang.Double minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort firstOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.activity.Api34Impl: Api34Impl()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String getParticipant()
androidx.fragment.app.BackStackRecord: int getBreadCrumbTitleRes()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object access$getNextOrClosed(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: long getLatestTimestamp()
kotlin.text.MatcherMatchResult$groupValues$1: java.lang.Object get(int)
androidx.core.text.PrecomputedTextCompat: int getParagraphCount()
kotlin.ranges.ClosedRange: java.lang.Comparable getEndInclusive()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean equals(java.lang.Object)
androidx.core.view.ViewGroupCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)
kotlin.time.Duration$Companion: long getNanoseconds-UwyO8pc(long)
androidx.core.app.ActivityOptionsCompat: ActivityOptionsCompat()
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateWith(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.ULong: long rem-WZ4Q5Ns(long,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void lambda$dequeueImage$0()
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void setDirection(int,int)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(char[])
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void onTrimMemory(int)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.core.util.TypedValueCompat: float pxToDp(float,android.util.DisplayMetrics)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void deleteRecursively(java.nio.file.Path)
androidx.core.app.DialogCompat: DialogCompat()
kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)
androidx.window.core.ConsumerAdapter: androidx.window.core.ConsumerAdapter$Subscription createSubscription(java.lang.Object,kotlin.reflect.KClass,java.lang.String,java.lang.String,android.content.Context,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__NumbersKt: short rotateRight(short,int)
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
androidx.fragment.app.FragmentManager: android.os.Bundle saveAllStateInternal()
androidx.viewpager.R$drawable: R$drawable()
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.OpenEndRange,long)
androidx.window.embedding.EmbeddingCompat: boolean isActivityEmbedded(android.app.Activity)
kotlin.time.TimeMark: long elapsedNow-UwyO8pc()
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowClipDataUri(androidx.core.util.Predicate)
kotlinx.coroutines.internal.OpDescriptor: java.lang.String toString()
androidx.window.core.FailedSpecification: java.lang.Object compute()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int getSize()
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: SettingsChannel$ConfigurationQueue$SentConfiguration(android.util.DisplayMetrics)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
androidx.window.core.ConsumerAdapter: void addConsumer(java.lang.Object,kotlin.reflect.KClass,java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
kotlin.collections.AbstractMap: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.io.ConsoleKt: void println()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort--ajY-9A(int[])
kotlin.collections.builders.ListBuilder: boolean removeAll(java.util.Collection)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$firstOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api23Impl: void rebase(android.content.res.Resources$Theme)
kotlinx.coroutines.ThreadState: void invoke(java.lang.Throwable)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$retainMatchingViews$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void systemChromeChanged(boolean)
kotlin.comparisons.ReverseOrderComparator: ReverseOrderComparator()
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.core.graphics.drawable.DrawableKt: android.graphics.Bitmap toBitmap$default(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config,int,java.lang.Object)
kotlin.collections.ReversedList: void add(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float randomOrNull(float[],kotlin.random.Random)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$processResultAndInvokeBlockRecoveringException(kotlinx.coroutines.selects.SelectImplementation,kotlinx.coroutines.selects.SelectImplementation$ClauseData,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.NonCancellable: void isActive$annotations()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(java.lang.Object,kotlin.jvm.functions.Function0)
io.flutter.plugin.platform.SingleViewWindowManager: boolean isCrossWindowBlurEnabled()
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,java.lang.Integer)
androidx.core.util.LongSparseArrayKt: java.lang.Object getOrElse(android.util.LongSparseArray,long,kotlin.jvm.functions.Function0)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.location.LocationCompat$Api33Impl: void removeSpeedAccuracy(android.location.Location)
kotlinx.coroutines.CancellableContinuationImpl: void multipleHandlersError(java.lang.Object,java.lang.Object)
kotlin.jvm.functions.Function13: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(byte[])
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isActivityEmbeddingComponentValid$1: SafeActivityEmbeddingComponentProvider$isActivityEmbeddingComponentValid$1(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.time.MeasureTimeKt: long measureTime(kotlin.time.TimeSource$Monotonic,kotlin.jvm.functions.Function0)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer build()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: ConcurrentWeakMap(boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ContentInfoCompat$CompatImpl: int getSource()
kotlinx.coroutines.EventLoop: boolean shouldBeProcessedFromContext()
androidx.core.view.WindowInsetsCompat$Type: int systemBars()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColorized(boolean)
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibilityBridge()
kotlin.collections.ArraysKt___ArraysKt: int count(double[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean isEmpty()
kotlin.jvm.internal.ArrayLongIterator: long nextLong()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(float[])
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
androidx.window.embedding.EmbeddingBackend: void invalidateTopVisibleSplitAttributes()
kotlin.io.path.PathWalkOption: PathWalkOption(java.lang.String,int)
androidx.fragment.app.DialogFragment$5: boolean onHasView()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
kotlin.coroutines.jvm.internal.CompletedContinuation: CompletedContinuation()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void enterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.ActionProvider$SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
kotlin.coroutines.jvm.internal.DebugMetadata: int v()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(long[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.random.Random$Default: double nextDouble(double,double)
androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$Action makeNegativeAction()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounceDuration(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.core.content.UnusedAppRestrictionsBackportService: UnusedAppRestrictionsBackportService()
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: FragmentManager$LifecycleAwareResultListener(androidx.lifecycle.Lifecycle,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.LifecycleEventObserver)
kotlinx.coroutines.channels.BufferedChannel: boolean isClosed(long,boolean)
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel)
kotlinx.coroutines.ChildHandleNode: boolean childCancelled(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
androidx.core.view.ViewCompat: float getTranslationZ(android.view.View)
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: int checkRtl(java.lang.CharSequence,int,int)
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: boolean hasNext()
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService access$300(io.flutter.embedding.engine.loader.FlutterLoader)
kotlin.ranges.URangesKt___URangesKt: long last(kotlin.ranges.ULongProgression)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1: void onTransitionResume(android.transition.Transition)
io.flutter.plugin.platform.PlatformPlugin: void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
kotlinx.coroutines.flow.internal.SendingCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
kotlinx.coroutines.future.FutureKt: java.lang.Object await(java.util.concurrent.CompletionStage,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)
androidx.fragment.app.Fragment: void onDestroy()
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.core.widget.TextViewOnReceiveContentListener: java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int)
kotlin.jvm.internal.DoubleCompanionObject: double getMAX_VALUE()
androidx.core.util.SparseArrayKt$keyIterator$1: SparseArrayKt$keyIterator$1(android.util.SparseArray)
kotlin.text.StringsKt___StringsKt: int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
androidx.core.graphics.PathParser$PathDataNode: float[] access$100(androidx.core.graphics.PathParser$PathDataNode)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ScribeChannel getScribeChannel()
androidx.loader.content.ModernAsyncTask: void finish(java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long plus-LRDsOJo(long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.FlutterView: boolean onTextInputKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.channels.BufferedChannel$onReceive$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeSet(java.util.Set,int)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2: void invoke()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getParticipants()
androidx.core.text.util.LocalePreferences: java.lang.String getCalendarType(java.util.Locale)
androidx.activity.EdgeToEdge: void enable$default(androidx.activity.ComponentActivity,androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,int,java.lang.Object)
kotlin._Assertions: void getENABLED$annotations()
androidx.window.embedding.SplitRule$Api34Impl: float getDensity(android.view.WindowMetrics,android.content.Context)
kotlin.math.MathKt__MathJVMKt: float sinh(float)
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
kotlin.internal.jdk8.JDK8PlatformImplementations: boolean sdkIsNullOrAtLeast(int)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
kotlin.jvm.optionals.OptionalsKt: java.util.List toList(java.util.Optional)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Float max(java.lang.Iterable)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Default: IUnusedAppRestrictionsBackportCallback$Default()
androidx.core.app.OnMultiWindowModeChangedProvider: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
kotlin.text.StringsKt___StringsKt: char elementAtOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: void requireNonNegativeLimit(int)
kotlin.ranges.RangesKt___RangesKt: java.lang.Character lastOrNull(kotlin.ranges.CharProgression)
kotlin.collections.builders.ListBuilder: ListBuilder(java.lang.Object[],int,int,boolean,kotlin.collections.builders.ListBuilder,kotlin.collections.builders.ListBuilder)
androidx.core.app.ActivityCompat: boolean isLaunchedFromBubble(android.app.Activity)
androidx.core.app.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-qFRl0hI(int[],int)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Void fileAttributeViewNotAvailable(java.nio.file.Path,java.lang.Class)
kotlinx.coroutines.flow.LintKt: java.lang.Object toSet(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager,int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.animation.Animator)
kotlinx.coroutines.internal.OnDemandAllocatingPool: OnDemandAllocatingPool(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResumeWithException(java.lang.Throwable)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: double getAbsoluteValue(double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer randomOrNull(int[])
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.window.WindowSdkExtensions$Companion: WindowSdkExtensions$Companion()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
kotlin.collections.CollectionsKt___CollectionsKt: long sumOfLong(java.lang.Iterable)
androidx.core.text.util.LocalePreferences: java.lang.String getFirstDayOfWeek(java.util.Locale,boolean)
kotlin.collections.AbstractList: AbstractList()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapIterableTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api24Impl: NotificationCompat$DecoratedCustomViewStyle$Api24Impl()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.FileStore fileStore(java.nio.file.Path)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,long,java.lang.Object)
androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1: SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1()
kotlinx.coroutines.AwaitKt$joinAll$3: AwaitKt$joinAll$3(kotlin.coroutines.Continuation)
kotlin.jvm.internal.ClassReference: void isSealed$annotations()
androidx.fragment.app.BackStackRecord: java.lang.String getName()
kotlinx.coroutines.Empty: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.window.area.WindowAreaAdapter: androidx.window.area.WindowAreaCapability$Status translate$window_release(int)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines$default(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(char[],int,int)
androidx.core.text.util.LinkifyCompat: void addLinkMovementMethod(android.widget.TextView)
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread getThread()
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)
kotlinx.coroutines.debug.internal.DebuggerInfo: long getSequenceNumber()
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
androidx.activity.OnBackPressedDispatcher$3: OnBackPressedDispatcher$3(androidx.activity.OnBackPressedDispatcher)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(java.lang.Object[])
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.jvm.internal.ClassReference: void getSealedSubclasses$annotations()
kotlin.io.AccessDeniedException: AccessDeniedException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.UIntProgression: boolean isEmpty()
androidx.core.view.MenuKt$children$1: java.util.Iterator iterator()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int)
kotlin.collections.AbstractMap$toString$1: java.lang.CharSequence invoke(java.util.Map$Entry)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldRight(java.util.List,java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
androidx.concurrent.futures.ResolvableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.ranges.URangesKt___URangesKt: byte coerceAtMost-Kr8caGY(byte,byte)
androidx.customview.widget.ViewDragHelper: void clearMotionHistory()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float findLast(float[],kotlin.jvm.functions.Function1)
com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
kotlinx.coroutines.internal.DispatchedContinuation: void awaitReusability()
androidx.core.graphics.BitmapCompat$Api27Impl: android.graphics.Bitmap copyBitmapIfHardware(android.graphics.Bitmap)
androidx.core.content.ContentResolverCompat: ContentResolverCompat()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlin.collections.AbstractMap$values$1: boolean contains(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minWithOrNull-zrEWJaI(long[],java.util.Comparator)
androidx.profileinstaller.ProfileInstallerInitializer: void installAfterDelay(android.content.Context)
kotlinx.coroutines.channels.TickerMode: TickerMode(java.lang.String,int)
io.flutter.plugin.editing.TextInputPlugin: android.text.Editable getEditable()
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.core.graphics.RectKt: android.graphics.RectF times(android.graphics.RectF,int)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getDispatcher()
android.support.v4.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)
kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$receiveOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
androidx.core.util.SizeFCompat: androidx.core.util.SizeFCompat toSizeFCompat(android.util.SizeF)
androidx.core.view.ViewCompat$2: ViewCompat$2(int,java.lang.Class,int,int)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])
kotlin.jvm.internal.FunctionReference: boolean isInline()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow consumeAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.unsafe.MonitorKt: void monitorExit(java.lang.Object)
androidx.core.os.ParcelCompat$Api33Impl: android.os.Parcelable readParcelable(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.core.provider.RequestExecutor$ReplyRunnable: void run()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-rL5Bavg(short[])
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort find-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.ResultKt: java.lang.Object mapCatching(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.BlockingCoroutine: java.lang.Object joinBlocking()
androidx.window.embedding.SplitPairRule: boolean getClearTop()
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object hasNext(kotlin.coroutines.Continuation)
androidx.activity.Cancellable: void cancel()
kotlin.text.StringsKt__StringBuilderKt: java.lang.String buildString(kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: boolean nextBoolean()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder dartEntrypointArgs(java.util.List)
kotlin.ULong: long times-WZ4Q5Ns(long,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(float[],kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.renderer.FlutterRenderer: void clearDeadListeners()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl: java.lang.CharSequence getInitialSelectedText(android.view.inputmethod.EditorInfo,int)
kotlinx.coroutines.CancellableContinuationImpl: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlinx.coroutines.NonCancellable: void getChildren$annotations()
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: void run()
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean isWindowLayoutProviderValid()
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
androidx.window.area.WindowAreaControllerImpl$Companion: WindowAreaControllerImpl$Companion()
androidx.fragment.app.Fragment: void initState()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path moveTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(int[],java.lang.Iterable)
androidx.lifecycle.CoroutineLiveData$clearSource$1: CoroutineLiveData$clearSource$1(androidx.lifecycle.CoroutineLiveData,kotlin.coroutines.Continuation)
androidx.core.location.LocationManagerCompat: void registerLocationListenerTransport(android.location.LocationManager,androidx.core.location.LocationManagerCompat$LocationListenerTransport)
kotlin.NumbersKt__NumbersJVMKt: long toRawBits(double)
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getContentView()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-xTcfx_M(short[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: SurfaceProducerPlatformViewRenderTarget(io.flutter.view.TextureRegistry$SurfaceProducer)
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
kotlin.ranges.UIntProgression$Companion: kotlin.ranges.UIntProgression fromClosedRange-Nkh28Cs(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.LazyBroadcastCoroutine: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int indexOf(java.lang.Object)
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean)
androidx.activity.EdgeToEdge: void getDefaultDarkScrim$annotations()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,int)
kotlin.text.StringsKt__StringsJVMKt: int codePointCount(java.lang.String,int,int)
kotlin.time.DurationKt: long getMinutes(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices--ajY-9A$annotations(int[])
androidx.window.core.ConsumerAdapter$ConsumerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.core.view.OneShotPreDrawListener: void removeListener()
io.flutter.embedding.android.KeyboardManager: void destroy()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.core.location.LocationCompat: boolean hasSpeedAccuracy(android.location.Location)
kotlin.ULongArray: void set-k8EXiF4(long[],int,long)
androidx.viewpager.widget.PagerTabStrip: void setBackgroundColor(int)
kotlin.ULongArrayKt: long[] ULongArray(int,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationChannelCompat: java.lang.String getConversationId()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyOfRange-4UcCI2c(byte[],int,int)
androidx.activity.result.IntentSenderRequest: IntentSenderRequest(android.content.IntentSender,android.content.Intent,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.MapWithDefaultImpl: void putAll(java.util.Map)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyInto$default(long[],long[],int,int,int,int,java.lang.Object)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: java.lang.Object getInputContentInfo()
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)
androidx.tracing.TraceApi29Impl: void endAsyncSection(java.lang.String,int)
androidx.loader.content.Loader$OnLoadCanceledListener: void onLoadCanceled(androidx.loader.content.Loader)
androidx.core.view.ViewCompat: float getRotationY(android.view.View)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer lastOrNull(int[],kotlin.jvm.functions.Function1)
androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOf(int[])
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.os.BundleCompat$Api33Impl: java.lang.Object[] getParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
kotlin.Result: boolean equals(java.lang.Object)
androidx.core.content.UnusedAppRestrictionsBackportService$1: void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setMinSmallestWidthDp(int)
androidx.core.util.Preconditions: void checkArgument(boolean)
androidx.core.text.util.LocalePreferences: java.lang.String getBaseFirstDayOfWeek(java.util.Locale)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: float min(float,float)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: android.view.accessibility.AccessibilityWindowInfo getChild(android.view.accessibility.AccessibilityWindowInfo,int)
kotlin.time.Duration: boolean isPositive-impl(long)
androidx.loader.app.LoaderManager$LoaderCallbacks: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.core.content.res.CamUtils: float lStarFromInt(int)
kotlin.sequences.IndexingSequence: IndexingSequence(kotlin.sequences.Sequence)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int)
androidx.core.graphics.ShaderKt: void transform(android.graphics.Shader,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object singleOrNull(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(double[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.os.BundleCompat: java.lang.Object getParcelable(android.os.Bundle,java.lang.String,java.lang.Class)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$2$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation)
kotlin.time.DurationKt: long times-kIfJnKk(double,long)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor getExecutor()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minByOrThrow(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: boolean isActive()
kotlin.collections.CollectionsKt___CollectionsKt: double maxOrThrow(java.lang.Iterable)
kotlin.collections.CollectionsKt__ReversedViewsKt: int access$reversePositionIndex(java.util.List,int)
androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitAttributesCalculator(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: byte random(byte[])
kotlinx.coroutines.flow.SafeFlow: SafeFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelResult: ChannelResult(java.lang.Object)
kotlin.collections.builders.MapBuilder: boolean shouldCompact(int)
androidx.loader.content.AsyncTaskLoader: void onForceLoad()
androidx.fragment.app.FragmentManager: void restoreBackStack(java.lang.String)
io.flutter.embedding.android.FlutterViewDelegate: FlutterViewDelegate()
kotlin.math.MathKt__MathJVMKt: int getSign(int)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: android.net.Uri buildChildDocumentsUri(java.lang.String,java.lang.String)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduceRightIndexed-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow receiveAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
androidx.viewpager.widget.ViewPager: boolean performDrag(float)
kotlin.UShort: boolean equals(java.lang.Object)
kotlin.collections.ArrayDeque: void copyCollectionElements(int,java.util.Collection)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateBy(java.lang.Iterable,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence)
androidx.activity.result.ActivityResultRegistry$3: ActivityResultRegistry$3(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.contract.ActivityResultContract)
kotlin.coroutines.CoroutineContextImplKt: kotlin.coroutines.CoroutineContext minusPolymorphicKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
io.flutter.plugin.common.JSONUtil: JSONUtil()
kotlin.time.DurationKt: long getSeconds(int)
androidx.fragment.app.SpecialEffectsController$Effect: void performStart(android.view.ViewGroup)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)
kotlin.collections.ArraysKt___ArraysKt: boolean any(long[])
androidx.core.location.GnssStatusCompat: boolean hasEphemerisData(int)
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void complete$fragment_release()
kotlin.ranges.UIntRange: java.lang.String toString()
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: PredicateAdapter$PairPredicateStubHandler(kotlin.reflect.KClass,kotlin.reflect.KClass,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: SpellCheckChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean findLast(boolean[],kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
kotlin.io.FilesKt__UtilsKt: java.io.File resolve(java.io.File,java.io.File)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
kotlin.internal.PlatformImplementations: java.util.List getSuppressed(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: void setY(android.view.View,float)
androidx.core.os.BundleCompat$Api33Impl: java.io.Serializable getSerializable(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getPages()
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: boolean systemProp(java.lang.String,boolean)
kotlin.jvm.internal.FunInterfaceConstructorReference: kotlin.reflect.KFunction getReflected()
kotlin.collections.ArraysKt___ArraysKt: byte random(byte[],kotlin.random.Random)
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
androidx.fragment.app.SpecialEffectsController: void updateFinalState()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,java.lang.Class)
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.activity.OnBackPressedDispatcher: kotlin.collections.ArrayDeque access$getOnBackPressedCallbacks$p(androidx.activity.OnBackPressedDispatcher)
androidx.core.app.NotificationCompat$TvExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: void execute(java.lang.Runnable)
kotlin.random.AbstractPlatformRandom: boolean nextBoolean()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
kotlin.io.path.PathsKt__PathUtilsKt: void getInvariantSeparatorsPathString$annotations(java.nio.file.Path)
androidx.window.core.ExtensionsUtil: int getSafeVendorApiLevel()
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context)
androidx.core.view.DisplayCompat$ModeCompat: int getPhysicalWidth()
kotlin.time.Duration$Companion: long milliseconds-UwyO8pc(int)
androidx.core.view.KeyEventDispatcher: KeyEventDispatcher()
kotlin.reflect.KProperty2: kotlin.reflect.KProperty2$Getter getGetter()
kotlin.time.AbstractDoubleTimeSource: kotlin.time.ComparableTimeMark markNow()
kotlin.collections.CollectionsKt___CollectionsKt: boolean any(java.lang.Iterable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean getBackCallbackState()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
kotlin.text.StringsKt__StringsKt: java.lang.String padEnd$default(java.lang.String,int,char,int,java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: float minOf(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat: int getFlags()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOf(boolean[],int)
androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)
androidx.collection.MapCollections: int colIndexOfValue(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: CombineKt$zipImpl$1$1$2$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrNull-impl(java.lang.Object)
androidx.collection.SimpleArrayMap: int size()
kotlin.UIntArray: boolean containsAll-impl(int[],java.util.Collection)
androidx.profileinstaller.Encoding: int utf8Length(java.lang.String)
androidx.lifecycle.LiveData$LifecycleBoundObserver: LiveData$LifecycleBoundObserver(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
kotlin.ULongArray: void getStorage$annotations()
androidx.fragment.app.FragmentManager$4: androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)
kotlin.text.Regex: java.util.Set getOptions()
kotlinx.coroutines.internal.LockFreeLinkedListNode: void addLast(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: java.lang.Object get(int)
kotlin.collections.builders.MapBuilder: int findValue(java.lang.Object)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte randomOrNull-GBYM_sE(byte[])
kotlin.io.FilesKt__UtilsKt: java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.String)
kotlin.collections.AbstractMutableCollection: int size()
kotlin.jvm.internal.DoubleCompanionObject: void getNEGATIVE_INFINITY$annotations()
kotlinx.coroutines.ChildJob$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ChildJob,kotlin.coroutines.CoroutineContext$Key)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-5PvTz6A(short,short)
androidx.customview.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)
kotlinx.coroutines.sync.MutexImpl: java.lang.String toString()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
io.flutter.plugin.common.EventChannel: java.lang.String access$200(io.flutter.plugin.common.EventChannel)
kotlin.math.MathKt__MathJVMKt: float IEEErem(float,float)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object randomOrNull(java.util.Collection)
androidx.activity.ComponentDialog: android.os.Bundle onSaveInstanceState()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String)
kotlin.sequences.IndexingSequence$iterator$1: void setIndex(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $values()
kotlin.io.FileAlreadyExistsException: FileAlreadyExistsException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
androidx.core.graphics.PathParser$PathDataNode: float[] getParams()
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat$Impl20: WindowInsetsControllerCompat$Impl20(android.view.Window,androidx.core.view.SoftwareKeyboardControllerCompat)
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
androidx.fragment.app.FragmentManager: void popBackStack(int,int,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object[])
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10(kotlin.ranges.LongRange)
kotlinx.coroutines.internal.SegmentOrClosed: boolean equals-impl0(java.lang.Object,java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatchedTaskKt: void resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldDispatchAppLifecycleState()
androidx.core.provider.CallbackWithHandler$1: CallbackWithHandler$1(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface)
androidx.core.transition.TransitionKt$addListener$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewGroupKt: boolean isNotEmpty(android.view.ViewGroup)
kotlin.internal.jdk7.JDK7PlatformImplementations: java.util.List getSuppressed(java.lang.Throwable)
androidx.core.content.UnusedAppRestrictionsConstants: UnusedAppRestrictionsConstants()
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int,boolean)
androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)
androidx.profileinstaller.ProfileInstallReceiver: void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker$default(kotlinx.coroutines.CoroutineScope,long,long,int,java.lang.Object)
androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$TakeVideo: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: short mod(short,short)
kotlin.collections.SetsKt___SetsKt: SetsKt___SetsKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.graphics.BitmapCompat$Api29Impl: BitmapCompat$Api29Impl()
kotlin.collections.builders.MapBuilder: java.lang.Object get(java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object lockSuspend(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt lastOrNull(kotlin.ranges.UIntProgression)
kotlin.collections.TypeAliasesKt: void LinkedHashMap$annotations()
kotlinx.coroutines.JobSupport$onAwaitInternal$1: void invoke(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: SequencesKt___SequencesKt$flatMap$1()
kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlin.reflect.GenericArrayTypeImpl: java.lang.String toString()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)
androidx.core.graphics.PathParser$PathDataNode: char access$002(androidx.core.graphics.PathParser$PathDataNode,char)
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level[] values()
androidx.core.view.animation.PathInterpolatorApi14: android.graphics.Path createCubic(float,float,float,float)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] plus-gMuBH34(byte[],byte)
androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong randomOrNull-QwZRm1k(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(char[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: java.lang.Boolean invoke(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Double min(kotlin.sequences.Sequence)
kotlinx.coroutines.NodeList: boolean isActive()
kotlin.collections.ArraysKt___ArraysKt: char maxOrThrow(char[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.PendingIntentCompat: PendingIntentCompat()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: FlutterFragmentActivity$NewEngineIntentBuilder(java.lang.Class)
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry maxBy(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: char first(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(char[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.graphics.RegionKt: android.graphics.Region unaryMinus(android.graphics.Region)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValue()
kotlin.jvm.internal.SpreadBuilder: void add(java.lang.Object)
androidx.core.view.DisplayCompat: android.graphics.Point parseDisplaySize(java.lang.String)
kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.collection.CircularIntArray: int popFirst()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: boolean contains(short)
androidx.core.location.LocationCompat: void setSpeedAccuracyMetersPerSecond(android.location.Location,float)
androidx.window.embedding.ActivityEmbeddingController: android.app.ActivityOptions setLaunchingActivityStack$window_release(android.app.ActivityOptions,android.os.IBinder)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object processResult(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: boolean isCancellationCause$FlowKt__ErrorsKt(java.lang.Throwable,kotlin.coroutines.CoroutineContext)
androidx.versionedparcelable.VersionedParcelStream: void closeField()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Object useDirectoryEntries$default(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
kotlinx.coroutines.DisposableFutureHandle: DisposableFutureHandle(java.util.concurrent.Future)
androidx.core.view.VelocityTrackerFallback: void addMovement(android.view.MotionEvent)
kotlin.jvm.functions.Function8: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char last(char[],kotlin.jvm.functions.Function1)
kotlin.text.Regex: kotlin.sequences.Sequence findAll(java.lang.CharSequence,int)
kotlin.jvm.internal.FloatCompanionObject: void getNaN$annotations()
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object initialValue()
kotlin.collections.SetsKt__SetsKt: java.util.Set setOfNotNull(java.lang.Object[])
kotlinx.coroutines.CancellableContinuation: boolean cancel(java.lang.Throwable)
kotlin.collections.AbstractList$Companion: void checkElementIndex$kotlin_stdlib(int,int)
kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.channels.BroadcastChannel BroadcastChannel(int)
kotlin.io.path.PathNode: java.util.Iterator getContentIterator()
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: InitializerViewModelFactoryBuilder()
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion: FragmentStrictMode$Policy$Companion()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(short[])
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function0)
androidx.core.app.PendingIntentCompat: void send(android.app.PendingIntent,android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)
androidx.core.graphics.RegionKt: android.graphics.Region and(android.graphics.Region,android.graphics.Region)
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
kotlinx.coroutines.channels.BufferedChannel: void prepareReceiverForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
kotlin.jvm.functions.FunctionN: java.lang.Object invoke(java.lang.Object[])
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal plus(java.math.BigDecimal,java.math.BigDecimal)
kotlin.io.ByteStreamsKt: java.io.InputStreamReader reader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlin.collections.FloatIterator: FloatIterator()
androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException: java.lang.Throwable fillInStackTrace()
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: ChannelsKt__DeprecatedKt$zip$2(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte getOrNull-PpDY95g(byte[],int)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
androidx.core.hardware.display.DisplayManagerCompat: androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context)
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree(java.nio.file.Path,java.nio.file.FileVisitor,int,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-lec5QzE(long[],long[])
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(boolean[])
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downTo(androidx.lifecycle.Lifecycle$State)
androidx.activity.result.contract.ActivityResultContracts$OpenDocument: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
io.flutter.embedding.engine.loader.ResourceExtractor$1: boolean accept(java.io.File,java.lang.String)
androidx.fragment.app.FragmentActivity$HostCallbacks: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.NonCancellable: void getParent$annotations()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String feedbackTypeToString(int)
io.flutter.embedding.android.FlutterFragmentActivity: void configureStatusBarForFullscreenFlutterExperience()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(double[])
kotlin.collections.EmptyIterator: int previousIndex()
androidx.core.content.IntentSanitizer: int access$102(androidx.core.content.IntentSanitizer,int)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
kotlinx.coroutines.channels.BufferedChannel: void removeUnprocessedElements(kotlinx.coroutines.channels.ChannelSegment)
androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()
androidx.core.content.pm.PermissionInfoCompat$Api28Impl: int getProtectionFlags(android.content.pm.PermissionInfo)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.text.method.LinkMovementMethodCompat: LinkMovementMethodCompat()
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor)
androidx.core.app.ActivityCompat$Api30Impl: void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle)
androidx.fragment.app.SpecialEffectsController: void markPostponedState()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)
kotlin.reflect.KMutableProperty2: kotlin.reflect.KMutableProperty2$Setter getSetter()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withLayer()
androidx.core.graphics.PointKt: android.graphics.Point plus(android.graphics.Point,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentController: void dispatchResume()
androidx.profileinstaller.ProfileTranscoder: ProfileTranscoder()
kotlin.collections.MapWithDefaultImpl: void clear()
io.flutter.embedding.engine.plugins.PluginRegistry: void remove(java.lang.Class)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int)
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator asMutableListIterator(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceOrNull-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.core.app.NotificationChannelGroupCompat$Builder: androidx.core.app.NotificationChannelGroupCompat build()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
androidx.core.graphics.CanvasKt: void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.util.SparseBooleanArrayKt: void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectImplementation: void register(kotlinx.coroutines.selects.SelectImplementation$ClauseData,boolean)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.content.UnusedAppRestrictionsBackportService: void isPermissionRevocationEnabled(androidx.core.content.UnusedAppRestrictionsBackportCallback)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceIndexedOrNull(int[],kotlin.jvm.functions.Function3)
androidx.core.view.WindowInsetsControllerCompat$Impl23: WindowInsetsControllerCompat$Impl23(android.view.Window,androidx.core.view.SoftwareKeyboardControllerCompat)
kotlin.collections.EmptyMap: java.util.Set getKeys()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyOfRange-oBK06Vg(int[],int,int)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
androidx.core.view.inputmethod.InputContentInfoCompat: void releasePermission()
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1: void onAnimationEnd(android.animation.Animator)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
kotlin.math.MathKt__MathJVMKt: double ln(double)
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
androidx.core.view.ViewCompat: int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int indexOf(long)
androidx.core.content.ContextCompat$LegacyServiceMapHolder: ContextCompat$LegacyServiceMapHolder()
androidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForReceive()
androidx.customview.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableSet: int getSize()
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
androidx.fragment.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionPause(android.transition.Transition)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowIndex()
androidx.core.view.VelocityTrackerCompat: androidx.core.view.VelocityTrackerFallback getFallbackTrackerOrNull(android.view.VelocityTracker)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean)
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.text.MatchGroup getMatchResultNamedGroup(java.util.regex.MatchResult,java.lang.String)
kotlin.random.RandomKt: kotlin.random.Random Random(int)
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.GrammaticalInflectionManagerCompat$Api34Impl: GrammaticalInflectionManagerCompat$Api34Impl()
kotlinx.coroutines.channels.ChannelSegment: void storeElement$kotlinx_coroutines_core(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(boolean[])
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walkBottomUp(java.io.File)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] reversedArray-rL5Bavg(short[])
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlinx.coroutines.debug.internal.StackTraceFrame getCreationStackBottom()
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onEmpty(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterFragment: void updateSystemUiOverlays()
kotlinx.coroutines.channels.ChannelsKt: kotlin.jvm.functions.Function1 consumes(kotlinx.coroutines.channels.ReceiveChannel)
androidx.versionedparcelable.VersionedParcelStream: void writeFloat(float)
androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
kotlin.collections.MapsKt___MapsKt: java.lang.Iterable asIterable(java.util.Map)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.core.content.res.CamUtils: float yFromInt(int)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Iterable)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder insertRange(java.lang.StringBuilder,int,java.lang.CharSequence,int,int)
androidx.activity.EdgeToEdgeImpl: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
androidx.core.view.DisplayCompat$ModeCompat$Api23Impl: DisplayCompat$ModeCompat$Api23Impl()
kotlinx.coroutines.debug.internal.AgentInstallationType: AgentInstallationType()
kotlin.ranges.RangesKt___RangesKt: int random(kotlin.ranges.IntRange,kotlin.random.Random)
kotlinx.coroutines.CancellableContinuation: void completeResume(java.lang.Object)
kotlin.text.StringsKt___StringsKt$windowed$1: StringsKt___StringsKt$windowed$1()
kotlin.collections.RingBuffer: void add(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
androidx.core.view.ViewPropertyAnimatorUpdateListener: void onAnimationUpdate(android.view.View)
androidx.core.app.PendingIntentCompat: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int,boolean)
kotlin.reflect.KClass$DefaultImpls: void getTypeParameters$annotations()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10,kotlin.coroutines.Continuation)
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfByte(kotlin.sequences.Sequence)
androidx.core.util.SparseIntArrayKt: boolean remove(android.util.SparseIntArray,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte minBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setAccessibilityFeatures(int)
io.flutter.plugin.text.ProcessTextPlugin: void destroy()
androidx.core.view.MotionEventCompat: float getY(android.view.MotionEvent,int)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowClipDataUriWithAuthority(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[])
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.os.TraceCompat: void setCounter(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void addShortcuts(java.util.List)
androidx.core.app.ActivityRecreator: ActivityRecreator()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object maxWith(java.lang.Iterable,java.util.Comparator)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void beforeTask(int)
androidx.fragment.app.strictmode.FragmentTagUsageViolation: android.view.ViewGroup getParentContainer()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Byte toByteOrNull(java.lang.String,int)
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
androidx.core.content.ContextCompat$Api21Impl: ContextCompat$Api21Impl()
io.flutter.embedding.android.FlutterSurfaceView: void pause()
androidx.core.net.ConnectivityManagerCompat$Api24Impl: int getRestrictBackgroundStatus(android.net.ConnectivityManager)
kotlin.Triple: java.lang.Object component1()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: int compare(java.lang.Object,java.lang.Object)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutor: void viewCreated(android.view.View)
androidx.core.widget.TextViewOnReceiveContentListener: TextViewOnReceiveContentListener()
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int lastIndexOf(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean reduceRightIndexed(boolean[],kotlin.jvm.functions.Function3)
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(float)
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityIntentPredicates$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1: void onContextAvailable(android.content.Context)
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyInto(int[],int[],int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler$-CC: void $default$setFrameworkHandlesBack(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler,boolean)
kotlin.time.MeasureTimeKt: kotlin.time.TimedValue measureTimedValue(kotlin.jvm.functions.Function0)
kotlinx.coroutines.AbstractCoroutine: void onCancelled(java.lang.Throwable,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: void addRule(androidx.window.embedding.EmbeddingRule)
kotlin.UInt: int shl-pVg5ArA(int,int)
kotlin.ULong: boolean equals-impl0(long,long)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(byte,long)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)
kotlin.sequences.SequencesKt___SequencesKt: boolean none(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: java.lang.Object lastOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.text.CharsKt__CharJVMKt: boolean isJavaIdentifierPart(char)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(java.lang.Object[],int)
androidx.core.os.BuildCompat: boolean isAtLeastSv2()
io.flutter.plugin.platform.PlatformView: void dispose()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],float[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenByDescending(java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int getHeight()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component2-rL5Bavg(short[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onWindowFocusChanged(boolean)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: boolean isMutable()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Double min(java.lang.Iterable)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.lang.Object next()
androidx.fragment.app.FragmentContainer: boolean onHasView()
androidx.loader.content.AsyncTaskLoader$LoadTask: void run()
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
kotlin.math.MathKt__MathJVMKt: float acosh(float)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void updateState(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner,kotlin.coroutines.Continuation,java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()
io.flutter.embedding.android.KeyboardManager$ViewDelegate: boolean onTextInputKeyEvent(android.view.KeyEvent)
androidx.core.os.LocaleListPlatformWrapper: int hashCode()
kotlinx.coroutines.flow.internal.StackFrameContinuation: StackFrameContinuation(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()
kotlin.collections.ArraysKt___ArraysKt: void reverse(java.lang.Object[],int,int)
androidx.core.app.NotificationCompat$BubbleMetadata: NotificationCompat$BubbleMetadata(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,java.lang.String)
io.flutter.plugin.common.MethodChannel: void resizeChannelBuffer(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setCancelled()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxWithOrNull(java.lang.Object[],java.util.Comparator)
kotlin.collections.MapsKt__MapsJVMKt: MapsKt__MapsJVMKt()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isMethodIsActivityEmbeddedValid()
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void lambda$onProviderEnabled$4(java.lang.String)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.AbstractMap: void putAll(java.util.Map)
kotlin.collections.SlidingWindowKt$windowedIterator$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.String,kotlin.ranges.IntRange)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal inc(java.math.BigDecimal)
androidx.core.provider.FontRequestWorker$2: void accept(java.lang.Object)
androidx.core.view.NestedScrollingChild2: boolean hasNestedScrollingParent(int)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.drawable.Icon)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long plus-LRDsOJo(long,long)
kotlin.reflect.KClass$DefaultImpls: void getSupertypes$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LiveDataScope: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
kotlin.ranges.LongRange: boolean contains(long)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: androidx.core.view.WindowInsetsCompat interpolateInsets(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,float,int)
kotlin.time.Duration$Companion: long seconds-UwyO8pc(int)
io.flutter.plugin.platform.PlatformViewsController: void access$100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.core.app.RemoteInput: android.os.Bundle getExtras()
kotlin.random.Random: float nextFloat()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component2-GBYM_sE(byte[])
androidx.core.view.MenuHostHelper$LifecycleContainer: void clearObservers()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowAction(androidx.core.util.Predicate)
kotlin.collections.ReversedList: ReversedList(java.util.List)
androidx.fragment.app.Fragment: int hashCode()
androidx.core.view.ViewGroupKt$descendants$1$1: java.util.Iterator invoke(android.view.View)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo access$200(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
androidx.customview.widget.ViewDragHelper: void saveInitialMotion(float,float,int)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: void onAccessibilityStateChanged(boolean)
kotlin.collections.MapsKt___MapsKt: java.util.List mapNotNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxByOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)
androidx.lifecycle.Transformations$sam$androidx_lifecycle_Observer$0: Transformations$sam$androidx_lifecycle_Observer$0(kotlin.jvm.functions.Function1)
androidx.core.view.ViewKt: int getMarginTop(android.view.View)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getIN_BUFFER$p()
androidx.core.graphics.PointKt: float component1(android.graphics.PointF)
androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)
androidx.core.widget.TextViewKt: android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)
kotlin.collections.EmptyList: void add(int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.activity.OnBackPressedDispatcher: void setOnBackInvokedDispatcher(android.window.OnBackInvokedDispatcher)
androidx.activity.result.IntentSenderRequest$Companion: void getCREATOR$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentDeepToStringNullable(java.lang.Object[])
androidx.core.telephony.TelephonyManagerCompat: int getSubscriptionId(android.telephony.TelephonyManager)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long runSingleTask()
androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)
androidx.core.os.LocaleListInterface: java.lang.Object getLocaleList()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)
androidx.core.app.NotificationCompat$WearableExtender: int getContentAction()
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray(float[],int)
kotlinx.coroutines.channels.SendChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
kotlinx.coroutines.AbstractTimeSourceKt: void unTrackTask()
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
kotlin.jvm.functions.Function12: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.internal.RequireKotlin: int errorCode()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.core.content.pm.ShortcutXmlParser: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3002(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
androidx.lifecycle.AbstractSavedStateViewModelFactory$Companion: AbstractSavedStateViewModelFactory$Companion()
androidx.core.app.NotificationCompat$WearableExtender$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String capabilityToString(int)
kotlin.UnsignedKt: int uintCompare(int,int)
androidx.window.java.area.WindowAreaControllerCallbackAdapter: void removeWindowAreaInfoListListener(androidx.core.util.Consumer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(char[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$Action makeAction(int,int,java.lang.Integer,int,android.app.PendingIntent)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: void scheduleFrame()
kotlin.time.DurationKt: long parseOverLongIsoComponent(java.lang.String)
kotlin.sequences.GeneratorSequence$iterator$1: boolean hasNext()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(byte,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.profileinstaller.ProfileVerifier$CompilationStatus: boolean hasProfileEnqueuedForCompilation()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(int[],java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterFragment: void onResume()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(float[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ByteIterator: java.lang.Object next()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26: AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread)
io.flutter.embedding.android.FlutterActivity: boolean getBackCallbackState()
androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.Channel getChannel()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong firstOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream byteInputStream(java.lang.String,java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(double[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void fill(java.util.List,java.lang.Object)
androidx.lifecycle.EmittedSource$disposeNow$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setAuthenticationRequired(boolean)
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level[] $values()
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityIntentPredicates$1: java.lang.Boolean invoke(android.app.Activity,android.content.Intent)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle showBigPictureWhenCollapsed(boolean)
androidx.core.view.ViewCompat$Api24Impl: void dispatchStartTemporaryDetach(android.view.View)
androidx.core.widget.NestedScrollView: void initScrollView()
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.annotation.RequiresOptIn$Level: androidx.annotation.RequiresOptIn$Level valueOf(java.lang.String)
kotlin.coroutines.SafeContinuation: SafeContinuation(kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewsController$1: void lambda$resize$0(io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized)
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$1: android.view.View invoke(android.view.View)
kotlin.UShort: int times-7apg3OU(short,byte)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitAttributes translate$window_release(androidx.window.extensions.embedding.SplitAttributes)
androidx.viewpager.widget.ViewPager: void clearOnPageChangeListeners()
kotlin.reflect.KTypeProjection: boolean equals(java.lang.Object)
androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,android.util.Range)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void insecureHandleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(double)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.Object)
androidx.collection.ArraySet: java.lang.Object removeAt(int)
kotlin.time.AbstractLongTimeSource$LongTimeMark: AbstractLongTimeSource$LongTimeMark(long,kotlin.time.AbstractLongTimeSource,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1: FlowKt__DelayKt$sample$2$values$1$1(kotlinx.coroutines.channels.ProducerScope)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.annotation.experimental.Experimental: androidx.annotation.experimental.Experimental$Level level()
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Comparable max(kotlin.sequences.Sequence)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeight(int)
kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int)
kotlin.UNumbersKt: byte takeLowestOneBit-7apg3OU(byte)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean remove(java.util.Map$Entry)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double[] toTypedArray(double[])
kotlin.UByte: long times-VKZWuLQ(byte,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionCancel(android.transition.Transition)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(float[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerTabStrip: int getMinHeight()
kotlinx.coroutines.ChildJob: void parentCancelled(kotlinx.coroutines.ParentJob)
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlinx.coroutines.CompletionHandler_commonKt: boolean isHandlerOf(kotlin.jvm.functions.Function1)
kotlin.io.path.ExceptionsCollector: void setPath(java.nio.file.Path)
androidx.core.graphics.RectKt: int component1(android.graphics.Rect)
kotlin.sequences.SequencesKt___SequencesKt$sorted$1: SequencesKt___SequencesKt$sorted$1(kotlin.sequences.Sequence)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,byte)
androidx.viewpager.widget.ViewPager: void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel: void setSpellCheckMethodHandler(io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow dropWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenResumed(androidx.lifecycle.LifecycleOwner,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.content.pm.ShortcutManagerCompat$1: ShortcutManagerCompat$1(android.content.IntentSender)
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void onStart()
androidx.loader.content.ModernAsyncTask: ModernAsyncTask()
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk: java.util.Iterator iterator()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()
kotlin.text.CharsKt__CharJVMKt: boolean isTitleCase(char)
androidx.core.view.inputmethod.EditorInfoCompat: boolean isStylusHandwritingEnabled(android.view.inputmethod.EditorInfo)
kotlin.collections.ArraysKt___ArraysKt: short component3(short[])
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.ranges.OpenEndDoubleRange: java.lang.String toString()
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: FutureKt$asCompletableFuture$2(java.util.concurrent.CompletableFuture)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
androidx.viewpager.widget.PagerTitleStrip: int getTextSpacing()
kotlin.sequences.SubSequence: int access$getStartIndex$p(kotlin.sequences.SubSequence)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List dumpCoroutinesInfoImpl(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
kotlin.sequences.MergingSequence: MergingSequence(kotlin.sequences.Sequence,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)
kotlinx.coroutines.selects.SelectClause1Impl: SelectClause1Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $values()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: ConcurrentWeakMap$entries$1()
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
kotlin.sequences.SequencesKt___SequencesKt: int count(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent)
androidx.core.util.LruCacheKt$lruCache$3: LruCacheKt$lruCache$3()
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree$default(java.nio.file.Path,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance(android.content.Context)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $values()
kotlinx.coroutines.channels.ChannelCoroutine: void cancel()
kotlin.UIntArray: java.lang.String toString-impl(int[])
androidx.fragment.app.DefaultSpecialEffectsController: void syncAnimations(java.util.List)
kotlin.ResultKt: java.lang.Object runCatching(kotlin.jvm.functions.Function0)
kotlin.collections.builders.MapBuilder: void compact()
androidx.core.app.JobIntentService$CompatJobEngine: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
kotlin.text.Typography: void getRightGuillemet$annotations()
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.Throwable)
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
kotlin.text.StringsKt___StringsKt$groupingBy$1: StringsKt___StringsKt$groupingBy$1(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],java.util.Collection)
androidx.window.WindowSdkExtensionsDecorator: androidx.window.WindowSdkExtensions decorate(androidx.window.WindowSdkExtensions)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
kotlin.NumbersKt__NumbersJVMKt: int countTrailingZeroBits(int)
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager)
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Object[])
kotlin.ranges.ULongProgressionIterator: ULongProgressionIterator(long,long,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minOrNull-GBYM_sE(byte[])
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: FlowKt__EmittersKt$transform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.widget.EdgeEffectCompat: float getDistance(android.widget.EdgeEffect)
kotlinx.coroutines.channels.BufferedChannel: void incCompletedExpandBufferAttempts(long)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda$0(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()
androidx.fragment.app.FragmentStateManager: void addViewToContainer()
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1: SavedStateHandleSupport$savedStateHandlesVM$1()
androidx.fragment.app.FragmentManager$1: void handleOnBackPressed()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getCachedEngineId()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(java.lang.Object[],java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: FlowKt__DistinctKt$defaultAreEquivalent$1()
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(double[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderEntries: boolean removeAll(java.util.Collection)
androidx.lifecycle.viewmodel.CreationExtras$Empty: java.lang.Object get(androidx.lifecycle.viewmodel.CreationExtras$Key)
kotlin.ranges.ClosedFloatRange: boolean equals(java.lang.Object)
androidx.core.util.SparseIntArrayKt: android.util.SparseIntArray plus(android.util.SparseIntArray,android.util.SparseIntArray)
kotlin.contracts.ContractBuilder$DefaultImpls: kotlin.contracts.CallsInPlace callsInPlace$default(kotlin.contracts.ContractBuilder,kotlin.Function,kotlin.contracts.InvocationKind,int,java.lang.Object)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void close()
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
androidx.core.graphics.ColorUtils: void colorToLAB(int,double[])
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: FlowKt__ErrorsKt$retry$3(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.ranges.ULongRange: boolean contains(java.lang.Comparable)
com.getkeepsafe.relinker.elf.Program32Header: Program32Header(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long)
kotlin.collections.MapWithDefaultImpl: java.lang.Object getOrImplicitDefault(java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2212(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UInt: byte toByte-impl(int)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setImportance(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: int firstFrameIndex(java.lang.StackTraceElement[],java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.io.OnErrorAction: kotlin.io.OnErrorAction[] $values()
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
kotlin.LazyKt__LazyKt: kotlin.Lazy lazyOf(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
androidx.core.view.ContentInfoCompat$BuilderCompat: void setSource(int)
kotlin.collections.ArraysKt___ArraysKt: int elementAtOrElse(int[],int,kotlin.jvm.functions.Function1)
androidx.core.text.PrecomputedTextCompat$Api28Impl: PrecomputedTextCompat$Api28Impl()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
androidx.core.view.HapticFeedbackConstantsCompat: int getFeedbackConstantOrFallback(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: android.app.Service getService()
kotlin.properties.ReadWriteProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()
kotlinx.coroutines.channels.BufferedChannel: boolean tryResumeSender(java.lang.Object,kotlinx.coroutines.channels.ChannelSegment,int)
androidx.core.provider.DocumentsContractCompat: boolean isTreeUri(android.net.Uri)
androidx.core.os.PersistableBundleApi22ImplKt: void putBooleanArray(android.os.PersistableBundle,java.lang.String,boolean[])
androidx.core.content.PackageManagerCompat: boolean areUnusedAppRestrictionsAvailable(android.content.pm.PackageManager)
kotlinx.coroutines.sync.MutexImpl$onLock$1: void invoke(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
io.flutter.plugin.platform.PlatformViewWrapper$1: PlatformViewWrapper$1(io.flutter.plugin.platform.PlatformViewWrapper,android.view.View$OnFocusChangeListener)
kotlin.coroutines.CombinedContext$writeReplace$1: void invoke(kotlin.Unit,kotlin.coroutines.CoroutineContext$Element)
kotlin.time.DurationKt: long getSeconds(long)
com.getkeepsafe.relinker.ReLinkerInstance: ReLinkerInstance(com.getkeepsafe.relinker.ReLinker$LibraryLoader,com.getkeepsafe.relinker.ReLinker$LibraryInstaller)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()
androidx.core.view.DifferentialMotionFlingController: boolean calculateFlingVelocityThresholds(android.view.MotionEvent,int)
androidx.window.layout.SafeWindowLayoutComponentProvider: SafeWindowLayoutComponentProvider(java.lang.ClassLoader,androidx.window.core.ConsumerAdapter)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: ArraysKt___ArraysJvmKt$asList$3(int[])
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: CollectionsKt__IteratorsJVMKt$iterator$1(java.util.Enumeration)
com.example.wellnesshub.R$mipmap: R$mipmap()
kotlin.sequences.SequencesKt___SequencesKt$minus$1: SequencesKt___SequencesKt$minus$1(kotlin.sequences.Sequence,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(long[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(java.util.List,java.util.List)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
androidx.lifecycle.LiveData: LiveData()
androidx.core.location.LocationCompat: void setBearingAccuracyDegrees(android.location.Location,float)
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
androidx.core.view.DragAndDropPermissionsCompat$Api24Impl: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: boolean putRehash(int)
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: void lambda$onStatusChanged$1(java.util.concurrent.Executor,int)
androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
kotlin.DeprecatedSinceKotlin: java.lang.String hiddenSince()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlin.coroutines.CoroutineContextImplKt: kotlin.coroutines.CoroutineContext$Element getPolymorphicElement(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlin.text.Regex$special$$inlined$fromInt$1: java.lang.Boolean invoke(java.lang.Enum)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int minWithOrThrow-U(int[],java.util.Comparator)
kotlinx.coroutines.internal.ContextScope: java.lang.String toString()
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Void doInBackground(java.lang.Void[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
androidx.core.os.BundleCompat$Api33Impl: BundleCompat$Api33Impl()
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$Impl: android.view.animation.Interpolator getInterpolator()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)
io.flutter.plugin.platform.PlatformViewsController: int access$1900(io.flutter.plugin.platform.PlatformViewsController,double,float)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlin.time.Duration$Companion: long hours-UwyO8pc(double)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean isEmpty()
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,kotlin.sequences.Sequence)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.core.app.NotificationChannelCompat$Api26Impl: void setLightColor(android.app.NotificationChannel,int)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: void setFraction(float)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(byte[],byte[])
kotlin.text.StringsKt__StringsKt: boolean endsWith(java.lang.CharSequence,char,boolean)
androidx.core.widget.TintableImageSourceView: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationRepeat(android.animation.Animator)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
kotlin.jvm.internal.Intrinsics: int compare(int,int)
kotlin.UNumbersKt: byte rotateRight-LxnNnR4(byte,int)
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceFirst(java.lang.CharSequence,kotlin.text.Regex,java.lang.String)
androidx.lifecycle.EmittedSource$dispose$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.encoding.DecodeInputStream: int read(byte[],int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: void logW(java.lang.String,java.lang.Object[])
io.flutter.plugin.text.ProcessTextPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.core.view.ViewCompat: int getLabelFor(android.view.View)
androidx.window.embedding.SplitPairRule: java.lang.String toString()
kotlin.ranges.CharRange: kotlin.ranges.CharRange access$getEMPTY$cp()
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(androidx.core.app.NotificationCompat$Action)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(java.lang.Object[],java.util.Collection)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path moveTo$default(java.nio.file.Path,java.nio.file.Path,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(long[],java.util.Collection)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component5(java.util.List)
androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow,java.time.Duration,kotlin.coroutines.CoroutineContext)
kotlin.UByteArray: byte[] unbox-impl()
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.TreeIterator: boolean hasNext()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
kotlin.collections.EmptySet: int getSize()
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: java.lang.Void invoke()
kotlin.collections.ArrayDeque$Companion: ArrayDeque$Companion()
androidx.core.util.LongSparseArrayKt: boolean contains(android.util.LongSparseArray,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()
kotlin.text.CharCategory: kotlin.text.CharCategory[] $values()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
kotlinx.coroutines.flow.FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1: FlowKt__ChannelsKt$asFlow$$inlined$unsafeFlow$1(kotlinx.coroutines.channels.BroadcastChannel)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setUpFlutterEngine()
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: java.util.List parseResult(int,android.content.Intent)
kotlin.sequences.DropWhileSequence$iterator$1: boolean hasNext()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentTransitionCompat21: boolean isSeekingSupported(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.util.Collection mapNotNullTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment: void onPause()
kotlin.collections.ArrayDeque: int lastIndexOf(java.lang.Object)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onResume(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.window.embedding.EmbeddingAdapter: boolean translateSplitPlaceholderRule$lambda$11(androidx.window.embedding.SplitPlaceholderRule,android.content.Context,android.view.WindowMetrics)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
androidx.window.core.AndroidLogger: AndroidLogger()
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
androidx.loader.content.AsyncTaskLoader$LoadTask: void onCancelled(java.lang.Object)
androidx.fragment.app.Fragment: boolean isRemoving()
kotlin.jvm.internal.FloatSpreadBuilder: FloatSpreadBuilder(int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Double toDoubleOrNull(java.lang.String)
kotlin.text.CharsKt__CharJVMKt: kotlin.text.CharDirectionality getDirectionality(char)
kotlin.ranges.CharRange: CharRange(char,char)
androidx.core.content.ContextCompat: android.view.Display getDisplayOrDefault(android.content.Context)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
kotlinx.coroutines.internal.ThreadLocalElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.core.app.NotificationCompat$BubbleMetadata: NotificationCompat$BubbleMetadata(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,java.lang.String,androidx.core.app.NotificationCompat$1)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.window.embedding.ActivityRule: ActivityRule(java.lang.String,java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.NumbersKt__FloorDivModKt: byte mod(byte,byte)
androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput fromBundle(android.os.Bundle)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(java.lang.Object)
kotlin.collections.AbstractList$IteratorImpl: AbstractList$IteratorImpl(kotlin.collections.AbstractList)
kotlin.io.path.PathsKt__PathUtilsKt: PathsKt__PathUtilsKt()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: long single(long[])
kotlin.collections.ArraysKt___ArraysKt: int[] sortedArray(int[])
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow)
androidx.versionedparcelable.VersionedParcel: java.util.Collection readCollection(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object access$awaitValue(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitController: void clearSplitAttributesCalculator()
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.String toString-impl(java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: void getCOROUTINE_SUSPENDED$annotations()
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbTitleRes()
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
kotlin.UnsignedKt: long ulongRemainder-eb3DHEI(long,long)
kotlin.ranges.IntRange: java.lang.Comparable getEndExclusive()
kotlin.text.CharDirectionality: int getValue()
androidx.core.location.LocationCompat: float getSpeedAccuracyMetersPerSecond(android.location.Location)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.core.os.LocaleListCompatWrapper: java.util.Locale getFirstMatch(java.lang.String[])
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getAppBundlePath()
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.TypeReference: kotlin.reflect.KClassifier getClassifier()
kotlin.ranges.LongRange$Companion: kotlin.ranges.LongRange getEMPTY()
androidx.customview.widget.ViewDragHelper: int getEdgesTouched(int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionCancel(android.transition.Transition)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object poll()
androidx.window.layout.util.ContextCompatHelperApi24: ContextCompatHelperApi24()
kotlin.time.DurationKt: long access$durationOfNanos(long)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditableSizeAndTransform(double,double,double[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.CharSequence getInitialTextBeforeCursor(android.view.inputmethod.EditorInfo,int,int)
kotlin.text.Regex: java.util.regex.Pattern toPattern()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.core.view.ViewCompat: void setScaleX(android.view.View,float)
kotlinx.coroutines.AbstractTimeSource: void unregisterTimeLoopThread()
androidx.core.view.WindowInsetsCompat$Type: int captionBar()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyOf-nggk6HY(short[],int)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: FlowKt__DelayKt$sample$2$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.AbstractIterator: void done()
kotlin.collections.builders.MapBuilder: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CancelFutureOnCancel: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1)
kotlin.UByteKt: byte toUByte(short)
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setColumnIndex(int)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int getSize()
io.flutter.embedding.android.FlutterFragment: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.Result: boolean equals-impl0(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.location.LocationRequestCompat: int hashCode()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int getWidth()
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onEnter(kotlin.jvm.functions.Function1)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityRule$lambda$13(androidx.window.embedding.ActivityRule,android.app.Activity)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String)
androidx.lifecycle.SavedStateViewModelFactoryKt: java.util.List access$getVIEWMODEL_SIGNATURE$p()
androidx.window.layout.WindowMetrics: java.lang.String toString()
kotlin.ranges.ClosedDoubleRange: java.lang.Comparable getStart()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $values()
kotlin.text.Typography: Typography()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(kotlin.UInt[])
androidx.activity.result.PickVisualMediaRequest: androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType getMediaType()
androidx.activity.EdgeToEdge: void enable(androidx.activity.ComponentActivity,androidx.activity.SystemBarStyle)
kotlin.ULong: long rem-7apg3OU(long,byte)
kotlin.text.CharsetsKt: java.nio.charset.Charset charset(java.lang.String)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat)
androidx.core.provider.FontRequestWorker: void resetTypefaceCache()
android.support.v4.os.IResultReceiver$Default: android.os.IBinder asBinder()
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.graphics.drawable.IconCompat getIcon()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-r7IrZao(long[],int)
androidx.window.area.WindowAreaCapability$Status$Companion: WindowAreaCapability$Status$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: short[] sliceArray(short[],java.util.Collection)
kotlin.LateinitKt: boolean isInitialized(kotlin.reflect.KProperty0)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isChecked()
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setClearTop(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte maxWith-XMRcp5o(byte[],java.util.Comparator)
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: java.lang.Throwable fillInStackTrace()
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: ArraysKt___ArraysKt$withIndex$9(char[])
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.graphics.ColorUtils: double calculateLuminance(int)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: UComparisonsKt___UComparisonsKt()
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$2: androidx.lifecycle.ViewModelStoreOwner invoke(android.view.View)
androidx.core.view.WindowCompat$Api28Impl: WindowCompat$Api28Impl()
androidx.annotation.RequiresApi: int api()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: DebugProbesImpl$dumpCoroutinesInfoImpl$3(kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallSuccess(java.lang.String)
androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)
androidx.lifecycle.LiveDataScopeImpl: LiveDataScopeImpl(androidx.lifecycle.CoroutineLiveData,kotlin.coroutines.CoroutineContext)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: void setMipMap(boolean)
androidx.window.R$styleable: R$styleable()
androidx.core.widget.CompoundButtonCompat: CompoundButtonCompat()
kotlin.collections.builders.MapBuilder: int hashCode()
kotlinx.coroutines.flow.FlowKt: java.lang.Object toList$default(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1: void afterTextChanged(android.text.Editable)
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlinx.coroutines.channels.ChannelIterator$DefaultImpls: java.lang.Object next(kotlinx.coroutines.channels.ChannelIterator,kotlin.coroutines.Continuation)
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)
io.flutter.embedding.android.KeyboardMap$1: KeyboardMap$1()
android.support.v4.os.IResultReceiver2$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)
kotlin.collections.ArraysKt___ArraysKt: boolean none(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.window.embedding.ActivityEmbeddingController$Companion: androidx.window.embedding.ActivityEmbeddingController getInstance(android.content.Context)
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1: void onTextChanged(java.lang.CharSequence,int,int,int)
kotlin.time.MonotonicTimeSource: long markNow-z9LOYto()
kotlin.reflect.TypeVariableImpl: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$302(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
androidx.core.view.MenuKt$iterator$1: java.lang.Object next()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
kotlin.jvm.internal.FunInterfaceConstructorReference: int hashCode()
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1(kotlin.jvm.functions.Function2)
kotlin.reflect.KMutableProperty1: kotlin.reflect.KMutableProperty1$Setter getSetter()
androidx.core.graphics.PathParser: PathParser()
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls: boolean contains(kotlin.ranges.ClosedFloatingPointRange,java.lang.Comparable)
kotlin.collections.EmptyMap: java.util.Collection values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-PpDY95g(byte[],int)
kotlinx.coroutines.sync.Mutex: boolean holdsLock(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: long max(long,long)
androidx.core.os.LocaleListPlatformWrapper: java.lang.String toLanguageTags()
androidx.activity.EdgeToEdgeApi21: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
kotlin.DeepRecursiveScopeImpl: java.lang.Object callRecursive(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeDouble(double)
kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(int[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$KeysItr keysIterator$kotlin_stdlib()
kotlin.ranges.CharRange: boolean isEmpty()
androidx.activity.ComponentDialog: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: void onIsPermissionRevocationEnabledForAppResult(boolean,boolean)
kotlin.KotlinVersion: KotlinVersion(int,int)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VideoOnly: ActivityResultContracts$PickVisualMedia$VideoOnly()
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float,boolean)
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.core.content.LocusIdCompat: java.lang.String getId()
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
io.flutter.plugin.platform.PlatformViewsController: boolean access$1702(io.flutter.plugin.platform.PlatformViewsController,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetrics $default$computeMaximumWindowMetrics(androidx.window.layout.WindowMetricsCalculator,android.content.Context)
kotlinx.coroutines.channels.BroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodClearSplitInfoCallbackValid$1: java.lang.Object invoke()
kotlinx.coroutines.Empty: Empty(boolean)
kotlin.random.URandomKt: byte[] nextUBytes-Wvrt4B4$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
kotlinx.coroutines.flow.StartedWhileSubscribed: StartedWhileSubscribed(long,long)
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigStateInternal(java.lang.String,boolean)
io.flutter.plugin.platform.VirtualDisplayController$2$1: VirtualDisplayController$2$1(io.flutter.plugin.platform.VirtualDisplayController$2)
kotlin.collections.builders.MapBuilder: java.lang.Object[] access$getKeysArray$p(kotlin.collections.builders.MapBuilder)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.util.concurrent.CancellationException,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
kotlinx.coroutines.flow.SharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void access$probeCoroutineCompleted(kotlinx.coroutines.debug.internal.DebugProbesImpl,kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlin.text.ScreenFloatValueRegEx: ScreenFloatValueRegEx()
androidx.core.content.res.CamColor: float getM()
kotlin.io.path.PathsKt__PathUtilsKt: void getName$annotations(java.nio.file.Path)
kotlin.ranges.UIntRange: boolean contains(java.lang.Comparable)
androidx.window.SafeWindowExtensionsProvider: boolean isWindowExtensionsPresent()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean elementAt(boolean[],int)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,androidx.activity.result.PickVisualMediaRequest)
kotlin.time.DurationUnit: DurationUnit(java.lang.String,int,java.util.concurrent.TimeUnit)
androidx.fragment.app.FragmentManager: void dispatchAttach()
androidx.lifecycle.LifecycleKt$eventFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getON_LOCK_ALREADY_LOCKED_BY_OWNER$p()
kotlinx.coroutines.channels.ProducerScope: kotlinx.coroutines.channels.SendChannel getChannel()
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback: void onDiagnosticReceived(int,java.lang.Object)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.graphics.drawable.IconCompat asIconCompat(android.os.Parcelable)
kotlin.jvm.internal.TypeIntrinsics: java.util.Set asMutableSet(java.lang.Object,java.lang.String)
kotlin.collections.IndexedValue: int hashCode()
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: void cancel$default(kotlinx.coroutines.channels.BroadcastChannel,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.AbstractTimeSourceKt: void setTimeSource(kotlinx.coroutines.AbstractTimeSource)
kotlin.sequences.SubSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.SubSequence)
androidx.activity.OnBackPressedCallback: void setEnabledChangedCallback$activity_release(kotlin.jvm.functions.Function0)
androidx.loader.content.ModernAsyncTask$AsyncTaskResult: ModernAsyncTask$AsyncTaskResult(androidx.loader.content.ModernAsyncTask,java.lang.Object[])
androidx.collection.ArrayMap: void putAll(java.util.Map)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.window.EmptyDecoratorWindowSdk: EmptyDecoratorWindowSdk()
androidx.core.text.BidiFormatter: java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
kotlin.jvm.internal.Ref$IntRef: Ref$IntRef()
androidx.window.SafeWindowExtensionsProvider: java.lang.ClassLoader access$getLoader$p(androidx.window.SafeWindowExtensionsProvider)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sorted(kotlin.sequences.Sequence)
kotlinx.coroutines.ExecutorsKt: void CloseableCoroutineDispatcher$annotations()
android.support.v4.os.IResultReceiver2$_Parcel: IResultReceiver2$_Parcel()
androidx.core.content.res.ResourcesCompat$Api21Impl: ResourcesCompat$Api21Impl()
io.flutter.plugin.platform.PlatformOverlayView: PlatformOverlayView(android.content.Context,int,int,io.flutter.plugin.platform.AccessibilityEventsDelegate)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.lifecycle.ViewModelStore: java.util.Set keys()
androidx.core.app.NotificationCompatBuilder$Api21Impl: NotificationCompatBuilder$Api21Impl()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)
kotlin.jvm.internal.PackageReference: int hashCode()
androidx.core.provider.RequestExecutor$DefaultThreadFactory: RequestExecutor$DefaultThreadFactory(java.lang.String,int)
kotlin.sequences.FlatteningSequence$iterator$1: java.lang.Object next()
androidx.viewpager.widget.ViewPager: void onLayout(boolean,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: int component4(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.UShort: long rem-VKZWuLQ(short,long)
kotlin.StandardKt__StandardKt: java.lang.Object run(kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short minOf(short,short,short)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[],int,int)
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: java.lang.Object invoke()
androidx.fragment.app.ListFragment: android.widget.ListView getListView()
kotlinx.coroutines.channels.BufferedChannel: void access$registerSelectForReceive(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.ULongKt: long toULong(byte)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable)
androidx.core.graphics.PointKt: android.graphics.Point minus(android.graphics.Point,android.graphics.Point)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.graphics.PathKt: android.graphics.Path or(android.graphics.Path,android.graphics.Path)
androidx.versionedparcelable.VersionedParcelParcel: double readDouble()
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: BroadcastChannelImpl$send$1(kotlinx.coroutines.channels.BroadcastChannelImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop currentOrNull$kotlinx_coroutines_core()
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
kotlin.io.FilesKt__FileReadWriteKt: java.util.List readLines$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
kotlin.collections.EmptyMap: java.lang.String toString()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapIndexedIterableTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier,java.util.List,boolean)
kotlin.jvm.internal.DoubleCompanionObject: double getMIN_VALUE()
kotlinx.coroutines.UndispatchedCoroutine: UndispatchedCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat: java.lang.String getCategory(android.app.Notification)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: ChannelsKt__DeprecatedKt$filterNot$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.dart.DartMessenger: void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int)
androidx.window.area.WindowAreaCapability$Status$Companion: androidx.window.area.WindowAreaCapability$Status getWINDOW_AREA_STATUS_UNKNOWN$window_release()
androidx.core.text.util.FindAddress: boolean isValidLocationName(java.lang.String)
androidx.core.view.ViewKt$postDelayed$runnable$1: ViewKt$postDelayed$runnable$1(kotlin.jvm.functions.Function0)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean isCancelled()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character findLast(char[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewParentCompat: int[] getTempNestedScrollConsumed()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.profileinstaller.FileSectionType: long getValue()
androidx.core.text.SpannedStringKt: java.lang.Object[] getSpans(android.text.Spanned,int,int)
androidx.core.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])
kotlinx.coroutines.BuildersKt__BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(short[],short,int,int)
kotlin.time.Duration$Companion: void getMinutes-UwyO8pc$annotations(long)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.text.CharsKt__CharJVMKt: boolean isLowerCase(char)
kotlin.jvm.internal.PropertyReference2Impl: PropertyReference2Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: DefaultSpecialEffectsController$SpecialEffectsInfo(androidx.fragment.app.SpecialEffectsController$Operation)
androidx.core.app.RemoteInput: int getEditChoicesBeforeSending()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String formatNullable(java.lang.String,java.util.Locale,java.lang.Object[])
androidx.core.database.CursorKt: java.lang.Integer getIntOrNull(android.database.Cursor,int)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.CompletableJob SupervisorJob(kotlinx.coroutines.Job)
kotlin.system.TimingKt: long measureNanoTime(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(boolean[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void destroy()
com.example.wellnesshub.R$drawable: R$drawable()
androidx.window.core.SpecificationComputer: java.lang.String createMessage(java.lang.Object,java.lang.String)
androidx.core.app.JobIntentService$CompatWorkItem: android.content.Intent getIntent()
androidx.fragment.app.SpecialEffectsController$Operation: boolean isSeeking()
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(int[],kotlin.jvm.functions.Function1)
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
kotlin.collections.ArrayDeque: boolean isEmpty()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: void onResume()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString$default(char[],int,int,int,java.lang.Object)
androidx.core.widget.EdgeEffectCompat$Api21Impl: EdgeEffectCompat$Api21Impl()
kotlin.ranges.RangesKt___RangesKt: java.lang.Character randomOrNull(kotlin.ranges.CharRange,kotlin.random.Random)
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
androidx.core.view.inputmethod.InputConnectionCompat$Api25Impl: InputConnectionCompat$Api25Impl()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.ViewCompat: void setTranslationY(android.view.View,float)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(double[])
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $values()
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: void onAnimationEnd$lambda$0(android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect)
kotlin.io.encoding.Base64: byte[] charsToBytesImpl$kotlin_stdlib(java.lang.CharSequence,int,int)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
kotlinx.coroutines.channels.ReceiveChannel: void cancel(java.util.concurrent.CancellationException)
androidx.core.view.ViewCompat: void setHasTransientState(android.view.View,boolean)
kotlin.coroutines.SafeContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.CoroutineId: int hashCode()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
androidx.fragment.app.DialogFragment$4: DialogFragment$4(androidx.fragment.app.DialogFragment)
kotlin.io.encoding.Base64: int skipIllegalSymbolsIfMime(byte[],int,int)
androidx.core.view.ViewPropertyAnimatorCompat: void lambda$setUpdateListener$0(androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View,android.animation.ValueAnimator)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(float[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShowAsActionFlags(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.core.widget.NestedScrollView: boolean stopGlowAnimations(android.view.MotionEvent)
androidx.fragment.app.Fragment: java.lang.String getTag()
androidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])
androidx.window.embedding.SplitRule$Companion: SplitRule$Companion()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
io.flutter.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
io.flutter.embedding.android.KeyEmbedderResponder: void lambda$sendKeyEvent$2(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: java.lang.Double get(int)
io.flutter.util.ViewUtils$ViewVisitor: boolean run(android.view.View)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int maxOf-WZ9TVnA(int,int,int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterNotTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-c0bezYM(byte[],kotlin.ranges.IntRange)
kotlinx.coroutines.channels.SendChannel$DefaultImpls: void isClosedForSend$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(double[],double[])
androidx.core.graphics.ColorKt: boolean isWideGamut(long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnIndex()
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.TintableBackgroundView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
androidx.core.net.MailTo: java.lang.String toString()
androidx.loader.app.LoaderManagerImpl: LoaderManagerImpl(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)
androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutUpdated(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: byte minWithOrThrow(byte[],java.util.Comparator)
kotlin.ranges.ULongRange: long getStart-s-VKNKU()
androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)
androidx.core.graphics.ColorKt: android.graphics.Color toColor(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isMultiLine()
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte elementAtOrNull-PpDY95g(byte[],int)
androidx.viewpager.widget.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
kotlin.math.MathKt__MathJVMKt: double truncate(double)
io.flutter.view.AccessibilityBridge: void reset()
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute(io.flutter.view.AccessibilityBridge$1)
kotlin.NumbersKt__NumbersJVMKt: int countTrailingZeroBits(long)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.plugin.text.ProcessTextPlugin: void onDetachedFromActivityForConfigChanges()
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
kotlin.io.FilesKt__FilePathComponentsKt: java.io.File subPath(java.io.File,int,int)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
kotlin.io.ConsoleKt: void print(long)
androidx.core.graphics.ColorKt: float component2(long)
androidx.lifecycle.Transformations$sam$androidx_lifecycle_Observer$0: boolean equals(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.activity.SystemBarStyle: SystemBarStyle(int,int,int,kotlin.jvm.functions.Function1,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$ActivityInitializationListener: void onCreate()
androidx.lifecycle.Transformations$switchMap$2$onChanged$1: java.lang.Object invoke(java.lang.Object)
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()
androidx.lifecycle.BlockRunner: androidx.lifecycle.CoroutineLiveData access$getLiveData$p(androidx.lifecycle.BlockRunner)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] getMetrics()
kotlin.text.StringsKt___StringsKt: float maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void reverse(long[],int,int)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
kotlinx.coroutines.EventLoop: long processNextEvent()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.location.GnssStatusCompat: float getElevationDegrees(int)
kotlin.sequences.SequencesKt___SequencesKt$zip$1: SequencesKt___SequencesKt$zip$1()
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence zipWithNext(kotlin.sequences.Sequence)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
kotlin.jvm.internal.LocalVariableReference: LocalVariableReference()
androidx.viewpager.R$attr: R$attr()
kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder setMinUpdateIntervalMillis(long)
androidx.core.widget.AutoScrollHelper$ClampedScroller: AutoScrollHelper$ClampedScroller()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
androidx.core.provider.DocumentsContractCompat: android.net.Uri buildDocumentUri(java.lang.String,java.lang.String)
androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutUsageReported(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(byte,long)
androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)
kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: android.content.Intent build(android.content.Context)
androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)
androidx.core.text.TextUtilsCompat: TextUtilsCompat()
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int hashCode()
androidx.profileinstaller.DeviceProfileWriter: void assertDeviceAllowsProfileInstallerAotWritesCalled()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort randomOrNull-s5X_as8(short[],kotlin.random.Random)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component2--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long min(long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.text.RegexKt: kotlin.text.MatchResult access$findNext(java.util.regex.Matcher,int,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow runningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: FilesKt__UtilsKt$copyRecursively$1()
kotlinx.coroutines.flow.internal.AbortFlowException: AbortFlowException(kotlinx.coroutines.flow.FlowCollector)
androidx.fragment.app.FragmentController: void doLoaderStop(boolean)
androidx.fragment.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
androidx.collection.SparseArrayCompat: void gc()
kotlin.text.MatcherMatchResult$groupValues$1: int indexOf(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxWithOrThrow(java.lang.Object[],java.util.Comparator)
androidx.lifecycle.LifecycleRegistry$Companion: androidx.lifecycle.LifecycleRegistry createUnsafe(androidx.lifecycle.LifecycleOwner)
androidx.core.app.ShareCompat$IntentReader: int getStreamCount()
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CompletableJob,kotlin.coroutines.CoroutineContext$Key)
androidx.core.app.NotificationChannelCompat: boolean canBypassDnd()
androidx.core.text.util.LocalePreferences: java.lang.String getUnicodeLocaleType(java.lang.String,java.lang.String,java.util.Locale,boolean)
androidx.activity.result.IntentSenderRequest: void writeToParcel(android.os.Parcel,int)
androidx.core.os.LocaleListInterface: java.util.Locale getFirstMatch(java.lang.String[])
kotlin.sequences.GeneratorSequence$iterator$1: void setNextItem(java.lang.Object)
androidx.annotation.RequiresOptIn$Level: androidx.annotation.RequiresOptIn$Level[] $values()
androidx.core.provider.RequestExecutor$ReplyRunnable$1: RequestExecutor$ReplyRunnable$1(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object)
androidx.core.view.ContentInfoCompat$Compat: int getFlags()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isStateful()
kotlin.time.Duration: long unbox-impl()
kotlin.collections.EmptyList: int size()
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.CancellableContinuationImpl)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: android.content.Intent createIntent(android.content.Context,androidx.activity.result.PickVisualMediaRequest)
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.core.content.FileProvider$SimplePathStrategy: android.net.Uri getUriForFile(java.io.File)
androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithDeltas(int,java.util.ArrayList)
androidx.core.view.ViewGroupKt: void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object)
androidx.fragment.app.BackStackRecordState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager)
kotlin.collections.MapsKt__MapWithDefaultKt: java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object)
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(boolean[],int)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)
androidx.loader.content.AsyncTaskLoader: boolean onCancelLoad()
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: long getSequenceNumber()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
androidx.core.app.NotificationCompat$CallStyle: NotificationCompat$CallStyle(androidx.core.app.NotificationCompat$Builder)
kotlin.collections.builders.ListBuilder: java.lang.Object[] toArray(java.lang.Object[])
kotlin.ranges.LongRange: java.lang.Long getEndExclusive()
kotlin.ranges.UIntRange: boolean contains-WZ4Q5Ns(int)
androidx.core.os.ExecutorCompat$HandlerExecutor: void execute(java.lang.Runnable)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(double[],double)
androidx.core.animation.AnimatorKt$addListener$1: AnimatorKt$addListener$1()
androidx.core.location.LocationCompat: int getHasBearingAccuracyMask()
kotlin.collections.ArraysKt___ArraysKt: byte reduceIndexed(byte[],kotlin.jvm.functions.Function3)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
androidx.core.location.LocationCompat: boolean isMock(android.location.Location)
kotlin.collections.EmptyMap: int getSize()
kotlin.collections.ArraysKt___ArraysKt: boolean minWithOrThrow(boolean[],java.util.Comparator)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object randomOrNull(java.util.Collection,kotlin.random.Random)
kotlin.reflect.KCallable: boolean isAbstract()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte random-oSF2wD8(byte[],kotlin.random.Random)
kotlinx.coroutines.internal.ThreadLocalKey: int hashCode()
androidx.collection.ArraySet: boolean contains(java.lang.Object)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()
androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder)
kotlin.jvm.internal.Intrinsics: void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: FlutterFragmentActivity()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3(java.lang.Iterable)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.CollectionsKt___CollectionsKt: byte[] toByteArray(java.util.Collection)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ULongArray: boolean retainAll(java.util.Collection)
androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)
kotlin.text.StringsKt__StringsKt: StringsKt__StringsKt()
kotlin.UInt: int and-WZ4Q5Ns(int,int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
io.flutter.plugin.common.BinaryMessenger$-CC: void $default$setMessageHandler(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short min(short[])
androidx.core.graphics.RectKt: boolean contains(android.graphics.Rect,android.graphics.Point)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object lastOrNull(java.lang.Iterable)
androidx.lifecycle.viewmodel.CreationExtras: java.util.Map getMap$lifecycle_viewmodel_release()
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
kotlinx.coroutines.channels.SendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
kotlinx.coroutines.flow.SharedFlowImpl: kotlin.coroutines.Continuation[] findSlotsToResumeLocked(kotlin.coroutines.Continuation[])
androidx.core.location.LocationManagerCompat: boolean registerGnssMeasurementsCallbackOnR(android.location.LocationManager,java.util.concurrent.Executor,android.location.GnssMeasurementsEvent$Callback)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.view.VelocityTrackerFallback: void computeCurrentVelocity(int)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object setValue(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreImpl: boolean addAcquireToQueue(kotlinx.coroutines.Waiter)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(java.security.Signature)
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onPageScrollStateChanged(int)
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,int)
androidx.profileinstaller.Encoding: long readUInt32(java.io.InputStream)
androidx.core.text.util.LocalePreferences$Api33Impl: java.lang.String getHourCycleType(android.icu.text.DateFormat$HourCycle)
kotlin.ranges.RangesKt___RangesKt: byte coerceAtLeast(byte,byte)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte maxOf-Wr6uiD8(byte,byte[])
kotlin.text.UStringsKt: kotlin.UByte toUByteOrNull(java.lang.String)
kotlin.text.MatcherMatchResult: kotlin.text.MatchGroupCollection getGroups()
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2: androidx.lifecycle.SavedStateHandlesVM invoke()
androidx.window.layout.util.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
kotlin.collections.ArraysKt___ArraysKt: int last(int[])
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.IntentCompat: java.util.ArrayList getParcelableArrayListExtra(android.content.Intent,java.lang.String,java.lang.Class)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
kotlin.jvm.internal.TypeReference: boolean equals(java.lang.Object)
kotlinx.coroutines.selects.SelectClause0Impl: SelectClause0Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceIndexedOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createLinkPointingTo(java.nio.file.Path,java.nio.file.Path)
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
kotlin.collections.EmptySet: EmptySet()
kotlin.concurrent.ThreadsKt$thread$thread$1: ThreadsKt$thread$thread$1(kotlin.jvm.functions.Function0)
kotlin.reflect.KType$DefaultImpls: void getClassifier$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$TakePicture: java.lang.Object parseResult(int,android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt: short component1(short[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character randomOrNull(char[],kotlin.random.Random)
kotlin.time.DurationKt: long getMilliseconds(double)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator reversed(java.util.Comparator)
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(long)
androidx.core.app.JobIntentService$CommandProcessor: void onCancelled(java.lang.Void)
androidx.window.embedding.MatcherUtils: MatcherUtils()
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.arch.core.executor.TaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.core.graphics.RectKt: android.graphics.Rect plus(android.graphics.Rect,android.graphics.Point)
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: androidx.core.view.ContentInfoCompat build()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
androidx.collection.CircularArray: void doubleCapacity()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] onEachIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.window.layout.SafeWindowLayoutComponentProvider: java.lang.Class access$getFoldingFeatureClass(androidx.window.layout.SafeWindowLayoutComponentProvider)
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: double maxOrThrow(java.lang.Double[])
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map buildMapInternal(int,kotlin.jvm.functions.Function1)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: androidx.lifecycle.ViewModelProvider$Factory defaultFactory$lifecycle_viewmodel_release(androidx.lifecycle.ViewModelStoreOwner)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldDelayFirstAndroidViewDraw(boolean)
androidx.versionedparcelable.VersionedParcel: java.io.Serializable readSerializable()
androidx.core.app.ShareCompat$IntentReader: java.lang.String getHtmlText()
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass createKotlinClass(java.lang.Class,java.lang.String)
androidx.window.embedding.MatcherUtils: boolean isActivityMatching$window_release(android.app.Activity,androidx.window.core.ActivityComponentInfo)
io.flutter.Log: java.lang.String getStackTraceString(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOfRangeInline(double[],int,int)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality[] values()
androidx.collection.ArraySet: boolean isEmpty()
kotlin.ResultKt: java.lang.Object recoverCatching(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitController$splitInfoList$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat: boolean canScrollVertically(android.view.View,int)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightNavigationBars(boolean)
kotlin.jvm.internal.TypeIntrinsics: int getFunctionArity(java.lang.Object)
androidx.core.os.HandlerKt$postDelayed$runnable$1: void run()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduce-ELGow60(byte[],kotlin.jvm.functions.Function2)
androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1$emit$1: FlowKt__LimitKt$dropWhile$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
kotlin.collections.builders.MapBuilderEntries: boolean remove(java.util.Map$Entry)
kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,long,long,kotlin.jvm.functions.Function1)
androidx.core.content.res.ViewingConditions: androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.MenuKt$iterator$1: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: int[] sortedArrayDescending(int[])
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: ViewModelProvider$NewInstanceFactory()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodClearSplitInfoCallbackValid$1: SafeActivityEmbeddingComponentProvider$isMethodClearSplitInfoCallbackValid$1(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.OpenEndRange,int)
com.getkeepsafe.relinker.elf.Program64Header: Program64Header(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long)
kotlinx.coroutines.channels.ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: AccessibilityWindowInfoCompat()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: java.lang.String getString(int)
kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)
kotlin.enums.EnumEntriesSerializationProxy: EnumEntriesSerializationProxy(java.lang.Enum[])
androidx.core.content.res.CamColor: int viewed(androidx.core.content.res.ViewingConditions)
androidx.window.embedding.EmbeddingBackend: android.app.ActivityOptions setLaunchingActivityStack(android.app.ActivityOptions,android.os.IBinder)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Short boxShort(short)
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri)
androidx.lifecycle.LiveDataKt: androidx.lifecycle.Observer observe(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean random(boolean[],kotlin.random.Random)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxByOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy build()
androidx.fragment.app.Fragment: void performResume()
org.jetbrains.annotations.Range: long from()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
kotlin.text.StringsKt___StringsKt: java.lang.Float maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
androidx.core.util.SizeKt: float component2(androidx.core.util.SizeFCompat)
androidx.collection.LongSparseArray: java.lang.Object clone()
androidx.core.app.NotificationChannelCompat: boolean shouldShowLights()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(long[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.plugin.common.EventChannel: void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler)
androidx.core.content.SharedPreferencesCompat$EditorCompat: void apply(android.content.SharedPreferences$Editor)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List buildListInternal(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
kotlin.text.Charsets: java.nio.charset.Charset UTF32_LE()
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: TickerChannelsKt$ticker$3(kotlinx.coroutines.channels.TickerMode,long,long,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(java.lang.Class,java.lang.String,java.lang.String,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[],boolean)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator naturalOrder()
kotlin.io.encoding.Base64: int encodeIntoByteArray(byte[],byte[],int,int,int)
kotlin.UShort: long times-VKZWuLQ(short,long)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float)
androidx.collection.ArrayMap: boolean containsAll(java.util.Collection)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object access$invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean maxWith(boolean[],java.util.Comparator)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
androidx.startup.R$string: R$string()
io.flutter.embedding.engine.FlutterEngineGroupCache: void remove(java.lang.String)
androidx.core.graphics.RectKt: android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.fragment.app.FragmentManager$8: FragmentManager$8(androidx.fragment.app.FragmentManager)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunDefaultEngine(android.content.Context)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: boolean performAction(int,int,android.os.Bundle)
androidx.core.graphics.RectKt: float component4(android.graphics.RectF)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minWithOrNull-eOHTfZs(short[],java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutManagerCompat: void disableShortcuts(android.content.Context,java.util.List,java.lang.CharSequence)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.window.embedding.EmbeddingBackend: java.util.Set getRules()
kotlin.UInt: int minus-WZ4Q5Ns(int,int)
androidx.core.text.TextUtilsCompat: java.lang.String htmlEncode(java.lang.String)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow take(kotlinx.coroutines.flow.Flow,int)
android.support.v4.app.INotificationSideChannel$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.core.os.ParcelCompat: java.util.ArrayList readArrayList(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.core.view.VelocityTrackerFallback: void clear()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()
androidx.core.view.ViewCompat: java.lang.CharSequence getStateDescription(android.view.View)
androidx.customview.widget.ViewDragHelper: android.view.View getCapturedView()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.UndispatchedMarker: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-J1ME1BU(int,int)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
kotlin.jvm.internal.MutableLocalVariableReference: void set(java.lang.Object)
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.DisplayCutoutCompat: androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setFinishPrimaryWithPlaceholder(androidx.window.embedding.SplitRule$FinishBehavior)
kotlin.collections.CollectionsKt__MutableCollectionsKt: CollectionsKt__MutableCollectionsKt()
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.OnErrorResult)
androidx.customview.widget.FocusStrategy: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)
androidx.core.widget.TintableCompoundButton: android.content.res.ColorStateList getSupportButtonTintList()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] plus-3uqUaXg(long[],long)
androidx.collection.LruCache: int missCount()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(long[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$1000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getBROKEN$p()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List scanIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext()
androidx.core.app.NotificationCompat$Style: void restoreFromCompatExtras(android.os.Bundle)
kotlin.UShort: int mod-WZ4Q5Ns(short,int)
kotlin.collections.ArraysKt___ArraysKt: boolean first(boolean[],kotlin.jvm.functions.Function1)
kotlin.io.encoding.Base64Kt: void getBase64UrlEncodeMap$annotations()
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: StringsKt___StringsKt$asSequence$$inlined$Sequence$1(java.lang.CharSequence)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__CollectKt$launchIn$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replaceFirst$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object)
androidx.core.util.SparseArrayKt$keyIterator$1: int nextInt()
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.collection.CircularArray: int size()
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
kotlin.collections.ArraysKt___ArraysKt: void shuffle(float[])
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: boolean contains(java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String access$getTAG$p()
androidx.core.app.AppLocalesStorageHelper: AppLocalesStorageHelper()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte maxByOrThrow-U(byte[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOf(byte[],int)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
androidx.core.content.pm.ShortcutInfoCompat: android.os.UserHandle getUserHandle()
androidx.window.embedding.SplitAttributesCalculatorParams: android.content.res.Configuration getParentConfiguration()
androidx.window.area.SafeWindowAreaComponentProvider$isWindowAreaProviderValid$1: java.lang.Object invoke()
androidx.core.internal.view.SupportMenuItem: boolean requiresActionButton()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.channels.BroadcastCoroutine: void onCompleted(java.lang.Object)
androidx.core.app.JobIntentService$WorkEnqueuer: void serviceProcessingFinished()
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow timeoutInternal-HG0u8IE$FlowKt__DelayKt(kotlinx.coroutines.flow.Flow,long)
kotlin.jvm.internal.InlineMarker: InlineMarker()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(float[])
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,kotlin.sequences.Sequence)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType platformType(kotlin.reflect.KType,kotlin.reflect.KType)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: FlowKt__LimitKt$dropWhile$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void hide(int)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map createMapBuilder(int)
kotlinx.coroutines.flow.ReadonlySharedFlow: ReadonlySharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlinx.coroutines.Job)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState)
androidx.window.SafeWindowExtensionsProvider: boolean isWindowExtensionsValid$window_release()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-nggk6HY(short[],int)
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2: java.lang.Object invoke()
androidx.core.animation.AnimatorKt$addPauseListener$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List,kotlin.jvm.functions.Function2)
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
kotlin.CharCodeKt: char Char(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(byte[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderEntries: boolean containsAll(java.util.Collection)
androidx.fragment.app.DialogFragment: boolean isCancelable()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.io.ByteStreamsKt$iterator$1: boolean getFinished()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
kotlin.UByte: kotlin.UByte box-impl(byte)
kotlinx.coroutines.channels.BufferedChannelKt: long access$initialBufferEnd(int)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: void invoke(java.lang.Throwable)
kotlin.time.Duration$Companion: long getHours-UwyO8pc(int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int lastIndexOf-WZ4Q5Ns(int)
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent createChooserIntent()
kotlinx.coroutines.time.TimeKt: java.lang.Object withTimeout(java.time.Duration,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.graphics.ColorKt: boolean isSrgb(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceRightOrNull(boolean[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelResult: void getHolder$annotations()
androidx.core.app.NotificationChannelCompat: java.lang.String getDescription()
androidx.core.provider.FontRequest: java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.selects.SelectInstance: kotlin.coroutines.CoroutineContext getContext()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] values()
androidx.fragment.app.BackStackRecord: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(short[],java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
kotlin.jvm.internal.ArrayIterator: java.lang.Object next()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int indexOf(java.lang.Object)
kotlin.collections.builders.MapBuilder: java.util.Map build()
kotlin.math.MathKt__MathJVMKt: float nextDown(float)
kotlin.NumbersKt__NumbersKt: int countLeadingZeroBits(short)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setGranularScrollingSupported(boolean)
androidx.core.view.WindowInsetsAnimationControllerCompat: androidx.core.graphics.Insets getCurrentInsets()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler)
androidx.window.area.WindowAreaInfo: androidx.window.area.WindowAreaSession getActiveSession(androidx.window.area.WindowAreaCapability$Operation)
kotlin.coroutines.ContinuationKt$Continuation$1: void resumeWith(java.lang.Object)
kotlinx.coroutines.GlobalScope: GlobalScope()
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
androidx.annotation.ChecksSdkIntAtLeast: int api()
kotlin.text.StringsKt___StringsKt: java.util.Map associate(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.core.app.ActivityCompat$Api21Impl: void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays(java.lang.String)
androidx.core.app.LocaleManagerCompat$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
kotlin.time.Duration: long getInWholeSeconds-impl(long)
kotlin.collections.ArraysKt___ArraysKt: byte[] onEach(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(char[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task stealWithExclusiveMode(int)
kotlin.UByte: byte mod-7apg3OU(byte,byte)
androidx.activity.ComponentActivity$2: ComponentActivity$2(androidx.activity.ComponentActivity)
kotlinx.coroutines.DisposeOnCancel: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.LifecycleController: void finish()
androidx.versionedparcelable.VersionedParcel: boolean readField(int)
kotlinx.coroutines.JobSupport$Finishing: boolean isActive()
kotlinx.coroutines.android.HandlerContext: int hashCode()
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
androidx.core.os.ExecutorCompat: ExecutorCompat()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.UInt: int compareTo-WZ4Q5Ns(int,int)
androidx.window.area.RearDisplaySessionImpl: RearDisplaySessionImpl(androidx.window.extensions.area.WindowAreaComponent)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
androidx.savedstate.Recreator$Companion: Recreator$Companion()
kotlin.UShortArray: boolean addAll(java.util.Collection)
androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl: void stopDifferentialMotionFling()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: java.lang.Object invoke(java.lang.Object)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagForward()
androidx.annotation.LongDef: boolean open()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitRule: int convertDpToPx(float,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean firstOrNull(boolean[],kotlin.jvm.functions.Function1)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
androidx.activity.FullyDrawnReporter: void fullyDrawnReported()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
kotlinx.coroutines.scheduling.CoroutineScheduler: long releaseCpuPermit()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder from(android.content.Context)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,int,int,java.lang.CharSequence)
kotlinx.coroutines.sync.SemaphoreSegment: void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.internal.ChildCancelledException: java.lang.Throwable fillInStackTrace()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.io.LineReader: int compactBytes()
kotlin.sequences.SequencesKt___SequencesKt: int sumOfShort(kotlin.sequences.Sequence)
kotlin.collections.AbstractMutableList: java.lang.Object remove(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(short[])
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isFocused()
androidx.activity.result.IntentSenderRequest$Companion$CREATOR$1: androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-rL5Bavg(short[])
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
kotlin.random.Random: byte[] nextBytes(int)
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String toString()
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(char,float[])
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
kotlin.collections.ArraysKt___ArraysKt: long single(long[],kotlin.jvm.functions.Function1)
androidx.core.app.AlarmManagerCompat: void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: android.app.Service getService()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character minBy(char[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformOverlayView: PlatformOverlayView(android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int last-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.Result$Failure: int hashCode()
kotlin.time.TimeSource$Monotonic: long markNow-z9LOYto()
kotlinx.coroutines.flow.SubscribedFlowCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FloatCompanionObject: void getPOSITIVE_INFINITY$annotations()
androidx.core.app.ActivityOptionsCompat: android.os.Bundle toBundle()
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: androidx.collection.ArraySet getSplitRules()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
kotlin.UShortArray: boolean contains-xj2QHRw(short[],short)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)
androidx.core.view.ViewCompat: void setRotationX(android.view.View,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte random-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short minWith(short[],java.util.Comparator)
kotlin.coroutines.CombinedContext: boolean equals(java.lang.Object)
androidx.viewpager.widget.PagerTabStrip: void onDraw(android.graphics.Canvas)
kotlinx.coroutines.selects.OnTimeout: void access$register(kotlinx.coroutines.selects.OnTimeout,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.internal.view.SupportMenuItem: boolean requiresOverflow()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceRightOrNull-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.time.DurationKt: long times-mvk6XK0(int,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-H21X9dk(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1: FlowKt__LimitKt$dropWhile$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()
androidx.window.embedding.EmbeddingBackend: void removeRule(androidx.window.embedding.EmbeddingRule)
kotlin.collections.CollectionsKt___CollectionsJvmKt: CollectionsKt___CollectionsJvmKt()
kotlin.text.Regex$Serialized$Companion: Regex$Serialized$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.loader.app.LoaderManager: androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.core.graphics.TypefaceCompatApi29Impl: int getMatchScore(android.graphics.fonts.FontStyle,android.graphics.fonts.FontStyle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLiveRegion(int)
kotlin.reflect.WildcardTypeImpl: WildcardTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineGroup)
kotlin.io.path.DefaultCopyActionContext: DefaultCopyActionContext()
androidx.core.view.DifferentialMotionFlingController$DifferentialVelocityProvider: float getCurrentVelocity(android.view.VelocityTracker,android.view.MotionEvent,int)
kotlinx.coroutines.flow.StateFlowImpl: boolean compareAndSet(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text._OneToManyTitlecaseMappingsKt: java.lang.String titlecaseImpl(char)
io.flutter.embedding.android.AndroidTouchProcessor: float getHorizontalScrollFactor(android.content.Context)
androidx.core.app.JobIntentService: boolean isStopped()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: DartMessenger$SerialTaskQueue(java.util.concurrent.ExecutorService)
kotlin.ResultKt: java.lang.Object recover(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setGroup(java.lang.String)
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onProviderDisabled(java.lang.String)
kotlinx.coroutines.InactiveNodeList: boolean isActive()
kotlin.collections.CollectionsKt__ReversedViewsKt: int access$reverseElementIndex(java.util.List,int)
kotlin.jvm.functions.Function10: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.EmptyMap: java.lang.Void put(java.lang.Object,java.lang.Void)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
kotlin.collections.ArraysKt___ArraysKt: long minByOrThrow(long[],kotlin.jvm.functions.Function1)
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.activity.OnBackPressedCallback)
androidx.fragment.app.SpecialEffectsController$Effect: void onStart(android.view.ViewGroup)
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1: java.lang.Object invoke()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.time.Duration: long unaryMinus-UwyO8pc(long)
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation: androidx.fragment.app.Fragment getTargetFragment()
androidx.core.location.LocationCompat$Api26Impl: void removeVerticalAccuracy(android.location.Location)
androidx.core.view.WindowCompat: androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void clearExtrasSpans()
kotlin.collections.ArraysKt___ArraysKt: float maxOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(int[],kotlin.jvm.functions.Function2)
kotlin.time.AbstractDoubleTimeSource: kotlin.time.DurationUnit getUnit()
androidx.collection.LruCache: java.lang.String toString()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: SpecialEffectsController$FragmentStateManagerOperation(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.ULong: long mod-VKZWuLQ(long,long)
androidx.lifecycle.ReportFragment: void onDestroy()
io.flutter.plugin.platform.SingleViewWindowManager: android.view.WindowMetrics getMaximumWindowMetrics()
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener: void onSharedElementsReady()
kotlin.collections.builders.MapBuilder: java.lang.Object[] access$allocateValuesArray(kotlin.collections.builders.MapBuilder)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void translateFeatureBounds(int[],int,android.graphics.Rect)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: FlowKt__CollectionKt$toCollection$2(java.util.Collection)
androidx.core.location.LocationCompat: long getElapsedRealtimeMillis(android.location.Location)
androidx.lifecycle.LifecycleKt$eventFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
kotlin.text.StringsKt___StringsKt: java.lang.Character singleOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow(int,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.app.NotificationCompat$BigPictureStyle: void clearCompatExtraKeys(android.os.Bundle)
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1: SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1(androidx.window.layout.SafeWindowLayoutComponentProvider)
androidx.core.view.ViewCompat: boolean hasAccessibilityDelegate(android.view.View)
kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: java.lang.Object parseResult(int,android.content.Intent)
androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda$0(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation)
androidx.core.app.NotificationChannelGroupCompat: java.lang.String getId()
androidx.window.embedding.SplitAttributes: SplitAttributes(androidx.window.embedding.SplitAttributes$SplitType,androidx.window.embedding.SplitAttributes$LayoutDirection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceOrNull-xzaTVY8(short[],kotlin.jvm.functions.Function2)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.text.SpannableString createSpannableString(java.lang.String,java.util.List)
kotlin.math.MathKt__MathJVMKt: float pow(float,float)
io.flutter.Log: void v(java.lang.String,java.lang.String)
androidx.core.view.ContentInfoCompat$Compat: android.os.Bundle getExtras()
kotlinx.coroutines.internal.LimitedDispatcherKt: void checkParallelism(int)
androidx.core.content.MimeTypeFilter: java.lang.String[] matchesMany(java.lang.String[],java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findLastAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlin.collections.FloatIterator: java.lang.Float next()
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.Class)
kotlin.collections.MutableMapWithDefaultImpl: void clear()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int first-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
androidx.viewpager.widget.ViewPager$ViewPositionComparator: int compare(java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl: TypefaceCompatBaseImpl()
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.channels.ChannelCoroutine: boolean offer(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
kotlin.NumbersKt__NumbersJVMKt: boolean isNaN(double)
kotlinx.coroutines.selects.WhileSelectKt: java.lang.Object whileSelect$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: boolean bufferOrRendezvousSend(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(double[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.selects.SelectOldKt: void resumeUndispatched(kotlinx.coroutines.CancellableContinuation,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
kotlin.jvm.internal.Reflection: kotlin.reflect.KMutableProperty0 mutableProperty0(kotlin.jvm.internal.MutablePropertyReference0)
androidx.window.embedding.SplitAttributesCalculatorParams: java.lang.String toString()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.core.view.WindowInsetsControllerCompat$Impl26: boolean isAppearanceLightNavigationBars()
kotlin.jvm.internal.DoubleSpreadBuilder: int getSize(double[])
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.collections.ArraysKt___ArraysKt: long[] sortedArrayDescending(long[])
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.TrySelectDetailedResult TrySelectDetailedResult(int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long minWith(long[],java.util.Comparator)
androidx.window.embedding.EmbeddingBackend$Companion: androidx.window.embedding.EmbeddingBackend getInstance(android.content.Context)
kotlinx.coroutines.DisposableFutureHandle: void dispose()
kotlinx.coroutines.scheduling.WorkQueue: long trySteal(int,kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
androidx.core.app.NotificationChannelCompat: long[] getVibrationPattern()
kotlinx.coroutines.EventLoopImplBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,short)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean none(byte[])
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onRestoreInstanceState(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices-QwZRm1k$annotations(long[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(double[],kotlin.jvm.functions.Function1)
androidx.core.provider.FontRequestWorker$3: FontRequestWorker$3(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padStart$default(java.lang.CharSequence,int,char,int,java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
androidx.core.provider.SelfDestructiveThread: SelfDestructiveThread(java.lang.String,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(short[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
androidx.core.view.ViewCompat$Api24Impl: void setPointerIcon(android.view.View,android.view.PointerIcon)
kotlin.contracts.InvocationKind: InvocationKind(java.lang.String,int)
androidx.core.graphics.CanvasKt: void withClip(android.graphics.Canvas,android.graphics.Rect,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
kotlinx.coroutines.selects.SelectKt: java.lang.Object select(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArrayDeque: void ensureCapacity(int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,long)
androidx.core.widget.NestedScrollView: boolean isFillViewport()
androidx.fragment.app.FragmentManager$PopBackStackState: FragmentManager$PopBackStackState(androidx.fragment.app.FragmentManager,java.lang.String,int,int)
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(float[],java.util.Comparator)
androidx.window.embedding.ActivityRule: ActivityRule(java.lang.String,java.util.Set,boolean)
kotlin.io.LineReader: LineReader()
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
androidx.window.reflection.ReflectionUtils: boolean doesReturn$window_release(java.lang.reflect.Method,java.lang.Class)
kotlin.time.AdjustedTimeMark: long elapsedNow-UwyO8pc()
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
androidx.versionedparcelable.VersionedParcelParcel: float readFloat()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1: DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1()
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark getMark()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(char[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: kotlin.time.Duration box-impl(long)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(byte,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletableDeferredImpl: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.app.ActivityCompat: void recreate(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object randomOrNull(java.lang.Object[],kotlin.random.Random)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
io.flutter.view.AccessibilityBridge: int getHoveredObjectId()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat$Action: boolean getShowsUserInterface()
kotlin.collections.AbstractList$IteratorImpl: void setIndex(int)
androidx.lifecycle.SavedStateHandle: java.util.Map access$getFlows$p(androidx.lifecycle.SavedStateHandle)
androidx.core.app.ShareCompat: android.content.ComponentName getCallingActivity(android.content.Intent)
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(java.lang.Comparable[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean isEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3)
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.core.view.DisplayCutoutCompat$Api30Impl: android.graphics.Insets getWaterfallInsets(android.view.DisplayCutout)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlin.collections.EmptyList: void clear()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-d-6D3K8(short[])
kotlinx.coroutines.flow.FlowKt: java.lang.Object toSet$default(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.activity.ComponentActivity$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
androidx.window.embedding.ExtensionEmbeddingBackend: void invalidateTopVisibleSplitAttributes()
kotlin.random.Random$Default: int nextBits(int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharProgression step(kotlin.ranges.CharProgression,int)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobKt: void ensureActive(kotlinx.coroutines.Job)
androidx.core.app.NotificationCompat$Action: boolean isContextual()
kotlin.time.Duration: long toLong-impl(long,kotlin.time.DurationUnit)
androidx.core.location.LocationCompat: int getHasVerticalAccuracyMask()
androidx.window.embedding.ActivityRule$Builder: androidx.window.embedding.ActivityRule$Builder setAlwaysExpand(boolean)
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(float)
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Type: int all()
kotlin.reflect.KVisibility: KVisibility(java.lang.String,int)
androidx.fragment.app.FragmentManager: void lambda$new$3(androidx.core.app.PictureInPictureModeChangedInfo)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setMaxAspectRatioInLandscape(androidx.window.embedding.EmbeddingAspectRatio)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle()
androidx.fragment.app.Fragment: void performDestroy()
kotlin.collections.EmptyIterator: void set(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion: ActivityResultContracts$PickMultipleVisualMedia$Companion()
kotlin.text.StringsKt___StringsKt: java.util.Map groupByTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: androidx.fragment.app.FragmentTransitionImpl getHandlingImpl()
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
kotlinx.coroutines.CancellableContinuationImpl: void detachChild$kotlinx_coroutines_core()
androidx.core.view.ViewCompat: void setStateDescription(android.view.View,java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-2D5oskM(int[],kotlin.random.Random)
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.List map(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap)
kotlin.collections.AbstractMutableMap: java.util.Set getKeys()
kotlinx.coroutines.flow.LintKt: void getCoroutineContext$annotations(kotlinx.coroutines.flow.FlowCollector)
kotlin.io.encoding.Base64Kt: int[] access$getBase64DecodeMap$p()
androidx.core.graphics.BitmapKt: void set(android.graphics.Bitmap,int,int,int)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onRestoreInstanceState(android.os.Bundle)
kotlinx.coroutines.channels.ConflatedBufferedChannel: ConflatedBufferedChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapSequence(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.profileinstaller.ProfileTranscoder: java.lang.String enforceSeparator(java.lang.String,java.lang.String)
kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
androidx.activity.OnBackPressedDispatcher$Api34Impl: OnBackPressedDispatcher$Api34Impl()
kotlin.coroutines.Continuation: void resumeWith(java.lang.Object)
androidx.core.location.LocationCompat: void removeExtra(android.location.Location,java.lang.String)
kotlinx.coroutines.channels.LazyActorCoroutine: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation Continuation(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
kotlin.ranges.ULongRange: boolean contains-VKZWuLQ(long)
kotlin.ranges.CharProgression: boolean isEmpty()
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getSystemWindowInsets()
kotlinx.coroutines.scheduling.Task: Task()
androidx.customview.widget.ExploreByTouchHelper$1: ExploreByTouchHelper$1()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(float)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfFloat(kotlin.sequences.Sequence)
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
androidx.profileinstaller.ProfileInstaller: void lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
androidx.window.layout.util.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)
androidx.window.core.PredicateAdapter$PredicateStubHandler: boolean invokeTest(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object getValue()
kotlin.UShort: int toInt-impl(short)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: kotlin.Pair invoke(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: AccessibilityWindowInfoCompat(java.lang.Object)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,java.lang.String)
kotlin.io.path.ExceptionsCollector: void collect(java.lang.Exception)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
kotlin.time.TimedValue: java.lang.Object component1()
androidx.loader.app.LoaderManager: void enableDebugLogging(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-GBYM_sE(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.core.view.WindowInsetsControllerCompat$Impl: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
kotlin.ranges.OpenEndDoubleRange: OpenEndDoubleRange(double,double)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.graphics.PaintCompat$Api29Impl: PaintCompat$Api29Impl()
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectIndexed(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareBy$lambda$0$ComparisonsKt__ComparisonsKt(kotlin.jvm.functions.Function1[],java.lang.Object,java.lang.Object)
io.flutter.view.VsyncWaiter$DisplayListener: VsyncWaiter$DisplayListener(io.flutter.view.VsyncWaiter,android.hardware.display.DisplayManager)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-ctEhBpI(int[],int[])
kotlin.text.StringsKt___StringsKt: char minByOrThrow(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
androidx.activity.ComponentDialog: void initializeViewTreeOwners()
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
kotlin.jvm.internal.InlineMarker: void mark(int)
androidx.core.widget.TextViewCompat: void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)
androidx.core.location.LocationManagerCompat$Api30Impl: void getCurrentLocation(android.location.LocationManager,java.lang.String,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.AbstractIterator: boolean hasNext()
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minWithOrThrow(java.util.Map,java.util.Comparator)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object[] growBuffer(java.lang.Object[],int,int)
androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1: FlowKt__TransformKt$withIndex$1$1(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$IntRef)
androidx.lifecycle.ViewTreeViewModelKt: androidx.lifecycle.ViewModelStoreOwner findViewTreeViewModelStoreOwner(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
kotlinx.coroutines.selects.SelectBuilder: void onTimeout(long,kotlin.jvm.functions.Function1)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void updateRunningState(kotlin.coroutines.jvm.internal.CoroutineStackFrame,java.lang.String)
androidx.collection.MapCollections$KeySet: boolean isEmpty()
androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.Iterator keyValueIterator(kotlin.jvm.functions.Function2)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.core.text.ICUCompat: java.lang.String getScriptBelowApi21(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: java.util.List split$default(java.lang.CharSequence,java.util.regex.Pattern,int,int,java.lang.Object)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
kotlin.jvm.internal.CharCompanionObject: void getSIZE_BYTES$annotations()
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
kotlin.collections.ArraysKt___ArraysKt: double component3(double[])
android.support.v4.app.INotificationSideChannel$Default: void cancelAll(java.lang.String)
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlinx.coroutines.sync.MutexImpl$onLock$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation: void completeEffect(androidx.fragment.app.SpecialEffectsController$Effect)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOrNull(java.lang.Float[])
androidx.fragment.app.FragmentManager$SaveBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle,java.lang.String)
androidx.core.view.ContentInfoCompat$CompatImpl: android.net.Uri getLinkUri()
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigInteger(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt$onEach$1: java.lang.Object invoke(java.lang.Object)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection copy(kotlin.reflect.KVariance,kotlin.reflect.KType)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.app.NotificationCompat$BubbleMetadata: boolean getAutoExpandBubble()
androidx.core.graphics.WeightTypefaceApi14: android.graphics.Typeface platformTypefaceCreate(android.graphics.Typeface,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: double reduceRight(double[],kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathHKt: void getPI$annotations()
androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)
androidx.core.view.ViewCompat$1: java.lang.Boolean frameworkGet(android.view.View)
androidx.fragment.app.Fragment$7: java.lang.Object apply(java.lang.Object)
androidx.core.content.FileProvider: java.lang.String getTypeAnonymous(android.net.Uri)
kotlin.UNumbersKt: int countLeadingZeroBits-7apg3OU(byte)
androidx.versionedparcelable.VersionedParcelize: boolean isCustom()
kotlin.jvm.internal.TypeReference: TypeReference(kotlin.reflect.KClassifier,java.util.List,boolean)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: SequencesKt___SequencesKt$filterIndexed$1(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Object[],kotlin.jvm.functions.Function2)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
kotlinx.coroutines.scheduling.DefaultScheduler: java.lang.String toString()
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: SequencesKt___SequencesKt$runningFold$1(java.lang.Object,kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: java.lang.String filter(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.properties.NotNullVar: void setValue(java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
kotlinx.coroutines.sync.SemaphoreImpl$addAcquireToQueue$createNewSegment$1: SemaphoreImpl$addAcquireToQueue$createNewSegment$1()
androidx.core.view.SoftwareKeyboardControllerCompat$Impl: SoftwareKeyboardControllerCompat$Impl()
androidx.fragment.app.Fragment: boolean isAdded()
kotlinx.coroutines.time.TimeKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,java.time.Duration)
kotlin.ranges.ULongProgressionIterator: boolean hasNext()
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,java.util.Date,long,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow runningFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.tracing.TraceApi18Impl: TraceApi18Impl()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
androidx.core.net.TrafficStatsCompat: void tagSocket(java.net.Socket)
androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata(android.app.Notification)
kotlinx.coroutines.flow.ChannelAsFlow: ChannelAsFlow(kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobSupport$AwaitContinuation: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
androidx.lifecycle.SavedStateViewModelFactory: SavedStateViewModelFactory(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle)
kotlin.ranges.ComparableOpenEndRange: boolean contains(java.lang.Comparable)
kotlin.collections.ArraysKt___ArraysKt: byte[] sliceArray(byte[],kotlin.ranges.IntRange)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isMethodSetSplitInfoCallbackWindowConsumerValid()
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.core.app.ActivityOptionsCompat$Api23Impl: void requestUsageTimeReport(android.app.ActivityOptions,android.app.PendingIntent)
androidx.core.graphics.CanvasKt: void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.jvm.internal.DoubleCompanionObject: void getMAX_VALUE$annotations()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: FlowKt__ReduceKt$last$2(kotlin.jvm.internal.Ref$ObjectRef)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double minBy(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenComparator(java.util.Comparator,kotlin.jvm.functions.Function2)
androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
androidx.core.app.NotificationChannelCompat$Api26Impl: int getImportance(android.app.NotificationChannel)
kotlin.io.TextStreamsKt: java.io.StringReader reader(java.lang.String)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl: void notifyViewAppeared(android.view.contentcapture.ContentCaptureSession,android.view.ViewStructure)
kotlin.collections.MapsKt__MapsKt: java.lang.Object component2(java.util.Map$Entry)
androidx.fragment.app.FragmentManager: void enableDebugLogging(boolean)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
kotlin.collections.AbstractList$IteratorImpl: int getIndex()
androidx.customview.widget.FocusStrategy: java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)
androidx.fragment.app.Fragment$5: android.view.View onFindViewById(int)
androidx.core.app.ShareCompat$IntentBuilder: void startChooser()
androidx.concurrent.futures.AbstractResolvableFuture: java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.selects.SelectImplementation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getState$FU$p()
androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)
kotlin.jvm.internal.PrimitiveSpreadBuilder: int getSize(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.PlatformView$-CC: void $default$onFlutterViewDetached(io.flutter.plugin.platform.PlatformView)
kotlin.ranges.RangesKt___RangesKt: RangesKt___RangesKt()
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeout(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateIntentPredicates$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentContainerView: void addDisappearingFragmentView(android.view.View)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.IconCompat: IconCompat(int)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void create(boolean)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence)
kotlin.DeepRecursiveScopeImpl: DeepRecursiveScopeImpl(kotlin.jvm.functions.Function3,java.lang.Object)
androidx.window.embedding.SplitAttributes$LayoutDirection: java.lang.String toString()
kotlin.UShortArray: java.lang.String toString-impl(short[])
androidx.fragment.app.FragmentManager: boolean isParentAdded()
androidx.annotation.VisibleForTesting$Companion: VisibleForTesting$Companion()
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
androidx.core.view.ViewCompat: float getRotationX(android.view.View)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi1: void activityDestroyed()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean)
io.flutter.embedding.android.FlutterFragment: void setDelegateFactory(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$DelegateFactory)
androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object fold$$forInline(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.text.CharsKt__CharJVMKt: char toTitleCase(char)
kotlin.io.FilesKt__FileReadWriteKt: java.io.OutputStreamWriter writer(java.io.File,java.nio.charset.Charset)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.ranges.ClosedFloatRange: java.lang.Float getStart()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaClass(kotlin.reflect.KClass)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: void dispose()
kotlin.io.path.ExceptionsCollector: int getTotalExceptions()
androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: float getAbsoluteValue(float)
kotlin.time.DurationKt: int skipWhile(java.lang.String,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
kotlin.collections.builders.MapBuilder: java.util.Set getKeys()
androidx.core.graphics.drawable.IconCompat: android.os.Bundle toBundle()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(byte[],kotlin.ranges.IntRange)
androidx.fragment.app.LogWriter: void flushBuilder()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)
kotlin.ranges.OpenEndFloatRange: boolean contains(float)
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
androidx.lifecycle.MethodCallsLogger: boolean approveCall(java.lang.String,int)
kotlin.ULong: kotlin.ranges.ULongRange rangeUntil-VKZWuLQ(long,long)
androidx.collection.CircularArray: java.lang.Object popLast()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat computeAnimationBounds(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map plus(java.util.Map,kotlin.Pair[])
androidx.activity.OnBackPressedDispatcher$5: void invoke()
kotlin.experimental.BitwiseOperationsKt: short or(short,short)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
io.flutter.plugin.editing.TextInputPlugin$1: void show()
kotlin.KotlinNullPointerException: KotlinNullPointerException(java.lang.String)
androidx.window.embedding.SplitAttributes$Builder: androidx.window.embedding.SplitAttributes build()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(int[])
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
kotlinx.coroutines.internal.LimitedDispatcher: boolean tryAllocateWorker()
kotlinx.coroutines.AwaitAll: AwaitAll(kotlinx.coroutines.Deferred[])
kotlin.io.TextStreamsKt: byte[] readBytes(java.net.URL)
androidx.core.app.NotificationCompat: int getVisibility(android.app.Notification)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: void selectInRegistrationPhase(java.lang.Object)
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Default: android.os.IBinder asBinder()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.concurrent.locks.ReentrantLock access$getLock$p(kotlinx.coroutines.channels.BroadcastChannelImpl)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.location.LocationManagerCompat$GpsStatusTransport: void unregister()
kotlin.ranges.LongProgression$Companion: LongProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace$Named)
androidx.core.view.ViewKt: boolean isVisible(android.view.View)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(boolean[],kotlin.jvm.functions.Function1)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlin.sequences.SequenceBuilderIterator: void resumeWith(java.lang.Object)
androidx.fragment.app.FragmentManager: void clearBackStack(java.lang.String)
androidx.core.app.NotificationCompat$CallStyle: boolean displayCustomViewInline()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4(java.util.Iterator)
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
androidx.window.embedding.SplitPairRule$Builder: SplitPairRule$Builder(java.util.Set)
androidx.core.widget.TextViewCompat$Api26Impl: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowCombineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[])
androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)
androidx.profileinstaller.Encoding: int bitsToBytes(int)
androidx.core.util.TimeUtils: int accumField(int,int,boolean,int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: int access$getAllocated$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapValues(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: long getSeconds-UwyO8pc(double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-kdPth3s(byte[],byte[])
io.flutter.view.AccessibilityBridge: android.graphics.Rect getBoundsInScreen(android.graphics.Rect)
kotlin.enums.EnumEntriesSerializationProxy: java.lang.Object readResolve()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])
androidx.customview.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: FlowKt__EmittersKt$unsafeTransform$1$1(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1: SavedStateHandleSupport$DEFAULT_ARGS_KEY$1()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.content.Context,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(long[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double maxOf(double,double,double)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[])
kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.Continuation crossFunctionCompletion(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: float maxByOrThrow(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment: void onNewIntent(android.content.Intent)
kotlin.sequences.TransformingSequence$iterator$1: void remove()
kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.window.area.EmptyDecorator: androidx.window.area.WindowAreaController decorate(androidx.window.area.WindowAreaController)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$1: StreamsKt$asSequence$$inlined$Sequence$1(java.util.stream.Stream)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
kotlin.io.encoding.DecodeInputStream: int decodeSymbolBufferInto(byte[],int,int,int)
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: FragmentManager$FragmentIntentSenderContract()
androidx.fragment.app.SpecialEffectsController$Operation$State$Companion: androidx.fragment.app.SpecialEffectsController$Operation$State from(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
kotlin.text.StringsKt__StringsKt: java.lang.String trimEnd(java.lang.String,char[])
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle getHandle()
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character min(java.lang.CharSequence)
androidx.fragment.app.strictmode.FragmentReuseViolation: FragmentReuseViolation(androidx.fragment.app.Fragment,java.lang.String)
androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList getSharedElementFirstOutViews()
kotlin.collections.ArraysKt___ArraysKt: char component1(char[])
kotlin.sequences.DropTakeSequence: kotlin.sequences.Sequence drop(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sortedArrayDescending--ajY-9A(int[])
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: int compareTo(java.lang.Object)
androidx.core.view.VelocityTrackerCompat: void clear(android.view.VelocityTracker)
kotlin.io.ConsoleKt: void print(byte)
kotlin.Result$Companion: Result$Companion()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
androidx.fragment.app.strictmode.FragmentStrictMode: void onPolicyViolation(androidx.fragment.app.strictmode.Violation)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion: androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1: ExtensionWindowBackendApi1(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter)
kotlin.time.Duration$Companion: double convert(double,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
io.flutter.plugin.editing.SpellCheckPlugin: SpellCheckPlugin(android.view.textservice.TextServicesManager,io.flutter.embedding.engine.systemchannels.SpellCheckChannel)
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmitLocked(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,long)
androidx.window.core.ConsumerAdapter$createSubscription$2: void dispose()
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1: void onTransitionStart(android.transition.Transition)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry getTextureRegistry()
kotlin.UByte: int floorDiv-7apg3OU(byte,byte)
kotlin.collections.EmptyList: java.lang.Object get(int)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: void releasePermission()
androidx.core.content.res.TypedArrayKt: int getDimensionPixelOffsetOrThrow(android.content.res.TypedArray,int)
kotlin.UShortKt: short toUShort(short)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: FlowKt__DelayKt$debounceInternal$1$values$1$1(kotlinx.coroutines.channels.ProducerScope)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: void setDisplayCutouts(java.util.List)
kotlin.TypeAliasesKt: void ArithmeticException$annotations()
androidx.activity.EdgeToEdge: void enable(androidx.activity.ComponentActivity,androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle)
androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback,android.os.Handler)
kotlin.sequences.SequencesKt___SequencesKt: double maxOrThrow(kotlin.sequences.Sequence)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.String toString(byte[],java.nio.charset.Charset)
kotlin.UShort: kotlin.ranges.UIntRange rangeTo-xj2QHRw(short,short)
androidx.core.view.WindowInsetsAnimationCompat: WindowInsetsAnimationCompat(int,android.view.animation.Interpolator,long)
kotlinx.coroutines.RunnableKt$Runnable$1: void run()
kotlin.ranges.IntProgressionIterator: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: void reverse(char[],int,int)
kotlin.coroutines.jvm.internal.RunSuspend: void await()
kotlinx.coroutines.EventLoopImplBase: boolean isCompleted()
kotlin.UShort: kotlin.UShort box-impl(short)
androidx.core.view.ViewGroupKt$iterator$1: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object random(java.lang.Object[])
androidx.collection.SparseArrayCompat: int indexOfKey(int)
kotlin.math.MathKt__MathJVMKt: int roundToInt(float)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: boolean cancel$default(kotlinx.coroutines.CancellableContinuation,java.lang.Throwable,int,java.lang.Object)
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.fragment.app.FragmentState: java.lang.String toString()
kotlinx.coroutines.CompletedWithCancellation: kotlinx.coroutines.CompletedWithCancellation copy$default(kotlinx.coroutines.CompletedWithCancellation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.collection.SparseArrayCompat: int keyAt(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double singleOrNull(double[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.Flow)
androidx.customview.R$integer: R$integer()
androidx.core.app.NotificationChannelCompat$Api26Impl: NotificationChannelCompat$Api26Impl()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
kotlin.text.RegexKt$fromInt$1$1: java.lang.Boolean invoke(java.lang.Enum)
kotlin.ULongArray: boolean contains(java.lang.Object)
androidx.core.content.IntentSanitizer: IntentSanitizer(androidx.core.content.IntentSanitizer$1)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,byte)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
kotlin.text.StringsKt___StringsKt: long sumOfULong(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceRange(java.lang.String,int,int,java.lang.CharSequence)
io.flutter.plugin.editing.TextInputPlugin: void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
androidx.activity.result.contract.ActivityResultContract$SynchronousResult: ActivityResultContract$SynchronousResult(java.lang.Object)
kotlinx.coroutines.LazyDeferredCoroutine: LazyDeferredCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort elementAtOrNull-nggk6HY(short[],int)
androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper: boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl: void removeSubscriber(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAvoidBackgroundClipping()
com.getkeepsafe.relinker.ReLinkerInstance$1: ReLinkerInstance$1(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: BufferedChannel$onReceive$1()
androidx.versionedparcelable.VersionedParcel: int readExceptionCode()
androidx.core.util.LongSparseArrayKt$valueIterator$1: LongSparseArrayKt$valueIterator$1(android.util.LongSparseArray)
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
androidx.lifecycle.SavedStateHandlesProvider: SavedStateHandlesProvider(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2: WindowInfoTrackerImpl$windowLayoutInfo$2$2(androidx.window.layout.WindowInfoTrackerImpl,androidx.core.util.Consumer)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: java.lang.Object translateActivityIntentPredicates(java.util.Set)
androidx.customview.R: R()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-qFRl0hI(int[],int)
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
androidx.core.animation.AnimatorKt$addPauseListener$2: AnimatorKt$addPauseListener$2()
kotlinx.coroutines.Job$DefaultImpls: boolean cancel$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
androidx.core.util.SparseIntArrayKt: boolean isNotEmpty(android.util.SparseIntArray)
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
kotlin.io.ConsoleKt: void println(int)
androidx.customview.widget.ExploreByTouchHelper$1: void obtainBounds(java.lang.Object,android.graphics.Rect)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(long[])
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
io.flutter.embedding.android.FlutterTextureView: boolean shouldNotify()
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
kotlin.sequences.FilteringSequence$iterator$1: void remove()
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlin.coroutines.CoroutineContext getContext()
kotlin.io.TerminateException: TerminateException(java.io.File)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.View)
com.getkeepsafe.relinker.elf.ElfParser: long readWord(java.nio.ByteBuffer,long)
androidx.activity.ComponentActivity: void reportFullyDrawn()
androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenCreated(androidx.lifecycle.LifecycleOwner,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$entries$1: java.util.Map$Entry invoke(java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(double)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.ranges.CharProgression: char getLast()
kotlinx.coroutines.channels.BufferedChannel: java.lang.String toString()
kotlinx.coroutines.internal.MainDispatcherFactory: java.lang.String hintOnError()
androidx.core.app.NotificationChannelCompat: boolean shouldVibrate()
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-QwZRm1k(long[])
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isGranularScrollingSupported()
kotlin.collections.ArraysKt___ArraysKt: boolean last(boolean[],kotlin.jvm.functions.Function1)
kotlin.io.path.FileVisitorBuilderImpl: FileVisitorBuilderImpl()
androidx.fragment.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(char[],kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
kotlin.collections.builders.ListBuilderKt: void resetAt(java.lang.Object[],int)
kotlinx.coroutines.future.FutureKt$asCompletableFuture$1: FutureKt$asCompletableFuture$1(java.util.concurrent.CompletableFuture,kotlinx.coroutines.Deferred)
androidx.annotation.experimental.R: R()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt max--ajY-9A(int[])
androidx.core.widget.AutoScrollHelper: void scrollTargetBy(int,int)
androidx.lifecycle.SavedStateHandle$Companion: SavedStateHandle$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.DelimitedRangesSequence: int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.ULongArray: kotlin.ULongArray box-impl(long[])
androidx.window.embedding.SplitAttributes: SplitAttributes()
androidx.fragment.app.BackStackRecordState: BackStackRecordState(android.os.Parcel)
kotlin.collections.ArraysKt___ArraysKt: float[] toFloatArray(java.lang.Float[])
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)
kotlinx.coroutines.internal.InlineList: int hashCode()
kotlin.UShortKt: short toUShort(byte)
androidx.core.view.ViewCompat: boolean isImportantForContentCapture(android.view.View)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)
kotlin.UInt: UInt(int)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
io.flutter.util.ViewUtils: ViewUtils()
kotlin.text.StringsKt___StringsKt: boolean all(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getLocalPathStrategy()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void addMenuProvider(androidx.core.view.MenuProvider)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function4)
androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()
kotlin.io.encoding.Base64: boolean isUrlSafe$kotlin_stdlib()
kotlin.NumbersKt__NumbersKt: int countTrailingZeroBits(byte)
androidx.core.location.GnssStatusCompat: int getSvid(int)
kotlinx.coroutines.JobKt__JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)
androidx.annotation.InspectableProperty: int attributeId()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void lambda$flush$1()
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetrics fromDisplayMetrics$window_release(android.util.DisplayMetrics)
kotlin.time.ComparableTimeMark$DefaultImpls: int compareTo(kotlin.time.ComparableTimeMark,kotlin.time.ComparableTimeMark)
androidx.core.app.Person$Api28Impl: Person$Api28Impl()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(int[],kotlin.jvm.functions.Function1)
kotlin.ULong: long shr-s-VKNKU(long,int)
kotlin.collections.ArraysKt___ArraysKt: long getOrElse(long[],int,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: java.lang.Boolean invoke(java.lang.Object)
kotlin.io.FilesKt__UtilsKt: kotlin.io.FilePathComponents normalize$FilesKt__UtilsKt(kotlin.io.FilePathComponents)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
kotlin.text.MatchResult$Destructured: java.lang.String component5()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathBySubpath(java.lang.String,java.lang.String)
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function2)
androidx.core.os.HandlerKt: java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.core.location.GpsStatusWrapper: float getCn0DbHz(int)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()
androidx.tracing.Trace: void beginAsyncSection(java.lang.String,int)
kotlin.text.CharsKt__CharJVMKt: boolean isHighSurrogate(char)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int elementAt-qFRl0hI(int[],int)
io.flutter.plugin.platform.PlatformViewWrapper: PlatformViewWrapper(android.content.Context,io.flutter.plugin.platform.PlatformViewRenderTarget)
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
androidx.core.os.UserManagerCompat: UserManagerCompat()
androidx.core.app.RemoteActionCompat: android.app.PendingIntent getActionIntent()
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(java.lang.Object[])
kotlin.ranges.RangesKt___RangesKt: char random(kotlin.ranges.CharRange,kotlin.random.Random)
androidx.core.app.NotificationCompat$Builder: int getColor()
androidx.core.provider.FontProvider: FontProvider()
kotlin.jvm.internal.TypeReference: void getPlatformTypeUpperBound$kotlin_stdlib$annotations()
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: ArraysKt___ArraysKt$withIndex$8(boolean[])
androidx.core.content.res.ViewingConditions: float[] getRgbD()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLights(int,int,int)
androidx.versionedparcelable.R: R()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean attachToEngineAutomatically()
kotlinx.coroutines.internal.LockFreeTaskQueue: void close()
androidx.activity.FullyDrawnReporterKt: java.lang.Object reportWhenComplete(androidx.activity.FullyDrawnReporter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: java.lang.Object invoke()
kotlinx.coroutines.ChildJob$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ChildJob,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.OnTimeoutKt: void onTimeout(kotlinx.coroutines.selects.SelectBuilder,long,kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo getAnimationInfo()
androidx.core.widget.NestedScrollView: int consumeFlingInVerticalStretch(int)
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation: androidx.fragment.app.Fragment getExpectedParentFragment()
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext)
androidx.core.location.GpsStatusWrapper: boolean hasBasebandCn0DbHz(int)
androidx.window.embedding.EmbeddingBackend: androidx.window.embedding.SplitController$SplitSupportStatus getSplitSupportStatus()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object processResultSelectReceiveOrNull(java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object find(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
kotlin.collections.unsigned.UArraysKt___UArraysKt: UArraysKt___UArraysKt()
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object last(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: long getNanoseconds(long)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void removeShortcuts(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: int maxWithOrThrow(int[],java.util.Comparator)
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: BufferedChannelKt$createSegmentFunction$1()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parse(java.net.URL)
androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)
kotlin.text.StringsKt__StringsKt: int indexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: JobSupport$Finishing(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)
kotlin.collections.AbstractMap: boolean equals(java.lang.Object)
kotlin.sequences.TakeSequence$iterator$1: java.util.Iterator getIterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.content.res.ResourcesCompat$Api29Impl: ResourcesCompat$Api29Impl()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
kotlin.jvm.internal.FunctionImpl: int getArity()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(double[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView,android.os.Handler)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: NotificationCompat$BubbleMetadata$Api30Impl()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(char[])
kotlin.jvm.internal.Intrinsics: void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String)
androidx.activity.ViewTreeOnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcherOwner get(android.view.View)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int)
androidx.fragment.app.ListFragment: void setEmptyText(java.lang.CharSequence)
kotlin.collections.SetsKt__SetsKt: SetsKt__SetsKt()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.collection.ArrayMap: java.util.Set entrySet()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object invokeSuspend(java.lang.Object)
androidx.profileinstaller.ProfileInstaller: void deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(short[],kotlin.jvm.functions.Function2)
androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable createFinalException(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: android.view.accessibility.AccessibilityWindowInfo unwrap()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow channelFlow(kotlin.jvm.functions.Function2)
kotlinx.coroutines.Deferred$DefaultImpls: void cancel(kotlinx.coroutines.Deferred)
androidx.core.graphics.ColorUtils: void colorToHSL(int,float[])
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean isAvailableOffline()
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type getJavaType(kotlin.reflect.KTypeProjection)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.RequiresOptIn$Level: kotlin.RequiresOptIn$Level valueOf(java.lang.String)
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,androidx.window.embedding.SplitAttributes,java.lang.String,androidx.window.embedding.SplitRule$FinishBehavior,androidx.window.embedding.SplitRule$FinishBehavior,boolean,int,int,int,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.EmbeddingAspectRatio,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)
androidx.lifecycle.Transformations$switchMap$2: void onChanged(java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-6eNON_k(long,long)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString()
kotlin.time.Duration$Companion: long getDays-UwyO8pc(int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOfNotNull(java.lang.Object[])
androidx.core.provider.FontRequest: java.lang.String getIdentifier()
kotlin.UIntArray: boolean add-WZ4Q5Ns(int)
kotlinx.coroutines.debug.AgentPremain: void installSignalHandler()
androidx.fragment.app.FragmentStateManager: void destroy()
androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.fragment.app.FragmentStateManager: void attach()
androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.core.location.GnssStatusWrapper: boolean equals(java.lang.Object)
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.view.ViewCompat: androidx.core.view.ContentInfoCompat lambda$static$0(androidx.core.view.ContentInfoCompat)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.lifecycle.MediatorLiveData: void onInactive()
kotlin.ranges.UIntRange: UIntRange(int,int)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel map$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.loader.content.Loader: void onContentChanged()
androidx.lifecycle.SavedStateHandle: androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String,boolean,java.lang.Object)
kotlin.text.Regex$findAll$1: Regex$findAll$1(kotlin.text.Regex,java.lang.CharSequence,int)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$SplitSupportStatus getSplitSupportStatus()
kotlin.reflect.KClass: boolean isInner()
kotlin.UIntArrayKt: int[] UIntArray(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.plugin.common.EventChannel$EventSink: void endOfStream()
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectOld(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.UNumbersKt: int countOneBits-7apg3OU(byte)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[])
androidx.core.location.LocationCompat$Api26Impl: void setBearingAccuracyDegrees(android.location.Location,float)
androidx.core.graphics.WeightTypefaceApi26: long nativeCreateFromTypefaceWithExactStyle(long,int,boolean)
kotlin.time.Duration: double getInSeconds-impl(long)
androidx.fragment.app.strictmode.FragmentStrictMode: void onGetRetainInstanceUsage(androidx.fragment.app.Fragment)
kotlin.io.ByteStreamsKt$iterator$1: byte nextByte()
kotlin.text.UStringsKt: java.lang.String toString-LxnNnR4(byte,int)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.view.AccessibilityBridge: int access$1172(io.flutter.view.AccessibilityBridge,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: ArraysKt___ArraysJvmKt$asList$6(double[])
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray(double[],int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(androidx.fragment.app.FragmentActivity)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.fragment.app.SpecialEffectsController$Operation getLastIn()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.plugin.platform.PlatformViewsController: void detach()
kotlin.collections.ArraysKt___ArraysKt: double minWithOrThrow(double[],java.util.Comparator)
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: void setClip(android.content.ClipData)
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
androidx.versionedparcelable.VersionedParcel: int getType(java.lang.Object)
kotlin.ranges.CharProgression: CharProgression(char,char,int)
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.graphics.Insets getLowerBound()
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable[] sortedArrayDescending(java.lang.Comparable[])
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1: void onTextChanged(java.lang.CharSequence,int,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: java.lang.Character get(int)
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat: boolean validateExtensionInterface()
kotlin.collections.ArraysKt___ArraysJvmKt: float[] plus(float[],float[])
androidx.core.location.LocationCompat: float getMslAltitudeAccuracyMeters(android.location.Location)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlin.UShortArray: int size()
kotlin.UShort: int rem-xj2QHRw(short,short)
androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
kotlin.ULong: long div-7apg3OU(long,byte)
kotlin.sequences.SubSequence: kotlin.sequences.Sequence drop(int)
androidx.core.view.ViewCompat: float getX(android.view.View)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_INVOKED$p()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ClassReference: boolean isCompanion()
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener: void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer randomOrNull(kotlin.ranges.IntRange)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCircular(boolean)
kotlin.collections.SetsKt__SetsKt: java.util.Set orEmpty(java.util.Set)
kotlin.collections.ArraysKt___ArraysKt: int component1(int[])
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.flow.Flow dropChannelOperators()
kotlin.collections.ArraysKt___ArraysKt: long first(long[],kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.elf.ElfParser: long readLong(java.nio.ByteBuffer,long)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void update(androidx.core.app.ActivityOptionsCompat)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nothingType(kotlin.reflect.KType)
kotlin.collections.MutableMapWithDefaultImpl: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.PathParser$PathDataNode: char getType()
androidx.window.layout.SafeWindowLayoutComponentProvider: java.lang.Class access$getWindowLayoutComponentClass(androidx.window.layout.SafeWindowLayoutComponentProvider)
kotlin.RequiresOptIn$Level: RequiresOptIn$Level(java.lang.String,int)
androidx.core.view.ViewKt$doOnAttach$1: void onViewAttachedToWindow(android.view.View)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Collection getValues()
kotlin.time.Duration$Companion: long microseconds-UwyO8pc(int)
kotlin.collections.AbstractIterator: AbstractIterator()
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.IntStream)
androidx.core.util.LongSparseArrayKt$keyIterator$1: LongSparseArrayKt$keyIterator$1(android.util.LongSparseArray)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: int hashCode()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5102(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: UndispatchedContextCollector$emitRef$1(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.LifecycleDispatcher: LifecycleDispatcher()
androidx.core.app.ActivityCompat$Api31Impl: ActivityCompat$Api31Impl()
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: java.util.Iterator invoke()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
kotlinx.coroutines.flow.FlowKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.lang.Object[])
androidx.core.graphics.drawable.RoundedBitmapDrawable21: boolean hasMipMap()
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.core.widget.TextViewKt$addTextChangedListener$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object random(java.lang.Object[],kotlin.random.Random)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] $values()
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRetrieved(android.graphics.Typeface)
kotlin.collections.ArraysKt___ArraysKt: char random(char[],kotlin.random.Random)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-JzugnMA(long[],kotlin.random.Random)
androidx.core.graphics.PathKt: android.graphics.Path plus(android.graphics.Path,android.graphics.Path)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
kotlin.text.StringsKt___StringsJvmKt: java.math.BigInteger sumOfBigInteger(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$3$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: char lowercaseChar(char)
androidx.lifecycle.AbstractSavedStateViewModelFactory: AbstractSavedStateViewModelFactory(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle)
androidx.activity.OnBackPressedDispatcher: void access$onBackStarted(androidx.activity.OnBackPressedDispatcher,androidx.activity.BackEventCompat)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.JobSupport: boolean getCompletionCauseHandled()
androidx.core.view.ViewCompat: int getOverScrollMode(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: long random(long[])
kotlin.jvm.internal.MutablePropertyReference2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7(double[])
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
kotlin.text.StringsKt___StringsKt: java.util.List zip(java.lang.CharSequence,java.lang.CharSequence)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path copyTo(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String)
kotlin.jvm.internal.InlineMarker: void finallyEnd(int)
android.support.v4.os.IResultReceiver2$Stub: android.os.IBinder asBinder()
kotlinx.coroutines.CoroutineContextKt: java.lang.Object withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$CarExtender$Api29Impl: NotificationCompat$CarExtender$Api29Impl()
kotlin.collections.ArraysKt___ArraysKt: float first(float[],kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: double nextDown(double)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: int[] toIntArray(java.util.Collection)
androidx.fragment.app.Fragment: android.content.Context getContext()
kotlinx.coroutines.Dispatchers: void shutdown()
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat build()
androidx.core.text.util.LocalePreferences: java.lang.String getHourCycle(boolean)
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
kotlinx.coroutines.flow.FlowKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.time.Duration: java.lang.String toString-impl(long,kotlin.time.DurationUnit,int)
kotlin.ranges.CharRange: java.lang.String toString()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.fonts.Font findBaseFont(android.graphics.fonts.FontFamily,int)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform: PagerTitleStrip$SingleLineAllCapsTransform(android.content.Context)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: androidx.core.graphics.Insets getHigherBounds(android.view.WindowInsetsAnimation$Bounds)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.lang.String,int)
kotlin.collections.AbstractSet: java.util.Iterator iterator()
kotlin.collections.builders.MapBuilder$Companion: MapBuilder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int indexOf-WZ4Q5Ns(int)
androidx.lifecycle.DispatchQueue: boolean canRun()
androidx.core.app.NotificationCompatBuilder$Api26Impl: NotificationCompatBuilder$Api26Impl()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getInitialRoute()
kotlin.collections.ArraysKt___ArraysKt: void forEach(long[],kotlin.jvm.functions.Function1)
androidx.activity.contextaware.ContextAwareHelper: ContextAwareHelper()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object lastOrNull(kotlin.sequences.Sequence)
androidx.fragment.app.FragmentController: int getActiveFragmentsCount()
androidx.core.view.DifferentialMotionFlingController: float getCurrentVelocity(android.view.MotionEvent,int)
androidx.fragment.app.FragmentStore: void burpActive()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-r7IrZao(long[],int)
kotlin.time.DurationKt: void getSeconds$annotations(long)
io.flutter.plugin.platform.WindowManagerHandler: WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,long,kotlin.jvm.functions.Function1)
kotlin.enums.EnumEntriesList: boolean contains(java.lang.Enum)
kotlinx.coroutines.debug.internal.AgentInstallationType: void setInstalledStatically$kotlinx_coroutines_core(boolean)
com.getkeepsafe.relinker.SystemLibraryLoader: void loadPath(java.lang.String)
kotlin.UByteArray: kotlin.UByteArray box-impl(byte[])
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: WindowInsetsAnimationCompat$BoundsCompat(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
kotlinx.coroutines.ThreadContextElement: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyInto-sIZ3KeM$default(int[],int[],int,int,int,int,java.lang.Object)
kotlin.UShort: short constructor-impl(short)
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte minOf(byte,byte,byte)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: java.lang.Object invoke(java.lang.Object)
androidx.core.os.ParcelCompat: android.os.Parcelable readParcelable(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.core.content.res.TypedArrayKt: java.lang.String getStringOrThrow(android.content.res.TypedArray,int)
kotlinx.coroutines.scheduling.TaskImpl: TaskImpl(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)
androidx.fragment.app.BackStackRecordState: int describeContents()
kotlin.jvm.Throws: java.lang.Class[] exceptionClasses()
kotlin.time.Duration: long addValuesMixedRanges-UwyO8pc(long,long,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream)
androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
kotlin.collections.AbstractMap: int size()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(java.lang.Object[],kotlin.ranges.IntRange)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
androidx.collection.LruCache: void trimToSize(int)
io.flutter.Log: void v(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.content.res.CamUtils: CamUtils()
androidx.lifecycle.ProcessLifecycleOwner: void attach$lifecycle_process_release(android.content.Context)
androidx.window.area.reflectionguard.WindowAreaComponentValidator: boolean isWindowAreaComponentValid$window_release(java.lang.Class,int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.coroutines.SafeContinuation$Companion: SafeContinuation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInWindow(android.graphics.Rect)
kotlin.coroutines.ContinuationKt: void resumeWithException(kotlin.coroutines.Continuation,java.lang.Throwable)
androidx.loader.content.CursorLoader: void setSelection(java.lang.String)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void registerListeningView(android.view.View)
kotlin.io.path.FileVisitorBuilder: void onPreVisitDirectory(kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManager$5: FragmentManager$5(androidx.fragment.app.FragmentManager)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minOfWith(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] asIntArray--ajY-9A(int[])
kotlin.text.StringsKt__StringsKt: java.lang.String orEmpty(java.lang.String)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)
androidx.core.graphics.MatrixKt: android.graphics.Matrix scaleMatrix(float,float)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$7000(io.flutter.view.AccessibilityBridge,int)
androidx.core.content.ContextCompat: java.io.File[] getObbDirs(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: char[] sortedArrayDescending(char[])
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,float)
androidx.viewpager.R$layout: R$layout()
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
io.flutter.embedding.android.KeyData: java.nio.ByteBuffer toBytes()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object getOrElse(java.util.List,int,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
kotlinx.coroutines.CompletableDeferredImpl: CompletableDeferredImpl(kotlinx.coroutines.Job)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object)
kotlinx.coroutines.AwaitAll$AwaitAllNode: void invoke(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2(kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices-rL5Bavg$annotations(short[])
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceOrNull(int[],kotlin.jvm.functions.Function2)
kotlin.sequences.FilteringSequence$iterator$1: void setNextItem(java.lang.Object)
kotlin.collections.jdk8.CollectionsJDK8Kt: java.lang.Object getOrDefault(java.util.Map,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ProducerCoroutine: void onCompleted(kotlin.Unit)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(char[],char)
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.view.Surface createSurface()
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroupsCompat(java.util.List)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int,int)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-oBK06Vg$default(int[],int,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(long[],kotlin.jvm.functions.Function1)
io.flutter.plugin.common.BasicMessageChannel: void setWarnsOnChannelOverflow(io.flutter.plugin.common.BinaryMessenger,java.lang.String,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1: CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1(java.lang.Iterable)
kotlinx.coroutines.DelayKt: long toDelayMillis-LRDsOJo(long)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void startBackGesture(android.window.BackEvent)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
kotlin.collections.builders.MapBuilder$Companion: MapBuilder$Companion()
androidx.window.layout.util.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void offset(int,double,double)
kotlin.DeprecationLevel: DeprecationLevel(java.lang.String,int)
kotlin.collections.ArrayDeque: java.lang.Object removeFirst()
androidx.core.widget.PopupMenuCompat: PopupMenuCompat()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int random-2D5oskM(int[],kotlin.random.Random)
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
kotlinx.coroutines.CoroutineScopeKt: void cancel(kotlinx.coroutines.CoroutineScope,java.lang.String,java.lang.Throwable)
androidx.core.content.res.GrowingArrayUtils: boolean[] insert(boolean[],int,int,boolean)
androidx.core.view.ViewCompat: void setPivotX(android.view.View,float)
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)
androidx.core.app.RemoteInput: androidx.core.app.RemoteInput fromPlatform(android.app.RemoteInput)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropLast(java.util.List,int)
kotlin.collections.CollectionsKt___CollectionsKt: short[] toShortArray(java.util.Collection)
androidx.core.view.MenuKt: void forEachIndexed(android.view.Menu,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.os.BuildCompat: boolean isAtLeastU()
kotlin.io.path.DirectoryEntriesReader: java.util.List readEntries(kotlin.io.path.PathNode)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: NotificationCompat$BubbleMetadata$Builder(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat)
kotlin.collections.AbstractMap$values$1: java.util.Iterator iterator()
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
kotlinx.coroutines.CoroutineContextKt: java.lang.Object withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: java.lang.Object emit(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
androidx.core.view.WindowInsetsControllerCompat$Impl30$1: void onCancelled(android.view.WindowInsetsAnimationController)
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sortedArray-GBYM_sE(byte[])
org.intellij.lang.annotations.MagicConstant: long[] flags()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
kotlin.time.DurationKt: long parseDuration(java.lang.String,boolean)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setDefaultSplitAttributes(androidx.window.embedding.SplitAttributes)
kotlin.collections.ArraysKt___ArraysKt: long maxWithOrThrow(long[],java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: ComparisonsKt__ComparisonsKt$thenBy$1(java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1: SidecarAdapter$translate$checkedFeature$1()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
androidx.annotation.InspectableProperty$FlagEntry: int target()
androidx.core.os.LocaleListCompatWrapper: int hashCode()
kotlin.text.CharsKt__CharKt: java.lang.String titlecase(char)
androidx.fragment.app.FragmentViewLifecycleOwner: void setCurrentState(androidx.lifecycle.Lifecycle$State)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
kotlin.io.encoding.DecodeInputStream: int getByteBufferLength()
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[])
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: int getStart()
androidx.core.view.accessibility.AccessibilityRecordCompat: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-gMuBH34(byte[],byte)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
kotlin.io.path.FileVisitorBuilderImpl: void onVisitFileFailed(kotlin.jvm.functions.Function2)
androidx.core.graphics.PointKt: android.graphics.Point minus(android.graphics.Point,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int,float)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String)
androidx.viewpager.widget.ViewPager: void addFocusables(java.util.ArrayList,int,int)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,double)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(long[])
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
androidx.core.graphics.RegionKt: android.graphics.Region or(android.graphics.Region,android.graphics.Region)
kotlin.random.Random: int nextInt()
androidx.core.graphics.RectKt: android.graphics.RectF plus(android.graphics.RectF,android.graphics.PointF)
androidx.core.os.ParcelCompat: void readMap(android.os.Parcel,java.util.Map,java.lang.ClassLoader,java.lang.Class,java.lang.Class)
androidx.core.app.NotificationChannelGroupCompat: java.util.List getChannelsCompat(java.util.List)
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention[] $values()
kotlin.sequences.DropSequence: kotlin.sequences.Sequence drop(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-2fe2U9s$default(int[],int,int,int,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt$windowedSequence$1: java.lang.Object invoke(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: long min(long,long)
io.flutter.embedding.android.FlutterActivity: void onResume()
kotlin.io.encoding.Base64JVMKt: byte[] platformEncodeToByteArray(kotlin.io.encoding.Base64,byte[],int,int)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(double[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: LiveDataScopeImpl$emitSource$2(androidx.lifecycle.LiveDataScopeImpl,androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component1(java.util.List)
androidx.core.graphics.MatrixKt: android.graphics.Matrix translationMatrix$default(float,float,int,java.lang.Object)
kotlinx.coroutines.selects.SelectInstance: boolean trySelect(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
kotlin.io.path.PathsKt__PathReadWriteKt: void writeBytes(java.nio.file.Path,byte[],java.nio.file.OpenOption[])
androidx.core.util.ContinuationRunnable: java.lang.String toString()
kotlinx.coroutines.flow.internal.FlowCoroutine: FlowCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.contracts.SimpleEffect: kotlin.contracts.ConditionalEffect implies(boolean)
androidx.core.graphics.drawable.IconCompat$Api23Impl: int getType(java.lang.Object)
androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
androidx.core.view.MotionEventCompat: float getX(android.view.MotionEvent,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $values()
kotlinx.coroutines.scheduling.CoroutineSchedulerKt: boolean mayNotBlock(java.lang.Thread)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.core.location.LocationManagerCompat: java.lang.Boolean lambda$registerGnssStatusCallback$1(android.location.LocationManager,androidx.core.location.LocationManagerCompat$GpsStatusTransport)
kotlin.UIntArray: boolean contains-WZ4Q5Ns(int)
kotlin.collections.ArraysKt___ArraysKt: short last(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(char[],kotlin.jvm.functions.Function1)
androidx.core.graphics.PathUtils: PathUtils()
kotlin.collections.AbstractList: boolean equals(java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)
androidx.window.core.ValidSpecification: java.lang.Object compute()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])
kotlin.collections.ArraysKt___ArraysKt: boolean none(byte[],kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
kotlin.NumbersKt__BigIntegersKt: java.math.BigDecimal toBigDecimal(java.math.BigInteger,int,java.math.MathContext)
kotlin.jvm.functions.Function7: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Iterable withIndex(java.lang.CharSequence)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
kotlinx.coroutines.InterruptibleKt: java.lang.Object access$runInterruptibleInExpectedContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(float)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
androidx.core.util.LogWriter: void close()
kotlin.comparisons.ReverseOrderComparator: java.util.Comparator reversed()
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android.support.v4.os.IResultReceiver2$Stub: android.support.v4.os.IResultReceiver2 asInterface(android.os.IBinder)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.ScheduledFuture scheduleBlock(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable,kotlin.coroutines.CoroutineContext,long)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setSound(android.net.Uri,android.media.AudioAttributes)
kotlin.sequences.SequencesKt___SequencesKt: boolean any(kotlin.sequences.Sequence)
androidx.loader.content.ModernAsyncTask$1: java.lang.Thread newThread(java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: FlowKt__DelayKt$fixedPeriodTicker$3(long,long,kotlin.coroutines.Continuation)
kotlin.time.DurationKt: void getSeconds$annotations(int)
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope MainScope()
kotlin.sequences.SubSequence$iterator$1: int getPosition()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldAttachEngineToActivity()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int maxWithOrThrow-U(int[],java.util.Comparator)
kotlin.jvm.internal.PropertyReference: PropertyReference()
androidx.core.os.ParcelCompat$Api33Impl: java.util.ArrayList readArrayList(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1(java.util.Iterator)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
androidx.core.app.NotificationChannelCompat$Api26Impl: java.lang.CharSequence getName(android.app.NotificationChannel)
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: ActivityResultContracts$CreateDocument(java.lang.String)
androidx.core.view.VelocityTrackerCompat: void addMovement(android.view.VelocityTracker,android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
kotlin.sequences.TransformingIndexedSequence: kotlin.jvm.functions.Function2 access$getTransformer$p(kotlin.sequences.TransformingIndexedSequence)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.util.HashMap access$getOnSendInternalResult$p(kotlinx.coroutines.channels.BroadcastChannelImpl)
androidx.fragment.app.FragmentManager: void dispatchResume()
kotlin.sequences.TakeSequence$iterator$1: void setLeft(int)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: kotlinx.coroutines.flow.Flow dropChannelOperators()
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean)
androidx.core.app.Person: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(char[],kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.annotation.RestrictTo: androidx.annotation.RestrictTo$Scope[] value()
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(double[],kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1: FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.animation.AnimatorKt$addListener$listener$1: AnimatorKt$addListener$listener$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt minBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.content.res.ViewingConditions: float getAw()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setInputType(int)
androidx.core.view.TreeIterator: void remove()
kotlinx.coroutines.future.FutureKt$asCompletableFuture$2: java.lang.Object invoke(java.lang.Object)
kotlin.random.KotlinRandom: float nextFloat()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending--ajY-9A(int[])
kotlin.collections.MapsKt___MapsKt: int count(java.util.Map)
kotlin.sequences.TakeSequence: int access$getCount$p(kotlin.sequences.TakeSequence)
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.UShort: long plus-VKZWuLQ(short,long)
kotlinx.coroutines.AwaitAll$AwaitAllNode: AwaitAll$AwaitAllNode(kotlinx.coroutines.AwaitAll,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component1-QwZRm1k(long[])
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: DebugCoroutineInfoImpl(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.debug.internal.StackTraceFrame,long)
androidx.core.util.LongSparseArrayKt: boolean isNotEmpty(android.util.LongSparseArray)
kotlin.collections.AbstractCollection: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Object[])
androidx.customview.widget.ViewDragHelper: void clearMotionHistory(int)
kotlinx.coroutines.channels.BroadcastKt: kotlinx.coroutines.channels.BroadcastChannel broadcast$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.TypeAliasesKt: void RandomAccess$annotations()
androidx.versionedparcelable.VersionedParcel: java.lang.Throwable getRootCause(java.lang.Throwable)
androidx.core.content.pm.ShortcutInfoCompat: boolean isDeclaredInManifest()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable(android.content.res.Resources,android.graphics.Bitmap)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong max-QwZRm1k(long[])
kotlin.coroutines.SafeContinuation: void resumeWith(java.lang.Object)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext)
kotlin.collections.builders.MapBuilder: java.util.Set entrySet()
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: void reply(java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMutableMap(java.util.Map)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
kotlinx.coroutines.ParentJob$DefaultImpls: void cancel(kotlinx.coroutines.ParentJob)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
androidx.fragment.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.core.app.ActivityCompat$Api21Impl: void startPostponedEnterTransition(android.app.Activity)
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong firstOrNull(kotlin.ranges.ULongProgression)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapMerge$default(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List MutableList(int,kotlin.jvm.functions.Function1)
androidx.window.core.ActivityComponentInfo: boolean equals(java.lang.Object)
androidx.core.os.HandlerKt: java.lang.Runnable postAtTime(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion: void resetInstance()
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(double[],double,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.TickerChannelsKt$fixedDelayTicker$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$ImageTextureEntry createImageTexture()
androidx.core.app.NotificationCompat$BubbleMetadata: int getDesiredHeightResId()
io.flutter.embedding.engine.systemchannels.ScribeChannel: void setScribeMethodHandler(io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler)
kotlinx.coroutines.channels.BufferedChannel: boolean access$isClosedForSend0(kotlinx.coroutines.channels.BufferedChannel,long)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
kotlinx.coroutines.channels.BufferedChannel: void cancelSuspendedReceiveRequests(kotlinx.coroutines.channels.ChannelSegment,long)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()
kotlinx.coroutines.channels.TickerChannelsKt: java.lang.Object access$fixedPeriodTicker(long,long,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
androidx.core.app.NotificationCompat$Api29Impl: boolean isContextual(android.app.Notification$Action)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object minWith(java.lang.Iterable,java.util.Comparator)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object)
androidx.core.view.ViewCompat: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
androidx.lifecycle.ReportFragment: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)
kotlin.UIntKt: int toUInt(long)
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray(java.lang.String,int,int)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.core.util.TimeUtils: int formatDurationLocked(long,int)
kotlin.text.DelimitedRangesSequence: DelimitedRangesSequence(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2)
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
kotlin.text.StringsKt__IndentKt: java.lang.String trimMargin(java.lang.String,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-f7H3mmw(long[],java.lang.Object[])
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: androidx.core.graphics.Insets getHiddenStateInsets()
kotlin.text.StringsKt__StringsKt: int indexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: double[] toDoubleArray(java.util.Collection)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType platformType(kotlin.reflect.KType,kotlin.reflect.KType)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodIsActivityEmbeddedValid$1: java.lang.Boolean invoke()
kotlin.jvm.internal.FloatSpreadBuilder: int getSize(java.lang.Object)
kotlin.UIntArray: java.lang.Object[] toArray()
androidx.loader.content.Loader: void onReset()
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: FlutterFragmentActivity$CachedEngineIntentBuilder(java.lang.Class,java.lang.String)
androidx.loader.content.CursorLoader: java.lang.String[] getSelectionArgs()
kotlin.ranges.ClosedFloatRange: int hashCode()
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: NavigationChannel$1(io.flutter.embedding.engine.systemchannels.NavigationChannel)
androidx.core.net.ParseException: ParseException(java.lang.String)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: ViewModelProvider$NewInstanceFactory$Companion()
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.Stream)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
kotlinx.coroutines.AbstractCoroutine: java.lang.String cancellationExceptionMessage()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.util.List getMessagesFromBundleArray(android.os.Parcelable[])
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
androidx.core.app.NotificationCompat$Action$Builder: android.os.Bundle getExtras()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.collection.ArrayMap$1: void colClear()
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl: android.view.ViewStructure newVirtualViewStructure(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LiveData: boolean isInitialized()
kotlin.text.UStringsKt: short toUShort(java.lang.String,int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat: void setLayerPaint(android.view.View,android.graphics.Paint)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long toLongExactOrNull(float)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
kotlin.io.FilesKt__FileReadWriteKt: void appendBytes(java.io.File,byte[])
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat$Compat31Impl: ContentInfoCompat$Compat31Impl(android.view.ContentInfo)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void lambda$installDeferredComponent$1(int,java.lang.String,java.lang.Exception)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
kotlin.UByteArray: void set-VurrAj0(byte[],int,byte)
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray()
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.List access$100(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlinx.coroutines.channels.BufferedChannel: void getOnUndeliveredElementReceiveCancellationConstructor$annotations()
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object invoke(java.lang.Object)
androidx.core.util.SizeKt: int component2(android.util.Size)
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(double[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.activity.result.IntentSenderRequest: int getFlagsMask()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void synchronizeToNativeViewHierarchy(boolean)
kotlin.reflect.KClass$DefaultImpls: void isSealed$annotations()
androidx.core.widget.TextViewKt: android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.lifecycle.LiveData: void changeActiveCounter(int)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Object[])
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
kotlinx.coroutines.CancellableContinuationImpl: void initCancellability()
kotlin.coroutines.ContinuationKt: kotlin.coroutines.Continuation createCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineName: java.lang.String toString()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
kotlin.UByteArray$Iterator: byte next-w2LRezQ()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult toFileVisitResult$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.CopyActionResult)
androidx.loader.content.Loader: void deliverResult(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt: kotlin.jvm.functions.Function1 safeCtor(kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: CollectionsKt___CollectionsKt$groupingBy$1(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityEventCompat: AccessibilityEventCompat()
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
androidx.fragment.app.Fragment: boolean isVisible()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[])
androidx.collection.ArraySet: boolean add(java.lang.Object)
kotlin.time.MeasureTimeKt: long measureTime(kotlin.jvm.functions.Function0)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setExtras(android.os.PersistableBundle)
androidx.customview.widget.ExploreByTouchHelper$2: java.lang.Object get(java.lang.Object,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int lastIndexOf-xj2QHRw(short)
kotlin.jvm.internal.Intrinsics: void throwUndefinedForReified()
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable()
kotlin.ULong: int compareTo-WZ4Q5Ns(long,int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
kotlin.time.Duration$Companion: void getMinutes-UwyO8pc$annotations(double)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.collection.LongSparseArray: boolean containsValue(java.lang.Object)
androidx.collection.ArraySet: java.lang.Object valueAt(int)
kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sliceArray(java.lang.Object[],kotlin.ranges.IntRange)
androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcutInfoListeners(android.content.Context)
androidx.core.content.pm.ShortcutManagerCompat: void reportShortcutUsed(android.content.Context,java.lang.String)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void setJNI(io.flutter.embedding.engine.FlutterJNI)
androidx.lifecycle.SavedStateHandle: androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double maxOf(double,double[])
kotlin.jvm.internal.ArrayCharIterator: ArrayCharIterator(char[])
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1: FlowKt__TransformKt$withIndex$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
kotlin.collections.ArraysKt___ArraysKt: byte component4(byte[])
androidx.fragment.app.SpecialEffectsController$Operation: void setLifecycleImpact(androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact)
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
kotlinx.coroutines.channels.ChannelResult$Closed: ChannelResult$Closed(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minByOrNull(long[],kotlin.jvm.functions.Function1)
androidx.collection.CircularIntArray: void addFirst(int)
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy$default(kotlinx.coroutines.CoroutineId,long,int,java.lang.Object)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowFlags(int)
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.content.Context,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.core.location.LocationRequestCompat: long getMaxUpdateDelayMillis()
io.flutter.plugin.platform.VirtualDisplayController$2: void onViewAttachedToWindow(android.view.View)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getState()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.R$string: R$string()
androidx.window.embedding.SplitController$splitInfoList$1: SplitController$splitInfoList$1(androidx.window.embedding.SplitController,android.app.Activity,kotlin.coroutines.Continuation)
androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)
androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapSequenceTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isSystemFallbackPickerAvailable$activity_release(android.content.Context)
kotlin.collections.AbstractCollection: boolean add(java.lang.Object)
androidx.profileinstaller.ProfileInstaller: ProfileInstaller()
androidx.core.os.LocaleListPlatformWrapper: java.lang.Object getLocaleList()
kotlin.text.MatcherMatchResult$groups$1: MatcherMatchResult$groups$1(kotlin.text.MatcherMatchResult)
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView)
kotlin.text.StringsKt___StringsKt: java.lang.Character randomOrNull(java.lang.CharSequence,kotlin.random.Random)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.Flow)
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
kotlin.time.AbstractLongTimeSource$LongTimeMark: AbstractLongTimeSource$LongTimeMark(long,kotlin.time.AbstractLongTimeSource,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(float[],kotlin.jvm.functions.Function1)
androidx.core.app.ActivityRecreator$3: ActivityRecreator$3(java.lang.Object,java.lang.Object)
androidx.core.graphics.ColorKt: float component1(long)
kotlin.Pair: java.lang.Object getSecond()
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder$Itr: int getIndex$kotlin_stdlib()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: int compare(java.lang.Object,java.lang.Object)
androidx.core.util.RunnableKt: java.lang.Runnable asRunnable(kotlin.coroutines.Continuation)
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void setCompletedNormally()
androidx.lifecycle.FlowLiveDataConversions: kotlinx.coroutines.flow.Flow asFlow(androidx.lifecycle.LiveData)
androidx.fragment.app.FragmentManager: int reverseTransit(int)
androidx.customview.widget.ViewDragHelper: float getMinVelocity()
androidx.viewpager.R$string: R$string()
kotlin.UNumbersKt: long takeLowestOneBit-VKZWuLQ(long)
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getLongLabel()
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object getValueOrNull()
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
kotlin.jvm.internal.Intrinsics: void throwNpe(java.lang.String)
androidx.core.graphics.PointKt: android.graphics.PointF plus(android.graphics.PointF,float)
androidx.activity.OnBackPressedDispatcher: void onBackCancelled()
androidx.fragment.app.FragmentManager: boolean isStateSaved()
androidx.fragment.app.DialogFragment: void onDestroyView()
androidx.core.util.SparseLongArrayKt: boolean remove(android.util.SparseLongArray,int,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong[] toTypedArray-QwZRm1k(long[])
androidx.core.transition.TransitionKt$addListener$5: void invoke(android.transition.Transition)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: android.animation.AnimatorSet getAnimator()
androidx.core.graphics.MatrixKt: android.graphics.Matrix rotationMatrix$default(float,float,float,int,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.Regex: java.lang.String toString()
androidx.core.app.NotificationChannelCompat$Api26Impl: void enableLights(android.app.NotificationChannel,boolean)
androidx.fragment.app.DefaultSpecialEffectsController: void collectEffects$lambda$2(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation)
androidx.activity.result.contract.ActivityResultContracts$TakePicture: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlinx.coroutines.DefaultExecutor: java.lang.Thread getThread()
kotlin.io.encoding.Base64: java.lang.String encode$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getEmptyLocaleList()
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1: void onAnimationStart(android.animation.Animator)
kotlin.collections.RingBuffer: int access$getStartIndex$p(kotlin.collections.RingBuffer)
androidx.lifecycle.BlockRunner$cancel$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManagerViewModel: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(int[],int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] plus-kzHmqpY(long[],java.util.Collection)
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,java.lang.String)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object tryReceive-PtdJZtk()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
kotlin.properties.ObservableProperty: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
kotlin.reflect.KClass: java.util.Collection getMembers()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void getTransitionSignal$annotations()
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1$1: WindowAreaControllerImpl$windowAreaInfos$1$1(androidx.window.area.WindowAreaControllerImpl,androidx.window.extensions.core.util.function.Consumer,androidx.window.extensions.core.util.function.Consumer)
kotlin.text.CharsKt__CharJVMKt: char toUpperCase(char)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.String getClassName()
androidx.core.content.res.CamUtils: float linearized(int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.internal.Symbol access$getNO_OWNER$p()
kotlin.io.encoding.StreamEncodingKt: StreamEncodingKt()
io.flutter.plugin.common.EventChannel$StreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator)
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.flow.Flow fuseStateFlow(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.view.ViewGroupKt: void setMargins(android.view.ViewGroup$MarginLayoutParams,int)
androidx.viewpager.widget.ViewPager: void populate(int)
kotlin.UIntArray: void set-VXSXFK8(int[],int,int)
androidx.core.view.HapticFeedbackConstantsCompat: HapticFeedbackConstantsCompat()
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
kotlin.collections.ArraysKt___ArraysKt: float minOf(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: void fling(int)
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener)
kotlinx.coroutines.CompletedWithCancellation: kotlinx.coroutines.CompletedWithCancellation copy(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-GBYM_sE(byte[])
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: java.util.Iterator iterator()
androidx.core.location.GpsStatusWrapper: float getElevationDegrees(int)
kotlin.text.RegexOption: RegexOption(java.lang.String,int,int,int)
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getIterator$p(kotlin.sequences.FlatteningSequence)
kotlin.UInt: long div-VKZWuLQ(int,long)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: java.lang.Object get(int)
kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.Job SupervisorJob$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],int[],kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: float getFraction()
kotlin.reflect.KClass$DefaultImpls: void isValue$annotations()
kotlinx.coroutines.channels.ChannelResult: boolean equals-impl0(java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)
kotlin.sequences.FilteringSequence: java.util.Iterator iterator()
kotlinx.coroutines.channels.BufferedChannel: boolean updateCellExpandBuffer(kotlinx.coroutines.channels.ChannelSegment,int,long)
org.intellij.lang.annotations.JdkConstants: JdkConstants()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)
kotlin.UShort: int minus-7apg3OU(short,byte)
kotlin.UByte: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReplyPendingIntent()
kotlin.collections.ArraysKt___ArraysKt: boolean none(char[],kotlin.jvm.functions.Function1)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder detectTargetFragmentUsage()
kotlin.text.MatcherMatchResult$groups$1: int getSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow withIndex(kotlinx.coroutines.flow.Flow)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.lang.String getState()
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlin.ranges.ComparableOpenEndRange: ComparableOpenEndRange(java.lang.Comparable,java.lang.Comparable)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zipWithNext(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: float ln(float)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object collectWhile$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Iterable)
kotlin.jvm.internal.TypeParameterReference: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int indexOf-xj2QHRw(short)
androidx.window.area.SafeWindowAreaComponentProvider: boolean isWindowAreaProviderValid(java.lang.Object)
kotlin.collections.RingBuffer$iterator$1: RingBuffer$iterator$1(kotlin.collections.RingBuffer)
kotlin.collections.ArraysKt___ArraysKt: boolean any(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
com.getkeepsafe.relinker.ReLinker: com.getkeepsafe.relinker.ReLinkerInstance force()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String substring(java.lang.String,int)
androidx.core.app.NotificationCompat$WearableExtender: int getGravity()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
android.support.v4.app.INotificationSideChannel$Default: void cancel(java.lang.String,int,java.lang.String)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.lang.String toString()
androidx.core.util.Predicate$-CC: androidx.core.util.Predicate isEqual(java.lang.Object)
androidx.core.widget.ScrollerCompat: boolean isFinished()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
kotlin.collections.AbstractMap: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sliceArray-tAntMlw(int[],kotlin.ranges.IntRange)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-LRDsOJo(long,long)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
kotlinx.coroutines.AwaitAll$AwaitAllNode: void setDisposer(kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel)
androidx.core.os.OutcomeReceiverKt: android.os.OutcomeReceiver asOutcomeReceiver(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$Api20Impl: java.lang.CharSequence[] getChoices(android.app.RemoteInput)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setQueryFromAppProcessEnabled(android.view.View,boolean)
androidx.loader.R$integer: R$integer()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: boolean isPop()
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationRepeat(android.animation.Animator)
kotlin.coroutines.CombinedContext: CombinedContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
androidx.core.app.NotificationCompat$BubbleMetadata: int getDesiredHeight()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)
kotlin.time.Duration$Companion: long hours-UwyO8pc(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletedContinuation: java.lang.Object component4()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],int[])
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
androidx.lifecycle.EmittedSource$dispose$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: ChannelsKt__DeprecatedKt$lastIndexOf$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.ULong: kotlin.ranges.ULongRange rangeTo-VKZWuLQ(long,long)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence onEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isReadable(java.nio.file.Path)
androidx.core.app.NotificationCompat$CallStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
androidx.activity.SystemBarStyle$Companion$dark$1: SystemBarStyle$Companion$dark$1()
androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.viewpager.widget.ViewPager: void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
io.flutter.view.VsyncWaiter: void reset()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
kotlin.text.StringsKt___StringsJvmKt: char elementAt(java.lang.CharSequence,int)
kotlin.time.DurationKt: long toDuration(double,kotlin.time.DurationUnit)
androidx.fragment.app.BackStackState$1: java.lang.Object[] newArray(int)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(long[],long)
androidx.fragment.app.FragmentActivity: void onDestroy()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: UArraysKt___UArraysJvmKt$asList$2(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.loader.content.CursorLoader: java.lang.Object loadInBackground()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.HashSet toHashSet(java.lang.Iterable)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlinx.coroutines.channels.BufferedChannel: void access$onClosedSendOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.Job: void cancel()
androidx.window.embedding.EmbeddingAdapter: int translateFinishBehavior(androidx.window.embedding.SplitRule$FinishBehavior)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void lambda$onSharedElementsArrived$0(android.app.SharedElementCallback$OnSharedElementsReadyListener)
androidx.activity.FullyDrawnReporterOwner: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(byte[],kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4: void invoke()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-8LME4QE(long[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(byte[],kotlin.jvm.functions.Function1)
androidx.annotation.RequiresPermission: java.lang.String value()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitAttributesCalculatorParams translate(androidx.window.extensions.embedding.SplitAttributesCalculatorParams)
androidx.core.app.NotificationChannelCompat$Builder: NotificationChannelCompat$Builder(java.lang.String,int)
kotlin.UByte: boolean equals-impl(byte,java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: java.lang.Void invoke(java.lang.Throwable)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2: FlowKt__CollectKt$collectIndexed$2(kotlin.jvm.functions.Function3)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer reduceRightOrNull(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$1(kotlin.jvm.functions.Function0)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,double)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(long[],long)
androidx.activity.SystemBarStyle$Companion: androidx.activity.SystemBarStyle auto(int,int)
kotlinx.coroutines.channels.ChannelResult: boolean isFailure-impl(java.lang.Object)
androidx.core.content.IntentCompat: java.lang.Object getParcelableExtra(android.content.Intent,java.lang.String,java.lang.Class)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo getAnimatorInfo()
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSettingsText(java.lang.CharSequence)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback access$200(io.flutter.view.VsyncWaiter)
androidx.lifecycle.BlockRunner: long access$getTimeoutInMs$p(androidx.lifecycle.BlockRunner)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int maxOf(int,int[])
androidx.customview.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)
androidx.window.area.WindowAreaCapability$Status: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],double[],kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onAttachedToBroadcastReceiver(io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverPluginBinding)
kotlin.ULongArray: int hashCode()
kotlin.coroutines.CombinedContext$Serialized$Companion: CombinedContext$Serialized$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: java.util.Iterator invoke()
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.os.Parcelable castToParcelable(android.app.RemoteInput)
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object[] newArray(int)
kotlin.collections.ReversedList: java.lang.Object get(int)
kotlin.collections.AbstractCollection: java.util.Iterator iterator()
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$6(android.net.Uri)
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.String getName()
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
kotlin.jvm.internal.TypeParameterReference: java.util.List getUpperBounds()
androidx.lifecycle.Transformations$map$1: void invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRouteInformation(java.lang.String)
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
androidx.core.app.JobIntentService$WorkEnqueuer: void serviceStartReceived()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: boolean isActive()
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: void run()
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
androidx.core.graphics.ColorUtils: void blendLAB(double[],double[],double,double[])
kotlin.ranges.CharRange$Companion: CharRange$Companion()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
kotlin.io.FileTreeWalk$WalkState: java.io.File getRoot()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduce(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.CharRange until(char,char)
kotlin.collections.FloatIterator: float nextFloat()
kotlin.time.Duration: java.lang.String toString-impl(long)
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceProducer createSurfaceProducer()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(char[])
androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
kotlinx.coroutines.channels.BroadcastChannel: boolean cancel(java.lang.Throwable)
kotlin.coroutines.CombinedContext$Serialized: java.lang.Object readResolve()
androidx.fragment.app.FragmentTransaction: void commitNow()
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeLast(java.util.List)
kotlin.text.StringsKt__StringsKt: java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
androidx.core.content.MimeTypeFilter: boolean matches(java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceIndexedOrNull(short[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.IntRange,long)
kotlin.jvm.internal.FloatCompanionObject: void getMIN_VALUE$annotations()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.window.embedding.ActivityRule: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: int getX()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder withNewEngine()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabledInNative(boolean)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: void invoke(java.lang.Throwable)
androidx.core.app.NotificationCompat$CarExtender: android.graphics.Bitmap getLargeIcon()
kotlin.sequences.SequenceBuilderIterator: java.lang.Object nextNotReady()
kotlin.collections.EmptyMap: java.lang.Object get(java.lang.Object)
androidx.core.content.pm.ShortcutInfoChangeListener: ShortcutInfoChangeListener()
kotlin.collections.RingBuffer: java.lang.Object get(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class)
androidx.fragment.app.Fragment$10: androidx.activity.result.contract.ActivityResultContract getContract()
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.KotlinVersion: int getMajor()
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl: EditorInfoCompat$Api30Impl()
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextState(int)
kotlinx.coroutines.debug.internal.DebugProbesImplKt: java.lang.String access$repr(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(double[],kotlin.jvm.functions.Function1)
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(int[],kotlin.ranges.IntRange)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short minOf-5PvTz6A(short,short)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(double[],double,int,int)
androidx.concurrent.futures.AbstractResolvableFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)
kotlin.NumbersKt__NumbersJVMKt: boolean isFinite(float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: FlowKt__ZipKt$combineTransform$6$1(kotlinx.coroutines.flow.Flow[])
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$indexOf$1: ChannelsKt__DeprecatedKt$indexOf$1(kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,int,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.ranges.URangesKt___URangesKt: long coerceIn-JPwROB0(long,kotlin.ranges.ClosedRange)
androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)
io.flutter.Log: void println(int,java.lang.String,java.lang.String)
kotlin.text.StringsKt___StringsKt$withIndex$1: java.util.Iterator invoke()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.core.provider.CallbackWithHandler: void onTypefaceRetrieved(android.graphics.Typeface)
androidx.core.app.NotificationCompat: android.graphics.Bitmap reduceLargeIconSize(android.content.Context,android.graphics.Bitmap)
io.flutter.embedding.android.FlutterActivity: void onPause()
androidx.core.text.util.LocalePreferences: java.lang.String getBaseHourCycle(java.util.Locale)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
kotlin.text.StringsKt___StringsKt: java.util.Map associateWith(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] asLongArray-QwZRm1k(long[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: void forEach(char[],kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.collection.ArrayMap getSharedElementNameMapping()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5(long[])
kotlin.collections.ArrayDeque: boolean removeAll(java.util.Collection)
androidx.lifecycle.SavedStateHandle$SavingStateLiveData: void setValue(java.lang.Object)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.UByteKt: byte toUByte(int)
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.app.AppOpsManagerCompat: int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
androidx.loader.content.Loader: void reset()
kotlin.time.DurationKt: long access$durationOf(long,int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
kotlin.io.LinesSequence$iterator$1: java.lang.String next()
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationStart(android.view.View)
kotlinx.coroutines.CancelFutureOnCancel: void invoke(java.lang.Throwable)
androidx.core.view.MarginLayoutParamsCompat: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow mapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.InputStreamReader reader$default(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
io.flutter.plugin.platform.SingleViewWindowManager: android.view.Display getDefaultDisplay()
androidx.window.java.embedding.SplitControllerCallbackAdapter: void removeSplitListener(androidx.core.util.Consumer)
androidx.activity.OnBackPressedCallback: void handleOnBackProgressed(androidx.activity.BackEventCompat)
androidx.activity.result.contract.ActivityResultContracts$OpenDocument: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[])
kotlin.KotlinVersionCurrentValue: KotlinVersionCurrentValue()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: SafeActivityEmbeddingComponentProvider(java.lang.ClassLoader,androidx.window.core.ConsumerAdapter,androidx.window.extensions.WindowExtensions)
androidx.lifecycle.Lifecycling: Lifecycling()
androidx.collection.SparseArrayCompat: java.lang.String toString()
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: java.lang.Void invoke(kotlinx.coroutines.channels.ChannelSegment,int,long)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageOnly: ActivityResultContracts$PickVisualMedia$ImageOnly()
androidx.viewpager.widget.ViewPager: boolean beginFakeDrag()
kotlinx.coroutines.channels.BufferedChannel: void moveSegmentBufferEndToSpecifiedOrLast(long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.random.AbstractPlatformRandom: int nextInt(int)
kotlin.collections.builders.SetBuilder: SetBuilder(int)
kotlin.math.MathKt__MathHKt: void getE$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],short[],kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader createImageReader()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateIntentPredicates$1: EmbeddingAdapter$VendorApiLevel1Impl$translateIntentPredicates$1(java.util.Set)
io.flutter.plugin.editing.InputConnectionAdaptor: byte[] readStreamFully(java.io.InputStream,int)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte maxOrThrow-U(byte[])
kotlin.collections.BooleanIterator: java.lang.Boolean next()
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
kotlin.time.MonotonicTimeSource: long differenceBetween-fRLX17w(long,long)
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String)
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.activity.result.ActivityResult: int getResultCode()
androidx.collection.ArraySet: int size()
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper: BenchmarkOperation$Api21ContextHelper()
kotlinx.coroutines.CancellableContinuationImplKt: int getIndex(int)
kotlin.text.StringsKt__IndentKt: int indentWidth$StringsKt__IndentKt(java.lang.String)
androidx.versionedparcelable.VersionedParcel: java.lang.Exception readException(java.lang.Exception,int)
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context)
kotlin.collections.AbstractList$IteratorImpl: void remove()
androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object)
androidx.fragment.app.FragmentContainerView: void endViewTransition(android.view.View)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long maxOf(long,long,long)
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
io.flutter.embedding.engine.plugins.FlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.UByte: int toUInt-pVg5ArA(byte)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener$-CC: void $default$onBackStackChangeCommitted(androidx.fragment.app.FragmentManager$OnBackStackChangedListener,androidx.fragment.app.Fragment,boolean)
kotlin.io.encoding.Base64: int decodeIntoByteArray$default(kotlin.io.encoding.Base64,byte[],byte[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation)
androidx.core.view.ViewCompat: float getScaleY(android.view.View)
androidx.core.app.NotificationCompat$Api20Impl: boolean getAllowFreeFormInput(android.app.RemoteInput)
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object next()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.collections.CollectionsKt___CollectionsKt: long sumOfLong(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.ULong: long floorDiv-xj2QHRw(long,short)
kotlin.UIntArray$Iterator: java.lang.Object next()
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: FlowKt__EmittersKt$onEmpty$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory$default(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)
kotlin.collections.CollectionsKt___CollectionsKt: void shuffle(java.util.List,kotlin.random.Random)
io.flutter.plugin.platform.PlatformViewRenderTarget: void scheduleFrame()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-oBK06Vg(int[],int,int)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.ViewCompat$Api24Impl: ViewCompat$Api24Impl()
androidx.core.content.IntentSanitizer$Api31Impl: void checkOtherMembers(int,android.content.ClipData$Item,androidx.core.util.Consumer)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
kotlin.collections.MapWithDefaultImpl: boolean containsKey(java.lang.Object)
androidx.loader.app.LoaderManager: void markForRedelivery()
kotlinx.coroutines.AbstractTimeSource: java.lang.Runnable wrapTask(java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: float reduce(float[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: CombineKt$zipImpl$1$1$2(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.app.NotificationChannelCompat: boolean isImportantConversation()
androidx.core.app.NotificationCompat$Builder: int getForegroundServiceBehavior()
kotlin.ranges.RangesKt__RangesKt: boolean contains(kotlin.ranges.ClosedRange,java.lang.Object)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.builders.ListBuilder: java.lang.Object writeReplace()
androidx.window.embedding.EmbeddingAspectRatio$Companion: androidx.window.embedding.EmbeddingAspectRatio buildAspectRatioFromValue$window_release(float)
kotlin.jvm.internal.PrimitiveSpreadBuilder: void setPosition(int)
androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
androidx.core.service.quicksettings.TileServiceCompat: void clearTileServiceWrapper()
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minusElement(java.lang.Iterable,java.lang.Object)
androidx.fragment.app.FragmentStatePagerAdapter: void startUpdate(android.view.ViewGroup)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.fragment.app.FragmentManager$10: void onActivityResult(java.lang.Object)
androidx.fragment.app.Fragment: Fragment(int)
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.Job$DefaultImpls: void cancel(kotlinx.coroutines.Job)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlin.jvm.functions.Function3 access$getTransform$p(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(double[],kotlin.jvm.functions.Function1)
androidx.core.app.RemoteActionCompat$Api26Impl: java.lang.CharSequence getTitle(android.app.RemoteAction)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,long)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean)
androidx.activity.OnBackPressedDispatcher$addCancellableCallback$1: void invoke()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(int[])
androidx.core.net.MailTo: java.util.Map getHeaders()
androidx.core.util.AtomicFileKt: byte[] readBytes(android.util.AtomicFile)
androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder destroyEngineWithFragment(boolean)
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
kotlin.NumbersKt__NumbersKt: short takeHighestOneBit(short)
androidx.core.text.HtmlKt: java.lang.String toHtml(android.text.Spanned,int)
kotlin.io.encoding.DecodeInputStream: int read()
kotlin.text.MatcherMatchResult$groupValues$1: MatcherMatchResult$groupValues$1(kotlin.text.MatcherMatchResult)
androidx.core.app.NotificationManagerCompat$SideChannelManager: NotificationManagerCompat$SideChannelManager(android.content.Context)
androidx.core.text.util.LocalePreferences: LocalePreferences()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(byte[],kotlin.jvm.functions.Function2)
kotlin.collections.EmptyMap: void clear()
kotlin.text.StringsKt___StringsKt: char single(java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-kV0jMPg(byte[],byte[])
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowCategory(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetrics $default$computeCurrentWindowMetrics(androidx.window.layout.WindowMetricsCalculator,android.content.Context)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.LongRange)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectReceive(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.TypeAliasesKt: void ConcurrentModificationException$annotations()
kotlin.Metadata: int[] mv()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: ArraysKt___ArraysJvmKt$asList$4(long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort--nroSd4(long[],int,int)
androidx.lifecycle.CoroutineLiveDataKt: java.lang.Object addDisposableSource(androidx.lifecycle.MediatorLiveData,androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)
androidx.viewpager.widget.PagerTitleStrip: void onAttachedToWindow()
io.flutter.embedding.engine.loader.ResourceExtractor: void access$200(java.io.InputStream,java.io.OutputStream)
org.intellij.lang.annotations.RegExp: java.lang.String prefix()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAtOrNull(kotlin.sequences.Sequence,int)
androidx.core.provider.SelfDestructiveThread$3: SelfDestructiveThread$3(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition)
kotlin.jvm.internal.TypeIntrinsics: java.util.List asMutableList(java.lang.Object)
androidx.core.widget.TintableCompoundDrawablesView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(int[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.PackageReference: boolean equals(java.lang.Object)
kotlinx.coroutines.ResumeAwaitOnCompletion: ResumeAwaitOnCompletion(kotlinx.coroutines.CancellableContinuationImpl)
androidx.core.app.NotificationChannelCompat: android.net.Uri getSound()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object,java.lang.String)
kotlin.collections.SlidingWindowKt: java.util.Iterator windowedIterator(java.util.Iterator,int,int,boolean,boolean)
androidx.core.content.FileProvider$Api21Impl: FileProvider$Api21Impl()
androidx.fragment.app.FragmentTransitionCompat21: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
kotlin.NumbersKt__NumbersKt: byte rotateLeft(byte,int)
kotlinx.coroutines.selects.SelectClause1Impl: java.lang.Object getClauseObject()
kotlinx.coroutines.future.CompletableFutureCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlin.collections.ArraysKt___ArraysKt: double sum(double[])
kotlin.coroutines.CombinedContext: boolean contains(kotlin.coroutines.CoroutineContext$Element)
kotlin.io.LineReader: void updateCharset(java.nio.charset.Charset)
androidx.core.graphics.ColorKt: int getAlpha(int)
androidx.fragment.app.strictmode.RetainInstanceUsageViolation: RetainInstanceUsageViolation(androidx.fragment.app.Fragment,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder handleDeeplinking(java.lang.Boolean)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void disableBufferingIncomingMessages()
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] values()
com.getkeepsafe.relinker.ReLinkerInstance: void log(java.lang.String,java.lang.Object[])
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(byte[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: LifecycleCoroutineScopeImpl$register$1(androidx.lifecycle.LifecycleCoroutineScopeImpl,kotlin.coroutines.Continuation)
androidx.core.graphics.ColorUtils: int LABToColor(double,double,double)
kotlin.text.MatchGroup: java.lang.String component1()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3)
kotlin.math.MathKt__MathJVMKt: double atan(double)
androidx.fragment.app.FragmentManager: void removeFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)
androidx.fragment.app.strictmode.FragmentStrictMode: void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData(java.time.Duration,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: void invoke(kotlinx.coroutines.channels.LazyActorCoroutine,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.graphics.ColorKt: float component3(android.graphics.Color)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.InlineList: boolean equals-impl0(java.lang.Object,java.lang.Object)
io.flutter.Log: void setLogLevel(int)
kotlinx.coroutines.channels.SendChannel: boolean offer(java.lang.Object)
kotlin.UInt: int minus-7apg3OU(int,byte)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
kotlin.coroutines.CombinedContext$writeReplace$1: CombinedContext$writeReplace$1(kotlin.coroutines.CoroutineContext[],kotlin.jvm.internal.Ref$IntRef)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: java.lang.Object getValue()
androidx.core.content.SharedPreferencesKt: void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)
kotlin.UInt: long toULong-s-VKNKU(int)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: float getCurrentFraction()
kotlin.collections.builders.MapBuilder: void rehash(int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
androidx.collection.SparseArrayCompat: boolean replace(int,java.lang.Object,java.lang.Object)
androidx.collection.SparseArrayCompat: java.lang.Object clone()
kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: ContentInfoCompat$BuilderCompat31Impl(androidx.core.view.ContentInfoCompat)
kotlinx.coroutines.debug.internal.Marked: Marked(java.lang.Object)
kotlin.jvm.internal.PrimitiveSpreadBuilder: void getSpreads$annotations()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: java.util.Iterator invoke(java.lang.Iterable)
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consume(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[])
androidx.activity.ComponentDialog: void setContentView(android.view.View)
kotlin.jvm.internal.ArrayIterator: boolean hasNext()
kotlin.io.path.PathsKt__PathReadWriteKt: void writeText(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlin.text.StringsKt__StringNumberConversionsJVMKt: short toShort(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(long[],long,int,int,int,java.lang.Object)
androidx.core.view.ViewGroupKt$special$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()
kotlin.sequences.SequencesKt___SequencesKt: int sumBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float getOrNull(float[],int)
androidx.lifecycle.CoroutineLiveData: CoroutineLiveData(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtraStream(androidx.core.util.Predicate)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceAtMost(java.lang.Comparable,java.lang.Comparable)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set intersect(java.lang.Iterable,java.lang.Iterable)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.fragment.app.SpecialEffectsController$Effect: void cancel(android.view.ViewGroup)
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfUInt(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveKt: java.lang.Object access$getUNDEFINED_RESULT$p()
androidx.core.view.ActionProvider: void subUiVisibilityChanged(boolean)
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$2: ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$2()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void collectIfThrows$PathsKt__PathRecursiveFunctionsKt(kotlin.io.path.ExceptionsCollector,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
kotlin.TypeAliasesKt: void NumberFormatException$annotations()
kotlin.io.ByteStreamsKt$iterator$1: int getNextByte()
androidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.ViewModel get(androidx.lifecycle.ViewModelProvider)
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: java.lang.Object parseResult(int,android.content.Intent)
androidx.core.graphics.WeightTypefaceApi26: long getNativeInstance(android.graphics.Typeface)
io.flutter.util.ViewUtils: android.app.Activity getActivity(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: boolean[] toBooleanArray(java.lang.Boolean[])
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.fragment.app.FragmentManagerViewModel: void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
androidx.core.transition.TransitionKt$addListener$2: java.lang.Object invoke(java.lang.Object)
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$2: java.lang.Object invoke(java.lang.Object)
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask execute(java.lang.Object[])
androidx.window.embedding.EmbeddingCompat$setEmbeddingCallback$1: void invoke(java.util.List)
androidx.core.graphics.PathSegment: float getStartFraction()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder dartEntrypoint(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String lowercase(java.lang.String,java.util.Locale)
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object[] newArray(int)
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: void accept(int)
androidx.core.util.SizeFCompat: SizeFCompat(float,float)
kotlin.collections.builders.AbstractMapBuilderEntrySet: boolean remove(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.Collection filterIsInstanceTo(java.lang.Object[],java.util.Collection,java.lang.Class)
androidx.core.R$attr: R$attr()
androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object emitAbort$FlowKt__LimitKt(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.OnBackPressedDispatcherKt$addCallback$callback$1: void handleOnBackPressed()
androidx.lifecycle.BlockRunner$cancel$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.activity.BackEventCompat: BackEventCompat(float,float,float,int)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
com.getkeepsafe.relinker.elf.Elf64Header: Elf64Header(boolean,com.getkeepsafe.relinker.elf.ElfParser)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.content.pm.ApplicationInfo getApplicationInfo()
androidx.core.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)
kotlin.text.CharDirectionality$Companion: kotlin.text.CharDirectionality valueOf(int)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult: kotlin.ranges.IntRange getRange()
androidx.core.location.GpsStatusWrapper: int getSvidFromPrn(int)
androidx.core.view.contentcapture.ContentCaptureSessionCompat: android.view.contentcapture.ContentCaptureSession toContentCaptureSession()
kotlin.collections.CollectionsKt___CollectionsKt: boolean contains(java.lang.Iterable,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.time.DurationKt: long durationOfNanosNormalized(long)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void onCancel(android.view.ViewGroup)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: java.lang.Object catchImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics: void onDiagnosticReceived(int,java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetWindowFlag(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
androidx.window.core.ConsumerAdapter$Subscription: void dispose()
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1: kotlinx.coroutines.channels.ChannelSegment invoke(long,kotlinx.coroutines.channels.ChannelSegment)
androidx.core.view.ViewKt$ancestors$1: android.view.ViewParent invoke(android.view.ViewParent)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(long[])
kotlin.collections.ArrayDeque: java.lang.Object firstOrNull()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void setSize(int,int)
androidx.activity.SystemBarStyle: androidx.activity.SystemBarStyle auto(int,int,kotlin.jvm.functions.Function1)
kotlin.reflect.TypeVariableImpl: java.lang.annotation.Annotation[] getAnnotations()
kotlin.text.RegexKt$fromInt$1$1: java.lang.Object invoke(java.lang.Object)
androidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context)
androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)
kotlin.io.ByteStreamsKt$iterator$1: ByteStreamsKt$iterator$1(java.io.BufferedInputStream)
androidx.core.text.util.LinkifyCompat$LinkSpec: LinkifyCompat$LinkSpec()
kotlin.collections.ArrayDeque: java.lang.Object lastOrNull()
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(float[])
kotlin.jvm.internal.MutableLocalVariableReference: java.lang.Object get()
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context)
io.flutter.embedding.android.FlutterFragmentActivity: void onTrimMemory(int)
androidx.core.math.MathUtils: int negateExact(int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: boolean add(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DisposeOnCompletion: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: void access$setQueueSize$p(kotlinx.coroutines.flow.SharedFlowImpl,int)
androidx.window.embedding.RuleController$Companion: androidx.window.embedding.RuleController getInstance(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: java.lang.Object invoke()
kotlin.contracts.ContractBuilderKt: void contract(kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
androidx.core.view.ContentInfoCompat$Compat31Impl: java.lang.String toString()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,short)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)
kotlin.collections.AbstractList: java.util.Iterator iterator()
kotlin.collections.DoubleIterator: java.lang.Double next()
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
kotlin.ULong: long minus-WZ4Q5Ns(long,int)
androidx.lifecycle.SavedStateViewModelFactory: SavedStateViewModelFactory()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$300(androidx.fragment.app.FragmentManager)
kotlin.time.Duration: int compareTo-LRDsOJo(long)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(boolean[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
androidx.core.view.ViewCompat: void jumpDrawablesToCurrentState(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.Object yieldFrames(kotlin.sequences.SequenceScope,kotlin.coroutines.jvm.internal.CoroutineStackFrame,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(float[])
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
kotlin.KotlinVersion: int getMinor()
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: void onAnimationEnd(android.view.animation.Animation)
kotlin.collections.builders.ListBuilder: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysKt: char[] sliceArray(char[],java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,java.lang.Comparable,int,int)
kotlin.sequences.DistinctSequence: java.util.Iterator iterator()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind()
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(int[],kotlin.jvm.functions.Function1)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
kotlinx.coroutines.DeferredCoroutine: java.lang.Object await(kotlin.coroutines.Continuation)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map aggregateTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function4)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore getFragmentStore()
kotlin.collections.ArraysKt___ArraysKt: short component4(short[])
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void lambda$onProviderDisabled$5(java.lang.String)
kotlin.math.MathKt__MathJVMKt: long abs(long)
kotlinx.coroutines.NonCancellable: void isCompleted$annotations()
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
kotlin.reflect.KType: java.util.List getArguments()
androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int maxOf(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(long[],kotlin.jvm.functions.Function1)
kotlin.io.path.ExceptionsCollector: void enterEntry(java.nio.file.Path)
androidx.core.view.ViewCompat: java.util.List getActionList(android.view.View)
androidx.viewpager.widget.PagerTitleStrip: void updateTextPositions(int,float,boolean)
androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: java.lang.String toString()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(int[],kotlin.jvm.functions.Function1)
androidx.window.layout.WindowMetricsCalculatorCompat: java.util.ArrayList getInsetsTypeMasks$window_release()
androidx.annotation.ChecksSdkIntAtLeast: java.lang.String codename()
kotlin.Lazy: java.lang.Object getValue()
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.ranges.ULongRange: boolean equals(java.lang.Object)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxByOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
androidx.loader.content.Loader: boolean takeContentChanged()
androidx.core.content.IntentSanitizer$Api29Impl: java.lang.String getIdentifier(android.content.Intent)
androidx.fragment.app.FragmentManager$6: FragmentManager$6(androidx.fragment.app.FragmentManager,java.lang.String,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.Lifecycle)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,boolean)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[],java.util.Map)
androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)
androidx.core.util.SparseLongArrayKt$keyIterator$1: boolean hasNext()
androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat: boolean isImmutable()
kotlinx.coroutines.flow.internal.NoOpContinuation: NoOpContinuation()
kotlinx.coroutines.InterruptibleKt: java.lang.Object runInterruptibleInExpectedContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function0)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.ViewGroupKt: void forEachIndexed(android.view.ViewGroup,kotlin.jvm.functions.Function2)
androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityDestroyed(android.app.Activity)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object access$acquireSlowPath(kotlinx.coroutines.sync.SemaphoreImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.StateFlow stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: FlowKt__ReduceKt$first$$inlined$collectWhile$2$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.LongSpreadBuilder: LongSpreadBuilder(int)
androidx.core.app.Person$Api22Impl: android.os.PersistableBundle toPersistableBundle(androidx.core.app.Person)
kotlinx.coroutines.flow.SharedFlowImpl: int getTotalSize()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceRightOrNull-ELGow60(byte[],kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setColor(int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,int)
androidx.lifecycle.LifecycleCoroutineScope: androidx.lifecycle.Lifecycle getLifecycle$lifecycle_common()
androidx.core.app.NotificationChannelGroupCompat$Api28Impl: boolean isBlocked(android.app.NotificationChannelGroup)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.StackTraceFrame toStackTraceFrame(java.util.List)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter(boolean)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.channels.ChannelIterator iterator()
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt lastOrNull--ajY-9A(int[])
io.flutter.embedding.engine.dart.DartExecutor: void setIsolateServiceIdListener(io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback: void onSurfaceCleanup()
kotlin.io.ConsoleKt: void println(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean singleOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger minus(java.math.BigInteger,java.math.BigInteger)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(long[],java.lang.Iterable)
androidx.lifecycle.CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0: int hashCode()
io.flutter.plugin.common.BasicMessageChannel: void resizeChannelBuffer(int)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivity()
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
androidx.core.view.ViewPropertyAnimatorCompat$1: ViewPropertyAnimatorCompat$1(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filter(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.time.Duration: int hashCode()
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KCallable computeReflected()
androidx.fragment.app.SpecialEffectsController$Operation$State$Companion: SpecialEffectsController$Operation$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobKt__JobKt: void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.ScribeChannel$1: ScribeChannel$1(io.flutter.embedding.engine.systemchannels.ScribeChannel)
kotlinx.coroutines.CompletedWithCancellation: java.lang.String toString()
kotlinx.coroutines.channels.BufferedChannelKt: boolean getEbPauseExpandBuffers(long)
androidx.core.content.pm.ShortcutXmlParser: ShortcutXmlParser()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.core.graphics.ImageDecoderKt: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxByOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.ULongArray$Iterator: void remove()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong singleOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.IndexingIterator: void remove()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.text.CharsKt: CharsKt()
androidx.fragment.app.SpecialEffectsController$Operation: void setFinalState(androidx.fragment.app.SpecialEffectsController$Operation$State)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[])
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(short[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,short)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryUnpark()
io.flutter.Build: Build()
androidx.core.os.ParcelCompat$Api30Impl: ParcelCompat$Api30Impl()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
io.flutter.embedding.engine.systemchannels.ScribeChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.area.WindowAreaInfo: androidx.window.area.WindowAreaInfo$Type getType()
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object)
androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: int getHeight()
io.flutter.embedding.android.FlutterActivity: void unregisterOnBackInvokedCallback()
kotlin.ULongArray: java.lang.String toString()
androidx.window.core.ActivityComponentInfo: ActivityComponentInfo(java.lang.String,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(byte[],kotlin.jvm.functions.Function1)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: INotificationSideChannel$Stub$Proxy(android.os.IBinder)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(long[])
androidx.lifecycle.MutableLiveData: MutableLiveData()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
kotlin.Triple: java.lang.Object getFirst()
androidx.core.view.MenuHostHelper: void onMenuClosed(android.view.Menu)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(java.lang.Object[])
androidx.core.graphics.Insets: androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
kotlin.io.FilePathComponents: FilePathComponents(java.io.File,java.util.List)
androidx.core.app.ActivityRecreator$2: void run()
kotlin.NumbersKt__NumbersJVMKt: int rotateRight(int,int)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flatten(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: java.util.Iterator iterator()
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: AccessibilityRecordCompat(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(float[],kotlin.jvm.functions.Function2)
androidx.core.app.NotificationChannelCompat$Api30Impl: java.lang.String getParentChannelId(android.app.NotificationChannel)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: boolean access$getInRegistrationPhase(kotlinx.coroutines.selects.SelectImplementation)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
kotlin.collections.AbstractCollection: int getSize()
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.nio.ByteBuffer)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
kotlin.text.Regex: kotlin.text.MatchResult find$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object minOf(java.lang.Object,java.lang.Object[],java.util.Comparator)
kotlinx.coroutines.DispatchedTaskKt: void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
kotlin.collections.ArraysKt___ArraysKt: void shuffle(char[],kotlin.random.Random)
androidx.lifecycle.HasDefaultViewModelProviderFactory: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component2(java.lang.Object[])
androidx.viewpager.widget.PagerAdapter: int getCount()
kotlinx.coroutines.channels.ReceiveCatching: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.Semaphore Semaphore(int,int)
android.support.v4.os.ResultReceiver$1: ResultReceiver$1()
kotlin.time.Duration: boolean isFinite-impl(long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: FlowKt__ZipKt$combineTransformUnsafe$1$1(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionCancel(android.transition.Transition)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
kotlin.ranges.ULongProgression: boolean isEmpty()
kotlinx.coroutines.CompletedContinuation: void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long single-QwZRm1k(long[])
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.HashMap hashMapOf(kotlin.Pair[])
androidx.profileinstaller.ProfileVerifier$Api33Impl: ProfileVerifier$Api33Impl()
io.flutter.embedding.android.KeyboardManager$Responder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: void releaseInterceptedContinuation(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.Continuation)
androidx.profileinstaller.Encoding: byte[] compress(byte[])
androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest build()
androidx.core.app.RemoteInput$Api29Impl: RemoteInput$Api29Impl()
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext)
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
kotlin.collections.ArraysKt___ArraysKt: boolean reduceIndexed(boolean[],kotlin.jvm.functions.Function3)
androidx.core.view.WindowInsetsAnimationControlListenerCompat: void onReady(androidx.core.view.WindowInsetsAnimationControllerCompat,int)
kotlinx.coroutines.flow.LintKt$retry$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.PathKt: java.lang.Iterable flatten(android.graphics.Path,float)
androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.core.os.ParcelCompat$Api33Impl: android.os.Parcelable$Creator readParcelableCreator(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
androidx.startup.StartupLogger: void e(java.lang.String,java.lang.Throwable)
kotlin.collections.builders.ListBuilder$Itr: ListBuilder$Itr(kotlin.collections.builders.ListBuilder,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
kotlin.math.MathKt__MathJVMKt: double nextTowards(double,double)
androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onClosed-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.UByteArray: boolean equals(java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: boolean isVisibilityUnchanged()
kotlin.text.StringsKt___StringsKt: java.lang.Object foldRightIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$sendImpl$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object toSet(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.lifecycle.SavedStateHandle: SavedStateHandle()
androidx.core.util.SparseIntArrayKt: boolean containsValue(android.util.SparseIntArray,int)
io.flutter.embedding.android.FlutterFragment: java.lang.String getDartEntrypointLibraryUri()
androidx.core.content.UriMatcherCompat: UriMatcherCompat()
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaPrimitiveType(kotlin.reflect.KClass)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityDataSensitive()
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: android.content.Intent createIntent(android.content.Context,java.lang.Void)
androidx.core.os.LocaleListCompatWrapper: int computeFirstMatchIndex(java.util.Collection,boolean)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0: void registerLayoutChangeCallback$lambda$0(androidx.core.util.Consumer)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(double[],kotlin.jvm.functions.Function1)
androidx.core.content.IntentSanitizer: void lambda$sanitizeByThrowing$1(java.lang.String)
kotlin.UShortArray: boolean containsAll(java.util.Collection)
androidx.core.widget.NestedScrollView: int releaseVerticalGlow(int,float)
kotlinx.coroutines.ThreadContextElement: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: androidx.core.graphics.Insets getShownStateInsets()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2220(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1: void onAnimationEnd(android.animation.Animator)
kotlin.io.path.PathsKt__PathUtilsKt: kotlin.sequences.Sequence walk(java.nio.file.Path,kotlin.io.path.PathWalkOption[])
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer firstOrNull(kotlin.ranges.IntProgression)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: void close()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void recycle()
kotlin.text.StringsKt__StringsKt: java.lang.String trimStart(java.lang.String,char[])
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.RuleParser: void addRuleWithDuplicatedTagCheck(java.util.HashSet,androidx.window.embedding.EmbeddingRule)
androidx.core.app.JobIntentService$JobServiceEngineImpl: JobIntentService$JobServiceEngineImpl(androidx.core.app.JobIntentService)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double minWith(double[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(long[],kotlin.jvm.functions.Function1)
io.flutter.BuildConfig: BuildConfig()
kotlin.reflect.KClass: java.util.List getTypeParameters()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(int[],int,int)
androidx.fragment.app.ListFragment: long getSelectedItemId()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
kotlin.KotlinVersion$Companion: KotlinVersion$Companion()
kotlin.time.DurationKt: long durationOfMillis(long)
androidx.loader.content.ModernAsyncTask: void onCancelled()
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasSpans()
kotlin.sequences.SequencesKt___SequencesKt: int indexOfLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: NotificationManagerCompat$SideChannelManager$ListenerRecord(android.content.ComponentName)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float random(float[])
kotlin.collections.SetsKt__SetsJVMKt: java.util.TreeSet sortedSetOf(java.lang.Object[])
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmit(java.lang.Object)
androidx.core.view.ViewConfigurationCompat$Api34Impl: ViewConfigurationCompat$Api34Impl()
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()
kotlin.UByte: int floorDiv-WZ4Q5Ns(byte,int)
kotlin.io.ByteStreamsKt: long copyTo(java.io.InputStream,java.io.OutputStream,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$last$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
kotlin.coroutines.cancellation.CancellationExceptionKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
androidx.core.text.util.LocalePreferences: java.lang.String getCalendarType(boolean)
kotlin.io.FilesKt__UtilsKt: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: java.lang.Void invoke(java.io.File,java.io.IOException)
androidx.core.animation.AnimatorKt$addListener$3: AnimatorKt$addListener$3()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence slice(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsJvmKt: StringsKt___StringsJvmKt()
kotlin.UShort: short mod-xj2QHRw(short,short)
kotlin.time.DurationKt: long durationOfNanos(long)
io.flutter.plugin.platform.PlatformViewsController: void setSoftwareRendering(boolean)
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
androidx.core.util.SizeFCompat$Api21Impl: android.util.SizeF toSizeF(androidx.core.util.SizeFCompat)
kotlin.collections.ArraysKt___ArraysKt: double minOf(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.window.area.WindowAreaController$Companion: WindowAreaController$Companion()
io.flutter.FlutterInjector$Builder$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.flutter.embedding.engine.loader.FlutterLoader: void lambda$ensureInitializationCompleteAsync$0(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: boolean none(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation()
kotlin.collections.builders.ListBuilderKt: java.lang.String access$subarrayContentToString(java.lang.Object[],int,int)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.Object useLines(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
androidx.core.provider.DocumentsContractCompat: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,long,kotlin.coroutines.Continuation)
androidx.core.view.ViewKt$doOnNextLayout$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float lastOrNull(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: java.lang.Object invoke(java.lang.Object)
kotlin.experimental.BitwiseOperationsKt: byte and(byte,byte)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.lang.Object getLifecycle()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
kotlin.collections.AbstractSet$Companion: int unorderedHashCode$kotlin_stdlib(java.util.Collection)
androidx.core.widget.CheckedTextViewCompat$Api21Impl: CheckedTextViewCompat$Api21Impl()
androidx.core.content.IntentSanitizer: void sanitizeClipData(android.content.Intent,android.content.Intent,androidx.core.util.Predicate,boolean,androidx.core.util.Predicate,androidx.core.util.Consumer)
androidx.core.telephony.TelephonyManagerCompat: java.lang.String getImei(android.telephony.TelephonyManager)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityRule$lambda$15(androidx.window.embedding.ActivityRule,android.content.Intent)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: int getHashSize()
kotlin.ULongArray: int getSize()
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForHost(int)
androidx.core.view.NestedScrollingParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: byte toByte(java.lang.String)
kotlin.ULong: ULong(long)
androidx.core.view.NestedScrollingChild3: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.util.ArrayDeque createStackTrace(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte elementAtOrElse-cO-VybQ(byte[],int,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)
androidx.window.embedding.SplitAttributes$Builder: androidx.window.embedding.SplitAttributes$Builder setLayoutDirection(androidx.window.embedding.SplitAttributes$LayoutDirection)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
androidx.viewpager.widget.ViewPager: android.os.Parcelable onSaveInstanceState()
androidx.fragment.app.FragmentTabHost$SavedState$1: java.lang.Object[] newArray(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(java.util.Set)
androidx.fragment.app.Fragment$7: Fragment$7(androidx.fragment.app.Fragment)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: boolean isReleased()
androidx.core.app.NotificationChannelCompat$Api30Impl: NotificationChannelCompat$Api30Impl()
kotlin.reflect.KCallable: java.util.List getParameters()
androidx.window.embedding.RuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.core.internal.view.SupportMenuItem: void setShowAsAction(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
kotlin.jvm.internal.LongCompanionObject: void getSIZE_BITS$annotations()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
kotlin.internal.RequireKotlinVersionKind: RequireKotlinVersionKind(java.lang.String,int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[],int,int,java.nio.charset.Charset)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void cancelBackGesture()
androidx.core.view.ViewCompat$Api24Impl: void cancelDragAndDrop(android.view.View)
androidx.core.telephony.SubscriptionManagerCompat: SubscriptionManagerCompat()
kotlin.io.path.PathTreeWalkKt: java.lang.Object keyOf(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] asUIntArray(int[])
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray(java.lang.String,int,int,boolean)
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: StartedLazily$command$1$1$emit$1(kotlinx.coroutines.flow.StartedLazily$command$1$1,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] plus-mazbYpA(short[],short[])
kotlin.collections.MapsKt___MapsKt: java.lang.Float minOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.LintKt: java.lang.Object count(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: java.lang.String additionalToStringProps()
androidx.fragment.app.FragmentManager: void checkStateLoss()
androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow)
kotlin.sequences.SequenceScope: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double component1(double[])
kotlinx.coroutines.Job: void cancel(java.util.concurrent.CancellationException)
androidx.core.os.LocaleListCompat: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(short[],short,int,int)
androidx.versionedparcelable.VersionedParcel: android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(char[],int,int,int,java.lang.Object)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
androidx.core.app.RemoteActionCompat: boolean isEnabled()
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1: void onTransitionEnd(android.transition.Transition)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendDropOldest-JP2dKIU(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
kotlin.UShortArray: int hashCode()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
kotlin.ranges.ClosedFloatingPointRange: boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable)
androidx.core.view.MenuKt: kotlin.sequences.Sequence getChildren(android.view.Menu)
kotlin.time.DurationUnitKt__DurationUnitKt: kotlin.time.DurationUnit durationUnitByShortName(java.lang.String)
androidx.savedstate.SavedStateRegistryController$Companion: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] reset()
kotlin.KotlinNothingValueException: KotlinNothingValueException()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(float[],int,int)
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: void accept(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: AbstractSharedFlow()
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.text.SpannedStringKt: android.text.Spanned toSpanned(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long maxOf-eb3DHEI(long,long)
kotlin.collections.ArraysKt___ArraysKt: void forEach(boolean[],kotlin.jvm.functions.Function1)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: ActivityOptionsCompat$ActivityOptionsCompatImpl(android.app.ActivityOptions)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
kotlin.time.Duration$Companion: long getMinutes-UwyO8pc(long)
androidx.window.layout.adapter.sidecar.SidecarCompat: void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.core.ConsumerAdapter$ConsumerHandler: boolean isEquals(java.lang.reflect.Method,java.lang.Object[])
kotlin.concurrent.TimersKt: java.util.TimerTask timerTask(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadAssets(int,java.lang.String)
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: void dispatch(java.lang.Runnable)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path appendLines$default(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionStart()
androidx.core.app.NotificationCompat$Builder$Api24Impl: android.widget.RemoteViews createContentView(android.app.Notification$Builder)
kotlin.text.StringsKt__IndentKt$prependIndent$1: StringsKt__IndentKt$prependIndent$1(java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)
kotlin.UNumbersKt: long rotateLeft-JSWoG40(long,int)
androidx.core.view.ViewKt: android.graphics.Bitmap drawToBitmap$default(android.view.View,android.graphics.Bitmap$Config,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(int[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List toList(java.util.Enumeration)
androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)
kotlinx.coroutines.JobKt__FutureKt: void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
kotlinx.coroutines.IncompleteStateBox: IncompleteStateBox(kotlinx.coroutines.Incomplete)
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
kotlin.UByte: int hashCode-impl(byte)
androidx.core.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(boolean[],int)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object failure-PtdJZtk()
kotlin.coroutines.intrinsics.IntrinsicsKt: IntrinsicsKt()
kotlin.UByte: int times-7apg3OU(byte,byte)
androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)
androidx.core.view.ViewGroupKt$special$$inlined$Sequence$1: ViewGroupKt$special$$inlined$Sequence$1(android.view.ViewGroup)
androidx.core.app.ActivityCompat$Api32Impl: ActivityCompat$Api32Impl()
io.flutter.embedding.engine.renderer.RenderSurface: void pause()
androidx.activity.OnBackPressedDispatcher: void onBackProgressed(androidx.activity.BackEventCompat)
androidx.core.app.NotificationCompat$MessagingStyle$Api26Impl: android.app.Notification$MessagingStyle addHistoricMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
androidx.core.app.AppLaunchChecker: void onActivityCreate(android.app.Activity)
kotlinx.coroutines.sync.MutexKt: java.lang.Object withLock$$forInline(kotlinx.coroutines.sync.Mutex,java.lang.Object,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onMapSharedElements(java.util.List,java.util.Map)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$2: androidx.activity.OnBackPressedDispatcherOwner invoke(android.view.View)
kotlin.collections.EmptySet: java.lang.Object[] toArray()
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
kotlin.collections.IndexingIterator: kotlin.collections.IndexedValue next()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
androidx.annotation.RequiresOptIn: androidx.annotation.RequiresOptIn$Level level()
kotlin.collections.builders.ListBuilder: void addAllInternal(int,java.util.Collection,int)
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat getLocusIdFromExtra(android.os.PersistableBundle)
kotlinx.coroutines.scheduling.DefaultIoScheduler: java.util.concurrent.Executor getExecutor()
kotlinx.coroutines.TimeoutKt: kotlinx.coroutines.TimeoutCancellationException TimeoutCancellationException(long,kotlinx.coroutines.Delay,kotlinx.coroutines.Job)
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.collection.SparseArrayCompat: void setValueAt(int,java.lang.Object)
androidx.core.widget.NestedScrollView: void initOrResetVelocityTracker()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
io.flutter.plugin.platform.PlatformViewRenderTarget: int getWidth()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduce(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double last(double[],kotlin.jvm.functions.Function1)
kotlin.UInt: int plus-WZ4Q5Ns(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minWithOrNull(double[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: boolean component3(boolean[])
androidx.core.math.MathUtils: long clamp(long,long,long)
kotlin.io.ConsoleKt: void println(double)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType fromValue(long)
kotlin.jvm.internal.ClassReference: void isAbstract$annotations()
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.builders.ListBuilder: java.lang.Object[] toArray()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty observable(java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
androidx.core.content.IntentSanitizer: IntentSanitizer()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.activity.FullyDrawnReporter: void addOnReportDrawnListener(kotlin.jvm.functions.Function0)
kotlin.jvm.internal.TypeReference: java.lang.String toString()
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask: PrecomputedTextCompat$PrecomputedTextFutureTask(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence)
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void removeOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOrThrow(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Object[])
androidx.core.os.HandlerKt: java.lang.Runnable postAtTime$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object)
kotlin.collections.EmptyList: boolean isEmpty()
androidx.fragment.app.FragmentAnim: int transitToAnimResourceId(android.content.Context,int,boolean)
io.flutter.embedding.android.FlutterFragment: void onUserLeaveHint()
androidx.window.embedding.EmbeddingBackend$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.String getState()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$elementAt$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(byte[],java.lang.Iterable)
kotlin.collections.MapsKt__MapsKt: java.lang.Object get(java.util.Map,java.lang.Object)
androidx.core.app.ActivityCompat$Api21Impl: void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
androidx.core.app.DialogCompat$Api28Impl: java.lang.Object requireViewById(android.app.Dialog,int)
androidx.concurrent.futures.AbstractResolvableFuture: boolean setException(java.lang.Throwable)
androidx.activity.SystemBarStyle$Companion: androidx.activity.SystemBarStyle auto$default(androidx.activity.SystemBarStyle$Companion,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetEmbeddingRulesValid$1: java.lang.Boolean invoke()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.time.Duration: int getNanosecondsComponent-impl(long)
kotlin.jvm.internal.ArrayShortIterator: ArrayShortIterator(short[])
kotlin.sequences.SequencesKt___SequencesKt: float minOrThrow(kotlin.sequences.Sequence)
kotlin.ranges.LongRange: boolean contains(java.lang.Comparable)
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: void addOrUpdateRule(androidx.window.embedding.EmbeddingRule,boolean)
kotlin.UInt: byte mod-7apg3OU(int,byte)
androidx.loader.content.Loader: boolean cancelLoad()
kotlin.collections.MapsKt__MapsKt: MapsKt__MapsKt()
androidx.fragment.app.FragmentManager$7: FragmentManager$7(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquire(kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect onGetEpicenter(android.transition.Transition)
kotlinx.coroutines.android.HandlerContext: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
io.flutter.plugin.editing.TextEditingDelta: void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: int getWidth()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendDropLatest-Mj0NB7M(java.lang.Object,boolean)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void cancelBackGesture()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValueLabelHint()
androidx.window.embedding.ActivityFilter: ActivityFilter(androidx.window.core.ActivityComponentInfo,java.lang.String)
androidx.lifecycle.LifecycleKt$eventFlow$1$1: LifecycleKt$eventFlow$1$1(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.core.view.ViewCompat: void setX(android.view.View,float)
androidx.core.util.PairKt: android.util.Pair toAndroidPair(kotlin.Pair)
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentContainerView$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View$OnApplyWindowInsetsListener,android.view.View,android.view.WindowInsets)
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
kotlinx.coroutines.selects.SelectImplementation$ClauseData: kotlin.jvm.functions.Function1 createOnCancellationAction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.NumbersKt__NumbersKt: byte takeLowestOneBit(byte)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double singleOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int access$getNCollectors(kotlinx.coroutines.flow.internal.AbstractSharedFlow)
androidx.core.text.method.LinkMovementMethodCompat: androidx.core.text.method.LinkMovementMethodCompat getInstance()
androidx.activity.ComponentDialog: void onCreate(android.os.Bundle)
androidx.core.graphics.drawable.IconCompat$Api23Impl: androidx.core.graphics.drawable.IconCompat createFromIconInner(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: void access$1800(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
kotlin.collections.RingBuffer: java.lang.Object[] toArray()
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
kotlin.math.MathKt__MathJVMKt: float tan(float)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.core.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)
androidx.window.area.WindowAreaCapability$Operation$Companion: WindowAreaCapability$Operation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.IntRange: java.lang.Integer getEndExclusive()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.area.SafeWindowAreaComponentProvider$isWindowAreaProviderValid$1: SafeWindowAreaComponentProvider$isWindowAreaProviderValid$1(java.lang.Object,androidx.window.area.SafeWindowAreaComponentProvider)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean isRequestFromAccessibilityTool(android.view.accessibility.AccessibilityManager)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: FlowKt__ReduceKt$lastOrNull$2(kotlin.jvm.internal.Ref$ObjectRef)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Default: IUnusedAppRestrictionsBackportService$Default()
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
kotlin.coroutines.jvm.internal.RunSuspendKt: void runSuspend(kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewCompat$Api28Impl: TextViewCompat$Api28Impl()
kotlin.text.StringsKt___StringsKt: char maxByOrThrow(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.provider.CallbackWithHandler$2: void run()
kotlinx.coroutines.selects.SelectImplementation: int trySelectInternal(java.lang.Object,java.lang.Object)
kotlin.ranges.UIntRange$Companion: kotlin.ranges.UIntRange getEMPTY()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
androidx.activity.SystemBarStyle$Companion$light$1: SystemBarStyle$Companion$light$1()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.core.os.CancellationSignal: java.lang.Object getCancellationSignalObject()
androidx.core.os.PersistableBundleKt: android.os.PersistableBundle toPersistableBundle(java.util.Map)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder initialRoute(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: PopupWindowCompat$Api23Impl()
kotlin.ULong: long plus-VKZWuLQ(long,long)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receive(kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
kotlin.internal.RequireKotlinVersionKind: kotlin.internal.RequireKotlinVersionKind[] $values()
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()
kotlin.reflect.KAnnotatedElement: java.util.List getAnnotations()
kotlin.collections.ArraysKt___ArraysKt: char single(char[],kotlin.jvm.functions.Function1)
androidx.core.util.Preconditions: long checkArgumentInRange(long,long,long,java.lang.String)
androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion: ExtensionWindowBackend$Companion()
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTooltip(java.lang.String)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquire$suspendImpl(kotlinx.coroutines.sync.SemaphoreImpl,kotlin.coroutines.Continuation)
androidx.collection.CircularArray: void removeFromEnd(int)
androidx.lifecycle.ComputableLiveData: void getRefreshRunnable$lifecycle_livedata_release$annotations()
androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(int[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel: java.lang.String toStringDebug$kotlinx_coroutines_core()
kotlin.concurrent.TimersKt: java.util.TimerTask scheduleAtFixedRate(java.util.Timer,long,long,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.lifecycle.LiveDataScopeImpl: java.lang.Object emitSource(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: android.content.Intent createIntent(android.content.Context,android.net.Uri)
androidx.core.util.AtomicFileKt: java.lang.String readText$default(android.util.AtomicFile,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
kotlin.text.CharCategory: int getValue()
io.flutter.plugin.editing.ListenableEditingState: void setSpan(java.lang.Object,int,int,int)
androidx.loader.content.AsyncTaskLoader: void executePendingTask()
androidx.core.app.NotificationCompat$TvExtender: boolean isSuppressShowOverApps()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.path.PathsKt__PathReadWriteKt: java.lang.Object useLines$default(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()
androidx.annotation.VisibleForTesting: int otherwise()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceRightOrNull(char[],kotlin.jvm.functions.Function2)
androidx.viewpager.widget.ViewPager: void dispatchOnPageSelected(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxOrNull(char[])
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: NotificationCompat$MessagingStyle$Api24Impl()
androidx.core.app.AppLocalesStorageHelper: void persistLocales(android.content.Context,java.lang.String)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void listen(int)
androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
androidx.window.embedding.SplitController$SplitSupportStatus: java.lang.String toString()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String)
kotlin.ranges.IntProgression: int getFirst()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
kotlin.sequences.MergingSequence$iterator$1: MergingSequence$iterator$1(kotlin.sequences.MergingSequence)
com.getkeepsafe.relinker.ReLinker$LoadListener: void success()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
kotlin.reflect.KParameter: kotlin.reflect.KParameter$Kind getKind()
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void unregister()
androidx.savedstate.SavedStateRegistry: void setAllowingSavingState$savedstate_release(boolean)
androidx.window.core.PredicateAdapter$PairPredicateStubHandler: boolean invokeTest(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt[] toTypedArray--ajY-9A(int[])
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
kotlinx.coroutines.Dispatchers: Dispatchers()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence)
androidx.core.app.NotificationManagerCompat: NotificationManagerCompat(android.content.Context)
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.path.FileVisitorBuilderImpl: java.nio.file.FileVisitor build()
kotlin.collections.MapWithDefaultImpl: boolean isEmpty()
androidx.lifecycle.Transformations$sam$androidx_lifecycle_Observer$0: kotlin.Function getFunctionDelegate()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean)
androidx.core.os.ParcelCompat: boolean readBoolean(android.os.Parcel)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.app.RemoteInput$Builder setLabel(android.app.RemoteInput$Builder,java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasRequestInitialAccessibilityFocus()
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build()
androidx.activity.SystemBarStyle$Companion: SystemBarStyle$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadAssets(int,java.lang.String)
androidx.core.util.SparseIntArrayKt: boolean containsKey(android.util.SparseIntArray,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(short[])
io.flutter.embedding.android.FlutterFragment: java.lang.String getAppBundlePath()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxByOrThrow(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.Lifecycle: void setInternalScopeRef(java.util.concurrent.atomic.AtomicReference)
io.flutter.embedding.android.FlutterFragment$1: FlutterFragment$1(io.flutter.embedding.android.FlutterFragment)
kotlin.collections.EmptySet: java.util.Iterator iterator()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
kotlin.text.StringsKt___StringsKt$windowed$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewCompat: void setOverScrollMode(android.view.View,int)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.content.res.CamColor: float getChroma()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isMethodSplitAttributesCalculatorValid()
androidx.annotation.IntRange: long to()
kotlin.Metadata: int[] bv()
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult$Companion: ActivityResultContracts$StartIntentSenderForResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.NestedScrollView: boolean canScroll()
androidx.core.app.ActivityCompat$Api31Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.ColorFilter getColorFilter()
androidx.core.app.NotificationChannelGroupCompat: NotificationChannelGroupCompat(java.lang.String)
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KType mutableCollectionType(kotlin.reflect.KType)
kotlin.time.DurationJvmKt: java.lang.String formatUpToDecimals(double,int)
kotlin.internal.UProgressionUtilKt: long differenceModulo-sambcqE(long,long,long)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(long[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)
kotlin.UIntArray: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(byte[],byte,int,int)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: int first(kotlin.ranges.IntProgression)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(boolean[],java.util.Comparator)
androidx.window.embedding.EmbeddingAdapter: boolean translateSplitPairRule$lambda$5(androidx.window.embedding.SplitPairRule,android.util.Pair)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getSendSegment$FU$p()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.collection.LruCache: void resize(int)
androidx.core.net.UriKt: android.net.Uri toUri(java.io.File)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: FlowKt__DelayKt$debounce$3(kotlin.jvm.functions.Function1)
kotlin.UShort: int plus-7apg3OU(short,byte)
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
kotlinx.coroutines.flow.SharingStarted: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
kotlin.UByte: int compareTo(java.lang.Object)
kotlin.UnsafeLazyImpl: java.lang.String toString()
kotlin.collections.EmptyMap: void putAll(java.util.Map)
androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.core.app.JobIntentService: void onDestroy()
androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float,float)
kotlin.reflect.KMutableProperty2: void set(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView: void computeScroll()
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KProperty$Getter getGetter()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-2csIQuQ(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(char[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character singleOrNull(char[])
kotlin.NumbersKt__NumbersKt: short rotateLeft(short,int)
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object invoke$$forInline(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setMinSmallestWidthDp(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
androidx.fragment.app.FragmentManagerViewModel: int hashCode()
kotlin.collections.builders.MapBuilderValues: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.LazyKt__LazyKt: LazyKt__LazyKt()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow mapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterActivity: void onDestroy()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDefaults(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyOf--ajY-9A(int[])
kotlin.UIntArray$Iterator: void remove()
kotlin.collections.builders.ListBuilder: void clear()
androidx.core.app.Person: boolean equals(java.lang.Object)
androidx.core.graphics.BlendModeColorFilterCompat: BlendModeColorFilterCompat()
kotlinx.coroutines.selects.SelectImplementation: kotlin.coroutines.CoroutineContext getContext()
androidx.lifecycle.SavedStateViewModelFactory: void onRequery(androidx.lifecycle.ViewModel)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
org.jetbrains.annotations.Nls: org.jetbrains.annotations.Nls$Capitalization capitalization()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: IUnusedAppRestrictionsBackportCallback$Stub$Proxy(android.os.IBinder)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void access$200(io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxWithOrNull(java.util.Map,java.util.Comparator)
androidx.fragment.app.Fragment: void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener)
kotlin.collections.builders.SerializedCollection$Companion: SerializedCollection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: androidx.core.graphics.Insets getCurrentInsets()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int last--ajY-9A(int[])
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CoroutineExceptionHandler,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] toIntArray--ajY-9A(int[])
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: int minWithOrThrow(int[],java.util.Comparator)
androidx.loader.content.ModernAsyncTask$2: ModernAsyncTask$2(androidx.loader.content.ModernAsyncTask)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentInvalid(boolean)
androidx.core.widget.AutoSizeableTextView: int[] getAutoSizeTextAvailableSizes()
kotlin.collections.ArraysKt___ArraysKt: char component3(char[])
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOf(double[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findAnyTask(boolean)
androidx.fragment.app.FragmentManager: void launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int)
kotlin._Assertions: _Assertions()
kotlin.jvm.internal.FunctionImpl: FunctionImpl()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: int getY()
kotlin.collections.CollectionsKt__ReversedViewsKt: java.util.List asReversed(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(boolean[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.AbstractTimeSourceKt: void registerTimeLoopThread()
kotlinx.coroutines.JobSupport: void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityForward()
androidx.core.app.OnUserLeaveHintProvider: void addOnUserLeaveHintListener(java.lang.Runnable)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setSticky(boolean)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
kotlin.collections.Grouping: java.util.Iterator sourceIterator()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setRowSpan(int)
kotlin.coroutines.CombinedContext: java.lang.Object writeReplace()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(long[],kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveKt: void getUNDEFINED_RESULT$annotations()
kotlin.concurrent.TimersKt: java.util.Timer timer$default(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.ULongArray: boolean contains-VKZWuLQ(long)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: MissingMainCoroutineDispatcherFactory()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray()
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearActions()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapIndexedTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: FlowKt__ZipKt$nullArrayFactory$1()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double getOrElse(double[],int,kotlin.jvm.functions.Function1)
kotlin.coroutines.jvm.internal.CoroutineStackFrame: java.lang.StackTraceElement getStackTraceElement()
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.Class,java.lang.String)
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object removeFirstOrNull()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher blocking$default(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,int,java.lang.Object)
kotlinx.coroutines.selects.OnTimeout: void register(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: void disposeOnCompletion(kotlinx.coroutines.DisposableHandle)
kotlinx.coroutines.DispatcherExecutor: DispatcherExecutor(kotlinx.coroutines.CoroutineDispatcher)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void createOnBackInvokedCallback$lambda$0(kotlin.jvm.functions.Function0)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,float)
kotlin.ULong: int compareTo-xj2QHRw(long,short)
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
kotlin.collections.AbstractList$ListIteratorImpl: int previousIndex()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KCallable computeReflected()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int,int)
kotlin.jvm.internal.CharCompanionObject: void getMIN_VALUE$annotations()
androidx.core.location.LocationCompat$Api26Impl: boolean hasVerticalAccuracy(android.location.Location)
android.support.v4.app.INotificationSideChannel: void cancelAll(java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.builders.MapBuilder: int removeKey$kotlin_stdlib(java.lang.Object)
androidx.fragment.app.FragmentController: void dispatchReallyStop()
kotlinx.coroutines.flow.internal.CombineKt: kotlinx.coroutines.flow.Flow zipImpl(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.window.embedding.SplitAttributesCalculatorParams: SplitAttributesCalculatorParams(androidx.window.layout.WindowMetrics,android.content.res.Configuration,androidx.window.layout.WindowLayoutInfo,androidx.window.embedding.SplitAttributes,boolean,java.lang.String)
androidx.core.content.SharedPreferencesKt: void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1)
androidx.core.location.LocationCompat: boolean hasBearingAccuracy(android.location.Location)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOrNull(java.lang.Float[])
androidx.core.graphics.PorterDuffKt: android.graphics.PorterDuffColorFilter toColorFilter(android.graphics.PorterDuff$Mode,int)
kotlin.sequences.FlatteningSequence$iterator$1: boolean hasNext()
androidx.core.view.ViewCompat: int getMeasuredHeightAndState(android.view.View)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void onCommit(android.view.ViewGroup)
kotlin.io.encoding.EncodeOutputStream: int encodeIntoOutput(byte[],int,int)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedWriter bufferedWriter(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[])
androidx.core.view.ContentInfoCompat$BuilderCompat: void setLinkUri(android.net.Uri)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: java.lang.String toString()
androidx.window.embedding.EmbeddingAdapter: androidx.window.extensions.embedding.SplitPlaceholderRule translateSplitPlaceholderRule(android.content.Context,androidx.window.embedding.SplitPlaceholderRule,java.lang.Class)
androidx.core.view.WindowInsetsCompat: void setStableInsets(androidx.core.graphics.Insets)
kotlin.NumbersKt__NumbersKt: byte takeHighestOneBit(byte)
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState[] newArray(int)
kotlin.UByte: double toDouble-impl(byte)
androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)
androidx.savedstate.SavedStateRegistry$AutoRecreated: void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.app.NotificationCompatBuilder: java.util.List getPeople(java.util.List)
kotlinx.coroutines.android.HandlerDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlin.io.path.PathTreeWalk: java.util.Iterator bfsIterator()
androidx.activity.OnBackPressedDispatcherKt: androidx.activity.OnBackPressedCallback addCallback$default(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.LifecycleOwner,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow take(kotlinx.coroutines.flow.Flow,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
kotlin.internal.ProgressionUtilKt: long mod(long,long)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.core.view.SoftwareKeyboardControllerCompat: void hide()
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
kotlin.sequences.TransformingIndexedSequence: TransformingIndexedSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.annotation.Target: kotlin.annotation.AnnotationTarget[] allowedTargets()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-GBYM_sE(byte[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat: int getStableInsetTop()
kotlinx.coroutines.flow.FlowKt: java.lang.Object stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,short)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToContentProvider(android.content.ContentProvider,androidx.lifecycle.Lifecycle)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Void)
kotlin.collections.MapAccessorsKt: void setValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: SequencesKt___SequencesKt$filterIndexed$2()
androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int indexOf(float)
androidx.window.area.WindowAreaPresentationSessionCallback: void onContainerVisibilityChanged(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList--ajY-9A(int[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
androidx.window.layout.adapter.sidecar.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.window.layout.util.ContextCompatHelperApi30: ContextCompatHelperApi30()
androidx.core.location.LocationCompat: java.lang.reflect.Method getSetIsFromMockProviderMethod()
androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.core.view.ContentInfoCompat$Api31Impl: android.util.Pair partition(android.view.ContentInfo,java.util.function.Predicate)
androidx.core.app.ShareCompat$IntentReader: ShareCompat$IntentReader(android.app.Activity)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion: int getMaxItems$activity_release()
androidx.lifecycle.SavedStateHandle: androidx.lifecycle.MutableLiveData getLiveData(java.lang.String,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] onEach(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: java.util.List parseResult(int,android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short randomOrNull(short[],kotlin.random.Random)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: NotificationCompat$CallStyle$Api21Impl()
androidx.window.core.ValidSpecification: java.lang.Object getValue()
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
androidx.core.util.LruCacheKt: android.util.LruCache lruCache$default(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int,java.lang.Object)
kotlin.collections.EmptyList: java.lang.Void remove(int)
kotlin.ULongKt: long toULong(double)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule build()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
androidx.core.view.ViewCompat: void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
io.flutter.embedding.engine.plugins.PluginRegistry: void add(java.util.Set)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1)
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: LocationManagerCompat$GnssMeasurementsTransport(android.location.GnssMeasurementsEvent$Callback,java.util.concurrent.Executor)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence drop(java.lang.CharSequence,int)
io.flutter.embedding.engine.loader.ResourceExtractor: void waitForCompletion()
kotlin.time.AbstractDoubleTimeSource: AbstractDoubleTimeSource(kotlin.time.DurationUnit)
io.flutter.embedding.engine.FlutterEngineCache: boolean contains(java.lang.String)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.OpenEndRange,int)
kotlinx.coroutines.scheduling.TaskImpl: java.lang.String toString()
androidx.customview.widget.FocusStrategy: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
androidx.core.view.ViewGroupKt: void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
androidx.fragment.app.SpecialEffectsController$Effect: SpecialEffectsController$Effect()
androidx.loader.content.Loader: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOf(boolean[])
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $values()
androidx.activity.result.ActivityResultRegistry$1: ActivityResultRegistry$1(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)
androidx.core.app.NotificationCompat$WearableExtender$Api20Impl: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(java.util.ArrayList,int)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPredicates$1: EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPredicates$1(java.util.Set)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong maxWith-zrEWJaI(long[],java.util.Comparator)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void registerOnBackInvokedCallback()
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: int hashCode()
kotlin.collections.MutableMapWithDefaultImpl: java.util.Map getMap()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer: AgentPremain$DebugProbesTransformer()
androidx.core.util.SparseArrayKt: int getSize(android.util.SparseArray)
androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)
androidx.core.graphics.RectKt: android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Integer boxInt(int)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
kotlin.ranges.URangesKt___URangesKt: int coerceAtMost-J1ME1BU(int,int)
kotlinx.coroutines.EventLoopImplBase: boolean isEmpty()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong reduceIndexedOrNull-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlin.reflect.KParameter: boolean isVararg()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase)
androidx.fragment.app.FragmentTransitionCompat21$4: FragmentTransitionCompat21$4(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfUInt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.activity.FullyDrawnReporterKt: java.lang.Object reportWhenComplete$$forInline(androidx.activity.FullyDrawnReporter,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.os.TraceCompat: void beginSection(java.lang.String)
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
androidx.core.app.AppComponentFactory: AppComponentFactory()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOfRangeInline(byte[],int,int)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
kotlin.math.MathKt: MathKt()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)
kotlin.collections.CollectionsKt___CollectionsKt: void forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable requireNoNulls(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner owner(kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformPlugin: void setFrameworkHandlesBack(boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxOfWith(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxByOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.time.Duration$Companion: long getNEG_INFINITE-UwyO8pc$kotlin_stdlib()
kotlin.io.path.ExceptionsCollector: java.util.List getCollectedExceptions()
androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void setSanitizeStackTraces(boolean)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi1: android.os.Handler createHandler()
androidx.collection.ArraySet$1: int colGetSize()
kotlin.UIntArray: boolean add(java.lang.Object)
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)
androidx.lifecycle.SavedStateHandle$Companion: SavedStateHandle$Companion()
androidx.loader.content.ModernAsyncTask: void onPostExecute(java.lang.Object)
kotlin.text.StringsKt__IndentKt: java.lang.String trimIndent(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder()
androidx.core.widget.NestedScrollView: boolean inChild(int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: int getCreatedWorkers()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-K6DWlUc$default(long[],long,int,int,int,java.lang.Object)
androidx.collection.MapCollections: int colIndexOfKey(java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.builders.ListBuilderKt: java.lang.Object[] copyOfUninitializedElements(java.lang.Object[],int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection)
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder allowViolation(java.lang.String,java.lang.Class)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean getPadding(android.graphics.Rect)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt getOrNull-qFRl0hI(int[],int)
androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: int getChildCount(android.view.accessibility.AccessibilityWindowInfo)
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
androidx.collection.CircularArray: CircularArray()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
io.flutter.plugin.common.EventChannel$EventSink: void success(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-QwZRm1k(long[])
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: NotificationCompat$CarExtender$UnreadConversation$Builder(java.lang.String)
androidx.core.view.ViewKt: int getMarginRight(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContainerTitle(java.lang.CharSequence)
kotlin.UnsafeLazyImpl: boolean isInitialized()
kotlin.collections.RingBuffer: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: char[] reversedArray(char[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.util.RangeKt: kotlin.ranges.ClosedRange toClosedRange(android.util.Range)
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
io.flutter.plugin.text.ProcessTextPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.embedding.SplitController$splitInfoList$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
kotlin.LazyKt__LazyJVMKt: LazyKt__LazyJVMKt()
androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$700(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-2fe2U9s$default(int[],int,int,int,int,java.lang.Object)
androidx.core.content.res.CamColor: CamColor(float,float,float,float,float,float,float,float,float)
androidx.core.os.ParcelCompat: void readList(android.os.Parcel,java.util.List,java.lang.ClassLoader,java.lang.Class)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
io.flutter.plugin.platform.PlatformOverlayView: PlatformOverlayView(android.content.Context)
kotlin.random.URandomKt: long nextULong-V1Xi4fY(kotlin.random.Random,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getInProgressLabel()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReadPendingIntent()
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryResumeAcquire(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
kotlin.Triple: Triple(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.reflect.KClass: boolean isInstance(java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat: int getExcludedFromSurfaces()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
kotlin.collections.ArraysKt___ArraysKt: byte component5(byte[])
androidx.window.core.Bounds: int getRight()
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: boolean increment(int)
kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
io.flutter.embedding.engine.FlutterShellArgs: void remove(java.lang.String)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
androidx.lifecycle.ViewModelLazy$1: ViewModelLazy$1()
kotlin.ranges.UIntProgression$Companion: UIntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlin.ULongArray: boolean add-VKZWuLQ(long)
kotlin.Unit: java.lang.String toString()
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: androidx.core.view.ContentInfoCompat build()
kotlin.ranges.CharProgression: char getFirst()
kotlin.collections.AbstractIterator: void remove()
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
kotlin.collections.ArraysKt___ArraysKt: void sortBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Style: void clearCompatExtraKeys(android.os.Bundle)
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
androidx.core.app.ShareCompat: java.lang.String getCallingPackage(android.content.Intent)
kotlin.UIntArray: java.util.Iterator iterator-impl(int[])
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: ExecutorCoroutineDispatcherImpl(java.util.concurrent.Executor)
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean canUseWindowLayoutComponent()
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Double,java.lang.Double)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minByOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.LintKt$retry$1: LintKt$retry$1(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(char[])
kotlin.sequences.SequencesKt___SequencesKt: long sumOfULong(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int indexOf-7apg3OU(byte)
kotlinx.coroutines.AbstractTimeSource: void registerTimeLoopThread()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: androidx.window.embedding.ActivityStack getActivityStack(android.app.Activity)
kotlin.text.CharsKt__CharJVMKt: char toLowerCase(char)
kotlinx.coroutines.scheduling.DefaultIoScheduler: void close()
androidx.core.graphics.ColorUtils: ColorUtils()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.viewpager.widget.ViewPager: void removeNonDecorViews()
androidx.core.app.NotificationCompatBuilder$Api28Impl: NotificationCompatBuilder$Api28Impl()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(int[],int,int,int)
androidx.core.view.ViewKt: int getMarginLeft(android.view.View)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setGravity(int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List mutableListOf(java.lang.Object[])
kotlin.io.path.PathTreeWalkKt: java.lang.Object access$keyOf(java.nio.file.Path,java.nio.file.LinkOption[])
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle setDeclineButtonColorHint(int)
androidx.lifecycle.EmittedSource$dispose$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)
androidx.core.database.sqlite.SQLiteDatabaseKt: java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.sequences.TransformingIndexedSequence$iterator$1: int getIndex()
androidx.core.app.NotificationChannelCompat: int getLightColor()
androidx.versionedparcelable.VersionedParcelStream: android.os.Bundle readBundle()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.window.layout.SafeWindowLayoutComponentProvider: java.lang.Class getWindowLayoutComponentClass()
kotlin.reflect.TypeImpl: java.lang.String getTypeName()
kotlinx.coroutines.DefaultExecutor: void shutdownError()
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1: java.lang.Throwable fillInStackTrace()
kotlin.sequences.SequencesKt___SequencesKt: int indexOf(kotlin.sequences.Sequence,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlin.coroutines.Continuation probeCoroutineCreated$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
_COROUTINE._CREATION: _CREATION()
androidx.activity.result.contract.ActivityResultContracts$TakePicture: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.internal.ThreadState: ThreadState(kotlin.coroutines.CoroutineContext,int)
androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)
androidx.core.widget.TextViewCompat$Api23Impl: TextViewCompat$Api23Impl()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int lastIndexOf(java.lang.Object)
kotlin.ranges.ClosedDoubleRange: boolean lessThanOrEquals(double,double)
androidx.core.graphics.RegionKt: android.graphics.Region plus(android.graphics.Region,android.graphics.Region)
androidx.core.app.ActivityCompat$Api22Impl: ActivityCompat$Api22Impl()
androidx.fragment.app.FragmentResultOwner: void setFragmentResultListener(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.fragment.app.FragmentResultListener)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: void invoke(java.lang.Throwable)
androidx.savedstate.SavedStateRegistry: void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,kotlin.jvm.functions.Function3)
kotlinx.coroutines.sync.Mutex: kotlinx.coroutines.selects.SelectClause2 getOnLock()
kotlin.sequences.DropWhileSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.DropWhileSequence)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
androidx.fragment.app.FragmentFactory: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object invoke(java.lang.Object)
androidx.collection.CircularArray: java.lang.Object getFirst()
kotlin.UInt: java.lang.String toString-impl(int)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void setState(androidx.lifecycle.Lifecycle$State)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getMessages()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.Triple: int hashCode()
io.flutter.embedding.engine.systemchannels.ScribeChannel: void startStylusHandwriting(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.List scan(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
androidx.core.app.NotificationChannelCompat$Api26Impl: android.net.Uri getSound(android.app.NotificationChannel)
kotlinx.coroutines.channels.BufferedChannel$onSend$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],byte[],kotlin.jvm.functions.Function2)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri)
kotlin.jvm.internal.Intrinsics: void throwAssert()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$200(io.flutter.view.AccessibilityBridge,int,int)
androidx.annotation.RequiresPermission$Write: androidx.annotation.RequiresPermission value()
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,char,boolean)
androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)
androidx.core.app.AlarmManagerCompat$Api23Impl: AlarmManagerCompat$Api23Impl()
kotlinx.coroutines.NonCancellable: void isCancelled$annotations()
kotlin.jvm.optionals.OptionalsKt: java.util.Collection toCollection(java.util.Optional,java.util.Collection)
kotlinx.coroutines.debug.internal.DebugProbesImpl$startWeakRefCleanerThread$1: DebugProbesImpl$startWeakRefCleanerThread$1()
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification)
kotlin.reflect.KProperty2: java.lang.Object get(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimalOrNull(java.lang.String,java.math.MathContext)
androidx.core.util.Function: java.lang.Object apply(java.lang.Object)
androidx.lifecycle.CoroutineLiveData$1: java.lang.Object invoke()
kotlin.text.DelimitedRangesSequence$iterator$1: void setCounter(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEachIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat: float getScaleX(android.view.View)
androidx.core.util.Predicate: androidx.core.util.Predicate or(androidx.core.util.Predicate)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean isInternalMethod(java.lang.StackTraceElement)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapKeys(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceOrNull(boolean[],kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64: int decodeImpl(byte[],byte[],int,int,int)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion: JDK8PlatformImplementations$ReflectSdkVersion()
kotlinx.coroutines.CoroutineId: long getId()
androidx.fragment.app.FragmentActivity$HostCallbacks: void addOnTrimMemoryListener(androidx.core.util.Consumer)
kotlin.reflect.TypesJVMKt: void getJavaType$annotations(kotlin.reflect.KTypeProjection)
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: java.lang.Object computeValue(java.lang.Class)
kotlin.sequences.SequenceBuilderIterator: kotlin.coroutines.CoroutineContext getContext()
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$1: SequencesKt___SequencesKt$flatMapIndexed$1()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtraOutput(androidx.core.util.Predicate)
androidx.fragment.app.FragmentStateManager: void destroyFragmentView()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(java.lang.Comparable[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.customview.view.AbsSavedState$1: AbsSavedState$1()
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
androidx.customview.widget.FocusStrategy: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(int,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder deleteAt(java.lang.StringBuilder,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryPark()
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,kotlin.sequences.Sequence)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void handleEntry$PathsKt__PathRecursiveFunctionsKt(java.nio.file.SecureDirectoryStream,java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlin.io.encoding.Base64$Default: byte[] getMimeLineSeparatorSymbols$kotlin_stdlib()
androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)
androidx.core.content.ContextCompat$Api30Impl: ContextCompat$Api30Impl()
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
androidx.core.view.ContentInfoCompat$BuilderCompat: androidx.core.view.ContentInfoCompat build()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.UShort: int hashCode()
androidx.customview.widget.ViewDragHelper: int clampMag(int,int,int)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture: AbstractResolvableFuture$SetFuture(androidx.concurrent.futures.AbstractResolvableFuture,com.google.common.util.concurrent.ListenableFuture)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback$lambda$0(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingCompat,java.util.List)
androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenStarted(androidx.lifecycle.LifecycleOwner,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: void run()
android.support.v4.os.ResultReceiver$MyRunnable: void run()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object undispatchedResult(kotlinx.coroutines.internal.ScopeCoroutine,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
kotlin.collections.GroupingKt__GroupingJVMKt: java.util.Map eachCount(kotlin.collections.Grouping)
androidx.core.os.ParcelCompat: android.os.Parcelable[] readParcelableArrayTyped(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.annotation.RequiresPermission: java.lang.String[] anyOf()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannedString buildSpannedString(kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
androidx.core.view.ViewStructureCompat$Api23Impl: ViewStructureCompat$Api23Impl()
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],java.util.Collection)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
kotlin.math.MathKt__MathJVMKt: double log(double,double)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
io.flutter.plugin.platform.PlatformViewsController: void disposePlatformView(int)
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol access$getNONE$p()
androidx.fragment.app.ListFragment: ListFragment()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceIndexedOrNull(char[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: double component5(double[])
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(boolean[],boolean,int,int,int,java.lang.Object)
io.flutter.util.Preconditions: void checkState(boolean)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
kotlin.math.MathKt__MathJVMKt: float floor(float)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngineGroup$Options addEntrypointOptions(io.flutter.embedding.engine.FlutterEngineGroup$Options)
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
kotlinx.coroutines.channels.BroadcastChannelImpl: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRightOrNull(java.util.List,kotlin.jvm.functions.Function2)
kotlin.UByteArray: boolean addAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(byte[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSuffix(java.lang.CharSequence,java.lang.CharSequence)
kotlin.ranges.ComparableOpenEndRange: boolean equals(java.lang.Object)
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.AbstractCollection: AbstractCollection()
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(androidx.core.content.pm.ShortcutInfoCompat)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo-pe2Q0Dw(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.sequences.GeneratorSequence: java.util.Iterator iterator()
androidx.viewpager.widget.ViewPager$SavedState$1: ViewPager$SavedState$1()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.StartedEagerly: java.lang.String toString()
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Void error(java.lang.Object)
androidx.viewpager.widget.ViewPager: int getPageMargin()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
io.flutter.util.PathUtils: java.lang.String getDataDirPath(android.content.Context)
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
kotlin.reflect.KClass$DefaultImpls: void isCompanion$annotations()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
androidx.core.graphics.PointKt: android.graphics.PointF div(android.graphics.PointF,float)
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String[],java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: android.content.Intent createIntent(android.content.Context,java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$Companion: androidx.lifecycle.LifecycleOwner get()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int getSize()
kotlin.math.MathKt__MathJVMKt: float hypot(float,float)
kotlin.io.FilesKt__UtilsKt: java.lang.String toRelativeStringOrNull$FilesKt__UtilsKt(java.io.File,java.io.File)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void clearFocus(int)
kotlinx.coroutines.flow.internal.ChildCancelledException: ChildCancelledException()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getSystemFontFamily(java.lang.String)
androidx.fragment.app.FragmentActivity: void onStop()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(int[],int[])
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)
androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte[] toTypedArray(byte[])
androidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.core.app.NotificationCompatSideChannelService: NotificationCompatSideChannelService()
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1: void onTransitionCancel(android.transition.Transition)
kotlin.text.TypeAliasesKt: void CharacterCodingException$annotations()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] access$600()
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlin.random.PlatformRandomKt: kotlin.random.Random asKotlinRandom(java.util.Random)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minOrNull-QwZRm1k(long[])
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)
kotlin.reflect.KMutableProperty0: kotlin.reflect.KMutableProperty0$Setter getSetter()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: FlowKt__ZipKt$combine$1$1(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentStateManager: android.os.Bundle saveState()
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle forIncomingCall(androidx.core.app.Person,android.app.PendingIntent,android.app.PendingIntent)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChronometerCountDown(boolean)
androidx.activity.OnBackPressedDispatcher$1: OnBackPressedDispatcher$1(androidx.activity.OnBackPressedDispatcher)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$TvExtender: android.app.PendingIntent getContentIntent()
kotlin.collections.builders.MapBuilderValues: boolean add(java.lang.Object)
androidx.activity.OnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.core.location.LocationManagerCompat$GpsStatusTransport: void onGpsStatusChanged(int)
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$1: FlowKt__ReduceKt$singleOrNull$1(kotlin.coroutines.Continuation)
androidx.core.view.LayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
kotlin.collections.AbstractMutableMap: int size()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] $values()
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,androidx.core.app.Person)
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object acquireSlowPath(kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: int getType(android.view.accessibility.AccessibilityWindowInfo)
androidx.fragment.app.FragmentManager: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getShortLabel()
androidx.core.content.ContextCompat: android.content.Context createAttributionContext(android.content.Context,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
kotlin.UnsignedKt: long ulongDivide-eb3DHEI(long,long)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: android.content.Intent build(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler: void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean lastOrNull(boolean[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)
androidx.core.view.DifferentialMotionFlingTarget: float getScaledScrollFactor()
kotlin.concurrent.TimersKt: java.util.TimerTask schedule(java.util.Timer,java.util.Date,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.CtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean isMethodWindowLayoutInfoListenerWindowConsumerValid()
androidx.versionedparcelable.VersionedParcelStream: void writeCharSequence(java.lang.CharSequence)
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean component1(boolean[])
kotlin.jvm.internal.Ref$ByteRef: Ref$ByteRef()
kotlinx.coroutines.channels.BufferedChannel: void onClosedSelectOnSend(java.lang.Object,kotlinx.coroutines.selects.SelectInstance)
androidx.viewpager.widget.PagerTitleStrip: void requestLayout()
androidx.activity.result.ActivityResult$1: androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel)
io.flutter.plugin.common.BinaryCodec: BinaryCodec(boolean)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object getTransition()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.reflect.KCallable: java.util.List getTypeParameters()
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
androidx.fragment.app.FragmentManager: boolean dispatchPrepareOptionsMenu(android.view.Menu)
kotlin.collections.ArraysKt___ArraysKt: float component4(float[])
androidx.viewpager.widget.ViewPager$2: ViewPager$2()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type computeJavaType$default(kotlin.reflect.KType,boolean,int,java.lang.Object)
kotlin.UByteArray: byte[] constructor-impl(byte[])
kotlin.io.FilesKt__UtilsKt: java.io.File relativeToOrSelf(java.io.File,java.io.File)
kotlin.UShort: int compareTo-VKZWuLQ(short,long)
kotlin.UByteArray: int getSize-impl(byte[])
kotlin.time.Duration$Companion: long getZERO-UwyO8pc()
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
kotlin.io.FilesKt__FilePathComponentsKt: java.io.File getRoot(java.io.File)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxByOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.core.content.FileProvider: FileProvider()
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.window.area.WindowAreaPresentationSessionCallback: void onSessionEnded(java.lang.Throwable)
androidx.fragment.app.FragmentStateManager: void pause()
kotlin.collections.builders.ListBuilder: java.lang.Object removeAt(int)
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder setDurationMillis(long)
kotlin.math.MathKt__MathJVMKt: double pow(double,double)
kotlin.text.CharsKt__CharJVMKt: java.lang.String uppercase(char,java.util.Locale)
androidx.core.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender(android.app.Notification)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long minOf-R03FKyM(long,long[])
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceDisconnected(android.content.ComponentName)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
kotlinx.coroutines.selects.SelectImplementation: SelectImplementation(kotlin.coroutines.CoroutineContext)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
kotlin.text.StringsKt__StringsJVMKt: int codePointBefore(java.lang.String,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: ChannelsKt__DeprecatedKt$map$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.lifecycle.viewmodel.ViewModelInitializer: kotlin.jvm.functions.Function1 getInitializer$lifecycle_viewmodel_release()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: FlowKt__ZipKt$combine$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
androidx.core.content.pm.ShortcutInfoCompatSaver: java.util.List getShortcuts()
kotlinx.coroutines.flow.SharedFlowKt: java.lang.Object getBufferAt(java.lang.Object[],long)
kotlin.ULongKt: long toULong(float)
kotlinx.coroutines.flow.CancellableFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.StateFlowSlot createSlot()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void removeListener()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.ULong: int mod-WZ4Q5Ns(long,int)
androidx.versionedparcelable.VersionedParcelStream: java.lang.CharSequence readCharSequence()
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
kotlin.jvm.internal.ShortCompanionObject: ShortCompanionObject()
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.core.app.TaskStackBuilder: android.content.Intent[] getIntents()
androidx.lifecycle.ComputableLiveData: ComputableLiveData()
androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
kotlin.collections.AbstractMap$Companion: java.lang.String entryToString$kotlin_stdlib(java.util.Map$Entry)
androidx.loader.content.ModernAsyncTask: java.lang.Object postResult(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
androidx.core.os.LocaleListInterface: boolean isEmpty()
kotlin.time.Duration$Companion: long nanoseconds-UwyO8pc(int)
androidx.activity.result.ActivityResultRegistry: boolean dispatchResult(int,int,android.content.Intent)
kotlin.ranges.RangesKt___RangesKt: short coerceIn(short,short,short)
androidx.core.view.WindowInsetsControllerCompat$Impl30$1: void onFinished(android.view.WindowInsetsAnimationController)
androidx.annotation.ChecksSdkIntAtLeast: int parameter()
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List access$1000(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
androidx.core.app.NotificationCompat$WearableExtender: java.lang.Object clone()
kotlin.UByte: int div-WZ4Q5Ns(byte,int)
kotlinx.coroutines.sync.SemaphoreKt$withPermit$1: SemaphoreKt$withPermit$1(kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: boolean isSymbolicLink(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: float getOrElse(float[],int,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment: void onActivityResult(int,int,android.content.Intent)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.enums.EnumEntriesKt$enumEntries$1: java.lang.Enum[] invoke()
androidx.core.location.GpsStatusWrapper: GpsStatusWrapper(android.location.GpsStatus)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onFocus(int)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.app.RemoteInput$Builder createBuilder(java.lang.String)
kotlin.PreconditionsKt__PreconditionsKt: PreconditionsKt__PreconditionsKt()
androidx.core.os.ContinuationOutcomeReceiver: ContinuationOutcomeReceiver(kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLevelChange(int)
androidx.core.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)
androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(char[],int,int)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Deferred async(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.customview.R$color: R$color()
io.flutter.plugin.platform.VirtualDisplayController: int getRenderTargetWidth()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: androidx.core.graphics.Insets getLowerBounds(android.view.WindowInsetsAnimation$Bounds)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMaxTextSize()
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void startTimeout(long)
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: void onFragmentResult(java.lang.String,android.os.Bundle)
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOfRange(short[],int,int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)
kotlin.jvm.internal.PropertyReference1Impl: java.lang.Object get(java.lang.Object)
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()
kotlinx.coroutines.selects.SelectImplementation: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.activity.ComponentActivity: void ensureViewModelStore()
android.support.v4.os.IResultReceiver2$Stub$Proxy: IResultReceiver2$Stub$Proxy(android.os.IBinder)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRightOrNull(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.ranges.URangesKt___URangesKt: short coerceAtMost-5PvTz6A(short,short)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityDataSensitive(boolean)
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$1: int compare(java.lang.Object,java.lang.Object)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-GBYM_sE(byte[])
org.intellij.lang.annotations.Flow: java.lang.String source()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect getRect()
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.ViewKt$doOnPreDraw$1: ViewKt$doOnPreDraw$1(kotlin.jvm.functions.Function1,android.view.View)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void access$onClosedHasNextNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator)
kotlin.ranges.RangesKt: RangesKt()
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
kotlin.UShort: byte mod-7apg3OU(short,byte)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List,java.util.Comparator)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,short)
kotlin.io.FileWalkDirection: FileWalkDirection(java.lang.String,int)
androidx.lifecycle.Transformations$switchMap$1$1: void invoke(java.lang.Object)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder handleDeeplinking(boolean)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Object[])
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[],int)
kotlin.collections.ArrayAsCollection: boolean retainAll(java.util.Collection)
androidx.fragment.app.FragmentTransitionImpl: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$502(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set keySet()
kotlin.io.ConsoleKt: void print(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.String takeWhile(java.lang.String,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6,kotlin.coroutines.Continuation)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: android.net.Uri buildTreeDocumentUri(java.lang.String,java.lang.String)
androidx.concurrent.futures.DirectExecutor: androidx.concurrent.futures.DirectExecutor[] values()
kotlin.reflect.KProperty0: java.lang.Object getDelegate()
kotlinx.coroutines.DefaultExecutorKt: kotlinx.coroutines.Delay initializeDefaultDelay()
kotlinx.coroutines.channels.BroadcastCoroutine: boolean isActive()
kotlinx.coroutines.channels.BroadcastCoroutine: void cancelInternal(java.lang.Throwable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.app.NotificationManagerCompat$Api30Impl: java.lang.String getParentChannelId(android.app.NotificationChannel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.text.PrecomputedTextCompat: char charAt(int)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(boolean[],kotlin.jvm.functions.Function2)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)
androidx.window.area.WindowAreaInfo$Type$Companion: WindowAreaInfo$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.util.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minWithOrThrow(java.lang.Object[],java.util.Comparator)
androidx.core.util.Preconditions: Preconditions()
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean access$isFinished(kotlinx.coroutines.debug.internal.DebugProbesImpl,kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: ChannelFlowMerge$collectTo$2$emit$1(kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2,kotlin.coroutines.Continuation)
androidx.core.app.NotificationManagerCompat$Api23Impl: int getCurrentInterruptionFilter(android.app.NotificationManager)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short last-rL5Bavg(short[])
androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)
androidx.core.view.MenuItemCompat$1: boolean onMenuItemActionCollapse(android.view.MenuItem)
kotlin.collections.ArraysKt___ArraysKt: int sum(byte[])
kotlin.math.MathKt__MathJVMKt: long roundToLong(float)
kotlin.time.Duration: java.lang.String toIsoString-impl(long)
androidx.core.app.ShareCompat$IntentBuilder: ShareCompat$IntentBuilder(android.content.Context)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onMoveToForeground()
androidx.core.view.contentcapture.ContentCaptureSessionCompat: androidx.core.view.contentcapture.ContentCaptureSessionCompat toContentCaptureSessionCompat(android.view.contentcapture.ContentCaptureSession,android.view.View)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder asBinder()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: CombineKt$zipImpl$1$1$2$1(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3)
kotlin.NumbersKt__FloorDivModKt: double mod(float,double)
kotlin.reflect.KClass: java.lang.String getSimpleName()
androidx.core.location.LocationRequestCompat$Builder: LocationRequestCompat$Builder(androidx.core.location.LocationRequestCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
kotlin.NotImplementedError: NotImplementedError(java.lang.String)
androidx.core.location.LocationCompat: void removeMslAltitude(android.location.Location)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence filterIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.TypeReference$Companion: TypeReference$Companion()
androidx.fragment.app.FragmentController: void dispatchLowMemory()
androidx.versionedparcelable.VersionedParcelStream$1: int read()
kotlin.io.path.CopyActionResult: CopyActionResult(java.lang.String,int)
kotlinx.coroutines.internal.LimitedDispatcher$Worker: void run()
kotlin.text.SystemProperties: SystemProperties()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.text.util.LocalePreferences: java.lang.String getStringOfFirstDayOfWeek(int)
kotlinx.coroutines.sync.SemaphoreSegment: SemaphoreSegment(long,kotlinx.coroutines.sync.SemaphoreSegment,int)
kotlin.ranges.IntRange: int hashCode()
androidx.core.view.WindowInsetsControllerCompat$Impl26: void setAppearanceLightNavigationBars(boolean)
kotlin.StandardKt__StandardKt: java.lang.Object with(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutManagerCompat$Api25Impl: java.lang.String getShortcutInfoWithLowestRank(java.util.List)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence sequenceOf(java.lang.Object[])
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1)
androidx.core.view.MenuKt: boolean contains(android.view.Menu,android.view.MenuItem)
kotlin.ranges.OpenEndRange: boolean contains(java.lang.Comparable)
kotlin.collections.EmptyMap: java.util.Set keySet()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.ranges.LongRange)
androidx.activity.ViewTreeFullyDrawnReporterOwner: void set(android.view.View,androidx.activity.FullyDrawnReporterOwner)
kotlin.UByteKt: byte toUByte(byte)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: FlowKt__TransformKt$runningFold$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1,kotlin.coroutines.Continuation)
androidx.core.content.pm.ShortcutInfoCompat: java.util.Set getCategories()
kotlin.collections.ArraysKt___ArraysKt: double[] reversedArray(double[])
androidx.core.app.NotificationChannelCompat$Api26Impl: java.lang.String getGroup(android.app.NotificationChannel)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api26Impl: boolean isInPictureInPictureMode(android.view.accessibility.AccessibilityWindowInfo)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger dec(java.math.BigInteger)
kotlin.time.Duration$Companion: long getDays-UwyO8pc(long)
kotlin.enums.EnumEntriesList: int lastIndexOf(java.lang.Enum)
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.text.util.LocalePreferences: java.lang.String getTemperatureUnit(java.util.Locale)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(java.lang.Object[],int)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: short minWithOrThrow(short[],java.util.Comparator)
androidx.fragment.app.DialogFragment$1: DialogFragment$1(androidx.fragment.app.DialogFragment)
kotlin.collections.ArraysKt___ArraysKt: double[] toDoubleArray(java.lang.Double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCanOpenPopup(boolean)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.core.util.ContinuationConsumer: void accept(java.lang.Object)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.time.Duration: double getInMilliseconds-impl(long)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getSUSPEND_NO_WAITER$p()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(boolean[],java.util.Collection)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.profileinstaller.FileSectionType: FileSectionType(java.lang.String,int,long)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender)
io.flutter.embedding.engine.FlutterEngineGroup$1: void onPreEngineRestart()
kotlinx.coroutines.internal.InlineList: int hashCode-impl(java.lang.Object)
kotlin.collections.builders.ListBuilder: java.lang.Object set(int,java.lang.Object)
androidx.versionedparcelable.VersionedParcelStream: int readInt()
androidx.fragment.app.Fragment: boolean getRetainInstance()
kotlin.io.encoding.DecodeInputStream: void shiftByteBufferToStartIfNeeded()
androidx.window.embedding.SplitRule: int getMinWidthDp()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.ComponentActivity: android.os.Bundle lambda$new$1()
kotlin.sequences.DropSequence$iterator$1: boolean hasNext()
androidx.activity.result.contract.ActivityResultContracts: ActivityResultContracts()
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper: java.io.File getDeviceProtectedCodeCacheDir(android.content.Context)
androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
androidx.core.content.pm.ShortcutInfoCompat: android.content.ComponentName getActivity()
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOfRange(double[],int,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
androidx.window.java.embedding.SplitControllerCallbackAdapter: SplitControllerCallbackAdapter(androidx.window.embedding.SplitController)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)
kotlin.collections.ArraysKt___ArraysKt: boolean any(float[],kotlin.jvm.functions.Function1)
kotlin.coroutines.cancellation.CancellationExceptionKt: java.util.concurrent.CancellationException CancellationException(java.lang.Throwable)
io.flutter.plugin.editing.ScribePlugin: void startStylusHandwriting()
androidx.annotation.InspectableProperty$EnumEntry: int value()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetSystemUiFlag(int)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: int getTypeMask()
kotlin.text.StringsKt___StringsKt$windowedSequence$2: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: UArraysKt___UArraysJvmKt()
androidx.core.view.ViewCompat: void removeAccessibilityAction(android.view.View,int)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLocusId(androidx.core.content.LocusIdCompat)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.area.WindowAreaSessionCallback: void onSessionStarted(androidx.window.area.WindowAreaSession)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(int[])
kotlin.io.encoding.Base64Kt: byte[] access$getBase64UrlEncodeMap$p()
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.core.os.LocaleListCompatWrapper: boolean isPseudoLocale(java.util.Locale)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)
androidx.fragment.app.SpecialEffectsController$Operation$State: void applyState(android.view.View,android.view.ViewGroup)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.fragment.app.FragmentManager: int allocBackStackIndex()
androidx.window.core.ActivityComponentInfo: java.lang.String toString()
androidx.collection.LongSparseArray: java.lang.Object replace(long,java.lang.Object)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPairPredicates$1: java.lang.Boolean invoke(android.app.Activity,android.app.Activity)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(boolean[],kotlin.jvm.functions.Function1)
androidx.fragment.app.BackStackState$1: BackStackState$1()
kotlin.jvm.internal.TypeIntrinsics: java.util.Collection asMutableCollection(java.lang.Object,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int indexOf(char)
kotlinx.coroutines.flow.internal.SafeCollector: void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.encoding.EncodeOutputStream: void encodeByteBufferIntoOutput()
kotlin.concurrent.ThreadsKt: java.lang.Thread thread$default(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0,int,java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void remove()
androidx.core.view.ContentInfoCompat: android.content.ClipData buildClipData(android.content.ClipDescription,java.util.List)
androidx.fragment.app.FragmentManager: java.util.List getActiveFragments()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMutableSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: UArraysKt___UArraysKt$withIndex$3(byte[])
kotlin.ranges.OpenEndRange$DefaultImpls: boolean isEmpty(kotlin.ranges.OpenEndRange)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal times(java.math.BigDecimal,java.math.BigDecimal)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] plus-xo_DsdI(byte[],java.util.Collection)
androidx.core.app.GrammaticalInflectionManagerCompat$Api34Impl: int getApplicationGrammaticalGender(android.content.Context)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: FlowKt__DelayKt$sample$2$values$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention[] values()
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtraStreamUriWithAuthority$15(java.lang.String,android.net.Uri)
androidx.window.core.Version: int getMajor()
androidx.core.app.NotificationCompat$CallStyle$Api24Impl: NotificationCompat$CallStyle$Api24Impl()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
androidx.core.app.JobIntentService$CommandProcessor: java.lang.Void doInBackground(java.lang.Void[])
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat inset(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.BackStackRecordState: BackStackRecordState(androidx.fragment.app.BackStackRecord)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.core.view.ViewCompat: void setRotationY(android.view.View,float)
kotlin.collections.ArraysKt___ArraysKt: long minWithOrThrow(long[],java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component3-rL5Bavg(short[])
kotlin.collections.GroupingKt__GroupingKt: java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(double[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.Flow fuseSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(char[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewGroupKt: kotlin.sequences.Sequence getChildren(android.view.ViewGroup)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
kotlin.sequences.TransformingIndexedSequence$iterator$1: TransformingIndexedSequence$iterator$1(kotlin.sequences.TransformingIndexedSequence)
kotlin.text.CharCategory: kotlin.text.CharCategory[] values()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: NotificationCompat$BubbleMetadata$Builder()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consume(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.Job launchIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
androidx.core.view.ViewGroupKt: java.util.Iterator iterator(android.view.ViewGroup)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSplitAttributesCalculatorValid$1: java.lang.Object invoke()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.encoding.Base64: void checkSourceBounds$kotlin_stdlib(int,int,int)
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.core.text.BidiFormatter: boolean isRtlContext()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,byte)
androidx.fragment.app.Fragment: void setPopDirection(boolean)
androidx.core.app.ActivityCompat: void lambda$recreate$0(android.app.Activity)
kotlinx.coroutines.flow.internal.FusibleFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.lifecycle.ReportFragment$Companion: void get$annotations(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(boolean[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: void setTranslationX(android.view.View,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: java.util.Iterator invoke()
androidx.activity.FullyDrawnReporter: FullyDrawnReporter(java.util.concurrent.Executor,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(float[],kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: void onStop()
androidx.core.os.PersistableBundleKt: android.os.PersistableBundle persistableBundleOf(kotlin.Pair[])
kotlinx.coroutines.flow.StateFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,int)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,short)
kotlin.collections.AbstractMutableMap: java.util.Collection getValues()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: FragmentManager$FragmentLifecycleCallbacks()
androidx.core.app.NotificationCompat$Action: boolean isAuthenticationRequired()
kotlinx.coroutines.flow.LintKt$retry$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewStructureCompat: androidx.core.view.ViewStructureCompat toViewStructureCompat(android.view.ViewStructure)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.KTypeProjection: int hashCode()
androidx.window.embedding.SplitInfo: androidx.window.embedding.SplitAttributes getSplitAttributes()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.core.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)
kotlin.ULongArray: java.util.Iterator iterator()
kotlinx.coroutines.EventLoop: long delta(boolean)
androidx.core.view.DragAndDropPermissionsCompat$Api24Impl: DragAndDropPermissionsCompat$Api24Impl()
androidx.lifecycle.SavedStateViewModelFactoryKt: java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.util.List)
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: WindowInsetsCompat$Api21ReflectionHolder()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlinx.coroutines.flow.FlowKt__CountKt$count$3: FlowKt__CountKt$count$3(kotlin.coroutines.Continuation)
androidx.profileinstaller.BenchmarkOperation: BenchmarkOperation()
kotlin.ranges.RangesKt__RangesKt: boolean contains(kotlin.ranges.OpenEndRange,java.lang.Object)
androidx.core.widget.ListPopupWindowCompat: ListPopupWindowCompat()
androidx.activity.FullyDrawnReporterKt$reportWhenComplete$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateBackGestureProgress(android.window.BackEvent)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void removeAllShortcuts()
kotlin.ULong: short toShort-impl(long)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean none(char[])
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void lambda$configureForVirtualDisplay$0(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,android.view.View,boolean)
androidx.core.graphics.CanvasKt: void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,int)
io.flutter.view.AccessibilityBridge: int access$7500()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associate(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void popBackStack()
kotlin.collections.AbstractMap$keys$1: int getSize()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
kotlin.comparisons.NaturalOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty1 property1(kotlin.jvm.internal.PropertyReference1)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long firstOrNull(kotlin.ranges.LongProgression)
androidx.fragment.app.FragmentViewLifecycleOwner: void performRestore(android.os.Bundle)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: FlowKt__ZipKt$combine$5$2(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.UByteArray: boolean isEmpty-impl(byte[])
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1: void onTransitionStart(android.transition.Transition)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl$1: void run()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: java.util.List getNonContextualActions(java.util.List)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
kotlin.UInt: int mod-WZ4Q5Ns(int,int)
kotlin.reflect.KFunction: boolean isExternal()
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.coroutines.SafeContinuation$Companion: void getRESULT$annotations()
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll()
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(int[],int)
androidx.fragment.app.FragmentManager$1: void handleOnBackCancelled()
kotlinx.coroutines.internal.ConcurrentKt: java.util.Set identitySet(int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.os.MessageCompat$Api22Impl: void setAsynchronous(android.os.Message,boolean)
androidx.window.embedding.EmbeddingAspectRatio$Companion: EmbeddingAspectRatio$Companion()
kotlinx.coroutines.ThreadContextElement$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.ThreadContextElement,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.ULong: float toFloat-impl(long)
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Object newFamily()
androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: float getCurrentAlpha()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.WindowManagerHandler,android.content.Context)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)
kotlin.streams.jdk8.StreamsKt: java.util.Spliterator asStream$lambda$4(kotlin.sequences.Sequence)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAlpha(int)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: java.lang.Object parseResult(int,android.content.Intent)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.core.app.ShareCompat$IntentReader: boolean isShareIntent()
kotlin.ranges.ULongRange: long getEndInclusive-s-VKNKU()
kotlinx.coroutines.debug.internal.DebugProbesImpl: DebugProbesImpl()
kotlin.reflect.ParameterizedTypeImpl$getTypeName$1$1: java.lang.String invoke(java.lang.reflect.Type)
kotlin.internal.ProgressionUtilKt: int mod(int,int)
kotlinx.coroutines.ThreadState: ThreadState(kotlinx.coroutines.Job)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$1(android.net.Uri)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.lang.Object getImpl(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.app.PendingIntentCompat: int addMutabilityFlags(boolean,int)
androidx.core.R$id: R$id()
kotlin.ranges.ClosedFloatingPointRange: boolean isEmpty()
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: void run()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List List(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.AgentInstallationType: boolean isInstalledStatically$kotlinx_coroutines_core()
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat getLocusId()
kotlin.collections.AbstractMap$toString$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Iterable,kotlin.jvm.functions.Function2)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
kotlin.collections.ArraysKt___ArraysKt: double reduce(double[],kotlin.jvm.functions.Function2)
kotlin.UByteArray$Iterator: void remove()
kotlinx.coroutines.flow.SubscribedFlowCollector: java.lang.Object onSubscription(kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: float exp(float)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreFling(float,float)
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.LifecycleOwner get()
kotlin.random.RandomKt: void checkRangeBounds(double,double)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.os.BuildCompat: boolean isAtLeastN()
kotlin.collections.MapWithDefault: java.lang.Object getOrImplicitDefault(java.lang.Object)
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult[] values()
kotlinx.coroutines.internal.LocalAtomics_commonKt: int getValue(java.util.concurrent.atomic.AtomicInteger)
androidx.window.embedding.EmbeddingBackend: void setSplitAttributesCalculator(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int lastIndexOf(float)
kotlinx.coroutines.JobKt: boolean isActive(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)
android.support.v4.os.ResultReceiver$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.app.NotificationChannelGroupCompat$Api26Impl: android.app.NotificationChannelGroup createNotificationChannelGroup(java.lang.String,java.lang.CharSequence)
androidx.core.provider.CalleeHandler: android.os.Handler create()
androidx.core.location.LocationCompat$Api34Impl: LocationCompat$Api34Impl()
androidx.collection.CircularIntArray: CircularIntArray()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(boolean[],java.lang.Iterable)
kotlin.collections.State: kotlin.collections.State valueOf(java.lang.String)
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: UnusedAppRestrictionsBackportServiceConnection$1(androidx.core.content.UnusedAppRestrictionsBackportServiceConnection)
kotlin.reflect.KType: boolean isMarkedNullable()
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)
kotlin.UShort: byte toByte-impl(short)
kotlinx.coroutines.TimeoutKt$withTimeoutOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
kotlinx.coroutines.flow.LintKt$retry$1: java.lang.Object invoke(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: BufferedChannel$receiveImpl$1()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: FlowKt__ReduceKt$firstOrNull$1(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc()
kotlinx.coroutines.Job: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
androidx.core.os.ParcelCompat$Api33Impl: void readMap(android.os.Parcel,java.util.Map,java.lang.ClassLoader,java.lang.Class,java.lang.Class)
kotlin.text.MatchResult: java.lang.String getValue()
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: java.util.Iterator iterator()
androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[])
androidx.loader.content.ModernAsyncTask: void onCancelled(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$RequestPermission: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyOfRange--nroSd4(long[],int,int)
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedWriter bufferedWriter(java.io.File,java.nio.charset.Charset,int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float minOf(float,float[])
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api24Impl: java.lang.CharSequence getTitle(android.view.accessibility.AccessibilityWindowInfo)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
kotlin.UnsignedKt: int uintDivide-J1ME1BU(int,int)
androidx.loader.content.Loader: void abandon()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.activity.SystemBarStyle$Companion$auto$1: SystemBarStyle$Companion$auto$1()
kotlinx.coroutines.Dispatchers: void getMain$annotations()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.BackGestureChannel getBackGestureChannel()
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner,boolean)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CompletableDeferred,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.text.RegexKt: kotlin.text.MatchResult matchEntire(java.util.regex.Matcher,java.lang.CharSequence)
kotlinx.coroutines.channels.LazyActorCoroutine: void getOnSend$annotations()
androidx.annotation.LongDef: boolean flag()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: SequencesKt___SequencesKt$runningFoldIndexed$1(java.lang.Object,kotlin.sequences.Sequence,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float getValueAt(long)
kotlinx.coroutines.channels.BroadcastChannelImpl$SubscriberConflated: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUShort(java.lang.Iterable)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createWeightStyle(android.content.Context,android.graphics.Typeface,int,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(java.lang.Object)
androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)
kotlin.ranges.UIntRange: boolean isEmpty()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat build()
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.core.telephony.TelephonyManagerCompat$Api26Impl: TelephonyManagerCompat$Api26Impl()
androidx.core.util.Predicate: androidx.core.util.Predicate and(androidx.core.util.Predicate)
androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)
kotlin.reflect.KClass$DefaultImpls: void isFinal$annotations()
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$1202(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
kotlin.collections.CollectionsKt___CollectionsKt: float sumOfFloat(java.lang.Iterable)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
kotlin.io.encoding.Base64: int handlePaddingSymbol(byte[],int,int,int)
kotlin.io.path.PathTreeWalk: java.util.Iterator dfsIterator()
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3: java.lang.Object invoke(java.lang.Object)
androidx.tracing.R: R()
kotlin.jvm.functions.Function6: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.TakeSequence$iterator$1: boolean hasNext()
kotlinx.coroutines.internal.ExceptionsConstructorKt: java.lang.Throwable tryCopyException(java.lang.Throwable)
io.flutter.embedding.engine.plugins.PluginRegistry: void removeAll()
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred$default(kotlinx.coroutines.Job,int,java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
kotlin.collections.IndexedValue: kotlin.collections.IndexedValue copy$default(kotlin.collections.IndexedValue,int,java.lang.Object,int,java.lang.Object)
kotlin.UShort: int compareTo(java.lang.Object)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow,kotlin.reflect.KClass)
androidx.fragment.app.SpecialEffectsController$Operation: boolean isAwaitingContainerChanges()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSilent(boolean)
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getLinkUri()
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collectLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(char[],kotlin.jvm.functions.Function1)
androidx.core.os.LocaleListCompat: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String)
androidx.core.widget.TintableImageSourceView: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.UNumbersKt: byte rotateLeft-LxnNnR4(byte,int)
kotlin.io.encoding.Base64$Default: kotlin.io.encoding.Base64 getUrlSafe()
kotlin.collections.MapsKt___MapsKt: boolean any(java.util.Map)
androidx.collection.ArraySet: java.util.Iterator iterator()
androidx.core.graphics.BitmapCompat$Api27Impl: boolean isAlreadyF16AndLinear(android.graphics.Bitmap)
androidx.core.R$color: R$color()
kotlinx.coroutines.ThreadLocalEventLoop: void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop)
io.flutter.plugin.common.ErrorLogResult: ErrorLogResult(java.lang.String)
kotlinx.coroutines.flow.ReadonlyStateFlow: ReadonlyStateFlow(kotlinx.coroutines.flow.StateFlow,kotlinx.coroutines.Job)
kotlin.UByteArray: boolean isEmpty()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
androidx.lifecycle.SavedStateHandle: boolean contains(java.lang.String)
kotlin.random.Random$Default: long nextLong()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
androidx.core.view.ViewCompat$3: ViewCompat$3(int,java.lang.Class,int,int)
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1$1: void invoke()
androidx.core.app.SharedElementCallback: void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short single-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment findSegmentBufferEnd(long,kotlinx.coroutines.channels.ChannelSegment,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)
kotlin.jvm.internal.TypeIntrinsics: java.util.Set asMutableSet(java.lang.Object)
kotlin.sequences.ConstrainedOnceSequence: ConstrainedOnceSequence(kotlin.sequences.Sequence)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: ExceptionsConstructorKt$createConstructor$1$1(java.lang.reflect.Constructor)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: SafeCollector_commonKt$unsafeFlow$1(kotlin.jvm.functions.Function2)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void lambda$onFirstFix$2(java.util.concurrent.Executor,int)
kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(short[],int)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()
kotlin.text.StringsKt___StringsKt: java.util.List flatMap(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
kotlin.enums.EnumEntriesKt$enumEntries$1: java.lang.Object invoke()
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance(android.content.Context)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
androidx.fragment.app.Fragment$1: void run()
kotlin.collections.builders.MapBuilder$Companion: int access$computeShift(kotlin.collections.builders.MapBuilder$Companion,int)
kotlin.text.CharsKt__CharJVMKt: char titlecaseChar(char)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object remove(java.util.List,int)
androidx.lifecycle.LiveDataScopeImpl$emit$2: LiveDataScopeImpl$emit$2(androidx.lifecycle.LiveDataScopeImpl,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.view.Surface getSurface()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-qOZmbk8(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation: SetTargetFragmentUsageViolation(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int)
kotlin.collections.builders.MapBuilder$EntriesItr: void nextAppendString(java.lang.StringBuilder)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger times(java.math.BigInteger,java.math.BigInteger)
androidx.core.provider.FontsContractCompat: FontsContractCompat()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.jvm.internal.PropertyReference2: java.lang.Object getDelegate(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: char reduce(char[],kotlin.jvm.functions.Function2)
kotlin.reflect.TypeVariableImpl: java.lang.String getName()
androidx.core.database.sqlite.SQLiteCursorCompat$Api28Impl: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: DefaultSpecialEffectsController$Api26Impl()
androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void runWeakRefQueueCleaningLoopUntilInterrupted()
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: ArraysKt___ArraysKt$withIndex$7(double[])
androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: float ln1p(float)
androidx.fragment.app.Fragment: void onDestroyView()
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setShareIdentityEnabled(boolean)
kotlin.collections.AbstractMap$values$1$iterator$1: java.lang.Object next()
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()
androidx.core.location.LocationCompat: java.lang.reflect.Field getFieldsMaskField()
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.adapter.sidecar.SidecarWindowBackend)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getReceivers$FU$p()
kotlinx.coroutines.internal.InlineList: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.SchedulerTimeSource: long nanoTime()
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment build()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.activity.OnBackPressedDispatcherKt$addCallback$callback$1: OnBackPressedDispatcherKt$addCallback$callback$1(boolean,kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
kotlin.collections.ArraysKt___ArraysKt: int random(int[],kotlin.random.Random)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short singleOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: void getHours$annotations(int)
kotlin.collections.ArraysKt___ArraysKt: boolean none(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DelayKt$awaitCancellation$1: DelayKt$awaitCancellation$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)
androidx.activity.result.ActivityResult: java.lang.String resultCodeToString(int)
androidx.core.app.NotificationCompat$WearableExtender: int getContentIcon()
kotlin.jvm.internal.EnumCompanionObject: EnumCompanionObject()
kotlin.UnsignedKt: double ulongToDouble(long)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder deleteRange(java.lang.StringBuilder,int,int)
androidx.fragment.app.BackStackRecordState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager,java.util.Map)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(long[],int,int)
androidx.core.graphics.RectKt: android.graphics.RectF minus(android.graphics.RectF,float)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: char minWithOrThrow(char[],java.util.Comparator)
androidx.core.app.TaskStackBuilder$SupportParentable: android.content.Intent getSupportParentActivityIntent()
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
androidx.loader.R$dimen: R$dimen()
androidx.core.text.ICUCompat: java.lang.String addLikelySubtagsBelowApi21(java.util.Locale)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.MutableMapWithDefaultImpl: void putAll(java.util.Map)
kotlin.collections.ArraysKt___ArraysKt: double average(float[])
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.os.MessageCompat$Api22Impl: MessageCompat$Api22Impl()
kotlin.jvm.internal.LongCompanionObject: void getSIZE_BYTES$annotations()
androidx.fragment.app.FragmentTabHost: void onDetachedFromWindow()
kotlin.ranges.ULongProgression: ULongProgression(long,long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterNotTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenMerge(kotlinx.coroutines.flow.Flow,int)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: java.lang.String toString()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: java.lang.Void invoke(java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
androidx.core.util.AndroidXContinuationConsumer: AndroidXContinuationConsumer(kotlin.coroutines.Continuation)
kotlin.io.FilePathComponents: java.io.File getRoot()
kotlin.enums.EnumEntriesList: EnumEntriesList(kotlin.jvm.functions.Function0)
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
androidx.lifecycle.Observer: void onChanged(java.lang.Object)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.text.BidiFormatter: BidiFormatter(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)
kotlin.text.DelimitedRangesSequence$iterator$1: int getCurrentStartIndex()
kotlin.random.RandomKt: long nextLong(kotlin.random.Random,kotlin.ranges.LongRange)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void onCommit$lambda$11$lambda$10(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect)
androidx.core.util.SparseIntArrayKt: int getOrElse(android.util.SparseIntArray,int,kotlin.jvm.functions.Function0)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(double[])
androidx.collection.ArraySet$1: java.lang.Object colSetValue(int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(boolean[],java.lang.Iterable)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.window.embedding.ActivityRule: int hashCode()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxOfWith(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: java.lang.Object invoke()
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
kotlin.ranges.ULongRange: java.lang.Comparable getEndExclusive()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: java.lang.Object invoke(java.lang.Object)
androidx.activity.FullyDrawnReporter: boolean isFullyDrawnReported()
kotlin.ranges.ULongProgression: long getStep()
kotlinx.coroutines.internal.InlineList: void forEachReversed-impl(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenConcat(kotlinx.coroutines.flow.Flow)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Object[])
androidx.core.text.PrecomputedTextCompat: PrecomputedTextCompat(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)
androidx.core.app.ActivityCompat$1: ActivityCompat$1(java.lang.String[],android.app.Activity,int)
kotlin.Triple: java.lang.Object component3()
kotlin.collections.builders.ListBuilder: int access$getOffset$p(kotlin.collections.builders.ListBuilder)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(double[])
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sortWith(java.util.List,java.util.Comparator)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(java.lang.Object[])
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxByOrThrow(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte maxWith(byte[],java.util.Comparator)
kotlin.collections.builders.ListBuilder$Itr: java.lang.Object previous()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object first(kotlin.sequences.Sequence)
androidx.core.app.NotificationManagerCompat: void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0)
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[])
androidx.lifecycle.DefaultLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext$Key)
androidx.activity.SystemBarStyle: int getDarkScrim$activity_release()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(long[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewsController: void maybeInvokeOnFlutterViewAttached(io.flutter.plugin.platform.PlatformView)
androidx.core.app.NotificationCompat$WearableExtender$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
kotlin.UByteArray: boolean containsAll(java.util.Collection)
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.core.app.ActivityOptionsCompat$Api34Impl: android.app.ActivityOptions setShareIdentityEnabled(android.app.ActivityOptions,boolean)
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
io.flutter.plugin.editing.ScribePlugin: void setView(android.view.View)
kotlin.math.MathKt__MathJVMKt: double getUlp(double)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: ChannelFlowMerge$collectTo$2$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.internal.SendingCollector,kotlinx.coroutines.sync.Semaphore,kotlin.coroutines.Continuation)
kotlin.text.CharsKt__CharJVMKt: boolean isDigit(char)
androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)
kotlin.UIntArray: java.lang.String toString()
androidx.core.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void offset(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long minBy(long[],kotlin.jvm.functions.Function1)
kotlin.UByte: byte unbox-impl()
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: java.lang.Object invoke(kotlin.collections.IndexedValue)
androidx.core.text.util.LinkifyCompat$Api24Impl: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
androidx.core.os.ParcelCompat: java.util.HashMap readHashMap(android.os.Parcel,java.lang.ClassLoader,java.lang.Class,java.lang.Class)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
androidx.core.app.PendingIntentCompat$GatedCallback: void close()
androidx.fragment.app.FragmentManager: int findBackStackIndex(java.lang.String,int,boolean)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: SubscriptionCountStateFlow(int)
io.flutter.embedding.android.ExclusiveAppComponent: void detachFromFlutterEngine()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: ChannelsKt__DeprecatedKt$distinct$1(kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: AccessibilityWindowInfoCompat$Api21Impl()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: boolean isActive(android.view.accessibility.AccessibilityWindowInfo)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstNotNullOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
androidx.core.util.ContinuationConsumer: ContinuationConsumer(kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge: void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.ViewCompat: void removeActionWithId(int,android.view.View)
androidx.core.view.ViewCompat: void setPivotY(android.view.View,float)
kotlin.TypeAliasesKt: void IndexOutOfBoundsException$annotations()
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$2: java.lang.Object invoke(java.lang.Object)
androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int lastIndexOf(long)
androidx.profileinstaller.DeviceProfileWriter: boolean deviceAllowsProfileInstallerAotWrites()
kotlinx.coroutines.flow.SharedFlowImpl$collect$1: SharedFlowImpl$collect$1(kotlinx.coroutines.flow.SharedFlowImpl,kotlin.coroutines.Continuation)
androidx.core.location.GnssStatusWrapper: float getCn0DbHz(int)
androidx.fragment.app.DefaultSpecialEffectsController$retainMatchingViews$1: DefaultSpecialEffectsController$retainMatchingViews$1(java.util.Collection)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(long[],long,int,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
kotlin.text.CharsKt__CharJVMKt: boolean isLetter(char)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
kotlin.UShortArray: boolean add(java.lang.Object)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
kotlinx.coroutines.scheduling.TaskContext: void afterTask()
kotlinx.coroutines.android.HandlerDispatcherKt: void access$postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float maxWith(float[],java.util.Comparator)
androidx.core.graphics.TypefaceCompatUtil: TypefaceCompatUtil()
androidx.fragment.app.FragmentActivity$HostCallbacks: FragmentActivity$HostCallbacks(androidx.fragment.app.FragmentActivity)
androidx.core.app.NotificationCompat$Style: NotificationCompat$Style()
kotlin.ranges.CharProgressionIterator: boolean hasNext()
kotlinx.coroutines.channels.ChannelResult$Failed: java.lang.String toString()
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setSuppressNotification(boolean)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence distinctBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterNotTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MagicApiIntrinsics: void voidMagicApiCall(int)
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(byte[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode nextIfRemoved()
androidx.viewpager.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
kotlinx.coroutines.RunnableKt: java.lang.Runnable Runnable(kotlin.jvm.functions.Function0)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: ChannelsKt__DeprecatedKt$none$1(kotlin.coroutines.Continuation)
kotlin.UByte: byte toUByte-w2LRezQ(byte)
kotlinx.coroutines.selects.WhileSelectKt$whileSelect$1: WhileSelectKt$whileSelect$1(kotlin.coroutines.Continuation)
io.flutter.plugin.platform.SingleViewWindowManager: android.view.WindowMetrics getCurrentWindowMetrics()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.ConsoleKt: void print(char)
androidx.core.text.util.LocalePreferences: java.lang.String getTemperatureUnit(boolean)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningReduceIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.core.app.PendingIntentCompat: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,boolean)
androidx.core.view.DragStartHelper: boolean onLongClick(android.view.View)
androidx.fragment.app.FragmentStore: android.os.Bundle getSavedState(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(byte[],byte[])
kotlin.random.PlatformRandom$Companion: PlatformRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.sequences.DropWhileSequence$iterator$1: void setDropState(int)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
androidx.activity.ComponentActivity: kotlin.Unit lambda$new$0()
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
androidx.lifecycle.Transformations$distinctUntilChanged$1: java.lang.Object invoke(java.lang.Object)
org.intellij.lang.annotations.Subst: java.lang.String value()
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.view.Surface getSurface()
kotlin.reflect.KProperty$DefaultImpls: void isLateinit$annotations()
androidx.collection.ArraySet$1: void colClear()
io.flutter.embedding.android.FlutterActivity: void setFrameworkHandlesBack(boolean)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
kotlin.SinceKotlin: java.lang.String version()
kotlinx.coroutines.selects.SelectImplementation: void reregisterClause(java.lang.Object)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlin.PropertyReferenceDelegatesKt: void setValue(kotlin.reflect.KMutableProperty0,java.lang.Object,kotlin.reflect.KProperty,java.lang.Object)
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function1 access$getOnEnter$p(kotlin.io.FileTreeWalk)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] copyOf(short[])
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,androidx.core.util.Predicate)
kotlin.collections.ArraysKt___ArraysKt: int sumOfShort(java.lang.Short[])
androidx.profileinstaller.ProfileTranscoder: void writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData)
kotlin.UShort: int div-WZ4Q5Ns(short,int)
androidx.customview.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
kotlin.io.encoding.Base64: int decodeIntoByteArray(byte[],byte[],int,int,int)
androidx.core.text.PrecomputedTextCompat: int length()
androidx.core.view.DifferentialMotionFlingController: DifferentialMotionFlingController(android.content.Context,androidx.core.view.DifferentialMotionFlingTarget,androidx.core.view.DifferentialMotionFlingController$FlingVelocityThresholdCalculator,androidx.core.view.DifferentialMotionFlingController$DifferentialVelocityProvider)
androidx.core.widget.ContentLoadingProgressBar: void onDetachedFromWindow()
androidx.core.view.TreeIterator: java.lang.Object next()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: ChannelLimitedFlowMerge(java.lang.Iterable,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.String getClassName()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlinx.coroutines.JobSupport: void access$onAwaitInternalRegFunc(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.location.LocationRequestCompat: float getMinUpdateDistanceMeters()
androidx.core.view.MenuItemCompat$1: boolean onMenuItemActionExpand(android.view.MenuItem)
kotlin.ranges.LongRange: int hashCode()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
androidx.core.view.ViewPropertyAnimatorCompat: long getStartDelay()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
androidx.collection.LongSparseArray: void delete(long)
kotlin.ranges.CharRange: java.lang.Comparable getStart()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackWindowConsumerValid$1: SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackWindowConsumerValid$1(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
kotlin.collections.CollectionsKt__ReversedViewsKt: java.util.List asReversedMutable(java.util.List)
kotlinx.coroutines.debug.internal.DebugProbesImpl: kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner owner(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.core.math.MathUtils: long multiplyExact(long,long)
kotlin.time.DurationKt: void getHours$annotations(double)
kotlin.collections.SetsKt__SetsKt: java.util.Set setOf(java.lang.Object[])
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1: FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImplKt: java.lang.String repr(java.lang.String)
androidx.window.layout.adapter.sidecar.SidecarCompat: boolean validateExtensionInterface()
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: int available()
androidx.core.app.ComponentActivity$ExtraData: ComponentActivity$ExtraData()
kotlin.random.FallbackThreadLocalRandom: java.util.Random getImpl()
kotlin.collections.ArraysKt___ArraysKt: boolean any(double[],kotlin.jvm.functions.Function1)
kotlin.UByte: int hashCode()
kotlin.time.TimedValue: TimedValue(java.lang.Object,long)
kotlinx.coroutines.SupervisorCoroutine: SupervisorCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
androidx.customview.widget.ViewDragHelper$1: ViewDragHelper$1()
kotlin.collections.GroupingKt__GroupingKt: java.util.Map fold(kotlin.collections.Grouping,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],char)
androidx.core.view.WindowInsetsAnimationControlListenerCompat: void onCancelled(androidx.core.view.WindowInsetsAnimationControllerCompat)
androidx.window.area.WindowAreaCapability$Operation: java.lang.String toString()
kotlinx.coroutines.DefaultExecutor: void enqueue(java.lang.Runnable)
kotlinx.coroutines.CompletionHandlerKt: void invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable)
kotlin.jvm.internal.CharSpreadBuilder: int getSize(char[])
kotlin.CharCodeJVMKt: char Char-xj2QHRw(short)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow unsafeTransform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: void add(android.app.Activity)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.nio.file.LinkOption[])
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void lambda$postFrameCallback$0(java.lang.Runnable,long)
androidx.fragment.app.FragmentManager: void saveBackStack(java.lang.String)
androidx.activity.ComponentActivity: void setContentView(int)
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
io.flutter.view.AccessibilityBridge: void access$700(io.flutter.view.AccessibilityBridge,boolean)
androidx.core.app.NotificationManagerCompat$Api30Impl: NotificationManagerCompat$Api30Impl()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: byte elementAt-PpDY95g(byte[],int)
androidx.core.view.MenuProvider$-CC: void $default$onPrepareMenu(androidx.core.view.MenuProvider,android.view.Menu)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-TUPTUsU(long[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.util.AtomicFile: void delete()
androidx.arch.core.executor.ArchTaskExecutor: void lambda$static$0(java.lang.Runnable)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean contains-xj2QHRw(short)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementStart(java.util.List,java.util.List,java.util.List)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getWrappedDrawable()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager: void detachFragment(androidx.fragment.app.Fragment)
kotlin.ranges.URangesKt___URangesKt: int random(kotlin.ranges.UIntRange,kotlin.random.Random)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
androidx.core.transition.TransitionKt$addListener$5: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationCancel(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component3-QwZRm1k(long[])
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.String toString()
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: TextDirectionHeuristicsCompat$AnyStrong(boolean)
kotlin.io.path.ExceptionsCollector: ExceptionsCollector(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
kotlinx.coroutines.internal.ThreadSafeHeapNode: int getIndex()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture$Listener: AbstractResolvableFuture$Listener(java.lang.Runnable,java.util.concurrent.Executor)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core rehash()
androidx.core.view.ViewGroupCompat$Api21Impl: ViewGroupCompat$Api21Impl()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
androidx.lifecycle.SavedStateHandle$Companion: boolean validateValue(java.lang.Object)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: double averageOfLong(java.lang.Long[])
kotlin.RequiresOptIn: kotlin.RequiresOptIn$Level level()
androidx.core.app.ShareCompat$IntentReader: boolean isSingleShare()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.core.graphics.CanvasKt: void withClip(android.graphics.Canvas,android.graphics.Path,kotlin.jvm.functions.Function1)
androidx.activity.SystemBarStyle$Companion$auto$1: java.lang.Object invoke(java.lang.Object)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: void loop$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
io.flutter.embedding.engine.loader.FlutterLoader$1: void lambda$call$0()
androidx.fragment.app.FragmentContainerView: void removeView(android.view.View)
androidx.viewpager.widget.PagerTabStrip: void setDrawFullUnderline(boolean)
androidx.core.app.NotificationCompat$Action$Builder$Api24Impl: NotificationCompat$Action$Builder$Api24Impl()
androidx.core.database.CursorKt: java.lang.Short getShortOrNull(android.database.Cursor,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
androidx.core.location.GnssStatusCompat: boolean hasCarrierFrequencyHz(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getAddedCount()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(com.google.android.play.core.splitinstall.SplitInstallSessionState)
androidx.core.os.LocaleListPlatformWrapper: java.util.Locale getFirstMatch(java.lang.String[])
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.util.SparseLongArrayKt: android.util.SparseLongArray plus(android.util.SparseLongArray,android.util.SparseLongArray)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(char[])
kotlin.collections.builders.MapBuilder: void putAll(java.util.Map)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager,io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean isEmpty()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object first(java.lang.Object[])
androidx.fragment.app.FragmentManager: boolean restoreBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api31Impl: EdgeEffectCompat$Api31Impl()
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
androidx.core.app.NotificationCompat$Action$Builder$Api23Impl: android.graphics.drawable.Icon getIcon(android.app.Notification$Action)
kotlin.jvm.JvmPackageName: java.lang.String name()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long singleOrNull(long[])
androidx.core.graphics.ColorKt: float component4(long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View,int)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
androidx.core.content.FileProvider: boolean onCreate()
io.flutter.embedding.android.FlutterViewDelegate: android.view.WindowInsets getWindowInsets(android.content.Context)
kotlinx.coroutines.JobImpl: boolean completeExceptionally(java.lang.Throwable)
androidx.core.view.MarginLayoutParamsCompat: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long constructor-impl(long)
kotlin.UShort: int div-xj2QHRw(short,short)
androidx.fragment.app.DialogFragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.core.PredicateAdapter getPredicateAdapter()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double firstOrNull(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object getOrElse(java.lang.Object[],int,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView$Api21Impl: NestedScrollView$Api21Impl()
androidx.core.location.LocationCompat$Api28Impl: LocationCompat$Api28Impl()
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper: BenchmarkOperation$Api24ContextHelper()
kotlin.ranges.IntProgression: int getStep()
androidx.core.util.LongSparseArrayKt: kotlin.collections.LongIterator keyIterator(android.util.LongSparseArray)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.activity.BackEventCompat: float getTouchY()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
kotlin.collections.builders.MapBuilder$Itr: boolean hasNext()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareBy(java.util.Comparator,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
kotlin.time.DurationKt: long getHours(int)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(int[],kotlin.jvm.functions.Function1)
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$1: android.view.View invoke(android.view.View)
androidx.core.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])
kotlin.collections.AbstractMutableList: java.lang.Object removeAt(int)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.util.List getLastObservedStackTrace()
kotlin.UByteArray: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.content.res.ComplexColorCompat: int getColor()
androidx.loader.R$string: R$string()
androidx.core.view.ViewCompat: void compatOffsetLeftAndRight(android.view.View,int)
androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)
androidx.core.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
androidx.core.app.LocaleManagerCompat: androidx.core.os.LocaleListCompat getConfigurationLocales(android.content.res.Configuration)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation)
androidx.core.app.NotificationChannelGroupCompat: java.lang.CharSequence getName()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String lowercase(java.lang.String)
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.DispatchedTask: void run()
kotlin.collections.ArraysKt___ArraysKt: boolean none(double[])
kotlinx.coroutines.DispatchedTaskKt: void getMODE_CANCELLABLE$annotations()
androidx.core.widget.NestedScrollView: boolean isSmoothScrollingEnabled()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceOrNull(char[],kotlin.jvm.functions.Function2)
androidx.activity.OnBackPressedDispatcher$addCallback$1: OnBackPressedDispatcher$addCallback$1(java.lang.Object)
androidx.core.view.ContentInfoCompat$BuilderCompat: void setExtras(android.os.Bundle)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CharIterator: CharIterator()
androidx.core.os.ConfigurationCompat: ConfigurationCompat()
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlin.collections.MapWithDefaultImpl: boolean equals(java.lang.Object)
androidx.core.os.OperationCanceledException: OperationCanceledException(java.lang.String)
com.getkeepsafe.relinker.ReLinker$LibraryLoader: void loadLibrary(java.lang.String)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: CombineKt$zipImpl$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(byte[],int,int)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(boolean[])
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandlerSafely(kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.core.os.EnvironmentCompat: EnvironmentCompat()
androidx.core.graphics.WeightTypefaceApi14: android.graphics.Typeface getBestFontFromFamily(androidx.core.graphics.TypefaceCompatBaseImpl,android.content.Context,android.graphics.Typeface,int,boolean)
kotlin.time.DurationKt: long getMicroseconds(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(char[])
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
kotlin.UInt: int times-7apg3OU(int,byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-nggk6HY(short[],int)
androidx.core.provider.FontProvider: int lambda$static$0(byte[],byte[])
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.sequences.SubSequence$iterator$1: java.util.Iterator getIterator()
androidx.core.app.NotificationCompat$Api26Impl: java.lang.String getChannelId(android.app.Notification)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean refresh()
androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
androidx.window.core.Version: java.lang.String getDescription()
kotlinx.coroutines.Job: boolean start()
kotlin.collections.ArraysKt___ArraysKt: byte component1(byte[])
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.Semaphore Semaphore$default(int,int,int,java.lang.Object)
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: void setExtras(android.os.Bundle)
androidx.core.graphics.TypefaceCompatBaseImpl: void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
kotlinx.coroutines.selects.SelectClause0Impl: SelectClause0Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
androidx.fragment.app.FragmentViewLifecycleOwner: void performSave(android.os.Bundle)
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: CoroutineContextKt$foldCopies$1()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(boolean[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
androidx.window.embedding.SplitAttributes$LayoutDirection$Companion: androidx.window.embedding.SplitAttributes$LayoutDirection getLayoutDirectionFromValue$window_release(int)
kotlin.time.Duration: void getInMinutes$annotations()
kotlin.text.StringsKt__StringsKt$iterator$1: StringsKt__StringsKt$iterator$1(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $values()
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: StringsKt__StringsKt$rangesDelimitedBy$1(char[],boolean)
kotlin.collections.AbstractList: void add(int,java.lang.Object)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isSystemPickerAvailable$activity_release()
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: java.lang.Boolean invoke(java.lang.Object)
androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
kotlin.time.AbstractLongTimeSource: kotlin.time.ComparableTimeMark markNow()
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minWithOrNull(java.util.Map,java.util.Comparator)
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)
androidx.core.view.ViewKt: void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow takeWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi24Impl: boolean isTreeUri(android.net.Uri)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1: void onTrimMemory(int)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
androidx.core.app.NotificationCompat$InboxStyle: void restoreFromCompatExtras(android.os.Bundle)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double maxOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
android.support.v4.app.INotificationSideChannel$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)
androidx.core.graphics.ColorUtils: double distanceEuclidean(double[],double[])
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
kotlinx.coroutines.flow.FlowKt__DistinctKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy$FlowKt__DistinctKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(boolean[])
androidx.fragment.app.Fragment: boolean isInBackStack()
androidx.loader.content.AsyncTaskLoader: void waitForLoader()
androidx.core.view.WindowInsetsAnimationCompat$Impl: int getTypeMask()
kotlinx.coroutines.internal.LimitedDispatcher: LimitedDispatcher(kotlinx.coroutines.CoroutineDispatcher,int)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: DefaultSpecialEffectsController$TransitionEffect(java.util.List,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.util.ArrayList,java.util.ArrayList,androidx.collection.ArrayMap,java.util.ArrayList,java.util.ArrayList,androidx.collection.ArrayMap,androidx.collection.ArrayMap,boolean)
kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)
kotlin.ULongArray$Iterator: java.lang.Object next()
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1: SequencesKt__SequencesKt$generateSequence$1(kotlin.jvm.functions.Function0)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(long)
androidx.core.content.pm.ShortcutInfoCompatSaver: ShortcutInfoCompatSaver()
kotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)
io.flutter.Log: void i(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.fragment.app.FragmentManager: void dispatchStop()
kotlin.UShortArray: java.lang.Object[] toArray()
kotlinx.coroutines.internal.SegmentOrClosed: java.lang.Object constructor-impl(java.lang.Object)
kotlinx.coroutines.SchedulerTaskKt: kotlinx.coroutines.scheduling.TaskContext getTaskContext(kotlinx.coroutines.scheduling.Task)
kotlin.collections.ArraysKt___ArraysKt: boolean none(int[])
kotlin.ranges.LongProgression: long getStep()
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
kotlin.ranges.ClosedDoubleRange: java.lang.Double getStart()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: java.lang.String getHTMLElement()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(short[],kotlin.jvm.functions.Function1)
kotlin.math.MathKt__MathJVMKt: float ceil(float)
kotlinx.coroutines.sync.MutexImpl: int tryLockImpl(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(kotlin.Unit,java.lang.Object)
kotlin.sequences.TakeSequence$iterator$1: int getLeft()
kotlinx.coroutines.channels.ChannelSegment: int getNumberOfSlots()
kotlinx.coroutines.BuildersKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.LongIterator: java.lang.Long next()
kotlinx.coroutines.EventLoop: void decrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
kotlin.text.RegexOption: kotlin.text.RegexOption[] values()
kotlin.UByte: int compareTo-VKZWuLQ(byte,long)
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20: void lambda$show$0(android.view.View)
androidx.fragment.app.FragmentManager: boolean isStateAtLeast(int)
androidx.core.view.VelocityTrackerFallback: float getAxisVelocity(int)
kotlinx.coroutines.DispatchedTask: DispatchedTask(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-XUkPCBk(int[])
kotlin.collections.MapsKt: MapsKt()
androidx.lifecycle.viewmodel.InitializerViewModelFactory: InitializerViewModelFactory(androidx.lifecycle.viewmodel.ViewModelInitializer[])
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
kotlinx.coroutines.scheduling.CoroutineScheduler: void runSafely(kotlinx.coroutines.scheduling.Task)
kotlin.io.ConsoleKt: void println(char[])
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: char[] toCharArray(java.lang.Character[])
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
androidx.core.app.AlarmManagerCompat$Api21Impl: void setAlarmClock(android.app.AlarmManager,java.lang.Object,android.app.PendingIntent)
kotlinx.coroutines.flow.FlowKt__EmittersKt: java.lang.Object invokeSafely$FlowKt__EmittersKt(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Throwable,kotlin.coroutines.Continuation)
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: KeyboardManager$CharacterCombiner()
androidx.core.text.util.FindAddress: FindAddress()
androidx.activity.OnBackPressedDispatcher$5: java.lang.Object invoke()
kotlin.time.Duration$Companion: long hours-UwyO8pc(int)
androidx.core.app.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Void)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short randomOrNull(short[])
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type access$computeJavaType(kotlin.reflect.KType,boolean)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(androidx.core.app.Person)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
androidx.collection.MapCollections$EntrySet: void clear()
androidx.core.util.Predicate$-CC: boolean lambda$isEqual$3(java.lang.Object)
android.support.v4.app.INotificationSideChannel: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)
kotlin.LazyKt: LazyKt()
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
androidx.core.view.WindowInsetsAnimationCompat: float getAlpha()
androidx.core.view.WindowInsetsControllerCompat$Impl: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)
kotlin.text.StringsKt___StringsKt: char last(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte findLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.window.core.ConsumerAdapter: androidx.window.core.ConsumerAdapter$Subscription createSubscriptionNoActivity(java.lang.Object,kotlin.reflect.KClass,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge: void release()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduceRight-xzaTVY8(short[],kotlin.jvm.functions.Function2)
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.text.CharsKt__CharKt: CharsKt__CharKt()
androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)
androidx.core.view.ViewKt: boolean isInvisible(android.view.View)
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
kotlin.jvm.internal.InlineMarker: void beforeInlineCall()
kotlin.math.MathKt__MathJVMKt: double hypot(double,double)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void dumpCoroutines(java.io.PrintStream)
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.graphics.Rect)
androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult access$copyToRecursively$copy(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.StandardKt__StandardKt: java.lang.Void TODO()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List buildList(int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(double[])
kotlin.NumbersKt__BigIntegersKt: java.math.BigDecimal toBigDecimal(java.math.BigInteger)
kotlin.collections.MapsKt__MapsKt: java.lang.Object ifEmpty(java.util.Map,kotlin.jvm.functions.Function0)
androidx.fragment.app.FragmentManager: void dispatchStart()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minWithOrNull(boolean[],java.util.Comparator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyInto--B0-L2c(long[],long[],int,int,int)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence asSequence(kotlin.sequences.Sequence)
androidx.lifecycle.viewmodel.MutableCreationExtras: void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object)
kotlin.text.UStringsKt: kotlin.UShort toUShortOrNull(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: byte[] onEachIndexed(byte[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.os.Parcelable castToParcelable(android.graphics.drawable.Icon)
androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.customview.widget.ViewDragHelper: void abort()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.activity.ComponentDialog: ComponentDialog(android.content.Context,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,long)
kotlin.text.CharsKt__CharKt: java.lang.String plus(char,java.lang.String)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: void handleBuilderException(java.lang.Throwable)
androidx.core.app.NotificationManagerCompat: void notify(java.util.List)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double minOrNull(kotlin.sequences.Sequence)
kotlin.sequences.TakeSequence$iterator$1: void remove()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: ArraysKt___ArraysJvmKt$asList$8(char[])
androidx.window.area.RearDisplayPresentationSessionPresenterImpl: void setContentView(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getStateDescription()
androidx.core.view.ViewCompat: void setZ(android.view.View,float)
io.flutter.plugin.editing.TextInputPlugin: void destroy()
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(byte[])
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.graphics.Bitmap)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,kotlin.sequences.Sequence)
kotlinx.coroutines.CancellableContinuationImpl: boolean tryResume()
kotlin.coroutines.EmptyCoroutineContext: int hashCode()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: android.os.Bundle createArgs()
androidx.core.view.MenuHost: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
kotlin.collections.DoubleIterator: DoubleIterator()
kotlinx.coroutines.channels.BufferedChannelKt: int getSendersCloseStatus(long)
kotlin.jvm.internal.Ref$FloatRef: java.lang.String toString()
androidx.lifecycle.LifecycleRegistry: kotlinx.coroutines.flow.StateFlow getCurrentStateFlow()
kotlin.collections.RingBuffer: kotlin.collections.RingBuffer expanded(int)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: void onDraw()
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(float[])
kotlin.UByte: short toShort-impl(byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(java.lang.Object[],java.lang.Object)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object random(java.util.Collection)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeForward()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $values()
androidx.core.location.GpsStatusWrapper: float getBasebandCn0DbHz(int)
kotlinx.coroutines.JobSupport$AwaitContinuation: java.lang.String nameString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable[] sortedArray(java.lang.Comparable[])
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.getkeepsafe.relinker.elf.Elf$Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)
kotlin.collections.ArrayDeque: int negativeMod(int)
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
androidx.fragment.R: R()
androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.net.Uri)
androidx.collection.ArrayMap: ArrayMap(int)
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
kotlinx.coroutines.flow.ChannelAsFlow: ChannelAsFlow(kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.BuildersKt: java.lang.Object invoke(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager$2: FragmentManager$2(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.channels.ChannelCoroutine: ChannelCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean,boolean)
androidx.window.core.PredicateAdapter$BaseHandler: boolean isEquals(java.lang.reflect.Method,java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long maxWithOrThrow-U(long[],java.util.Comparator)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker(long)
kotlin.collections.EmptyMap: java.lang.Void remove(java.lang.Object)
androidx.core.app.RemoteActionCompat$Api28Impl: RemoteActionCompat$Api28Impl()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.channels.ChannelResult: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterShellArgs: void add(java.lang.String)
androidx.window.area.WindowAreaControllerImpl: int access$getVendorApiLevel$p(androidx.window.area.WindowAreaControllerImpl)
androidx.lifecycle.SavedStateHandle$Companion: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuffer)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(float[])
kotlinx.coroutines.ExecutorCoroutineDispatcher: void close()
kotlin.time.DurationKt: long getMicroseconds(double)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean equals(java.lang.Object)
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
kotlin.collections.MapsKt___MapsKt: java.lang.Object firstNotNullOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrNull(java.util.List,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)
androidx.core.app.NotificationCompat$Action: android.os.Bundle getExtras()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List buildList(kotlin.jvm.functions.Function1)
androidx.fragment.R$anim: R$anim()
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.graphics.ColorUtils: void colorToM3HCT(int,float[])
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: boolean isSeekingSupported()
androidx.core.view.WindowInsetsAnimationCompat: void setFraction(float)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapConcat(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
androidx.fragment.app.FragmentController: FragmentController(androidx.fragment.app.FragmentHostCallback)
kotlinx.coroutines.channels.BufferedChannelKt: long access$constructEBCompletedAndPauseFlag(long,boolean)
kotlin.collections.AbstractMutableCollection: int getSize()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.ResultKt: java.lang.Object getOrElse(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte firstOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.lifecycle.SavedStateHandleAttacher: SavedStateHandleAttacher(androidx.lifecycle.SavedStateHandlesProvider)
io.flutter.plugin.platform.PlatformPlugin: boolean clipboardHasStrings()
androidx.core.app.NotificationCompat$BigPictureStyle: java.lang.String getClassName()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
io.flutter.view.AccessibilityBridge: boolean getAccessibleNavigation()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMin()
kotlin.io.FilesKt__UtilsKt: java.lang.String getInvariantSeparatorsPath(java.io.File)
androidx.startup.AppInitializer: void setDelegate(androidx.startup.AppInitializer)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
kotlin.coroutines.CoroutineContext$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: java.util.Iterator invoke()
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructCompatStyleByName(java.lang.String)
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowExtra(java.lang.String,java.lang.Class,androidx.core.util.Predicate)
androidx.collection.LruCache: int createCount()
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
kotlin.collections.ArraysKt___ArraysKt: float component1(float[])
io.flutter.plugin.platform.SingleViewWindowManager: void removeView(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: double minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.Mutex: boolean isLocked()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.content.LocusIdCompat: LocusIdCompat(java.lang.String)
androidx.loader.content.CursorLoader: android.database.Cursor loadInBackground()
androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback getWrappedCallback()
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken()
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] $values()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
kotlin.random.Random: Random()
kotlinx.coroutines.scheduling.DefaultScheduler: void close()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.UnbiasedSelectImplementation: UnbiasedSelectImplementation(kotlin.coroutines.CoroutineContext)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: ActivityCompat$SharedElementCallback21Impl(androidx.core.app.SharedElementCallback)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOf(java.lang.Object[],int)
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(short[],kotlin.random.Random)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)
kotlin.jvm.internal.PropertyReference0: PropertyReference0()
androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
androidx.core.graphics.RectKt: android.graphics.Rect minus(android.graphics.Rect,android.graphics.Point)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object single(java.lang.Object[])
kotlin.text.MatchResult$Destructured: java.lang.String component3()
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setInsets(int,androidx.core.graphics.Insets)
androidx.fragment.app.FragmentManager: int getBackStackEntryCount()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.core.graphics.MatrixKt: android.graphics.Matrix times(android.graphics.Matrix,android.graphics.Matrix)
androidx.core.view.MenuHostHelper: void removeMenuProvider(androidx.core.view.MenuProvider)
kotlin.io.path.PathTreeWalk: java.nio.file.Path access$getStart$p(kotlin.io.path.PathTreeWalk)
kotlin.io.path.PathTreeWalk: boolean access$getIncludeDirectories(kotlin.io.path.PathTreeWalk)
kotlinx.coroutines.internal.ThreadSafeHeap: int getSize()
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
kotlinx.coroutines.CompletedExceptionally: boolean getHandled()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: boolean any(float[])
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat build()
androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPairPredicates$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()
kotlin.collections.ArraysKt___ArraysKt: double minOf(int[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: DartMessenger$BufferedMessageInfo(java.nio.ByteBuffer,int,long)
kotlin.PreconditionsKt__AssertionsJVMKt: PreconditionsKt__AssertionsJVMKt()
kotlin.io.TextStreamsKt: kotlin.sequences.Sequence lineSequence(java.io.BufferedReader)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isActivityEmbeddingComponentAccessible$window_release()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
androidx.core.content.UriMatcherCompat: boolean lambda$asPredicate$0(android.content.UriMatcher,android.net.Uri)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
kotlinx.coroutines.channels.BufferedChannel: long markAllEmptyCellsAsClosed(kotlinx.coroutines.channels.ChannelSegment)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int minOf-J1ME1BU(int,int)
androidx.viewpager.widget.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentStateManager: void saveViewState()
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
io.flutter.embedding.android.FlutterFragment: boolean shouldAttachEngineToActivity()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: void setFlags(int)
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object removeAllShortcuts()
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentState: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.renderer.RenderSurface: void resume()
androidx.core.content.IntentCompat$Api33Impl: IntentCompat$Api33Impl()
androidx.core.app.TaskStackBuilder: int getIntentCount()
androidx.lifecycle.LifecycleCoroutineScope$launchWhenStarted$1: LifecycleCoroutineScope$launchWhenStarted$1(androidx.lifecycle.LifecycleCoroutineScope,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment get(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment: boolean shouldDelayFirstAndroidViewDraw()
androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeMinTextSize(android.widget.TextView)
androidx.core.os.BundleCompat: android.os.Parcelable[] getParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.loader.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long max(long[])
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
kotlin.collections.MutableMapWithDefaultImpl: MutableMapWithDefaultImpl(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: java.util.Collection getValues()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
androidx.core.app.Person: android.os.PersistableBundle toPersistableBundle()
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
io.flutter.plugin.editing.TextEditingDelta: int getNewComposingEnd()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(int[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableMap: java.util.Set keySet()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void destroy()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed$default(java.lang.Iterable,int,int,boolean,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannelKt: long getSendersCounter(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(java.lang.Object[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.time.MonotonicTimeSource: long read()
kotlin.io.FilesKt__UtilsKt: java.io.File copyTo(java.io.File,java.io.File,boolean,int)
androidx.activity.result.contract.ActivityResultContracts$GetContent: android.content.Intent createIntent(android.content.Context,java.lang.String)
io.flutter.embedding.android.KeyboardManager: void onUnhandled(android.view.KeyEvent)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper: void apply(android.content.SharedPreferences$Editor)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrThrow(java.lang.Iterable)
androidx.core.app.RemoteActionCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.app.RemoteAction)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowSpan()
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: WindowAreaControllerImpl$windowAreaInfos$1(androidx.window.area.WindowAreaControllerImpl,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FloatCompanionObject: void getNEGATIVE_INFINITY$annotations()
androidx.profileinstaller.ProfileTranscoder: void writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[])
kotlin.collections.AbstractMutableCollection: boolean add(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$ImageAndVideo: ActivityResultContracts$PickVisualMedia$ImageAndVideo()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long[] toTypedArray(long[])
kotlin.SuspendKt: kotlin.jvm.functions.Function1 suspend(kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.TaskImpl: void run()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
kotlin.text.StringsKt___StringsKt: java.util.List toList(java.lang.CharSequence)
androidx.tracing.Trace: boolean isEnabled()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.UndispatchedMarker: UndispatchedMarker()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setFilterBitmap(boolean)
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
kotlin.text.CharsKt__CharKt: boolean equals$default(char,char,boolean,int,java.lang.Object)
io.flutter.plugin.common.ErrorLogResult: void notImplemented()
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
kotlin.io.path.PathsKt__PathUtilsKt: void visitFileTree(java.nio.file.Path,int,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList: java.util.List subList(int,int)
kotlin.collections.builders.SetBuilder: boolean contains(java.lang.Object)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowType(java.lang.String)
kotlin.UShort: int rem-WZ4Q5Ns(short,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.String)
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.core.view.DifferentialMotionFlingTarget: boolean startDifferentialMotionFling(float)
androidx.core.app.NotificationCompat$Action$Builder$Api20Impl: android.app.RemoteInput[] getRemoteInputs(android.app.Notification$Action)
androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.MatchGroup: java.lang.String getValue()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
kotlin.time.Duration$Companion: long getSeconds-UwyO8pc(long)
androidx.core.content.pm.PermissionInfoCompat$Api28Impl: PermissionInfoCompat$Api28Impl()
kotlin.DeepRecursiveScopeImpl: void access$setCont$p(kotlin.DeepRecursiveScopeImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.util.List getCreationStackTrace()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(char[],java.lang.Iterable)
kotlin.UByte: int rem-WZ4Q5Ns(byte,int)
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
io.flutter.embedding.android.FlutterView: android.view.View findViewByAccessibilityIdRootedAtCurrentView(int,android.view.View)
kotlin.ranges.IntRange: IntRange(int,int)
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setFinishPrimaryWithSecondary(androidx.window.embedding.SplitRule$FinishBehavior)
androidx.collection.CircularIntArray: int popLast()
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.InputStream inputStream(java.nio.file.Path,java.nio.file.OpenOption[])
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
kotlin.sequences.DropSequence: java.util.Iterator iterator()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: android.content.BroadcastReceiver getBroadcastReceiver()
androidx.core.app.NotificationManagerCompat: int getCurrentInterruptionFilter()
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle(android.os.Bundle,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filter(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
androidx.core.graphics.PathParser$PathDataNode: char access$000(androidx.core.graphics.PathParser$PathDataNode)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-2fe2U9s(int[],int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setFrameworkHandlesBack(boolean)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: boolean equals(java.lang.Object)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
kotlin.jvm.internal.TypeReference$Companion: TypeReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$1: java.lang.Object invoke(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Object firstNotNullOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: java.lang.Object invoke()
androidx.core.widget.NestedScrollView: void addView(android.view.View)
androidx.core.util.AtomicFileKt: void writeText$default(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: ChannelFlowOperatorImpl(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.time.Duration: void getInHours$annotations()
kotlin.UShortArray$Iterator: java.lang.Object next()
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: androidx.window.layout.adapter.sidecar.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$2: androidx.savedstate.SavedStateRegistryOwner invoke(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort getOrNull-nggk6HY(short[],int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
androidx.window.embedding.EmbeddingBackendDecorator: androidx.window.embedding.EmbeddingBackend decorate(androidx.window.embedding.EmbeddingBackend)
kotlin.text.StringsKt___StringsKt$windowedSequence$2: StringsKt___StringsKt$windowedSequence$2(int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)
androidx.core.provider.FontRequestWorker$TypefaceResult: boolean isSuccess()
kotlin.ULong: long times-VKZWuLQ(long,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(float[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(short[])
io.flutter.plugin.platform.SingleViewWindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)
kotlin.collections.builders.ListBuilder$Itr: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(byte[],kotlin.jvm.functions.Function1)
kotlin.text.Regex$findAll$2: kotlin.text.MatchResult invoke(kotlin.text.MatchResult)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2: FlowKt__TransformKt$filterIsInstance$$inlined$filter$2(kotlinx.coroutines.flow.Flow,kotlin.reflect.KClass)
androidx.core.app.AlarmManagerCompat$Api31Impl: boolean canScheduleExactAlarms(android.app.AlarmManager)
androidx.window.embedding.ActivityFilter: int hashCode()
androidx.core.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long first-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: java.io.InputStream getInputStream()
kotlin.collections.AbstractList: boolean addAll(int,java.util.Collection)
kotlin.text.UStringsKt: short toUShort(java.lang.String)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
kotlin.UInt: int floorDiv-xj2QHRw(int,short)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: void remove()
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence slice(java.lang.CharSequence,java.lang.Iterable)
androidx.core.app.NotificationCompat: boolean getShowWhen(android.app.Notification)
kotlin.Result: kotlin.Result box-impl(java.lang.Object)
androidx.fragment.app.FragmentManager: void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
kotlin.sequences.TakeSequence: kotlin.sequences.Sequence drop(int)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable getReceiveException()
androidx.core.text.util.LocalePreferences: java.lang.String getHourCycle()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String concatToString(char[],int,int)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(int[])
kotlin.math.MathKt__MathJVMKt: float pow(float,int)
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
io.flutter.plugin.platform.VirtualDisplayController: void resize31(android.view.View,int,int,java.lang.Runnable)
androidx.collection.LruCache: java.lang.Object remove(java.lang.Object)
kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
io.flutter.plugin.platform.PlatformViewsController: void configureForHybridComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-ZjwqOic(int[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(int[])
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
kotlin.collections.DoubleIterator: double nextDouble()
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object getValue()
kotlinx.coroutines.sync.MutexKt$withLock$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: java.lang.Object doInBackground(java.lang.Object[])
kotlin.collections.CollectionsKt__CollectionsKt: kotlin.ranges.IntRange getIndices(java.util.Collection)
androidx.core.view.WindowInsetsCompat: int getStableInsetRight()
io.flutter.embedding.engine.renderer.RenderSurface: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle)
kotlin.text.CharsKt__CharKt: int digitToInt(char,int)
kotlin.text.StringsKt__StringsKt: boolean isNotBlank(java.lang.CharSequence)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minus(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object trySendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: SequencesKt___SequencesKt$flatMapIndexed$2()
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1: void onTransitionPause(android.transition.Transition)
kotlin.UInt: byte toUByte-w2LRezQ(int)
kotlin.internal.RequireKotlin$Container: kotlin.internal.RequireKotlin[] value()
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
kotlin.UByte: byte xor-7apg3OU(byte,byte)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short reduceRightIndexedOrNull(short[],kotlin.jvm.functions.Function3)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.lang.Throwable,int,java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
kotlinx.coroutines.channels.LazyActorCoroutine: void onSendRegFunction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.io.FilesKt__FileReadWriteKt: java.io.InputStreamReader reader(java.io.File,java.nio.charset.Charset)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
androidx.window.java.area.WindowAreaControllerCallbackAdapter: WindowAreaControllerCallbackAdapter(androidx.window.area.WindowAreaController,androidx.window.java.core.CallbackToFlowAdapter)
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: SharedFlowImpl$Emitter(kotlinx.coroutines.flow.SharedFlowImpl,long,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)
androidx.core.view.MenuProvider: void onMenuClosed(android.view.Menu)
kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()
androidx.fragment.app.strictmode.FragmentStrictMode: void handlePolicyViolation$lambda$1(java.lang.String,androidx.fragment.app.strictmode.Violation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(float[],int)
kotlinx.coroutines.Deferred: java.lang.Throwable getCompletionExceptionOrNull()
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.activity.OnBackPressedDispatcher$5: OnBackPressedDispatcher$5(androidx.activity.OnBackPressedDispatcher)
androidx.lifecycle.viewmodel.InitializerViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
androidx.fragment.app.FragmentManager: boolean saveBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String)
kotlin.reflect.KClass: java.util.List getSealedSubclasses()
androidx.versionedparcelable.VersionedParcel: int[] readIntArray()
kotlinx.coroutines.channels.Channel$Factory: Channel$Factory()
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel)
kotlin.ranges.ComparableRange: java.lang.String toString()
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted WhileSubscribed$default(kotlinx.coroutines.flow.SharingStarted$Companion,long,long,int,java.lang.Object)
kotlin.text.Regex$splitToSequence$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.loader.R: R()
androidx.activity.ComponentActivity$Api19Impl: ComponentActivity$Api19Impl()
kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.getkeepsafe.relinker.ReLinker$LibraryLoader: java.lang.String[] supportedAbis()
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int)
androidx.fragment.app.Fragment$8: Fragment$8(androidx.fragment.app.Fragment,androidx.activity.result.ActivityResultRegistry)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: android.content.ClipDescription getDescription()
androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)
kotlin.random.KotlinRandom: KotlinRandom(kotlin.random.Random)
androidx.core.location.GpsStatusWrapper: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.loader.app.LoaderManager: androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
kotlin.collections.builders.MapBuilderValues: java.util.Iterator iterator()
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence ifEmpty(kotlin.sequences.Sequence,kotlin.jvm.functions.Function0)
kotlinx.coroutines.BlockingCoroutine: void afterCompletion(java.lang.Object)
kotlin.time.Duration$Companion: void getMilliseconds-UwyO8pc$annotations(double)
io.flutter.embedding.android.FlutterView$2: boolean deliverSelfNotifications()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1)
androidx.fragment.app.FragmentTabHost: android.os.Parcelable onSaveInstanceState()
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToBackground()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(short[],kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.collection.ArrayMap getLastInViews()
androidx.core.view.WindowInsetsAnimationCompat$Impl21: androidx.core.view.WindowInsetsAnimationCompat$Callback getCallback(android.view.View)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getCachedFont(android.content.Context,int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment$SavedState: Fragment$SavedState(android.os.Bundle)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
androidx.core.graphics.BlendModeColorFilterCompat$Api29Impl: BlendModeColorFilterCompat$Api29Impl()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
kotlinx.coroutines.channels.ReceiveChannel: boolean cancel(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNotNull(java.lang.Object[])
androidx.lifecycle.livedata.R: R()
androidx.versionedparcelable.VersionedParcel: char[] readCharArray(char[],int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel)
androidx.core.graphics.RectKt: android.graphics.RectF plus(android.graphics.RectF,float)
androidx.core.widget.NestedScrollView: boolean edgeEffectFling(int)
androidx.core.view.accessibility.AccessibilityEventCompat: void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
kotlin.collections.ArrayDeque: boolean remove(java.lang.Object)
kotlin.collections.AbstractList$ListIteratorImpl: void add(java.lang.Object)
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.util.List close()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
kotlin.collections.ArrayAsCollection: java.lang.Object[] toArray()
androidx.core.view.ViewCompat$Api23Impl: ViewCompat$Api23Impl()
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean canScroll()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow withIndex(kotlinx.coroutines.flow.Flow)
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
kotlin.coroutines.jvm.internal.ModuleNameRetriever: java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
kotlin.text.Regex$Serialized: int getFlags()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task pollGlobalQueues()
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1: java.lang.Boolean invoke()
kotlin.reflect.TypeOfKt: kotlin.reflect.KType typeOf()
androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow drop(kotlinx.coroutines.flow.Flow,int)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfLast(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(long[])
androidx.fragment.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.tracing.Trace: void setCounterFallback(java.lang.String,int)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: BufferedChannel$receiveCatching$1(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
androidx.core.app.AlarmManagerCompat$Api21Impl: AlarmManagerCompat$Api21Impl()
kotlin.UByte: int plus-7apg3OU(byte,byte)
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder getBuilder()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
kotlin.UShortKt: short toUShort(long)
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat toBoundsCompat(android.view.WindowInsetsAnimation$Bounds)
androidx.core.content.res.CamColor: float getHue()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)
androidx.arch.core.executor.TaskExecutor: void executeOnDiskIO(java.lang.Runnable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.window.embedding.RuleController: java.util.Set getRules()
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerTitleStrip: void updateText(int,androidx.viewpager.widget.PagerAdapter)
androidx.core.location.LocationManagerCompat$Api30Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,java.util.concurrent.Executor,androidx.core.location.LocationListenerCompat)
kotlin.collections.MapsKt__MapsKt: java.util.Map buildMap(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
kotlin.jvm.internal.ShortSpreadBuilder: ShortSpreadBuilder(int)
kotlinx.coroutines.flow.StateFlowSlot: boolean takePending()
kotlin.jvm.internal.ClassReference$Companion: boolean isInstance(java.lang.Object,java.lang.Class)
kotlin.SafePublicationLazyImpl: java.lang.Object getValue()
androidx.window.embedding.EmbeddingBackend$Companion$reset$1: EmbeddingBackend$Companion$reset$1()
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle setAnswerButtonColorHint(int)
androidx.core.app.NotificationManagerCompat: java.util.List getActiveNotifications()
androidx.core.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(float[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: boolean displayCustomViewInline()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapIndexedTo-eNpIKz8(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.location.LocationCompat: void setMslAltitudeAccuracyMeters(android.location.Location,float)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateParentMetricsPredicate$1: EmbeddingAdapter$VendorApiLevel1Impl$translateParentMetricsPredicate$1(androidx.window.embedding.SplitRule,android.content.Context)
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong find-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ChildJob$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ChildJob,kotlin.coroutines.CoroutineContext$Key)
kotlin.math.MathKt__MathJVMKt: long getAbsoluteValue(long)
com.getkeepsafe.relinker.ApkLibraryInstaller: ApkLibraryInstaller()
androidx.lifecycle.Lifecycle: kotlinx.coroutines.flow.StateFlow getCurrentStateFlow()
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.jvm.internal.CoroutineStackFrame getLastObservedFrame()
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.internal.Removed: java.lang.String toString()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KTypeParameter typeParameter(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: void onGnssMeasurementsReceived(android.location.GnssMeasurementsEvent)
androidx.fragment.app.Fragment: void onPause()
androidx.fragment.app.FragmentManagerState: int describeContents()
kotlin.collections.UArraySortingKt: void sortArray-Aa5vz7o(short[],int,int)
androidx.core.provider.FontRequestWorker$4: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3: java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void lambda$onLocationChanged$1(androidx.core.util.Consumer,android.location.Location)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0: void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer)
android.support.v4.os.IResultReceiver$Stub$Proxy: IResultReceiver$Stub$Proxy(android.os.IBinder)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)
kotlin.time.TestTimeSource: long read()
androidx.fragment.app.FragmentActivity: void lambda$init$2(android.content.Intent)
kotlin.ULongArray: long get-s-VKNKU(long[],int)
kotlin.time.DurationKt: long getNanoseconds(double)
kotlin.io.LineReader: void trimStringBuilder()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.DoubleIterator iterator(double[])
androidx.collection.SparseArrayCompat: boolean isEmpty()
androidx.lifecycle.ViewTreeViewModelStoreOwner: androidx.lifecycle.ViewModelStoreOwner get(android.view.View)
androidx.core.os.HandlerKt: java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
androidx.core.view.WindowInsetsControllerCompat$Impl: void show(int)
androidx.core.graphics.BitmapCompat: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,android.graphics.Rect,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] onEachIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.InlineList: java.lang.String toString-impl(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: DartExecutor$DartCallback(android.content.res.AssetManager,java.lang.String,io.flutter.view.FlutterCallbackInformation)
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getSTATE_REG$p()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$1: FlowKt__ErrorsKt$catchImpl$1(kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1: LockFreeLinkedListNode$toString$1(java.lang.Object)
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt: java.io.InputStream decodingWith(java.io.InputStream,kotlin.io.encoding.Base64)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(long[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimal(java.lang.String,java.math.MathContext)
androidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)
androidx.viewpager.widget.ViewPager: void endDrag()
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
kotlinx.coroutines.DefaultExecutor: boolean isShutdownRequested()
androidx.fragment.app.Fragment: android.view.View getFocusedView()
androidx.core.os.MessageCompat$Api22Impl: boolean isAsynchronous(android.os.Message)
androidx.core.app.AppLocalesStorageHelper: java.lang.String readLocales(android.content.Context)
kotlin.ranges.CharProgression: int hashCode()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
androidx.lifecycle.BlockRunner$maybeRun$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.Intrinsics: void checkHasClass(java.lang.String)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getFAILED$p()
kotlin.collections.MapWithDefault: java.util.Map getMap()
kotlin.NumbersKt__FloorDivModKt: int mod(byte,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(short[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.attribute.FileAttributeView fileAttributesView(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.LiveData$AlwaysActiveObserver: boolean shouldBeActive()
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcelable)
androidx.fragment.app.FragmentContainerView: void removeViewsInLayout(int,int)
androidx.core.content.res.CamUtils: float lStarFromY(float)
kotlin.io.FilesKt__FileReadWriteKt: void writeText(java.io.File,java.lang.String,java.nio.charset.Charset)
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
androidx.fragment.app.BackStackRecord: boolean isEmpty()
androidx.core.view.ViewKt: android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.viewpager.widget.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.core.graphics.WeightTypefaceApi14: boolean isPrivateApiAvailable()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel withIndex$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
androidx.fragment.app.ListFragment: void setSelection(int)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintShowBackgroundOnly()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.app.Notification$MessagingStyle$Message toAndroidMessage()
androidx.core.content.pm.ShortcutInfoCompat: java.util.List fromShortcuts(android.content.Context,java.util.List)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence chunked(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4(int[])
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
androidx.core.widget.EdgeEffectCompat: void setSize(int,int)
io.flutter.Build$API_LEVELS: Build$API_LEVELS()
androidx.core.graphics.TypefaceCompatBaseImpl$3: TypefaceCompatBaseImpl$3(androidx.core.graphics.TypefaceCompatBaseImpl)
kotlin.text.StringsKt__StringsJVMKt: java.util.regex.Pattern toPattern$default(java.lang.String,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.window.embedding.ActivityEmbeddingController: ActivityEmbeddingController(androidx.window.embedding.EmbeddingBackend)
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
kotlin.ULongKt: long toULong(long)
kotlinx.coroutines.time.TimeKt: java.lang.Object delay(java.time.Duration,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractList$ListIteratorImpl: boolean hasPrevious()
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object getOrImplicitDefault(java.lang.Object)
kotlinx.coroutines.channels.SendChannel: boolean close(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
androidx.core.widget.TextViewCompat$Api34Impl: void setLineHeight(android.widget.TextView,int,float)
androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)
kotlin.io.NoSuchFileException: NoSuchFileException(java.io.File,java.io.File,java.lang.String)
kotlin.collections.builders.ListBuilderKt: boolean subarrayContentEquals(java.lang.Object[],int,int,java.util.List)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void success(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineGroup$1: void onEngineWillDestroy()
androidx.core.view.DisplayCutoutCompat$Api29Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
kotlin.collections.builders.MapBuilder$Itr: void remove()
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion: ActivityResultContracts$GetMultipleContents$Companion()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-K6DWlUc$default(long[],long,int,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.DisplayCompat: android.graphics.Point getDisplaySize(android.content.Context,android.view.Display)
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong randomOrNull(kotlin.ranges.ULongRange,kotlin.random.Random)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal rem(java.math.BigDecimal,java.math.BigDecimal)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLayoutDirectionChanged(int)
androidx.viewpager.widget.PagerTabStrip$1: void onClick(android.view.View)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
androidx.activity.result.ActivityResult: android.content.Intent getData()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: android.view.accessibility.AccessibilityWindowInfo getParent(android.view.accessibility.AccessibilityWindowInfo)
org.jetbrains.annotations.Range: long to()
kotlin.ranges.RangesKt___RangesKt: byte coerceAtMost(byte,byte)
androidx.core.view.ViewCompat$Api30Impl: ViewCompat$Api30Impl()
androidx.core.view.contentcapture.ContentCaptureSessionCompat: android.view.autofill.AutofillId newAutofillId(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minOrNull(byte[])
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.core.app.RemoteActionCompat$Api26Impl: android.app.PendingIntent getActionIntent(android.app.RemoteAction)
androidx.core.view.ViewKt: androidx.core.view.OneShotPreDrawListener doOnPreDraw(android.view.View,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
kotlin.jvm.internal.ShortSpreadBuilder: short[] toArray()
androidx.core.view.WindowInsetsAnimationControllerCompat: float getCurrentFraction()
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.CallbackFlowBuilder: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlin.ULongArray: int getSize-impl(long[])
androidx.core.view.NestedScrollingChild: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.fragment.app.FragmentTransitionImpl: boolean canHandle(java.lang.Object)
kotlin.jvm.internal.Ref$IntRef: java.lang.String toString()
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short lastOrNull(short[])
kotlin.text.CharsKt__CharJVMKt: java.lang.String lowercase(char,java.util.Locale)
kotlin.io.FilePathComponents: java.util.List getSegments()
kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String,java.lang.String)
kotlinx.coroutines.flow.StartedLazily$command$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(byte[])
kotlin.random.URandomKt: void checkUIntRangeBounds-J1ME1BU(int,int)
androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
kotlin.math.MathKt__MathJVMKt: float cosh(float)
kotlin.ranges.IntRange$Companion: IntRange$Companion()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuilder)
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: java.lang.Object parseResult(int,android.content.Intent)
androidx.profileinstaller.ProfileTranscoder: void writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData)
kotlinx.coroutines.flow.SharedFlowSlot: boolean allocateLocked(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.core.widget.CheckedTextViewCompat$Api21Impl: void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList)
kotlinx.coroutines.flow.StateFlowImpl: java.util.List getReplayCache()
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
androidx.core.content.FileProvider$SimplePathStrategy: FileProvider$SimplePathStrategy(java.lang.String)
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object invoke(androidx.lifecycle.LiveDataScope,kotlin.coroutines.Continuation)
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.lifecycle.DispatchQueue: DispatchQueue()
kotlin.DeepRecursiveScopeImpl: java.lang.Object callRecursive(kotlin.DeepRecursiveFunction,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object last(kotlin.sequences.Sequence)
androidx.core.app.NotificationCompat$WearableExtender$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
kotlin.enums.EnumEntriesKt: kotlin.enums.EnumEntries enumEntries(java.lang.Enum[])
kotlin.UShortArray: short[] constructor-impl(short[])
kotlinx.coroutines.CoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.jvm.internal.PrimitiveSpreadBuilder: java.lang.Object toArray(java.lang.Object,java.lang.Object)
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1: void onIsPermissionRevocationEnabledForAppResult(boolean,boolean)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.collection.SparseArrayCompat: void removeAtRange(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxOrNull(byte[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: FlowKt__ZipKt$combineTransform$6(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
kotlin.UByteArray: java.lang.Object[] toArray()
androidx.core.app.NotificationChannelGroupCompat: java.lang.String getDescription()
kotlin.collections.ArrayDeque: boolean retainAll(java.util.Collection)
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: void run()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String)
androidx.core.graphics.RegionKt: android.graphics.Region minus(android.graphics.Region,android.graphics.Rect)
kotlin.properties.ObservableProperty: ObservableProperty(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-d-6D3K8(short[])
androidx.core.view.DifferentialMotionFlingTarget: void stopDifferentialMotionFling()
kotlin.jvm.internal.TypeParameterReference$Companion: TypeParameterReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(byte[])
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setDither(boolean)
androidx.core.util.AtomicFile: void rename(java.io.File,java.io.File)
kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
androidx.fragment.app.DialogFragment: int getTheme()
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.StateFlow getSubscriptionCount()
kotlinx.coroutines.channels.BroadcastCoroutine: boolean close(java.lang.Throwable)
androidx.core.util.SparseLongArrayKt$keyIterator$1: int getIndex()
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int)
kotlin.collections.CollectionsKt__IterablesKt: java.lang.Integer collectionSizeOrNull(java.lang.Iterable)
kotlin.io.path.PathTreeWalk: PathTreeWalk(java.nio.file.Path,kotlin.io.path.PathWalkOption[])
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel getLocalizationChannel()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(long[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentActivity: void onPause()
kotlin.UInt: long floorDiv-VKZWuLQ(int,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: boolean isHierarchical()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot(int)
androidx.core.content.pm.ShortcutInfoCompat: boolean isEnabled()
android.support.v4.os.IResultReceiver$_Parcel: IResultReceiver$_Parcel()
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
kotlin.collections.EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder setQuality(int)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(int[],int[])
kotlin.CharCodeKt: void getCode$annotations(char)
androidx.customview.R$id: R$id()
kotlin.collections.ArraysKt___ArraysKt: boolean any(java.lang.Object[])
androidx.fragment.app.FragmentManager$ClearBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(float[],float,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-QwZRm1k(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(short[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(java.lang.Object[],java.lang.Iterable)
androidx.core.graphics.RectKt: android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF)
androidx.core.util.LruCacheKt: android.util.LruCache lruCache(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.ArrayList arrayListOf()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(short[],short[])
androidx.fragment.app.SpecialEffectsController: void processStart(java.util.List)
kotlinx.coroutines.EventLoopImplPlatform: EventLoopImplPlatform()
kotlinx.coroutines.selects.SelectClause: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.View$OnApplyWindowInsetsListener createProxyListener(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)
android.support.v4.os.IResultReceiver2$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)
kotlin.UInt: int dec-pVg5ArA(int)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set buildSetInternal(kotlin.jvm.functions.Function1)
androidx.core.content.res.ViewingConditions: float getNbb()
io.flutter.embedding.android.FlutterTextureView: void resume()
androidx.versionedparcelable.VersionedParcel: void writeSerializable(java.io.Serializable)
kotlin.ULong: double toDouble-impl(long)
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()
kotlinx.coroutines.AwaitAll: kotlinx.coroutines.Deferred[] access$getDeferreds$p(kotlinx.coroutines.AwaitAll)
androidx.lifecycle.BlockRunner: void cancel()
kotlinx.coroutines.EventLoopImplBase: void resetAll()
kotlinx.coroutines.CancelFutureOnCompletion: CancelFutureOnCompletion(java.util.concurrent.Future)
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
kotlinx.coroutines.flow.ReadonlySharedFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
androidx.core.text.util.LinkifyCompat: LinkifyCompat()
androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)
androidx.lifecycle.OnLifecycleEvent: androidx.lifecycle.Lifecycle$Event value()
kotlin.io.FilesKt__FileReadWriteKt: void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningFoldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.window.embedding.ExtensionEmbeddingBackend: void removeSplitListenerForActivity(androidx.core.util.Consumer)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(java.lang.Object[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void cleanPrev()
androidx.core.location.LocationManagerCompat: void removeUpdates(android.location.LocationManager,androidx.core.location.LocationListenerCompat)
androidx.fragment.app.FragmentManager: void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)
androidx.fragment.app.FragmentAnim: FragmentAnim()
kotlin.math.MathKt__MathJVMKt: float withSign(float,float)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(byte[])
kotlin.collections.MapsKt__MapWithDefaultKt: java.util.Map withDefaultMutable(java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList getEnteringNames()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: EventLoopImplBase$DelayedResumeTask(kotlinx.coroutines.EventLoopImplBase,long,kotlinx.coroutines.CancellableContinuation)
kotlin.StandardKt__StandardKt: java.lang.Object apply(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plusElement(java.lang.Object[],java.lang.Object)
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingApplicationIcon()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void unsetOnDescendantFocusChangeListener()
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.core.view.accessibility.AccessibilityEventCompat: void setAction(android.view.accessibility.AccessibilityEvent,int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: FlowKt__ReduceKt$lastOrNull$1(kotlin.coroutines.Continuation)
androidx.core.util.RangeKt: android.util.Range and(android.util.Range,android.util.Range)
androidx.window.embedding.SplitAttributes$SplitType: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getError()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
kotlinx.coroutines.JobSupportKt: java.lang.Object unboxState(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: UArraysKt___UArraysJvmKt$asList$3(byte[])
androidx.savedstate.SavedStateRegistry: void performRestore$savedstate_release(android.os.Bundle)
kotlin.UShort: UShort(short)
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: ContentInfoCompat$BuilderCompatImpl(android.content.ClipData,int)
androidx.core.app.JobIntentService: void processorFinished()
androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)
kotlin.text.StringsKt__StringsKt: java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,java.lang.String)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)
androidx.window.core.ActivityComponentInfo: int hashCode()
androidx.versionedparcelable.VersionedParcel: void writeList(java.util.List,int)
kotlin.sequences.GeneratorSequence$iterator$1: void setNextState(int)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] stop()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(java.lang.Iterable,kotlin.jvm.functions.Function2)
io.flutter.util.ViewUtils: void calculateMaximumDisplayMetrics(android.content.Context,io.flutter.util.ViewUtils$DisplayUpdater)
kotlinx.coroutines.flow.StartedWhileSubscribed: long access$getStopTimeout$p(kotlinx.coroutines.flow.StartedWhileSubscribed)
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder setMaxUpdates(int)
androidx.window.embedding.EmbeddingRule: boolean equals(java.lang.Object)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
kotlin.UByteArray$Iterator: boolean hasNext()
kotlin.time.AbstractLongTimeSource$LongTimeMark: int hashCode()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.os.ProcessCompat$Api24Impl: boolean isApplicationUid(int)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void lambda$onSatelliteStatusChanged$3(java.util.concurrent.Executor,android.location.GnssStatus)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(int[],int)
kotlin.KotlinNothingValueException: KotlinNothingValueException(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer getOrNull(int[],int)
androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)
kotlin.UShortArray: boolean equals(java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat: boolean isCached()
kotlin.collections.AbstractMap: int hashCode()
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: android.content.Intent createIntent(android.content.Context,android.net.Uri)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
kotlin.text.FlagEnum: int getValue()
kotlin.collections.ArrayAsCollection: boolean add(java.lang.Object)
android.support.v4.os.IResultReceiver$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)
kotlin.text.UStringsKt: kotlin.UInt toUIntOrNull(java.lang.String)
androidx.fragment.app.FragmentActivity: void lambda$init$1(android.content.res.Configuration)
androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])
androidx.core.os.EnvironmentCompat$Api21Impl: EnvironmentCompat$Api21Impl()
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[])
kotlin.io.FilesKt__UtilsKt: java.io.File createTempDir$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollY()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()
androidx.lifecycle.ComputableLiveData: void invalidationRunnable$lambda$1(androidx.lifecycle.ComputableLiveData)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: boolean hasMipMap()
androidx.versionedparcelable.VersionedParcelize: int[] deprecatedIds()
androidx.core.app.NotificationCompat$Action$Builder$Api31Impl: boolean isAuthenticationRequired(android.app.Notification$Action)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.DispatchedContinuation: void dispatchYield$kotlinx_coroutines_core(kotlin.coroutines.CoroutineContext,java.lang.Object)
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void dispatch(java.lang.Runnable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-XzdR7RA(short[],short)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: java.lang.Integer get(int)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$2: WindowInfoTrackerImpl$windowLayoutInfo$1$2(androidx.window.layout.WindowInfoTrackerImpl,androidx.core.util.Consumer)
kotlin.collections.CollectionsKt__CollectionsKt: boolean isNullOrEmpty(java.util.Collection)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: ViewPager$SimpleOnPageChangeListener()
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
kotlin.jvm.internal.IntSpreadBuilder: int[] toArray()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.graphics.Bitmap getBitmap()
io.flutter.embedding.engine.renderer.FlutterRenderer: void addOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.flutter.plugin.platform.SingleViewWindowManager: SingleViewWindowManager(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup)
kotlinx.coroutines.flow.LintKt: void isActive$annotations(kotlinx.coroutines.flow.FlowCollector)
kotlinx.coroutines.channels.BufferedChannel: void markCancelled()
kotlin.time.Duration$Companion: long nanoseconds-UwyO8pc(double)
kotlinx.coroutines.internal.DispatchedContinuation: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.plugin.common.BinaryMessenger$-CC: io.flutter.plugin.common.BinaryMessenger$TaskQueue $default$makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger)
kotlin.collections.GroupingKt: GroupingKt()
kotlinx.coroutines.channels.BufferedChannel: boolean isCellNonEmpty(kotlinx.coroutines.channels.ChannelSegment,int,long)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.InvokeOnCancelling: InvokeOnCancelling(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationChannelCompat$Api30Impl: void setConversationId(android.app.NotificationChannel,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(int[],kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: boolean isSeekingSupported()
kotlin.collections.ArraysKt___ArraysKt: boolean all(boolean[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LifecycleRegistry: void sync()
kotlinx.coroutines.channels.BufferedChannel: void resumeSenderOnCancelledChannel(kotlinx.coroutines.Waiter)
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
kotlin.ranges.OpenEndDoubleRange: java.lang.Comparable getStart()
androidx.core.widget.TextViewKt$addTextChangedListener$2: void invoke(java.lang.CharSequence,int,int,int)
androidx.core.location.GnssStatusWrapper: boolean hasBasebandCn0DbHz(int)
androidx.activity.OnBackPressedDispatcher$2: void invoke(androidx.activity.BackEventCompat)
kotlin.ranges.ULongProgressionIterator: long next-s-VKNKU()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
androidx.window.SafeWindowExtensionsProvider: java.lang.Class access$getWindowExtensionsProviderClass(androidx.window.SafeWindowExtensionsProvider)
androidx.core.app.JobIntentService: void onHandleWork(android.content.Intent)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List dropLastWhile(java.util.List,kotlin.jvm.functions.Function1)
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.CharSequence)
kotlin.io.ByteStreamsKt$iterator$1: void setFinished(boolean)
kotlin.UShort: float toFloat-impl(short)
androidx.versionedparcelable.ParcelImpl: int describeContents()
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlin.io.ByteStreamsKt: java.io.ByteArrayInputStream byteInputStream$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
androidx.fragment.app.FragmentTransitionImpl: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: NotificationCompat$CarExtender$Api20Impl()
io.flutter.plugin.editing.ScribePlugin: boolean isFeatureAvailable()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAtOrElse(java.lang.Iterable,int,kotlin.jvm.functions.Function1)
androidx.collection.LongSparseArray: int size()
kotlin.ranges.LongProgression: boolean equals(java.lang.Object)
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong firstOrNull-QwZRm1k(long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathUtilsKt: void deleteExisting(java.nio.file.Path)
androidx.core.location.LocationManagerCompat: java.lang.String getGnssHardwareModelName(android.location.LocationManager)
kotlin.ranges.UIntProgressionIterator: java.lang.Object next()
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setColumnSpan(int)
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOrNull(double[])
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1: java.lang.Object invoke()
kotlin.jvm.internal.PackageReference: java.lang.String toString()
kotlin.time.AbstractLongTimeSource$LongTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyInto$default(float[],float[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BubbleMetadata: void setFlags(int)
kotlin.math.MathKt__MathJVMKt: void getSign$annotations(long)
kotlinx.coroutines.channels.BroadcastCoroutine: BroadcastCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.BroadcastChannel,boolean)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf()
androidx.lifecycle.ProcessLifecycleOwner$Companion: ProcessLifecycleOwner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.pm.ShortcutManagerCompat: void convertUriIconsToBitmapIcons(android.content.Context,java.util.List)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float interpolateValue(float)
kotlin.text.Regex$Serialized: java.lang.String getPattern()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlin.text.Regex: Regex(java.lang.String,java.util.Set)
androidx.core.content.LocusIdCompat$Api29Impl: android.content.LocusId create(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.FileTreeWalk: java.io.File access$getStart$p(kotlin.io.FileTreeWalk)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback asInterface(android.os.IBinder)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.SafePublicationLazyImpl: java.lang.String toString()
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
kotlinx.coroutines.flow.SharedFlowKt: kotlinx.coroutines.flow.MutableSharedFlow MutableSharedFlow$default(int,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
kotlin.time.DurationUnitKt__DurationUnitKt: DurationUnitKt__DurationUnitKt()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager,int)
kotlin.UByteArray: boolean equals-impl0(byte[],byte[])
androidx.core.content.pm.PackageInfoCompat: byte[] computeSHA256Digest(byte[])
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
androidx.profileinstaller.ProfileTranscoder: int roundUpToByte(int)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: boolean isPhotoPickerAvailable(android.content.Context)
kotlin.io.FilesKt__FilePathComponentsKt: boolean isRooted(java.io.File)
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: CallbackToFutureAdapter$Completer()
androidx.core.graphics.PathSegment: boolean equals(java.lang.Object)
kotlin.ExceptionsKt__ExceptionsKt: void getSuppressedExceptions$annotations(java.lang.Throwable)
androidx.core.app.NotificationCompat$Builder$Api24Impl: android.app.Notification$Builder recoverBuilder(android.content.Context,android.app.Notification)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxOrNull-rL5Bavg(short[])
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeChangeListener()
kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()
kotlin.collections.LongIterator: java.lang.Object next()
androidx.window.embedding.EmbeddingRule: int hashCode()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-rL5Bavg(short[])
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.lang.String,java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: FlowKt__DelayKt$debounceInternal$1(kotlin.jvm.functions.Function1,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
kotlinx.coroutines.selects.SelectImplementation: void onTimeout(long,kotlin.jvm.functions.Function1)
androidx.core.app.Person: java.lang.String resolveToLegacyUri()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
kotlin.TypeAliasesKt: void IllegalStateException$annotations()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
kotlin.io.encoding.Base64: byte[] decode$default(kotlin.io.encoding.Base64,java.lang.CharSequence,int,int,int,java.lang.Object)
kotlin.time.Duration: long getAbsoluteValue-UwyO8pc(long)
kotlin.text.StringsKt__StringBuilderJVMKt: void toCharArray(java.lang.StringBuilder,char[],int,int,int)
kotlin.collections.BooleanIterator: java.lang.Object next()
kotlinx.coroutines.stream.StreamFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat: java.lang.CharSequence getContentInfo(android.app.Notification)
kotlin.time.AdjustedTimeMark: AdjustedTimeMark(kotlin.time.TimeMark,long)
androidx.viewpager.widget.ViewPager$PageTransformer: void transformPage(android.view.View,float)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.res.ResourcesCompat$FontCallback: void lambda$callbackFailAsync$1(int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.ClassValueCtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
kotlin.collections.MapAccessorsKt: java.lang.Object getValue(java.util.Map,java.lang.Object,kotlin.reflect.KProperty)
androidx.window.embedding.SplitRule$FinishBehavior: SplitRule$FinishBehavior(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(double[],double,int,int,int,java.lang.Object)
kotlin.random.RandomKt: int fastLog2(int)
kotlin.collections.EmptyList: java.lang.Object[] toArray()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int indexOf(java.lang.Object)
kotlin.UNumbersKt: int countLeadingZeroBits-xj2QHRw(short)
kotlinx.coroutines.internal.Segment: boolean decPointers$kotlinx_coroutines_core()
kotlin.text.Regex: kotlin.text.MatchResult matchAt(java.lang.CharSequence,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_next$FU$p()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence,char[])
androidx.window.embedding.ExtensionEmbeddingBackend: void setRules(java.util.Set)
kotlinx.coroutines.CancelFutureOnCompletion: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(float[],float,int,int,int,java.lang.Object)
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat getIcon()
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
kotlin.ULong: long floorDiv-WZ4Q5Ns(long,int)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService asInterface(android.os.IBinder)
androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int,int)
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: ModuleNameRetriever$Cache(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder detectFragmentTagUsage()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Properties toProperties(java.util.Map)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minByOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.comparisons.UComparisonsKt: UComparisonsKt()
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.provider.SelfDestructiveThread$ReplyCallback: void onReply(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: FlowKt__ZipKt$combineTransformUnsafe$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: boolean tryResumeHasNext(java.lang.Object)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
kotlin.collections.ArraysKt___ArraysKt: boolean[] sliceArray(boolean[],kotlin.ranges.IntRange)
kotlin.time.TimeMark: boolean hasPassedNow()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int indexOf(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: byte minOrThrow(byte[])
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: MenuItemCompat$Api26Impl()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean contains(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isPassword()
androidx.core.app.NotificationChannelCompat$Api26Impl: void setGroup(android.app.NotificationChannel,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
androidx.window.core.SpecificationComputer$Companion: SpecificationComputer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener)
androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)
kotlin.io.FilesKt__UtilsKt: boolean endsWith(java.io.File,java.io.File)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: java.util.ArrayDeque access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader)
androidx.core.database.sqlite.SQLiteCursorCompat: SQLiteCursorCompat()
androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)
androidx.core.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String checkTimestamp(java.io.File,android.content.pm.PackageManager,java.lang.String)
androidx.core.app.NotificationChannelGroupCompat$Api26Impl: java.lang.CharSequence getName(android.app.NotificationChannelGroup)
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
androidx.fragment.app.FragmentManager$OnBackStackChangedListener$-CC: void $default$onBackStackChangeCancelled(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener: WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$2$1: FlowKt__LimitKt$take$2$1(kotlin.jvm.internal.Ref$IntRef,int,kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean isFinished(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1: FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$sendOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlin.coroutines.Continuation)
kotlin.SubclassOptInRequired: java.lang.Class markerClass()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempDirectory$default(java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
kotlinx.coroutines.AwaitKt: java.lang.Object awaitAll(java.util.Collection,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.content.Context,android.os.Handler,int)
androidx.lifecycle.ComputableLiveData: java.lang.Object compute()
androidx.core.graphics.WeightTypefaceApi21: WeightTypefaceApi21()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sum--ajY-9A(int[])
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)
io.flutter.embedding.android.FlutterSurfaceView: void init()
kotlinx.coroutines.internal.ProbesSupportKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.lifecycle.EmittedSource: void access$removeSource(androidx.lifecycle.EmittedSource)
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(android.graphics.Typeface)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: RoundedBitmapDrawable(android.content.res.Resources,android.graphics.Bitmap)
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1: AnimatorKt$doOnRepeat$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
androidx.core.provider.RequestExecutor$HandlerExecutor: void execute(java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: FlowKt__ErrorsKt$catchImpl$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$ObjectRef)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.text.MatchResult$Destructured: java.lang.String component6()
kotlin.sequences.TakeWhileSequence: kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.TakeWhileSequence)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection getLastInputConnection()
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: androidx.core.view.WindowInsetsAnimationCompat getWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(float[],kotlin.jvm.functions.Function1)
kotlin.UInt: boolean equals(java.lang.Object)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationHelp(int,java.lang.CharSequence)
androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1: SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1()
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getCANCELLED$p()
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: java.lang.Object invoke()
androidx.window.reflection.ReflectionUtils: boolean checkIsPresent$window_release(kotlin.jvm.functions.Function0)
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
kotlin.collections.ArraysKt___ArraysKt: double average(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(char[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLastWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.lifecycle.Transformations$distinctUntilChanged$1: void invoke(java.lang.Object)
androidx.fragment.app.Fragment$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentManager: java.lang.String toString()
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
io.flutter.embedding.engine.loader.ResourceExtractor$ExtractTask: ResourceExtractor$ExtractTask(java.lang.String,java.util.HashSet,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int getArity()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult access$copyToRecursively$error(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
kotlinx.coroutines.EventLoop: void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
kotlinx.coroutines.debug.internal.StackTraceFrame: java.lang.StackTraceElement getStackTraceElement()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger inv(java.math.BigInteger)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
androidx.core.content.res.CamColor: void fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions,float[],float[])
io.flutter.plugin.platform.PlatformViewRegistry: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
androidx.profileinstaller.Encoding: int readUInt8(java.io.InputStream)
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: SemaphoreImpl$onCancellationRelease$1(kotlinx.coroutines.sync.SemaphoreImpl)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
kotlinx.coroutines.flow.StateFlowSlot: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyInto-9-ak10g$default(short[],short[],int,int,int,int,java.lang.Object)
androidx.fragment.app.Fragment$3: void run()
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.time.DurationKt: long getSeconds(double)
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(long[],java.lang.Object[])
kotlin.io.FilePathComponents: java.io.File subPath(int,int)
kotlin.text.StringsKt___StringsKt: char random(java.lang.CharSequence,kotlin.random.Random)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
androidx.fragment.app.FragmentController: void dispatchPause()
androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)
kotlinx.coroutines.channels.BufferedChannel: boolean hasElements$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object first(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: float sumOfFloat(java.lang.Float[])
kotlinx.coroutines.channels.Channel$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.Channel)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: void setLogTag(java.lang.String)
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
kotlin.sequences.SubSequence$iterator$1: void remove()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int getHeight()
androidx.tracing.Trace: boolean isEnabledFallback()
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: java.lang.Boolean invoke(java.lang.Object)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle)
kotlinx.coroutines.internal.MainDispatcherFactory$DefaultImpls: java.lang.String hintOnError(kotlinx.coroutines.internal.MainDispatcherFactory)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: GeneratedPluginRegister()
androidx.core.view.ViewGroupKt: kotlin.ranges.IntRange getIndices(android.view.ViewGroup)
androidx.core.internal.view.SupportMenu: void setGroupDividerEnabled(boolean)
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.util.LruCacheKt$lruCache$3: void invoke(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.LongProgression: long getLast()
kotlin.ranges.LongProgressionIterator: long getStep()
androidx.versionedparcelable.CustomVersionedParcelable: void onPreParceling(boolean)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(int)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.app.FrameMetricsAggregator: void add(android.app.Activity)
androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)
kotlin.collections.ArraysKt___ArraysKt: long component3(long[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.collection.MapCollections$KeySet: int size()
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult copyToRecursively$copy$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.ArraysKt__ArraysJVMKt: int contentDeepHashCode(java.lang.Object[])
io.flutter.plugin.editing.SpellCheckPlugin: void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
kotlin.UShortArray: short get-Mh2AYeg(short[],int)
androidx.core.math.MathUtils: int incrementExact(int)
androidx.core.content.pm.ShortcutInfoCompat: long getLastChangedTimestamp()
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.DoubleStream)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMapIndexedSequence(java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.lifecycle.ComputableLiveData: java.util.concurrent.atomic.AtomicBoolean getComputing$lifecycle_livedata_release()
kotlin.time.TimedValue: java.lang.String toString()
androidx.core.app.ActivityCompat$Api21Impl: void postponeEnterTransition(android.app.Activity)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(float[])
androidx.profileinstaller.ProfileVerifier$CompilationStatus: int getProfileInstallResultCode()
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Handler)
androidx.fragment.app.FragmentManager$1: void handleOnBackStarted(androidx.activity.BackEventCompat)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(long[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.location.GnssStatusCompat: androidx.core.location.GnssStatusCompat wrap(android.location.GpsStatus)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3()
kotlin.UShortArray: void getStorage$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: java.lang.Object get(int)
androidx.core.content.res.ComplexColorCompat: ComplexColorCompat(android.graphics.Shader,android.content.res.ColorStateList,int)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.location.LocationManagerCompat$Api19Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationManagerCompat$LocationListenerTransport)
androidx.core.util.SizeFCompat$Api21Impl: androidx.core.util.SizeFCompat toSizeFCompat(android.util.SizeF)
androidx.core.view.ViewCompat$AccessibilityViewProperty: void frameworkSet(android.view.View,java.lang.Object)
kotlin.contracts.ContractBuilder: kotlin.contracts.Returns returns(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long random-QwZRm1k(long[])
io.flutter.embedding.android.FlutterView: void redispatch(android.view.KeyEvent)
kotlin.sequences.SubSequence$iterator$1: void setPosition(int)
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions: io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions setIsSerial(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minByOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: FragmentStrictMode$Policy$Builder()
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: io.flutter.view.TextureRegistry$ImageTextureEntry access$000(io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget)
kotlin.collections.builders.ListBuilder$Itr: boolean hasPrevious()
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: void loadDartLibrary(int,java.lang.String)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
androidx.lifecycle.viewmodel.ViewModelInitializer: java.lang.Class getClazz$lifecycle_viewmodel_release()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: ProfileInstallerInitializer$Handler28Impl()
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isMethodClearSplitInfoCallbackValid()
kotlin.collections.ArraysKt___ArraysKt: int indexOf(float[],float)
io.flutter.embedding.android.FlutterView$2: void onChange(boolean)
androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)
androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object checkNotNull(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(boolean[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.loader.content.Loader: void onStopLoading()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$1: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: AnimatorKt$addPauseListener$listener$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(android.content.Context,java.util.Set)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.window.embedding.RuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: boolean isSystemPickerAvailable$activity_release()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowData(androidx.core.util.Predicate)
kotlin.collections.EmptyMap: java.lang.Object remove(java.lang.Object)
androidx.collection.MapCollections: MapCollections()
kotlin.collections.MapsKt___MapsKt: boolean none(java.util.Map)
androidx.fragment.app.Fragment: boolean isPostponed()
androidx.core.app.AppOpsManagerCompat$Api23Impl: AppOpsManagerCompat$Api23Impl()
kotlinx.coroutines.DefaultExecutor: java.lang.Thread createThreadSync()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],byte)
kotlin.jvm.internal.DoubleSpreadBuilder: int getSize(java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
kotlin.collections.ArraysKt___ArraysKt: byte reduce(byte[],kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: void removeCleanedAt(int)
io.flutter.embedding.android.AndroidTouchProcessor: float getVerticalScrollFactor(android.content.Context)
kotlin.concurrent.ThreadsKt: java.lang.Object getOrSet(java.lang.ThreadLocal,kotlin.jvm.functions.Function0)
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(short[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlin.jvm.internal.DoubleSpreadBuilder: double[] toArray()
io.flutter.view.AccessibilityBridge: boolean lambda$shouldSetCollectionInfo$1(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$none$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
kotlin.collections.AbstractMap: java.lang.String toString(java.lang.Object)
kotlin.coroutines.jvm.internal.RunSuspend: kotlin.Result getResult-xLWZpok()
androidx.lifecycle.LiveData: void postValue(java.lang.Object)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-kBb4a-s(short[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] $values()
androidx.core.view.WindowInsetsAnimationCompat: void setAlpha(float)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] $values()
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
kotlin.sequences.FlatteningSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.FlatteningSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-yVwIW0Q(int[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState: FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: void access$setSInstance$cp(androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory)
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(double[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(byte[],byte,int,int,int,java.lang.Object)
androidx.fragment.app.FragmentTabHost$SavedState$1: FragmentTabHost$SavedState$1()
androidx.core.util.TypedValueCompat: float pxToSp(float,android.util.DisplayMetrics)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
androidx.core.util.SparseLongArrayKt: long getOrElse(android.util.SparseLongArray,int,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.SharedFlowImpl: long getQueueEndIndex()
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationChannelGroupCompat$Api26Impl: java.util.List getChannels(android.app.NotificationChannelGroup)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence subSequence(java.lang.CharSequence,kotlin.ranges.IntRange)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.time.ComparableTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.channels.BufferedChannel: void receiveImplOnNoWaiter(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlinx.coroutines.Waiter,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
kotlin.enums.EnumEntriesList: int getSize()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short elementAtOrNull(short[],int)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short maxOf-5PvTz6A(short,short)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short maxOf-t1qELG4(short,short[])
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
kotlin.reflect.KClasses: java.lang.Object safeCast(kotlin.reflect.KClass,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: FlowKt__DelayKt$sample$2$1$2(kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.core.app.NotificationManagerCompat$Api26Impl: NotificationManagerCompat$Api26Impl()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat getWindowExtension()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(int[])
kotlin.collections.ArrayDeque: boolean addAll(java.util.Collection)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Action$Builder$Api20Impl: android.os.Bundle getExtras(android.app.Notification$Action)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget$1: ImageReaderPlatformViewRenderTarget$1(io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget)
androidx.core.graphics.PointKt: android.graphics.PointF minus(android.graphics.PointF,float)
androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)
kotlin.io.ConsoleKt: void println(short)
androidx.activity.BackEventCompat: java.lang.String toString()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String hierarchyToString(kotlinx.coroutines.Job)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(boolean[])
kotlinx.coroutines.selects.OnTimeout$selectClause$1: void invoke(kotlinx.coroutines.selects.OnTimeout,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.activity.BackEventCompat$Companion: BackEventCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterFragment: FlutterFragment()
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.core.content.IntentCompat: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long component5-QwZRm1k(long[])
androidx.window.area.WindowAreaController$-CC: androidx.window.area.WindowAreaController getOrCreate()
androidx.window.area.SafeWindowAreaComponentProvider: java.lang.Class getExtensionWindowAreaStatusClass()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.DisplayCompat$Api23Impl: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)
androidx.core.os.CancellationSignal: void throwIfCanceled()
kotlinx.coroutines.flow.StartedWhileSubscribed: boolean equals(java.lang.Object)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$000(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-GBYM_sE(byte[])
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,java.lang.Object)
kotlin.DeepRecursiveFunction: kotlin.jvm.functions.Function3 getBlock$kotlin_stdlib()
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
kotlin.reflect.KVariance: KVariance(java.lang.String,int)
androidx.core.location.LocationCompat$Api26Impl: float getBearingAccuracyDegrees(android.location.Location)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.lang.String[])
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: ViewModelProvider$NewInstanceFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.IntRange: void getEndExclusive$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(char[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,long,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfLong(kotlin.sequences.Sequence)
androidx.fragment.app.Fragment: int getNextTransition()
kotlin.io.CloseableKt: java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toMap$2: ChannelsKt__DeprecatedKt$toMap$2(kotlin.coroutines.Continuation)
kotlin.UByteKt: byte toUByte(long)
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(boolean[])
kotlin.ExceptionsKt__ExceptionsKt: void printStackTrace(java.lang.Throwable,java.io.PrintWriter)
kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
androidx.lifecycle.BlockRunner$maybeRun$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewsController$1: void dispose(int)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedFloatingPointRange)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void tryResumeHasNextOnClosedChannel()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte find-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void setVisibleRemovingFragment(androidx.fragment.app.Fragment)
kotlin.time.LongSaturatedMathKt: boolean isSaturated(long)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from$default(android.os.Handler,java.lang.String,int,java.lang.Object)
kotlin.jvm.internal.ArrayFloatIterator: float nextFloat()
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: void accept$lambda$0(int,int,androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$9(char[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
kotlin.text.StringsKt___StringsKt: java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.AbstractTimeSourceKt: void unpark(java.lang.Thread)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiDisplayed()
androidx.core.util.LruCacheKt$lruCache$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,java.util.Collection,int,boolean)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle getParentHandle()
androidx.core.util.SparseArrayKt: boolean remove(android.util.SparseArray,int,java.lang.Object)
kotlin.ULong$Companion: ULong$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation)
kotlinx.coroutines.scheduling.WorkQueue: void decrementIfBlocking(kotlinx.coroutines.scheduling.Task)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: PathInterpolatorCompat$Api21Impl()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: java.lang.Object invoke()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
kotlin.ranges.ClosedDoubleRange: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,java.lang.CharSequence)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.app.AlarmManagerCompat: boolean canScheduleExactAlarms(android.app.AlarmManager)
io.flutter.plugin.platform.PlatformViewsController: void ensureValidRequest(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
kotlinx.coroutines.EventLoop: boolean isUnconfinedQueueEmpty()
androidx.collection.ArraySet$1: ArraySet$1(androidx.collection.ArraySet)
kotlin.text.StringsKt___StringsKt: java.lang.Character maxWithOrNull(java.lang.CharSequence,java.util.Comparator)
androidx.core.animation.AnimatorKt$addListener$2: java.lang.Object invoke(java.lang.Object)
androidx.core.app.JobIntentService: void setInterruptIfStopped(boolean)
androidx.window.core.AndroidLogger: void debug(java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: java.lang.Object invoke()
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean)
androidx.fragment.app.SpecialEffectsController$Companion: SpecialEffectsController$Companion()
androidx.core.view.animation.PathInterpolatorApi14: PathInterpolatorApi14(float,float,float,float)
androidx.core.location.LocationRequestCompat: LocationRequestCompat(long,int,long,int,long,float,long)
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.activity.ComponentDialog: androidx.lifecycle.Lifecycle getLifecycle()
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListHead: kotlinx.coroutines.internal.LockFreeLinkedListNode nextIfRemoved()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: kotlin.coroutines.CoroutineContext getContext()
kotlin.collections.builders.MapBuilderEntries: MapBuilderEntries(kotlin.collections.builders.MapBuilder)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(double[],double,int,int)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getLastObservedFrame$kotlinx_coroutines_core()
kotlinx.coroutines.channels.BufferedChannel: void update$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.builders.MapBuilderValues: boolean removeAll(java.util.Collection)
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
kotlin.jvm.internal.PropertyReference0: kotlin.reflect.KCallable computeReflected()
androidx.versionedparcelable.VersionedParcel: boolean isStream()
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.String additionalToStringProps()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getOrElse-QxvSvLU(int[],int,kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__UtilsKt: java.io.File relativeToOrNull(java.io.File,java.io.File)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: android.content.pm.ResolveInfo getSystemFallbackPicker$activity_release(android.content.Context)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void commitContent(int,java.util.Map)
kotlinx.coroutines.CoroutineId: long component1()
kotlin.collections.builders.MapBuilder: int getCapacity$kotlin_stdlib()
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
androidx.fragment.app.FragmentManager: void setSpecialEffectsControllerFactory(androidx.fragment.app.SpecialEffectsControllerFactory)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStoreOwner)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List takeWhile(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
kotlinx.coroutines.flow.SharedFlowImpl: boolean access$tryEmitLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void reverse(short[])
kotlin.collections.ArraysKt___ArraysJvmKt: char[] plus(char[],java.util.Collection)
kotlinx.coroutines.channels.BufferedChannel: boolean closeOrCancelImpl(java.lang.Throwable,boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler: int availableCpuPermits(long)
kotlin.TypeAliasesKt: void NoSuchElementException$annotations()
androidx.core.transition.TransitionKt$addListener$2: TransitionKt$addListener$2()
androidx.core.app.JobIntentService: JobIntentService()
androidx.core.view.WindowInsetsAnimationCompat: int getTypeMask()
androidx.core.widget.AutoScrollHelper: int constrain(int,int,int)
androidx.core.app.NotificationCompat$Builder: boolean useExistingRemoteView()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport getJob()
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,androidx.window.embedding.SplitAttributes,android.os.IBinder)
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(char[],int)
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1(kotlin.coroutines.CoroutineContext,kotlin.DeepRecursiveScopeImpl,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion()
androidx.window.embedding.SplitAttributes$Companion: SplitAttributes$Companion()
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void lambda$onStatusChanged$3(java.lang.String,int,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sum-rL5Bavg(short[])
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray(boolean[],int)
androidx.lifecycle.ProcessLifecycleOwner$Companion: void init$lifecycle_process_release(android.content.Context)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
kotlin.collections.ReversedList: int getSize()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void unregisterListeningView(android.view.View)
androidx.core.widget.CompoundButtonCompat: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getSTATE_COMPLETED$p()
kotlin.sequences.SequencesKt__SequenceBuilderKt: kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2)
androidx.activity.result.contract.ActivityResultContracts$PickContact: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,int,kotlin.coroutines.Continuation)
androidx.core.location.LocationManagerCompat$Api31Impl: void requestLocationUpdates(android.location.LocationManager,java.lang.String,android.location.LocationRequest,java.util.concurrent.Executor,android.location.LocationListener)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.ThreadSafeHeap: void setSize(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
kotlinx.coroutines.scheduling.TaskContextImpl: int getTaskMode()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle buildLegacyExtrasBundle()
kotlinx.coroutines.ThreadState: java.lang.Void invalidState(int)
androidx.core.view.ViewCompat$Api24Impl: void dispatchFinishTemporaryDetach(android.view.View)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void onMoveToForeground()
kotlin.collections.builders.ListBuilderKt: java.lang.String subarrayContentToString(java.lang.Object[],int,int)
androidx.viewpager.widget.ViewPager: void initViewPager()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterFragment: void onDetach()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException)
androidx.core.text.SpannableStringKt: void clearSpans(android.text.Spannable)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,char[])
androidx.window.embedding.SplitController: kotlinx.coroutines.flow.Flow splitInfoList(android.app.Activity)
kotlin.time.Duration: void getInMicroseconds$annotations()
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: java.lang.Short toShortExactOrNull(int)
kotlinx.coroutines.NodeList: java.lang.String toString()
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
androidx.lifecycle.PausingDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean)
kotlinx.coroutines.AbstractTimeSource: long currentTimeMillis()
androidx.core.os.TraceCompat: TraceCompat()
kotlin.text.StringsKt___StringsKt: java.util.Collection flatMapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.FloatIterator: java.lang.Object next()
androidx.fragment.app.Fragment: int getTargetRequestCode()
kotlinx.coroutines.internal.OpDescriptor: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
androidx.fragment.app.FragmentStatePagerAdapter: void finishUpdate(android.view.ViewGroup)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(int[],int)
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceRightIndexedOrNull(long[],kotlin.jvm.functions.Function3)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void setLifecycleObserver(androidx.lifecycle.LifecycleEventObserver)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] toULongArray(long[])
com.getkeepsafe.relinker.ReLinker$LibraryLoader: java.lang.String mapLibraryName(java.lang.String)
kotlin.UShort$Companion: UShort$Companion()
androidx.window.embedding.SplitController: SplitController(androidx.window.embedding.EmbeddingBackend)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: DefaultSpecialEffectsController$TransitionInfo(androidx.fragment.app.SpecialEffectsController$Operation,boolean,boolean)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveImpl(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3)
androidx.activity.ComponentDialog: ComponentDialog(android.content.Context,int)
kotlin.jvm.internal.ClassReference: void isData$annotations()
kotlin.ranges.CharProgression$Companion: kotlin.ranges.CharProgression fromClosedRange(char,char,int)
androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
kotlin.reflect.KMutableProperty: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: SequencesKt___SequencesKt$filterNotNull$1()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
kotlin.collections.builders.MapBuilderEntries: boolean add(java.util.Map$Entry)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: boolean isCallbackWaitingForData()
kotlin.sequences.IndexingSequence$iterator$1: int getIndex()
androidx.fragment.app.FragmentActivity$HostCallbacks: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
io.flutter.embedding.android.FlutterPlayStoreSplitApplication: FlutterPlayStoreSplitApplication()
androidx.window.core.ConsumerAdapter$createSubscription$1: void dispose()
kotlin.ranges.LongRange: void getEndExclusive$annotations()
androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder withCachedEngine(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(short)
androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean,boolean,boolean)
androidx.core.widget.TextViewKt$addTextChangedListener$1: TextViewKt$addTextChangedListener$1()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: java.lang.String getColumnTitle()
kotlin.UShortArray$Iterator: short next-Mh2AYeg()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4: java.lang.Object invoke()
androidx.versionedparcelable.VersionedParcelParcel: android.os.IBinder readStrongBinder()
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(double[],int)
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 access$getEmitFun$p()
androidx.window.area.EmptyWindowAreaControllerImpl: void transferActivityToWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback)
androidx.collection.CircularIntArray: boolean isEmpty()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: ChannelsKt__Channels_commonKt$consumeEach$1(kotlin.coroutines.Continuation)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-uWY9BYg(int[],int)
kotlin.text.Regex$Serialized: Regex$Serialized(java.lang.String,int)
androidx.fragment.app.FragmentTabHost$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel(kotlinx.coroutines.channels.BroadcastChannelImpl)
androidx.core.util.SparseIntArrayKt$keyIterator$1: int getIndex()
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceRightOrNull(long[],kotlin.jvm.functions.Function2)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] $values()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(long[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.activity.OnBackPressedCallback: void handleOnBackStarted(androidx.activity.BackEventCompat)
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.JobCancellationException createCopy()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
kotlin.collections.AbstractMap$values$1: int getSize()
androidx.core.content.LocusIdCompat: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: long reduceRight(long[],kotlin.jvm.functions.Function2)
androidx.core.content.res.TypedArrayKt: int getIntegerOrThrow(android.content.res.TypedArray,int)
io.flutter.plugin.editing.TextInputPlugin: boolean handleKeyEvent(android.view.KeyEvent)
androidx.core.provider.RequestExecutor: java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstNotNullOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.annotation.InspectableProperty$ValueType: InspectableProperty$ValueType(java.lang.String,int)
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
kotlin.time.DurationKt: long getDays(long)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void clear()
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(long[],kotlin.jvm.functions.Function1)
kotlin.collections.IndexedValue: java.lang.Object component2()
kotlinx.coroutines.EventLoopImplBase: boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(char[],int,int)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowPackage(androidx.core.util.Predicate)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: void detachAccessibilityBridge()
androidx.core.database.CursorWindowCompat$Api28Impl: CursorWindowCompat$Api28Impl()
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.UCollectionsKt: UCollectionsKt()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowSelector()
androidx.core.app.NotificationCompat$Api26Impl: NotificationCompat$Api26Impl()
kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)
kotlin.text.Regex: java.lang.Object writeReplace()
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)
androidx.profileinstaller.ProfileTranscoder: void writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[])
androidx.viewpager.widget.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWith-MShoTSo(long[],kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
kotlin.Triple: boolean equals(java.lang.Object)
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component3-GBYM_sE(byte[])
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler: java.util.Map queryTextActions()
androidx.annotation.Size: long value()
androidx.collection.SparseArrayCompat: void clear()
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(java.lang.Integer[])
androidx.core.text.util.FindAddress: java.util.regex.MatchResult matchState(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow zip(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.coroutines.jvm.internal.RunSuspend: kotlin.coroutines.CoroutineContext getContext()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMinDurationBetweenContentChangesMillis(long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void finishAutofillContext(boolean)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(long[])
kotlinx.coroutines.ExecutorCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: void resumeWith(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer randomOrNull(kotlin.ranges.IntRange,kotlin.random.Random)
kotlin.collections.CharIterator: void remove()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.LimitingDispatcher: void afterTask()
androidx.viewpager.widget.ViewPager$PagerObserver: void onInvalidated()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object getKey()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(java.lang.Object[])
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$1: FlowKt__ReduceKt$last$1(kotlin.coroutines.Continuation)
kotlin.collections.SetsKt___SetsKt: java.util.Set plus(java.util.Set,kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: double[] sortedArrayDescending(double[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: MutexImpl$onSelectCancellationUnlockConstructor$1$1(kotlinx.coroutines.sync.MutexImpl,java.lang.Object)
kotlin.UnsignedKt: java.lang.String ulongToString(long)
kotlin.ranges.RangesKt___RangesKt: java.lang.Character randomOrNull(kotlin.ranges.CharRange)
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(double[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Type: int statusBars()
androidx.core.view.ViewCompat: float getPivotY(android.view.View)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: NotificationCompat$BigPictureStyle$Api31Impl()
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
androidx.core.util.SizeFCompat: float getHeight()
kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.lang.String[])
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull()
androidx.profileinstaller.ProfileTranscoder: int getMethodBitmapStorageSize(int)
kotlin.UByteArray$Iterator: java.lang.Object next()
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String)
io.flutter.embedding.android.KeyEmbedderResponder: io.flutter.embedding.android.KeyData$Type getEventType(android.view.KeyEvent)
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short maxOf-VKSA0NQ(short,short,short)
androidx.viewpager.R$integer: R$integer()
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: ProcessTextChannel(io.flutter.embedding.engine.dart.DartExecutor,android.content.pm.PackageManager)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double randomOrNull(double[],kotlin.random.Random)
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64: java.lang.Appendable encodeToAppendable(byte[],java.lang.Appendable,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: long constructor-impl(long)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collectIndexed$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(java.lang.Object[],int)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOfRange(int[],int,int)
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int,int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()
androidx.core.util.SparseBooleanArrayKt: boolean isNotEmpty(android.util.SparseBooleanArray)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
androidx.lifecycle.SavedStateHandle: java.util.Map access$getRegular$p(androidx.lifecycle.SavedStateHandle)
androidx.core.view.ViewCompat: void setRotation(android.view.View,float)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void register(java.util.concurrent.Executor)
kotlin.coroutines.jvm.internal.CompletedContinuation: void resumeWith(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List map(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
androidx.window.embedding.SplitRule: int hashCode()
kotlin.jvm.internal.MagicApiIntrinsics: int intMagicApiCall(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: kotlin.Pair translateSplitAttributesCompatInternal(androidx.window.embedding.SplitAttributes)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Object)
kotlin.jvm.internal.Lambda: int getArity()
kotlin.TypeCastException: TypeCastException(java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,android.app.Person)
androidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)
androidx.core.content.res.TypedArrayUtils: android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.reflect.KFunction$DefaultImpls: void isInfix$annotations()
kotlin.collections.builders.SetBuilder: java.util.Set build()
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(float[],float,int,int,int,java.lang.Object)
kotlin.PreconditionsKt__PreconditionsKt: java.lang.Object requireNotNull(java.lang.Object)
kotlin.UIntArray: boolean removeAll(java.util.Collection)
androidx.core.app.PendingIntentCompat$GatedCallback: PendingIntentCompat$GatedCallback(android.app.PendingIntent$OnFinished)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
androidx.lifecycle.ViewModelProvider$Factory$-CC: androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],short)
kotlin.collections.ArraysKt___ArraysKt: double averageOfByte(java.lang.Byte[])
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(short,long)
kotlin.collections.MapsKt__MapsKt: java.util.Map minus(java.util.Map,java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo(kotlin.time.ComparableTimeMark)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(byte[],kotlin.jvm.functions.Function2)
androidx.window.core.ConsumerAdapter$ConsumerHandler: void invokeAccept(java.lang.Object)
androidx.window.core.ConsumerAdapter: ConsumerAdapter(java.lang.ClassLoader)
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannel$onReceive$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.location.LocationManagerCompat$GpsStatusTransport: void lambda$onGpsStatusChanged$1(java.util.concurrent.Executor)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnEnd(android.view.View,androidx.core.view.WindowInsetsAnimationCompat)
androidx.activity.result.PickVisualMediaRequest: void setMediaType$activity_release(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)
kotlin.UByte: short mod-xj2QHRw(byte,short)
kotlin.jvm.internal.ClassReference: boolean isSealed()
androidx.core.text.util.LinkifyCompat: int lambda$static$0(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)
com.getkeepsafe.relinker.elf.Elf32Header: Elf32Header(boolean,com.getkeepsafe.relinker.elf.ElfParser)
androidx.fragment.app.DialogFragment: void onStart()
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(float[],float)
androidx.startup.InitializationProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void createMergedTransition$lambda$14(java.util.ArrayList)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: java.lang.Object findSegmentInternal(kotlinx.coroutines.internal.Segment,long,kotlin.jvm.functions.Function2)
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element)
kotlin.io.LinesSequence: java.io.BufferedReader access$getReader$p(kotlin.io.LinesSequence)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
kotlin.ULongArray: boolean equals-impl0(long[],long[])
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: StringsKt__StringsKt$rangesDelimitedBy$2(java.util.List,boolean)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
kotlin.io.FilesKt__UtilsKt: java.io.File copyTo$default(java.io.File,java.io.File,boolean,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager$7: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.window.layout.util.ContextCompatHelper: android.content.Context unwrapUiContext$window_release(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: void forEach(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filter-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(int[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],boolean)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
androidx.lifecycle.ViewModel: void onCleared()
kotlinx.coroutines.channels.ChannelSegment: void setState$kotlinx_coroutines_core(int,java.lang.Object)
androidx.fragment.app.strictmode.TargetFragmentUsageViolation: TargetFragmentUsageViolation(androidx.fragment.app.Fragment,java.lang.String)
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: FlowLiveDataConversions$asLiveData$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback getImeSyncCallback()
androidx.core.app.NotificationCompatBuilder: android.content.Context getContext()
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence getDeltaText()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
androidx.core.util.SparseLongArrayKt: long getOrDefault(android.util.SparseLongArray,int,long)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filter(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.coroutines.jvm.internal.Boxing: java.lang.Double boxDouble(double)
kotlin.collections.ArraysKt___ArraysKt: boolean elementAtOrElse(boolean[],int,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)
androidx.versionedparcelable.VersionedParcelParcel: void writeStrongBinder(android.os.IBinder)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceIndexed(java.lang.Iterable,kotlin.jvm.functions.Function3)
io.flutter.plugin.platform.SingleViewWindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.lifecycle.SavedStateHandlesProvider: android.os.Bundle saveState()
androidx.core.app.NotificationChannelCompat$Api26Impl: android.media.AudioAttributes getAudioAttributes(android.app.NotificationChannel)
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow onSubscription(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(int[],int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String[] getExistingTimestamps(java.io.File)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
androidx.window.embedding.EmbeddingBackend$Companion$reset$1: androidx.window.embedding.EmbeddingBackend invoke(androidx.window.embedding.EmbeddingBackend)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
kotlin.math.MathKt__MathJVMKt: float truncate(float)
androidx.activity.OnBackPressedDispatcher: void dispatchOnBackProgressed(androidx.activity.BackEventCompat)
androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1: FlowKt__LimitKt$takeWhile$lambda$6$$inlined$collectWhile$1(kotlin.jvm.functions.Function2,kotlinx.coroutines.flow.FlowCollector)
kotlin.time.AbstractDoubleTimeSource: kotlin.time.TimeMark markNow()
androidx.core.os.LocaleListCompatWrapper: int indexOf(java.util.Locale)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
kotlin.io.path.PathsKt__PathUtilsKt: java.util.List listDirectoryEntries(java.nio.file.Path,java.lang.String)
kotlin.collections.builders.MapBuilder: java.lang.Object[] access$getValuesArray$p(kotlin.collections.builders.MapBuilder)
androidx.core.graphics.ColorUtils$Api26Impl: ColorUtils$Api26Impl()
androidx.core.location.GnssStatusWrapper$Api26Impl: GnssStatusWrapper$Api26Impl()
kotlin.ranges.ClosedDoubleRange: boolean isEmpty()
kotlin.collections.EmptyIterator: EmptyIterator()
androidx.core.content.ContextCompat: android.content.Context getContextForLanguage(android.content.Context)
kotlin.UShortArray: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl: android.view.ViewPropertyAnimator zBy(android.view.ViewPropertyAnimator,float)
androidx.activity.contextaware.ContextAwareHelper: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$10: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] toULongArray(kotlin.ULong[])
androidx.lifecycle.ReportFragment$ActivityInitializationListener: void onResume()
kotlin.ranges.CharProgression: java.util.Iterator iterator()
androidx.core.view.NestedScrollingChild: void setNestedScrollingEnabled(boolean)
androidx.fragment.app.BackStackRecordState: void fillInBackStackRecord(androidx.fragment.app.BackStackRecord)
androidx.core.content.LocusIdCompat: java.lang.String getSanitizedId()
kotlin.collections.ByteIterator: ByteIterator()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: void connectAndFetchResult(androidx.concurrent.futures.ResolvableFuture)
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()
com.getkeepsafe.relinker.elf.ElfParser: java.lang.String readString(java.nio.ByteBuffer,long)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
kotlin.time.DurationUnitKt__DurationUnitKt: java.lang.String shortName(kotlin.time.DurationUnit)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
androidx.core.view.DisplayCompat: boolean isCurrentModeTheLargestMode(android.view.Display)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1)
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Void)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection,kotlin.reflect.KTypeProjection)
kotlin.jvm.internal.FloatCompanionObject: void getSIZE_BITS$annotations()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinct$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.IntSpreadBuilder: int getSize(java.lang.Object)
androidx.lifecycle.SavedStateHandle: java.util.Set keys()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxWithOrThrow(java.lang.Iterable,java.util.Comparator)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContentInvalid()
androidx.window.embedding.ActivityEmbeddingController$Companion: ActivityEmbeddingController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(double[])
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long minWithOrThrow-U(long[],java.util.Comparator)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: AbstractResolvableFuture$SafeAtomicHelper(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater)
androidx.viewpager.widget.ViewPager: void onMeasure(int,int)
androidx.startup.AppInitializer: boolean isEagerlyInitialized(java.lang.Class)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void onTap(int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(byte[],kotlin.jvm.functions.Function1)
androidx.window.core.Version: int getPatch()
io.flutter.embedding.engine.loader.ResourceExtractor: java.lang.String access$000(java.io.File,android.content.pm.PackageManager,java.lang.String)
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: void run()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiDisplayed()
kotlin.text.StringsKt___StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(boolean[],int)
com.getkeepsafe.relinker.ReLinkerInstance: void access$000(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String)
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object ensurePresent$$forInline(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.util.Map associateBy(java.lang.CharSequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback$activity_release(androidx.activity.OnBackPressedCallback)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object)
kotlin.coroutines.SafeContinuation: java.lang.Object getOrThrow()
androidx.lifecycle.CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0: CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0(kotlin.jvm.functions.Function1)
kotlin.NumbersKt__NumbersKt: int countOneBits(byte)
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[],int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalBlockingWork(long,boolean)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(double[])
kotlin.ranges.ClosedDoubleRange: int hashCode()
com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String)
androidx.core.app.NotificationCompat$Builder$Api23Impl: android.graphics.drawable.Icon getSmallIcon(android.app.Notification)
androidx.window.extensions.core.R: R()
android.support.v4.os.ResultReceiver$1: java.lang.Object[] newArray(int)
androidx.core.content.res.CamColor: float getQ()
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(double[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minWithOrNull-YmdZ_VM(int[],java.util.Comparator)
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String)
kotlin.collections.RingBuffer: int forward(int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(char[],char[])
androidx.collection.ArraySet$1: void colRemoveAt(int)
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: ActivityResultContracts$PickMultipleVisualMedia(int)
kotlin.KotlinVersion: boolean equals(java.lang.Object)
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.widget.TintableImageSourceView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$802(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
io.flutter.embedding.android.FlutterFragment: boolean shouldDispatchAppLifecycleState()
kotlin.collections.MapsKt___MapsKt: double minOf(java.util.Map,kotlin.jvm.functions.Function1)
io.flutter.plugin.common.BinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
kotlin.jvm.internal.Intrinsics: void throwUndefinedForReified(java.lang.String)
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTracker$Companion: void getExtensionBackend$window_release$annotations()
kotlin.ranges.IntRange: java.lang.Integer getStart()
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
kotlin.io.TextStreamsKt: java.io.BufferedWriter buffered$default(java.io.Writer,int,int,java.lang.Object)
androidx.core.view.SoftwareKeyboardControllerCompat$Impl: void hide()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: android.net.Uri getLinkUri()
androidx.window.embedding.ExtensionEmbeddingBackend: void updateSplitAttributes(androidx.window.embedding.SplitInfo,androidx.window.embedding.SplitAttributes)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_SEND$p()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
kotlin.text.DelimitedRangesSequence$iterator$1: DelimitedRangesSequence$iterator$1(kotlin.text.DelimitedRangesSequence)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation: int getContainerId()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: FlutterActivityLaunchConfigs()
kotlin.collections.builders.MapBuilderEntries: java.util.Iterator iterator()
androidx.customview.widget.ViewDragHelper: int getActivePointerId()
androidx.window.area.WindowAreaCapability$Status$Companion: WindowAreaCapability$Status$Companion()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.DispatchedCoroutine: DispatchedCoroutine(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
androidx.core.app.AppOpsManagerCompat$Api29Impl: AppOpsManagerCompat$Api29Impl()
kotlin.jvm.internal.PrimitiveSpreadBuilder: int getPosition()
androidx.core.app.NotificationCompat$MessagingStyle: void addCompatExtras(android.os.Bundle)
kotlin.properties.Delegates: Delegates()
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: ProfileInstallerInitializer$Choreographer16Impl()
kotlin.jvm.internal.TypeParameterReference: void getUpperBounds$annotations()
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],char[],kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: double atanh(double)
kotlin.collections.CollectionsKt__ReversedViewsKt: int reversePositionIndex$CollectionsKt__ReversedViewsKt(java.util.List,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int,int)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object readResolve()
androidx.core.app.MultiWindowModeChangedInfo: boolean isInMultiWindowMode()
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$402(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: boolean contains(double)
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1: AnimatorKt$doOnEnd$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(boolean[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
kotlin.text.StringsKt___StringsKt$withIndex$1: java.lang.Object invoke()
androidx.profileinstaller.ProfileTranscoder: int readFlagsFromBitmap(java.util.BitSet,int,int)
androidx.core.util.LongSparseArrayKt$keyIterator$1: int getIndex()
kotlinx.coroutines.sync.SemaphoreImpl: SemaphoreImpl(int,int)
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext$Key)
androidx.collection.LruCache: void evictAll()
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: DefaultSpecialEffectsController$AnimatorEffect(androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo(java.lang.Object)
kotlin.ULong$Companion: ULong$Companion()
kotlin.UNumbersKt: int countTrailingZeroBits-xj2QHRw(short)
kotlin.UShort: int times-xj2QHRw(short,short)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.android.FlutterEngineConfigurator: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class)
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20: SoftwareKeyboardControllerCompat$Impl20(android.view.View)
androidx.core.app.ActivityOptionsCompat$Api23Impl: ActivityOptionsCompat$Api23Impl()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.viewpager.widget.ViewPager: void computeScroll()
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.app.RemoteInput$Builder addExtras(android.app.RemoteInput$Builder,android.os.Bundle)
androidx.core.app.NotificationManagerCompat$Task: void send(android.support.v4.app.INotificationSideChannel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxOrNull--ajY-9A(int[])
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode[] values()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte max(byte[])
kotlinx.coroutines.Job: boolean isActive()
androidx.core.content.LocusIdCompat: android.content.LocusId toLocusId()
androidx.core.view.DragStartHelper: DragStartHelper(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
androidx.core.content.ContextCompat: java.io.File getCodeCacheDir(android.content.Context)
androidx.lifecycle.ViewModel: java.lang.Object getTag(java.lang.String)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: BufferedChannel$onReceiveCatching$2()
androidx.core.app.NotificationChannelCompat: java.lang.String getParentChannelId()
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedReader bufferedReader$default(java.io.File,java.nio.charset.Charset,int,int,java.lang.Object)
androidx.core.util.Pools$SimplePool: Pools$SimplePool(int)
androidx.profileinstaller.ProfileTranscoder: void writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[])
androidx.core.location.GnssStatusCompat: GnssStatusCompat()
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] $values()
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object singleOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(long[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
kotlin.jvm.internal.AdaptedFunctionReference: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: float minOf(boolean[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView access$500(io.flutter.plugin.platform.PlatformViewsController)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNot(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.loader.content.CursorLoader: void onCanceled(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$1: java.lang.Object invoke()
kotlin.text.StringsKt___StringsKt: java.lang.Object foldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.channels.BufferedChannel: void onClosedSendOnNoWaiterSuspend(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
androidx.annotation.FloatRange: double from()
androidx.core.app.NotificationChannelCompat$Api30Impl: boolean isImportantConversation(android.app.NotificationChannel)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.plugin.platform.PlatformOverlayView)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetrics translateWindowMetrics$window_release(android.view.WindowMetrics)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scanIndexed-mwnnOCs(long[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowDataWithAuthority$8(java.lang.String,android.net.Uri)
kotlin.io.path.PathNode: kotlin.io.path.PathNode getParent()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: AbstractDoubleTimeSource$DoubleTimeMark(double,kotlin.time.AbstractDoubleTimeSource,long)
kotlin.time.Duration: int hashCode-impl(long)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.lang.Object putImpl$default(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core,java.lang.Object,java.lang.Object,kotlinx.coroutines.debug.internal.HashedWeakRef,int,java.lang.Object)
androidx.core.view.ViewCompat: float getPivotX(android.view.View)
androidx.fragment.app.FragmentManager: boolean dispatchContextItemSelected(android.view.MenuItem)
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken: DartMessenger$TaskQueueToken(io.flutter.embedding.engine.dart.DartMessenger$1)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: void viewCreated(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMaxTextLength()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-UwyO8pc(long,kotlin.time.ComparableTimeMark)
kotlin.collections.MapsKt___MapsKt: java.util.List flatMap(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
kotlin.sequences.SequencesKt___SequencesKt$zip$1: kotlin.Pair invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowKt: java.lang.Object withContextUndispatched$default(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: kotlin.Pair toPair(java.util.Map$Entry)
androidx.core.app.NotificationCompatJellybean: boolean ensureActionReflectionReadyLocked()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short maxByOrThrow-U(short[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator asMutableListIterator(java.lang.Object,java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: boolean isPhotoPickerAvailable()
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(boolean[],kotlin.jvm.functions.Function1)
kotlin.coroutines.SafeContinuation$Companion: SafeContinuation$Companion()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setContextual(boolean)
androidx.window.area.WindowAreaControllerImpl: void access$startRearDisplayPresentationMode(androidx.window.area.WindowAreaControllerImpl,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionEnd(android.transition.Transition)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort--nroSd4$default(long[],int,int,int,java.lang.Object)
kotlin.sequences.SubSequence: kotlin.sequences.Sequence take(int)
io.flutter.Log: void wtf(java.lang.String,java.lang.String)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.collections.ArraysKt___ArraysKt: byte last(byte[],kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.extensions.MulticastConsumer: MulticastConsumer(android.content.Context)
kotlinx.coroutines.debug.AgentPremain: void installSignalHandler$lambda$1(sun.misc.Signal)
androidx.loader.R$styleable: R$styleable()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduceIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int thenDescending$lambda$2$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.util.Comparator,java.lang.Object,java.lang.Object)
kotlin.io.FileTreeWalk: int access$getMaxDepth$p(kotlin.io.FileTreeWalk)
androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,long,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(float[],kotlin.jvm.functions.Function2)
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: java.lang.Object invoke(java.lang.Object)
androidx.window.core.WindowStrictModeException: WindowStrictModeException(java.lang.String)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
io.flutter.plugin.platform.SingleViewWindowManager: void addCrossWindowBlurEnabledListener(java.util.function.Consumer)
androidx.fragment.app.BackStackState: void writeToParcel(android.os.Parcel,int)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
androidx.core.math.MathUtils: int decrementExact(int)
androidx.window.embedding.EmbeddingInterfaceCompat: void setRules(java.util.Set)
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.graphics.RectKt: int component2(android.graphics.Rect)
kotlin.Deprecated: java.lang.String message()
kotlinx.coroutines.channels.SendChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.graphics.RectKt: android.graphics.Region toRegion(android.graphics.RectF)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,boolean)
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)
androidx.core.location.LocationManagerCompat$Api30Impl: LocationManagerCompat$Api30Impl()
androidx.fragment.app.Fragment$2: void onPreAttached()
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: WindowInfoTrackerImpl$windowLayoutInfo$2(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
androidx.fragment.app.ListFragment$2: ListFragment$2(androidx.fragment.app.ListFragment)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] getOrCreateKotlinClasses(java.lang.Class[])
kotlin.jvm.internal.TypeParameterReference: java.lang.String toString()
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
kotlin.text.StringsKt___StringsKt: char reduce(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.window.layout.WindowInfoTracker$-CC: kotlinx.coroutines.flow.Flow $default$windowLayoutInfo(androidx.window.layout.WindowInfoTracker,android.content.Context)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1: FlowKt__LimitKt$drop$2$1(kotlin.jvm.internal.Ref$IntRef,int,kotlinx.coroutines.flow.FlowCollector)
kotlin.io.LinesSequence$iterator$1: java.lang.Object next()
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toCollection$1: ChannelsKt__DeprecatedKt$toCollection$1(kotlin.coroutines.Continuation)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
androidx.core.os.BundleCompat: android.util.SparseArray getSparseParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.core.app.NotificationCompat$WearableExtender$Api23Impl: NotificationCompat$WearableExtender$Api23Impl()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.plugins.service.ServiceAware: void onAttachedToService(io.flutter.embedding.engine.plugins.service.ServicePluginBinding)
androidx.window.reflection.WindowExtensionsConstants: WindowExtensionsConstants()
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
androidx.window.embedding.ActivityEmbeddingController: boolean isActivityEmbedded(android.app.Activity)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
kotlin.text.StringsKt___StringsKt: boolean any(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.path.FileVisitorBuilder: void onVisitFile(kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelResult$Closed: int hashCode()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
androidx.core.widget.TextViewCompat$Api26Impl: TextViewCompat$Api26Impl()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void shutdown$kotlinx_coroutines_core(long)
kotlin.ranges.LongRange: java.lang.Comparable getStart()
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(boolean[],kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: int count(kotlin.sequences.Sequence)
androidx.core.util.Pair: Pair(java.lang.Object,java.lang.Object)
kotlin.Metadata$DefaultImpls: void bv$annotations()
androidx.viewpager.widget.ViewPager: int getClientWidth()
androidx.activity.result.contract.ActivityResultContract: android.content.Intent createIntent(android.content.Context,java.lang.Object)
io.flutter.plugin.text.ProcessTextPlugin: boolean onActivityResult(int,int,android.content.Intent)
kotlin.jvm.internal.ClassReference: java.lang.Class getJClass()
kotlin.time.TimeMark: boolean hasNotPassedNow()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
kotlinx.coroutines.selects.OnTimeoutKt: void onTimeout-8Mi8wO0(kotlinx.coroutines.selects.SelectBuilder,long,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$6(float[])
androidx.profileinstaller.ProfileInstaller: boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.embedding.android.FlutterViewDelegate: java.util.List getCaptionBarInsets(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: float[] sliceArray(float[],kotlin.ranges.IntRange)
androidx.viewpager.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,int)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void uninstall()
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: FragmentStrictMode$Policy(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map)
kotlinx.coroutines.selects.SelectBuilderImpl$getResult$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.SegmentOrClosed: SegmentOrClosed(java.lang.Object)
kotlinx.coroutines.channels.ChannelCoroutine: boolean cancel(java.lang.Throwable)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean)
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl: java.lang.CharSequence getInitialTextBeforeCursor(android.view.inputmethod.EditorInfo,int,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow[])
androidx.activity.ComponentDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
kotlin.jvm.internal.TypeParameterReference: kotlin.reflect.KVariance getVariance()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float singleOrNull(float[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()
kotlin.reflect.KTypeParameter: boolean isReified()
androidx.loader.content.Loader: void onAbandon()
androidx.fragment.app.Fragment$4: Fragment$4(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: int hashCode()
androidx.fragment.app.FragmentManager: boolean isParentHidden(androidx.fragment.app.Fragment)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void unsetSystemUiFlag(int)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUInt(kotlin.sequences.Sequence)
kotlinx.coroutines.internal.ConcurrentKt: java.lang.Object withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel2Impl: EmbeddingAdapter$VendorApiLevel2Impl(androidx.window.embedding.EmbeddingAdapter)
androidx.core.graphics.ColorUtils: int HSLToColor(float[])
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set buildSetInternal(int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long[] onEach(long[],kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,long)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.core.view.ViewKt$doOnDetach$1: ViewKt$doOnDetach$1(android.view.View,kotlin.jvm.functions.Function1)
androidx.core.view.inputmethod.InputConnectionCompat: boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
kotlin.jvm.internal.Ref$CharRef: Ref$CharRef()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)
androidx.annotation.RequiresExtension$Container: androidx.annotation.RequiresExtension[] value()
androidx.core.util.TypedValueCompat: int getUnitFromComplexDimension(int)
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
kotlin.collections.ByteIterator: byte nextByte()
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint getPaint()
androidx.collection.ArraySet: java.lang.Object[] toArray()
androidx.core.location.GnssStatusWrapper: boolean hasEphemerisData(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(java.lang.Object[])
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
com.getkeepsafe.relinker.MissingLibraryException: MissingLibraryException(java.lang.String,java.lang.String[],java.lang.String[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean randomOrNull(boolean[])
kotlinx.coroutines.JobSupport$children$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
kotlin.collections.ArraysKt___ArraysKt: char reduceRightIndexed(char[],kotlin.jvm.functions.Function3)
kotlin.sequences.IndexingSequence$iterator$1: boolean hasNext()
androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)
androidx.core.content.res.ConfigurationHelper: int getDensityDpi(android.content.res.Resources)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowReceiverFlags()
androidx.lifecycle.Api26Impl: Api26Impl()
kotlin.time.Duration$Companion: void getMicroseconds-UwyO8pc$annotations(int)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$CallStyle: NotificationCompat$CallStyle()
kotlin.io.path.PathRelativizer: java.nio.file.Path tryRelativeTo(java.nio.file.Path,java.nio.file.Path)
androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
kotlin.collections.ArraysKt___ArraysKt: boolean first(boolean[])
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean hasValidVendorApiLevel1$window_release()
kotlin.text.Regex$findAll$2: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: ProcessLifecycleOwner$initializationListener$1(androidx.lifecycle.ProcessLifecycleOwner)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(int[],int)
androidx.core.util.Preconditions: double checkArgumentInRange(double,double,double,java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $values()
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowExtra$12(java.lang.Object)
androidx.startup.AppInitializer: androidx.startup.AppInitializer getInstance(android.content.Context)
kotlin.coroutines.ContinuationInterceptor$Key: ContinuationInterceptor$Key()
kotlinx.coroutines.Job: boolean isCancelled()
kotlin.ranges.OpenEndDoubleRange: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.activity.OnBackPressedDispatcher: boolean hasEnabledCallbacks()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong getOrNull-r7IrZao(long[],int)
androidx.activity.ComponentActivity$1$2: void run()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: FlutterFragment$NewEngineInGroupFragmentBuilder(java.lang.Class,java.lang.String)
io.flutter.embedding.android.FlutterView: void onDetachedFromWindow()
kotlinx.coroutines.flow.SharedFlowKt: void setBufferAt(java.lang.Object[],long,java.lang.Object)
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KProperty2$Getter getGetter()
kotlin.io.LineReader: int decodeEndOfInput(int,int)
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
kotlin.collections.builders.MapBuilder$EntriesItr: kotlin.collections.builders.MapBuilder$EntryRef next()
androidx.core.content.res.TypedArrayUtils: int getInt(android.content.res.TypedArray,int,int,int)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void access$300(io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.annotation.StringDef: boolean open()
io.flutter.embedding.android.KeyboardMap$2: KeyboardMap$2()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: long getMinDurationBetweenContentChangesMillis()
androidx.core.util.LongSparseArrayKt: void set(android.util.LongSparseArray,long,java.lang.Object)
androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])
androidx.fragment.app.strictmode.FragmentStrictMode: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getDefaultPolicy()
androidx.core.graphics.WeightTypefaceApi21: boolean isPrivateApiAvailable()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.sequences.Sequence)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.core.app.NotificationCompat$Style: int calculateTopPadding()
kotlin.jvm.internal.MutablePropertyReference2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getLayoutDirection()
androidx.core.view.WindowInsetsControllerCompat$Impl30$1: void onReady(android.view.WindowInsetsAnimationController,int)
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String toString()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2: FlowKt__MergeKt$flatMapMerge$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
androidx.fragment.app.SpecialEffectsController$Operation: void addEffect(androidx.fragment.app.SpecialEffectsController$Effect)
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setMaxAspectRatioInLandscape(androidx.window.embedding.EmbeddingAspectRatio)
kotlin.time.Duration$Companion: long getMinutes-UwyO8pc(double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] plus-ctEhBpI(int[],int[])
kotlin.collections.ArraysKt___ArraysKt: long reduce(long[],kotlin.jvm.functions.Function2)
androidx.fragment.app.strictmode.FragmentStrictMode: void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)
androidx.fragment.app.FragmentManager: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] reversedArray-GBYM_sE(byte[])
kotlin.collections.builders.MapBuilderEntries: boolean addAll(java.util.Collection)
androidx.core.util.LongSparseArrayKt: int getSize(android.util.LongSparseArray)
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
kotlin.collections.ArraysKt___ArraysKt: double maxByOrThrow(double[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: void release()
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,float)
androidx.fragment.app.FragmentManager: void hideFragment(androidx.fragment.app.Fragment)
kotlin.ranges.UIntRange: void getEndExclusive-pVg5ArA$annotations()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: MutexImpl$CancellableContinuationWithOwner$tryResume$token$1(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionResume(android.transition.Transition)
kotlinx.coroutines.flow.ReadonlyStateFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.graphics.TypefaceCompatUtil: java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: java.util.concurrent.TimeUnit toTimeUnit(kotlin.time.DurationUnit)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)
androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.app.JobIntentService: void ensureProcessorRunningLocked(boolean)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object getValue()
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)
androidx.fragment.app.FragmentManager: void access$000(androidx.fragment.app.FragmentManager)
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasAntiAlias()
kotlinx.coroutines.JobSupport: void cancel(java.util.concurrent.CancellationException)
kotlin.collections.SetsKt__SetsKt: java.util.HashSet hashSetOf(java.lang.Object[])
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object poll()
kotlin.ranges.ULongRange: java.lang.Comparable getEndInclusive()
androidx.core.os.LocaleListPlatformWrapper: boolean isEmpty()
androidx.core.view.MenuKt$iterator$1: android.view.MenuItem next()
androidx.lifecycle.ProcessLifecycleInitializer: java.util.List dependencies()
androidx.core.graphics.TypefaceCompatBaseImpl$2: TypefaceCompatBaseImpl$2(androidx.core.graphics.TypefaceCompatBaseImpl)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(double[],kotlin.jvm.functions.Function1)
androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setMinWidthDp(int)
com.getkeepsafe.relinker.elf.ElfParser: short readByte(java.nio.ByteBuffer,long)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)
kotlin.time.Duration$Companion: long minutes-UwyO8pc(int)
kotlin.ULongKt: long toULong(short)
kotlinx.coroutines.debug.internal.StackTraceFrame: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlin.UShortArray: java.lang.Object[] toArray(java.lang.Object[])
androidx.viewpager.widget.ViewPager: void onDraw(android.graphics.Canvas)
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte single-GBYM_sE(byte[])
kotlinx.coroutines.selects.SelectKt: void RegistrationFunction$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ThreadLocalEventLoop: ThreadLocalEventLoop()
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double lastOrNull(double[],kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRequestFailed(int)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4: SidecarAdapter$translate$checkedFeature$4()
kotlin.time.Duration: void getInDays$annotations()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(long,long)
kotlinx.coroutines.AwaitAll: java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$getNotCompletedCount$FU$p()
kotlin.text.MatchResult$Destructured: java.lang.String component1()
androidx.core.view.DifferentialMotionFlingController: DifferentialMotionFlingController(android.content.Context,androidx.core.view.DifferentialMotionFlingTarget)
androidx.collection.SparseArrayCompat: int indexOfValue(java.lang.Object)
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
androidx.core.view.MenuKt$children$1: MenuKt$children$1(android.view.Menu)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.os.LocaleListCompatWrapper: int size()
kotlin.reflect.KClass: java.util.List getSupertypes()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object getLastReplayedLocked()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.view.ViewConfigurationCompat: boolean isInputDeviceInfoValid(int,int,int)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String)
androidx.core.view.MenuKt: boolean isEmpty(android.view.Menu)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
kotlinx.coroutines.ThreadPoolDispatcherKt: java.lang.Thread newFixedThreadPoolContext$lambda$1(int,java.lang.String,java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable)
kotlin.reflect.KClass$DefaultImpls: void isAbstract$annotations()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] getMetrics()
androidx.core.widget.NestedScrollView: void abortAnimatedScroll()
kotlin.jvm.internal.LocalVariableReference: java.lang.Object get()
kotlin.jvm.internal.ClassReference: java.util.Map access$getSimpleNames$cp()
androidx.activity.result.ActivityResultRegistry$3: void unregister()
kotlinx.coroutines.sync.MutexImpl$onLock$1: MutexImpl$onLock$1()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow)
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
kotlinx.coroutines.flow.StateFlowSlot: boolean allocateLocked(kotlinx.coroutines.flow.StateFlowImpl)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person)
androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(char[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOrNull(java.lang.Comparable[])
androidx.core.content.ContextCompat$Api30Impl: android.view.Display getDisplayOrDefault(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object component1()
androidx.core.os.TraceCompat: void endAsyncSection(java.lang.String,int)
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.IntStream)
androidx.lifecycle.CoroutineLiveData: CoroutineLiveData(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.startup.AppInitializer: void discoverAndInitialize(android.os.Bundle)
kotlin.time.Duration$Companion: void getNanoseconds-UwyO8pc$annotations(int)
kotlin.collections.ArraysKt___ArraysKt: short random(short[],kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(byte[],kotlin.jvm.functions.Function1)
androidx.customview.widget.FocusStrategy: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
androidx.core.location.GnssStatusCompat$Callback: void onSatelliteStatusChanged(androidx.core.location.GnssStatusCompat)
kotlinx.coroutines.channels.BufferedChannel: long getSendersCounter$kotlinx_coroutines_core()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getAnnotationClass(java.lang.annotation.Annotation)
androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.embedding.engine.systemchannels.BackGestureChannel: void updateBackGestureProgress(android.window.BackEvent)
kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper: DebugProbesImpl$SequenceNumber$kotlinx$VolatileWrapper()
androidx.core.graphics.PointKt: float component2(android.graphics.PointF)
kotlin.text.StringsKt___StringsKt: java.lang.Object minOfWithOrNull(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: android.view.View getView()
androidx.core.graphics.PathKt: android.graphics.Path minus(android.graphics.Path,android.graphics.Path)
androidx.lifecycle.Transformations$map$2: Transformations$map$2(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function)
kotlinx.coroutines.NonDisposableHandle: boolean childCancelled(java.lang.Throwable)
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence)
kotlin.reflect.ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long minByOrThrow-U(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatcherExecutor: java.lang.String toString()
kotlin.collections.AbstractMap: java.util.Collection getValues()
kotlin.collections.ArraysKt___ArraysKt: int sum(int[])
androidx.activity.FullyDrawnReporter: void addReporter()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceIndexedOrNull(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException(java.lang.Throwable)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo()
kotlinx.coroutines.CoroutineScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
kotlin.time.Duration: long times-UwyO8pc(long,double)
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$1: FlowKt__ReduceKt$single$1(kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: UArraysKt___UArraysJvmKt$asList$1(int[])
androidx.fragment.app.FragmentManager$5: void run()
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(androidx.core.app.NotificationChannelGroupCompat)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $values()
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 getProcessResFunc()
kotlin.UIntArray: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(char[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstNotNullOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,kotlin.sequences.Sequence)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Float min(java.lang.Iterable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void sendUrgentData(int)
kotlin.sequences.MergingSequence: kotlin.sequences.Sequence access$getSequence1$p(kotlin.sequences.MergingSequence)
androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.activity.result.IntentSenderRequest: IntentSenderRequest(android.os.Parcel)
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable: void run()
kotlin.collections.GroupingKt__GroupingKt: java.util.Map eachCountTo(kotlin.collections.Grouping,java.util.Map)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.Object parseResult(int,android.content.Intent)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)
kotlin.ranges.RangesKt___RangesKt: java.lang.Integer toIntExactOrNull(double)
kotlin.ranges.ULongRange$Companion: ULongRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.Intrinsics: void needClassReification(java.lang.String)
androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Object[])
androidx.fragment.app.BackStackState: BackStackState(android.os.Parcel)
kotlin.DeepRecursiveScope: DeepRecursiveScope(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.platform.PlatformViewsController: int access$1100(io.flutter.plugin.platform.PlatformViewsController,double)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.future.ContinuationHandler: void apply(java.lang.Object,java.lang.Throwable)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenBy(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.MutableStateFlow: void setValue(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.graphics.RegionKt$iterator$1: RegionKt$iterator$1(android.graphics.Region)
kotlin.ranges.OpenEndFloatRange: java.lang.Comparable getStart()
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry maxWith(java.util.Map,java.util.Comparator)
kotlin.text.MatcherMatchResult: java.util.regex.MatchResult getMatchResult()
kotlin.collections.ArraysKt___ArraysKt: byte reduceRight(byte[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(float[])
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancel(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
kotlin.collections.ArraysKt___ArraysKt: void shuffle(double[],kotlin.random.Random)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater getWorkerCtl$FU()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: PendingIntentActivityWrapper(android.content.Context,int,android.content.Intent,int,boolean)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean elementWiseEquals(java.lang.StackTraceElement,java.lang.StackTraceElement)
kotlin.collections.ArraysKt___ArraysKt: short[] sortedArray(short[])
org.intellij.lang.annotations.Flow: boolean targetIsContainer()
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause1,kotlin.jvm.functions.Function2)
kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
kotlin.UIntArray: int get-pVg5ArA(int[],int)
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowSlot: kotlin.coroutines.Continuation[] freeLocked(java.lang.Object)
androidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)
androidx.core.app.NotificationCompat$Api23Impl: NotificationCompat$Api23Impl()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$5(long[])
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: int getId(android.view.accessibility.AccessibilityWindowInfo)
androidx.loader.content.ModernAsyncTask$InternalHandler: ModernAsyncTask$InternalHandler()
com.getkeepsafe.relinker.ReLinkerInstance: java.io.File getWorkaroundLibDir(android.content.Context)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationCompleteAsync(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.fragment.app.FragmentContainerView: void removeViews(int,int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minWithOrNull(int[],java.util.Comparator)
kotlin.io.encoding.Base64: java.lang.String bytesToStringImpl$kotlin_stdlib(byte[])
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object withContext(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2: void invoke$lambda$1(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: java.lang.Object translateIntentPredicates(java.util.Set)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flattenSequenceOfIterable(kotlin.sequences.Sequence)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface getBroadcastReceiverControlSurface()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $values()
androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(long[])
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short firstOrNull(short[])
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.String toString()
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[])
kotlinx.coroutines.flow.StateFlowImpl: StateFlowImpl(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: long id()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(short[],int)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBlocking()
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String toString()
kotlin.Result$Failure: Result$Failure(java.lang.Throwable)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
androidx.fragment.app.FragmentPagerAdapter: android.os.Parcelable saveState()
kotlin.text.StringsKt__IndentKt$prependIndent$1: java.lang.String invoke(java.lang.String)
androidx.core.view.VelocityTrackerCompat: void computeCurrentVelocity(android.view.VelocityTracker,int)
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
androidx.window.embedding.EmbeddingAdapter: android.os.Binder access$getINVALID_SPLIT_INFO_TOKEN$cp()
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-rL5Bavg(short[])
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream()
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2: DistinctFlowImpl$collect$2(kotlinx.coroutines.flow.DistinctFlowImpl,kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
kotlin.collections.ArraysKt___ArraysKt: int count(int[])
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List getMessages()
androidx.viewpager.widget.ViewPager$4: ViewPager$4(androidx.viewpager.widget.ViewPager)
androidx.window.layout.adapter.sidecar.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.adapter.sidecar.SidecarCompat)
androidx.core.view.DragStartHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
kotlinx.coroutines.flow.SharedFlowImpl: void cleanupTailLocked()
androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState: java.io.File step()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: java.util.Iterator invoke(kotlin.sequences.Sequence)
kotlin.collections.EmptyList: boolean add(java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.core.view.ViewCompat: float getTranslationY(android.view.View)
kotlin.UNumbersKt: short takeHighestOneBit-xj2QHRw(short)
kotlin.io.FileSystemException: java.io.File getOther()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: ChannelLimitedFlowMerge(java.lang.Iterable,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
androidx.core.view.NestedScrollingChildHelper: void onStopNestedScroll(android.view.View)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.CanvasKt: void withClip(android.graphics.Canvas,int,int,int,int,kotlin.jvm.functions.Function1)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)
kotlinx.coroutines.NonCancellable: boolean isCancelled()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String)
androidx.core.content.res.CamColor: float getAStar()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-rL5Bavg(short[])
androidx.fragment.app.FragmentManager: void dispatchPictureInPictureModeChanged(boolean,boolean)
kotlin.Result$Failure: java.lang.String toString()
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl: float getScaledScrollFactor()
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
androidx.tracing.TraceApi18Impl: void endSection()
kotlin.UInt: kotlin.ranges.UIntRange rangeUntil-WZ4Q5Ns(int,int)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getConversationTitle()
kotlinx.coroutines.selects.SelectImplementation: boolean isSelected()
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapMerge$default(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1: ContextAwareKt$withContextAvailable$2$listener$1(kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)
kotlin.DeepRecursiveScopeImpl: void resumeWith(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(char[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1: java.lang.Boolean invoke()
androidx.core.text.HtmlCompat$Api24Impl: java.lang.String toHtml(android.text.Spanned,int)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput build()
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: SequencesKt__SequencesKt$flatten$2()
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
androidx.core.app.RemoteActionCompat: void setShouldShowIcon(boolean)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getToIndex()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)
kotlin.time.Duration$Companion: long getHours-UwyO8pc(long)
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder setMinUpdateDistanceMeters(float)
androidx.profileinstaller.ProfileInstaller: void writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback)
androidx.core.os.ProcessCompat$Api19Impl: ProcessCompat$Api19Impl()
androidx.window.embedding.ActivityEmbeddingController: androidx.window.embedding.ActivityStack getActivityStack(android.app.Activity)
androidx.core.view.WindowInsetsControllerCompat$Impl20: int getSystemBarsBehavior()
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
kotlin.math.MathKt__MathJVMKt: void getUlp$annotations(double)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(short[])
kotlin.collections.ByteIterator: void remove()
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createWeightStyle(android.content.Context,android.graphics.Typeface,int,boolean)
androidx.window.embedding.SplitAttributes$SplitType: androidx.window.embedding.SplitAttributes$SplitType ratio(float)
androidx.core.graphics.PathSegment: int hashCode()
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$4: java.util.Iterator iterator()
kotlin.collections.ArraysKt__ArraysKt: boolean isNullOrEmpty(java.lang.Object[])
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
kotlin.jvm.internal.PropertyReference2: kotlin.reflect.KCallable computeReflected()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUInt(short[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1()
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader)
kotlin.io.encoding.DecodeInputStream: int readNextSymbol()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(int[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.text.util.LocalePreferences: java.lang.String getFirstDayOfWeek(boolean)
androidx.core.content.res.CamColor: int toColor(float,float,float)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: int getColumn()
androidx.fragment.app.FragmentManager: void onContainerAvailable(androidx.fragment.app.FragmentContainerView)
kotlin.UShortArray$Iterator: UShortArray$Iterator(short[])
kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object maxWith(kotlin.sequences.Sequence,java.util.Comparator)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(int[])
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference getInternalScopeRef()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: androidx.core.app.RemoteInput getRemoteInput()
androidx.core.view.WindowInsetsCompat$Type: int indexOf(int)
kotlin.ranges.LongRange: boolean equals(java.lang.Object)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: android.view.Surface getSurface()
androidx.fragment.app.FragmentTransitionCompat21: boolean isSeekingSupported()
androidx.activity.EdgeToEdgeApi23: EdgeToEdgeApi23()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
androidx.window.embedding.EmbeddingCompat: android.app.ActivityOptions setLaunchingActivityStack(android.app.ActivityOptions,android.os.IBinder)
kotlin.text.Regex: java.util.List split$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(long[],kotlin.ranges.IntRange)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(java.lang.Class,java.lang.String,java.lang.String,int)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(android.content.Context,java.lang.String)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: float getProgress()
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
io.flutter.plugin.platform.PlatformViewsController$1: void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
kotlin.sequences.TakeSequence$iterator$1: java.lang.Object next()
kotlin.io.LineReader: void resetAll()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path readSymbolicLink(java.nio.file.Path)
androidx.fragment.app.LogWriter: void write(char[],int,int)
androidx.core.service.quicksettings.TileServiceCompat$Api24Impl: void startActivityAndCollapse(android.service.quicksettings.TileService,android.content.Intent)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(java.lang.Comparable[],int,int,int,java.lang.Object)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
kotlin.math.MathKt__MathJVMKt: double getSign(double)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl: android.view.ViewStructure newViewStructure(android.view.contentcapture.ContentCaptureSession,android.view.View)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.common.EventChannel$EventSink: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.window.EmptyDecoratorWindowSdk: androidx.window.WindowSdkExtensions decorate(androidx.window.WindowSdkExtensions)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapKeysTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean isOverlapAllowed()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)
androidx.core.os.TraceCompat$Api29Impl: TraceCompat$Api29Impl()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: float minOf(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.location.LocationManagerCompat: void getCurrentLocation(android.location.LocationManager,java.lang.String,android.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.RingBuffer: java.lang.Object[] toArray(java.lang.Object[])
kotlin.text.MatchGroup: int hashCode()
androidx.fragment.app.FragmentStateManager: void start()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void lambda$installDeferredComponent$0(java.lang.String,int,java.lang.Integer)
androidx.fragment.app.strictmode.RetainInstanceUsageViolation: RetainInstanceUsageViolation(androidx.fragment.app.Fragment,java.lang.String)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setSliceUri(android.net.Uri)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
androidx.lifecycle.SavedStateHandleAttacher: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat()
androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)
kotlinx.coroutines.InvokeOnCompletion: void invoke(java.lang.Throwable)
androidx.core.widget.NestedScrollView: void initializeTouchDrag(int,int)
kotlin.time.ComparableTimeMark$DefaultImpls: boolean hasPassedNow(kotlin.time.ComparableTimeMark)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence replaceRange(java.lang.CharSequence,kotlin.ranges.IntRange,java.lang.CharSequence)
androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])
androidx.core.view.ViewStructureCompat: ViewStructureCompat(android.view.ViewStructure)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduce-WyvcNBI(int[],kotlin.jvm.functions.Function2)
androidx.core.os.BuildCompat: boolean isAtLeastOMR1()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: boolean contains(boolean)
kotlin.NumbersKt__NumbersJVMKt: long takeHighestOneBit(long)
androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)
androidx.core.content.pm.ShortcutInfoCompat$Api33Impl: ShortcutInfoCompat$Api33Impl()
kotlin.collections.builders.MapBuilder$ValuesItr: java.lang.Object next()
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] $values()
androidx.core.view.ViewCompat$4: ViewCompat$4(int,java.lang.Class,int)
androidx.collection.LongSparseArray: java.lang.Object get(long)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ArrayDeque: void internalStructure$kotlin_stdlib(kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(float[],int)
kotlin.collections.ArrayDeque: void add(int,java.lang.Object)
kotlin.ranges.IntRange: java.lang.Comparable getEndInclusive()
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
androidx.savedstate.SavedStateRegistry: boolean isAllowingSavingState$savedstate_release()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: UnbiasedSelectBuilderImpl(kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: void onResume()
kotlin.io.encoding.Base64Kt: void getBase64DecodeMap$annotations()
androidx.core.view.ViewConfigurationCompat$Api28Impl: ViewConfigurationCompat$Api28Impl()
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat: AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat()
kotlin.collections.IntIterator: IntIterator()
androidx.core.widget.CheckedTextViewCompat: android.graphics.PorterDuff$Mode getCheckMarkTintMode(android.widget.CheckedTextView)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(boolean[])
kotlin.ranges.RangesKt___RangesKt: float coerceIn(float,float,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat: java.lang.CharSequence getSubText(android.app.Notification)
kotlin.math.MathKt__MathJVMKt: double sinh(double)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstIf(kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(int,long)
kotlin.ranges.UIntProgressionIterator: boolean hasNext()
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$ValueType valueType()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory access$getSInstance$cp()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],java.util.Collection)
kotlinx.coroutines.CompletionHandlerKt: kotlin.jvm.functions.Function1 getAsHandler(kotlinx.coroutines.CompletionHandlerBase)
androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongNestedHierarchy(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int)
androidx.fragment.app.strictmode.FragmentStrictMode: void onFragmentTagUsage(androidx.fragment.app.Fragment,android.view.ViewGroup)
kotlin.io.path.PathsKt__PathReadWriteKt: void forEachLine$default(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.app.CoreComponentFactory$CompatWrapped: java.lang.Object getWrapper()
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl: void close()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
kotlin.io.path.PathTreeWalk: java.nio.file.LinkOption[] getLinkOptions()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean contains(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.util.Map associateTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.random.XorWowRandom: int nextInt()
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)
androidx.core.view.ViewCompat: int getImportantForContentCapture(android.view.View)
androidx.core.view.PointerIconCompat: PointerIconCompat(android.view.PointerIcon)
kotlin.collections.ArraysKt___ArraysKt: short reduceIndexed(short[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long firstOrNull(long[])
kotlin.sequences.SequencesKt___SequencesKt: int indexOfFirst(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.io.TextStreamsKt: java.io.BufferedReader buffered(java.io.Reader,int)
kotlinx.coroutines.JobSupport$onAwaitInternal$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.viewpager.widget.PagerAdapter: android.os.Parcelable saveState()
kotlin.collections.builders.MapBuilderKeys: boolean isEmpty()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
androidx.core.location.GnssStatusWrapper: int getSatelliteCount()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.fragment.app.Fragment: void performStop()
androidx.concurrent.futures.AbstractResolvableFuture: boolean cancel(boolean)
androidx.fragment.app.FragmentTransitionImpl: void animateToStart(java.lang.Object,java.lang.Runnable)
kotlin.collections.EmptySet: boolean add(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.activity.ComponentActivity$Api19Impl: void cancelPendingInputEvents(android.view.View)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
kotlin.ULong: int compareTo-VKZWuLQ(long,long)
kotlin.sequences.GeneratorSequence$iterator$1: void remove()
kotlin.io.FilesKt__FileReadWriteKt: FilesKt__FileReadWriteKt()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: void getBoundsInScreen(android.view.accessibility.AccessibilityWindowInfo,android.graphics.Rect)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: long getHead()
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi1: void execute(java.lang.Runnable)
androidx.window.area.utils.DeviceUtils: boolean hasDeviceMetrics$window_release(java.lang.String,java.lang.String)
kotlinx.coroutines.Dispatchers: void getIO$annotations()
androidx.core.location.LocationManagerCompat$GpsStatusTransport: void lambda$onGpsStatusChanged$0(java.util.concurrent.Executor)
kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(boolean[],kotlin.random.Random)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short first-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(boolean[],kotlin.ranges.IntRange)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isGmsPickerAvailable$activity_release(android.content.Context)
androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex--ajY-9A(int[])
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1: void onTransitionPause(android.transition.Transition)
androidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets,io.flutter.embedding.engine.FlutterEngineGroup)
kotlinx.coroutines.flow.ChannelAsFlow: void markConsumed()
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: DebugCoroutineInfoImpl$yieldFrames$1(kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1: CoroutineContextKt$foldCopies$folded$1(kotlin.jvm.internal.Ref$ObjectRef,boolean)
kotlin.sequences.DropWhileSequence: java.util.Iterator iterator()
io.flutter.plugin.platform.PlatformViewWrapper: void resizeRenderTarget(int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.window.embedding.SplitRule: androidx.window.embedding.SplitAttributes getDefaultSplitAttributes()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1: void invoke(androidx.window.extensions.layout.WindowLayoutInfo)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] requireNoNulls(java.lang.Object[])
kotlin.reflect.KCallable: java.lang.Object callBy(java.util.Map)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.core.widget.CheckedTextViewCompat$Api21Impl: android.content.res.ColorStateList getCheckMarkTintList(android.widget.CheckedTextView)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetEmbeddingRulesValid$1: java.lang.Object invoke()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
kotlin.sequences.SequencesKt___SequencesKt$minus$4$iterator$1: SequencesKt___SequencesKt$minus$4$iterator$1(java.util.List)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.fragment.app.FragmentManager: java.util.List getFragments()
com.getkeepsafe.relinker.ReLinkerInstance: ReLinkerInstance()
kotlin.collections.SetsKt___SetsKt: java.util.Set minusElement(java.util.Set,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.ranges.CharRange$Companion: kotlin.ranges.CharRange getEMPTY()
androidx.viewpager.widget.ViewPager: boolean isGutterDrag(float,float)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: FlowKt__MigrationKt$delayEach$1(long,kotlin.coroutines.Continuation)
kotlin.internal.ProgressionUtilKt: long differenceModulo(long,long,long)
androidx.core.app.ActivityRecreator$2: ActivityRecreator$2(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double maxOrThrow(double[])
kotlin.ranges.OpenEndFloatRange: java.lang.Float getStart()
androidx.core.telephony.TelephonyManagerCompat$Api30Impl: TelephonyManagerCompat$Api30Impl()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,float)
androidx.core.view.VelocityTrackerFallback: float kineticEnergyToVelocity(float)
kotlin.sequences.SequencesKt__SequencesKt$flatten$2: java.util.Iterator invoke(java.lang.Iterable)
com.getkeepsafe.relinker.elf.Elf$ProgramHeader: Elf$ProgramHeader()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.Collection asCollection(java.lang.Object[])
kotlin.io.FileSystemException: FileSystemException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.TypeAliasesKt: void HashMap$annotations()
kotlinx.coroutines.internal.LockFreeTaskQueue: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getWindowId()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(float[],java.lang.Iterable)
kotlin.text.StringsKt___StringsKt: java.util.List map(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.lang.Object getValue()
androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.sync.MutexImpl: void unlock(java.lang.Object)
androidx.fragment.app.FragmentManager: void clearFragmentResultListener(java.lang.String)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasNotPassedNow-impl(long)
androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenBy$2: ComparisonsKt__ComparisonsKt$thenBy$2(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
kotlin.collections.AbstractMutableList: java.lang.Object set(int,java.lang.Object)
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange getNextItem()
kotlinx.coroutines.sync.SemaphoreImpl: void acquire(kotlinx.coroutines.CancellableContinuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean isEmpty()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)
androidx.core.view.DisplayCutoutCompat$Api29Impl: DisplayCutoutCompat$Api29Impl()
androidx.activity.result.ActivityResult$1: java.lang.Object[] newArray(int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-WpHrYlw$default(byte[],byte,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long updateAndGet$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object,java.lang.String)
androidx.loader.content.Loader: void forceLoad()
androidx.window.layout.adapter.sidecar.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.core.graphics.BlendModeColorFilterCompat: android.graphics.ColorFilter createBlendModeColorFilterCompat(int,androidx.core.graphics.BlendModeCompat)
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
androidx.fragment.app.FragmentManager: boolean isParentMenuVisible(androidx.fragment.app.Fragment)
androidx.core.os.CancellationSignal: boolean isCanceled()
androidx.core.app.ActivityOptionsCompat: android.graphics.Rect getLaunchBounds()
androidx.core.view.ViewPropertyAnimatorCompat: void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context)
androidx.core.location.GnssStatusWrapper: boolean hasCarrierFrequencyHz(int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$2: ComparisonsKt__ComparisonsKt$thenByDescending$2(java.util.Comparator,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction)
androidx.core.graphics.Insets$Api29Impl: Insets$Api29Impl()
kotlinx.coroutines.flow.StartedWhileSubscribed: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)
kotlin.time.TimedValue: int hashCode()
kotlin.io.encoding.Base64Kt: int[] access$getBase64UrlDecodeMap$p()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
kotlin.collections.ArraysKt___ArraysKt: void sortByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.UShort: short and-xj2QHRw(short,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sliceArray-xo_DsdI(byte[],java.util.Collection)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.io.FileSystemException: java.io.File getFile()
kotlin.io.path.PathsKt__PathReadWriteKt: void appendText$default(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: java.lang.Object[] invoke()
kotlin.UByte: kotlin.ranges.UIntRange rangeUntil-7apg3OU(byte,byte)
com.getkeepsafe.relinker.elf.ElfParser: int readHalf(java.nio.ByteBuffer,long)
androidx.fragment.app.SpecialEffectsController$Effect: void onProgress(androidx.activity.BackEventCompat,android.view.ViewGroup)
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
androidx.core.net.TrafficStatsCompat$Api24Impl: void tagDatagramSocket(java.net.DatagramSocket)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxOfWithOrNull(kotlin.sequences.Sequence,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
kotlin.UInt: short mod-xj2QHRw(int,short)
androidx.activity.ComponentDialog: void getOnBackPressedDispatcher$annotations()
kotlin.collections.ArraysKt___ArraysKt: float minByOrThrow(float[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Float,java.lang.Float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.OpenEndRange,float)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)
kotlin.reflect.KParameter$Kind: kotlin.reflect.KParameter$Kind[] values()
androidx.collection.LongSparseArray: int indexOfValue(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceOrNull(byte[],kotlin.jvm.functions.Function2)
androidx.core.content.pm.PackageInfoCompat: boolean byteArrayContains(byte[][],byte[])
androidx.viewpager.widget.ViewPager: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.view.ViewKt: java.lang.Runnable postDelayed(android.view.View,long,kotlin.jvm.functions.Function0)
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
kotlinx.coroutines.flow.StateFlowImpl$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.TextViewCompat$Api26Impl: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.activity.OnBackPressedDispatcher: androidx.activity.OnBackPressedCallback access$getInProgressCallback$p(androidx.activity.OnBackPressedDispatcher)
androidx.core.text.util.FindAddress: boolean checkHouseNumber(java.lang.String)
androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()
kotlin.jvm.internal.ClassBasedDeclarationContainer: java.lang.Class getJClass()
androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
kotlin.reflect.KVariance: kotlin.reflect.KVariance[] values()
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: void setSource(int)
androidx.core.content.pm.ShortcutInfoCompat: boolean isDynamic()
kotlin.math.MathKt__MathJVMKt: float max(float,float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices--ajY-9A(int[])
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.util.Set getKeys()
androidx.core.view.MenuHostHelper: boolean onMenuItemSelected(android.view.MenuItem)
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle()
kotlin.jvm.internal.FunInterfaceConstructorReference: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
kotlin.collections.builders.SerializedMap: java.lang.Object readResolve()
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
kotlin.collections.ArrayDeque: ArrayDeque()
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow distinctUntilChangedBy(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlin.ranges.ULongRange: kotlin.ranges.ULongRange access$getEMPTY$cp()
kotlin.jvm.internal.FloatCompanionObject: FloatCompanionObject()
kotlinx.coroutines.channels.BroadcastCoroutine: boolean offer(java.lang.Object)
androidx.core.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,int)
androidx.fragment.app.FragmentTransition: boolean supportsTransition()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowClipDataText()
androidx.core.view.NestedScrollingParent: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.core.os.UserHandleCompat: java.lang.reflect.Method getGetUserIdMethod()
androidx.core.app.ActivityCompat$Api21Impl: ActivityCompat$Api21Impl()
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(byte[],byte)
androidx.collection.LruCache: int evictionCount()
androidx.window.embedding.EmbeddingBackend: void clearSplitAttributesCalculator()
androidx.core.location.LocationManagerCompat: LocationManagerCompat()
kotlin.jvm.internal.IntCompanionObject: void getSIZE_BITS$annotations()
androidx.profileinstaller.ProfileTranscoder: void writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[])
kotlin.NumbersKt: NumbersKt()
androidx.collection.MapCollections: void colClear()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$8(boolean[])
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCountOrDefault(java.lang.Class,int)
androidx.core.graphics.RegionKt: android.graphics.Region and(android.graphics.Region,android.graphics.Rect)
androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
androidx.core.app.NotificationChannelCompat$Api26Impl: void enableVibration(android.app.NotificationChannel,boolean)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isMethodSetSplitInfoCallbackJavaConsumerValid()
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: FlowKt__CollectKt$collectIndexed$2$emit$1(kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener$-CC: void $default$onBackStackChangeProgressed(androidx.fragment.app.FragmentManager$OnBackStackChangedListener,androidx.activity.BackEventCompat)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2202(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlin.sequences.EmptySequence: EmptySequence()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable minOrThrow(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysKt: int count(byte[],kotlin.jvm.functions.Function1)
kotlin.ULong: int hashCode-impl(long)
kotlin.jvm.internal.ArrayLongIterator: boolean hasNext()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean)
androidx.lifecycle.LiveDataKt$observe$wrappedObserver$1: void onChanged(java.lang.Object)
androidx.core.util.Pair: int hashCode()
kotlinx.coroutines.flow.SharedFlowImpl: void correctCollectorIndexesOnDropOldest(long)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener: void onSaveInstanceState(android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterNot-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.telephony.SubscriptionManagerCompat$Api29Impl: int getSlotIndex(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceRightIndexedOrNull-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
androidx.activity.result.contract.ActivityResultContracts$GetContent: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long reduceOrNull(long[],kotlin.jvm.functions.Function2)
androidx.core.content.res.GradientColorInflaterCompat: GradientColorInflaterCompat()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.FileVisitResult copyToRecursively$error$PathsKt__PathRecursiveFunctionsKt(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
androidx.core.graphics.TypefaceCompatApi21Impl: boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean)
androidx.core.os.LocaleListCompatWrapper: int findFirstMatchIndex(java.util.Locale)
kotlin.time.Duration: int compareTo(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7)
kotlin.math.MathKt__MathJVMKt: double cbrt(double)
androidx.fragment.app.FragmentState: FragmentState(androidx.fragment.app.Fragment)
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcel createSubParcel()
androidx.core.util.SparseIntArrayKt: boolean isEmpty(android.util.SparseIntArray)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte singleOrNull(byte[])
kotlinx.coroutines.flow.internal.ChannelFlowMerge: ChannelFlowMerge(kotlinx.coroutines.flow.Flow,int,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.res.ResourcesCompat: ResourcesCompat()
androidx.collection.MapCollections: java.util.Set getKeySet()
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon create(android.graphics.Bitmap,float,float)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitAttributes: java.lang.String access$getTAG$cp()
kotlin.UInt: int shr-pVg5ArA(int,int)
io.flutter.embedding.engine.FlutterJNI$Factory: FlutterJNI$Factory()
androidx.core.view.ContentInfoCompat$Api31Impl: ContentInfoCompat$Api31Impl()
androidx.core.app.RemoteActionCompat: java.lang.CharSequence getContentDescription()
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyOf-QwZRm1k(long[])
androidx.core.graphics.PointKt: android.graphics.PointF times(android.graphics.PointF,float)
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls: kotlinx.coroutines.flow.Flow fuse$default(kotlinx.coroutines.flow.internal.FusibleFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
androidx.core.widget.ScrollerCompat: boolean springBack(int,int,int,int,int,int)
androidx.core.app.RemoteInput$Api20Impl: RemoteInput$Api20Impl()
kotlin.collections.ArrayAsCollection: int getSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.Semaphore: boolean tryAcquire()
kotlin.collections.AbstractMutableList: AbstractMutableList()
kotlin.ranges.URangesKt___URangesKt: int first(kotlin.ranges.UIntProgression)
kotlin.text.StringsKt__StringsKt: java.lang.String replace(java.lang.CharSequence,kotlin.text.Regex,kotlin.jvm.functions.Function1)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,char[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte randomOrNull(byte[])
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
kotlin.time.Duration$Companion: void getMilliseconds-UwyO8pc$annotations(int)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent,android.content.Context)
kotlinx.coroutines.internal.LimitedDispatcher: void dispatchInternal(java.lang.Runnable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.FileProvider: android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int)
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1: SafeWindowExtensionsProvider$isWindowExtensionsPresent$1(androidx.window.SafeWindowExtensionsProvider)
kotlin.io.path.DirectoryEntriesReader: java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short lastOrNull(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: java.lang.String systemProp(java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(float[],kotlin.random.Random)
kotlinx.coroutines.LazyStandaloneCoroutine: void onStart()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(long[],int)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName)
kotlin.text.StringsKt__StringsJVMKt: int nativeIndexOf(java.lang.String,java.lang.String,int)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[])
androidx.core.os.UserHandleCompat: android.os.UserHandle getUserHandleForUid(int)
androidx.core.location.LocationRequestCompat: java.lang.String toString()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean offer(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Object[])
androidx.core.view.ViewGroupCompat: int getNestedScrollAxes(android.view.ViewGroup)
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onProviderEnabled(java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: boolean isReusable()
androidx.customview.widget.ViewDragHelper: void setDragState(int)
io.flutter.plugin.platform.PlatformViewWrapper: void draw(android.graphics.Canvas)
androidx.fragment.app.Fragment: android.content.Context requireContext()
kotlin.jvm.internal.LocalVariableReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: boolean cancel$default(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.app.NotificationCompat: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)
androidx.core.app.JobIntentService$CommandProcessor: void onCancelled(java.lang.Object)
kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CoroutineExceptionHandler,kotlin.coroutines.CoroutineContext)
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
kotlin.collections.EmptyMap: boolean containsKey(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyOf-rL5Bavg(short[])
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
androidx.core.location.LocationManagerCompat$GnssListenersHolder: LocationManagerCompat$GnssListenersHolder()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(float[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(short[],kotlin.jvm.functions.Function1)
androidx.profileinstaller.ProfileTranscoder: void writeHeader(java.io.OutputStream,byte[])
kotlin.jvm.internal.Ref$LongRef: java.lang.String toString()
androidx.tracing.Trace: void beginAsyncSectionFallback(java.lang.String,int)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
androidx.core.graphics.drawable.WrappedDrawableState: WrappedDrawableState(androidx.core.graphics.drawable.WrappedDrawableState)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMapOrSelf(java.util.Map)
androidx.fragment.app.Fragment$10: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)
kotlinx.coroutines.internal.LimitedDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.internal.view.SupportMenuItem: boolean expandActionView()
io.flutter.plugin.common.MethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1$emit$1: FlowKt__TransformKt$withIndex$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$1$1,kotlin.coroutines.Continuation)
androidx.lifecycle.BlockRunner$cancel$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.location.LocationRequestCompat$Builder: LocationRequestCompat$Builder(long)
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1: void onTransitionEnd(android.transition.Transition)
kotlinx.coroutines.CopyableThreadContextElement: kotlinx.coroutines.CopyableThreadContextElement copyForChild()
kotlin.ranges.IntRange: boolean contains(java.lang.Comparable)
androidx.lifecycle.MediatorLiveData: void removeSource(androidx.lifecycle.LiveData)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxWithOrNull(double[],java.util.Comparator)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: ComparisonsKt__ComparisonsKt$compareBy$3(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
androidx.core.view.WindowInsetsControllerCompat$Impl30$1: WindowInsetsControllerCompat$Impl30$1(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsAnimationControlListenerCompat)
androidx.loader.app.LoaderManager: androidx.loader.content.Loader getLoader(int)
androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt find-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.IndexingIterator: java.lang.Object next()
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin)
kotlinx.coroutines.JobSupport: java.lang.Object awaitInternal(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: androidx.core.view.autofill.AutofillIdCompat getAutofillId(android.view.View)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: void update$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: UnusedAppRestrictionsBackportServiceConnection(android.content.Context)
androidx.activity.EdgeToEdgeApi23: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Runnable obtainTaskOrDeallocateWorker()
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$yieldFrames$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment$AnimationInfo: Fragment$AnimationInfo()
kotlin.UInt: int times-WZ4Q5Ns(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceIndexedOrNull(double[],kotlin.jvm.functions.Function3)
androidx.annotation.InspectableProperty: boolean hasAttributeId()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int,int)
kotlinx.coroutines.channels.BufferedChannel: void access$prepareSenderForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)
kotlin.collections.MutableMapWithDefaultImpl: boolean containsKey(java.lang.Object)
kotlin.time.Duration$Companion: void getNanoseconds-UwyO8pc$annotations(double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceOrNull-WyvcNBI(int[],kotlin.jvm.functions.Function2)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int)
androidx.annotation.ReplaceWith: java.lang.String expression()
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedSequenceTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.reflect.KFunction$DefaultImpls: void isOperator$annotations()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.reflect.KProperty0: java.lang.Object get()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
kotlin.TypeAliasesKt: void ClassCastException$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte reduceRightIndexedOrNull-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression downTo-5PvTz6A(short,short)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void computeScrollDelta()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-PpDY95g(byte[],int)
kotlin.collections.MapsKt__MapsKt: boolean containsKey(java.util.Map,java.lang.Object)
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: void getInstance$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(short[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getSUCCESS$annotations()
androidx.window.area.EmptyDecorator: EmptyDecorator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean any-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: LegacySavedStateHandleController$tryToAddRecreator$1(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry)
androidx.core.view.ViewKt: void setInvisible(android.view.View,boolean)
io.flutter.embedding.android.FlutterActivity: android.content.Intent createDefaultIntent(android.content.Context)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasPassedNow()
kotlin.collections.AbstractList$SubList: int getSize()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression step(kotlin.ranges.LongProgression,long)
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1: TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1(kotlin.jvm.functions.Function1)
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.SafePublicationLazyImpl$Companion: SafePublicationLazyImpl$Companion()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed--ajY-9A(int[])
kotlin.ULong: kotlin.ULong box-impl(long)
kotlin.ranges.CharProgression$Companion: CharProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnStart(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderValues: boolean contains(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterNotNullTo(kotlin.sequences.Sequence,java.util.Collection)
androidx.annotation.Size: long min()
androidx.core.app.NotificationChannelCompat: boolean canShowBadge()
androidx.core.content.res.ComplexColorCompat: void setColor(int)
kotlin.text.StringsKt___StringsKt: long sumOfLong(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxByOrNull(int[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
kotlin.math.MathKt__MathJVMKt: double nextUp(double)
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.util.Iterator sourceIterator()
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi24Impl: DocumentsContractCompat$DocumentsContractApi24Impl()
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.LongStream)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex-QwZRm1k$annotations(long[])
kotlinx.coroutines.ChildHandleNode: ChildHandleNode(kotlinx.coroutines.ChildJob)
kotlin.random.Random$Default: long nextLong(long)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
kotlin.random.Random$Default: Random$Default()
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int indexOf(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1: FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1: void onAnimationRepeat(android.animation.Animator)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: char last(kotlin.ranges.CharProgression)
kotlin.collections.AbstractList$ListIteratorImpl: void set(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List sanitizeStackTrace(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: java.lang.Exception readException(int,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-uLth9ew(long[])
androidx.core.app.ActivityOptionsCompat$Api34Impl: ActivityOptionsCompat$Api34Impl()
kotlin.UByte: int compareTo-xj2QHRw(byte,short)
androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.lifecycle.SavedStateHandlesVM: java.util.Map getHandles()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forOngoingCall(android.app.Person,android.app.PendingIntent)
kotlinx.coroutines.Job: boolean isCompleted()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: AccessibilityNodeInfoCompat$TouchDelegateInfoCompat(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: short toShort(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filter(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean isGreaterThanZero(float)
kotlin.ranges.ClosedRange: java.lang.Comparable getStart()
kotlin.random.XorWowRandom$Companion: XorWowRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingInterfaceCompat: boolean isActivityEmbedded(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
kotlin.ULongArray: boolean add(java.lang.Object)
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
androidx.activity.BackEventCompat: int getSwipeEdge()
kotlin.io.LinesSequence$iterator$1: boolean hasNext()
kotlin.math.MathKt__MathJVMKt: float cbrt(float)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float maxOrNull(kotlin.sequences.Sequence)
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(float[],java.lang.Iterable)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.ktx.R: R()
kotlinx.coroutines.sync.SemaphoreImpl: void coerceAvailablePermitsAtMaximum()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)
androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)
kotlin.text.StringsKt___StringsKt$windowedSequence$1: java.lang.String invoke(java.lang.CharSequence)
kotlin.ranges.UIntRange: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentContainerView: void removeAllViewsInLayout()
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 component2()
kotlinx.coroutines.flow.FlowKt__ContextKt: void checkFlowContext$FlowKt__ContextKt(kotlin.coroutines.CoroutineContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component5--ajY-9A(int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
kotlinx.coroutines.internal.ConcurrentKt: void ReentrantLock$annotations()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$tryResume$token$1: void invoke(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort reduceRightOrNull-xzaTVY8(short[],kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle setIsVideo(boolean)
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: void invoke(java.lang.Throwable)
kotlin.collections.MapsKt___MapsKt: java.lang.Comparable maxOf(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()
androidx.core.view.DisplayCompat$Api23Impl: androidx.core.view.DisplayCompat$ModeCompat getMode(android.content.Context,android.view.Display)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: ComponentActivity$ReportFullyDrawnExecutorApi16Impl(androidx.activity.ComponentActivity)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancelFutureOnCancel: java.lang.Object invoke(java.lang.Object)
kotlin.coroutines.CombinedContext$writeReplace$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManager: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.String,java.lang.CharSequence)
kotlinx.coroutines.flow.StartedWhileSubscribed: java.lang.String toString()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: FragmentManager$LaunchedFragmentInfo(android.os.Parcel)
androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getTappableElementInsets()
androidx.window.layout.adapter.WindowBackend: boolean hasRegisteredListeners()
kotlin.collections.ArraysKt___ArraysKt: boolean none(double[],kotlin.jvm.functions.Function1)
androidx.lifecycle.LiveData$ObserverWrapper: boolean shouldBeActive()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationManagerCompat$Api34Impl: NotificationManagerCompat$Api34Impl()
kotlin.text.CharsKt__CharJVMKt: boolean isJavaIdentifierStart(char)
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl: DefaultTaskExecutor$Api28Impl()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString$default(byte[],int,int,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(long[],long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long last-MShoTSo(long[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void lambda$createReplyHandler$0(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object)
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: CoroutineLiveDataKt$addDisposableSource$2(androidx.lifecycle.MediatorLiveData,androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
androidx.core.util.PairKt: androidx.core.util.Pair toAndroidXPair(kotlin.Pair)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowDataWithAuthority(java.lang.String)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent emptyActivityEmbeddingProxy()
kotlin.UByteArray: int hashCode()
org.intellij.lang.annotations.Pattern: java.lang.String value()
androidx.viewpager.widget.PagerTitleStrip: void onLayout(boolean,int,int,int,int)
kotlin.collections.builders.SetBuilder: java.lang.Object writeReplace()
kotlin.NumbersKt__FloorDivModKt: short mod(long,short)
androidx.core.location.LocationManagerCompat: void unregisterGnssMeasurementsCallback(android.location.LocationManager,android.location.GnssMeasurementsEvent$Callback)
androidx.core.util.LongSparseArrayKt: void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Comparable max(java.lang.Iterable)
androidx.profileinstaller.ProfileTranscoder: int methodFlagBitmapIndex(int,int,int)
androidx.core.app.OnMultiWindowModeChangedProvider: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
android.support.v4.os.ResultReceiver: int describeContents()
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(long[],long)
kotlin.collections.ArrayDeque: java.lang.Object get(int)
io.flutter.embedding.android.FlutterFragment: java.lang.String getCachedEngineGroupId()
androidx.core.app.RemoteInput$Api28Impl: int getResultsSource(android.content.Intent)
kotlin.time.Duration$Companion: long getMinutes-UwyO8pc(int)
androidx.window.core.PredicateAdapter: java.lang.Class predicateClassOrNull$window_release()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean getAutomaticallyRegisterPlugins()
kotlinx.coroutines.selects.SelectImplementation: kotlinx.coroutines.selects.SelectImplementation$ClauseData findClause(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,kotlin.Unit)
kotlin.reflect.KVariance: kotlin.reflect.KVariance valueOf(java.lang.String)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedReader bufferedReader$default(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[],int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceIndexedOrNull(java.lang.Iterable,kotlin.jvm.functions.Function3)
kotlinx.coroutines.DelayKt: java.lang.Object awaitCancellation(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(boolean[])
androidx.fragment.app.FragmentTransitionCompat21$5: FragmentTransitionCompat21$5(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
androidx.fragment.app.FragmentLayoutInflaterFactory$1: void onViewDetachedFromWindow(android.view.View)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.NumbersKt__NumbersJVMKt: int countLeadingZeroBits(int)
kotlin.collections.ArraysKt___ArraysKt: boolean none(int[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void lambda$new$0()
androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)
kotlin.text.MatchGroup: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(double[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.VirtualDisplayController$1: void onResumed()
androidx.core.util.TypedValueCompat: float dpToPx(float,android.util.DisplayMetrics)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer maxWith(int[],java.util.Comparator)
kotlin.text.StringsKt___StringsKt: java.lang.Character firstOrNull(java.lang.CharSequence)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setName(java.lang.CharSequence)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
kotlin.math.MathKt__MathJVMKt: double log2(double)
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTabHost$SavedState$1: androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int)
androidx.fragment.app.FragmentContainerView: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $values()
kotlinx.coroutines.channels.BufferedChannel: void getOnReceive$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1)
androidx.core.util.SparseIntArrayKt: void set(android.util.SparseIntArray,int,int)
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause2,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse--ajY-9A(int[])
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasNotPassedNow()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.NanoTimeSource: NanoTimeSource()
kotlinx.coroutines.flow.SharedFlowImpl: void dropOldestLocked()
kotlin.UByte: int plus-xj2QHRw(byte,short)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(boolean[],java.lang.Iterable)
androidx.core.app.NotificationChannelGroupCompat: java.util.List getChannels()
androidx.core.app.NotificationCompat$Action$Builder$Api28Impl: int getSemanticAction(android.app.Notification$Action)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short first-rL5Bavg(short[])
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
kotlin.collections.builders.ListBuilder: java.lang.Object[] access$getArray$p(kotlin.collections.builders.ListBuilder)
androidx.core.app.NotificationManagerCompat$NotificationWithIdAndTag: NotificationManagerCompat$NotificationWithIdAndTag(java.lang.String,int,android.app.Notification)
kotlinx.coroutines.JobSupport: boolean joinInternal()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.core.view.WindowInsetsAnimationCompat$Impl: void setFraction(float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long randomOrNull(long[])
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeIntrinsics: java.util.ListIterator castToListIterator(java.lang.Object)
com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)
androidx.window.embedding.SplitAttributes$SplitType$Companion: androidx.window.embedding.SplitAttributes$SplitType buildSplitTypeFromValue$window_release(float)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlinx.coroutines.channels.WaiterEB: java.lang.String toString()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path absolute(java.nio.file.Path)
androidx.core.math.MathUtils: long incrementExact(long)
androidx.core.location.LocationCompat$Api29Impl: void removeBearingAccuracy(android.location.Location)
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
androidx.versionedparcelable.VersionedParcel: java.util.Map readMap(java.util.Map,int)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.util.List getReplayCache()
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,short)
androidx.core.app.ActivityCompat$Api31Impl: boolean isLaunchedFromBubble(android.app.Activity)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(short,int)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1: void onTransitionStart(android.transition.Transition)
androidx.core.widget.ScrollerCompat: void abortAnimation()
androidx.core.location.LocationCompat$Api34Impl: double getMslAltitudeMeters(android.location.Location)
kotlinx.coroutines.selects.SelectImplementation$processResultAndInvokeBlockRecoveringException$1: SelectImplementation$processResultAndInvokeBlockRecoveringException$1(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(char[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.contracts.InvocationKind: kotlin.contracts.InvocationKind valueOf(java.lang.String)
androidx.fragment.app.Fragment$5: boolean onHasView()
kotlin.NumbersKt__NumbersJVMKt: long rotateLeft(long,int)
kotlin.properties.Delegates: kotlin.properties.ReadWriteProperty vetoable(java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object fold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
android.support.v4.os.IResultReceiver2$_Parcel: java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
androidx.activity.result.IntentSenderRequest: int getFlagsValues()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: java.util.Iterator iterator()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.text.Regex$Companion: int access$ensureUnicodeCase(kotlin.text.Regex$Companion,int)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence asSequence(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
kotlin.jvm.optionals.OptionalsKt: java.lang.Object getOrNull(java.util.Optional)
io.flutter.embedding.android.FlutterActivity$1: void onBackCancelled()
androidx.collection.LongSparseArray: boolean remove(long,java.lang.Object)
kotlin.UByte$Companion: UByte$Companion()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator nullsLast(java.util.Comparator)
kotlin.reflect.WildcardTypeImpl$Companion: WildcardTypeImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.ComparableRange: ComparableRange(java.lang.Comparable,java.lang.Comparable)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(long[],kotlin.jvm.functions.Function1)
kotlin.enums.EnumEntriesList: boolean contains(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
kotlin.jvm.internal.DoubleCompanionObject: void getPOSITIVE_INFINITY$annotations()
androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setShowBadge(boolean)
kotlinx.coroutines.channels.BufferedChannel: void getOnReceiveOrNull$annotations()
kotlin.collections.ArraysKt___ArraysKt: long maxByOrThrow(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(char[],kotlin.jvm.functions.Function1)
io.flutter.plugin.common.BinaryMessenger$-CC: void $default$disableBufferingIncomingMessages(io.flutter.plugin.common.BinaryMessenger)
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
io.flutter.embedding.android.FlutterFragment$2: void handleOnBackPressed()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(short[])
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningFoldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.LongIterator: void remove()
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: ActivityResultContracts$CaptureVideo()
kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String,java.util.Locale)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: FlowKt__DelayKt$debounce$2(long)
kotlin.collections.ArraysKt___ArraysKt: int count(byte[])
androidx.core.view.ViewGroupKt$children$1: ViewGroupKt$children$1(android.view.ViewGroup)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle setConversationTitle(android.app.Notification$MessagingStyle,java.lang.CharSequence)
androidx.lifecycle.SavedStateHandle: java.lang.Class[] access$getACCEPTABLE_CLASSES$cp()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.ActivityCompat: void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
androidx.lifecycle.SavedStateHandle: void setSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State)
androidx.collection.ArrayMap$1: int colGetSize()
kotlin.collections.ArraysKt___ArraysKt: boolean any(char[])
androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
androidx.core.os.LocaleListCompatWrapper$Api21Impl: LocaleListCompatWrapper$Api21Impl()
androidx.lifecycle.DispatchQueue: void finish()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(long[])
androidx.core.content.IntentSanitizer: android.content.Intent sanitize(android.content.Intent,androidx.core.util.Consumer)
kotlin.collections.EmptyIterator: java.lang.Void previous()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
kotlinx.coroutines.internal.DiagnosticCoroutineContextException: DiagnosticCoroutineContextException(kotlin.coroutines.CoroutineContext)
androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout unwrap()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getInputType()
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationEnd(android.animation.Animator)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
androidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
kotlin.ranges.ClosedFloatingPointRange$DefaultImpls: boolean isEmpty(kotlin.ranges.ClosedFloatingPointRange)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.ranges.CharProgression: boolean equals(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: float maxOf(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.reflect.WildcardTypeImpl: int hashCode()
androidx.core.graphics.TypefaceCompatBaseImpl: long getUniqueKey(android.graphics.Typeface)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewConfigurationCompat: int getScaledMinimumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int)
kotlin.ranges.OpenEndRange: java.lang.Comparable getEndExclusive()
kotlin.jvm.internal.ByteCompanionObject: ByteCompanionObject()
androidx.core.location.LocationManagerCompat$GpsStatusTransport: void register(java.util.concurrent.Executor)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api24Impl: android.view.accessibility.AccessibilityNodeInfo getAnchor(android.view.accessibility.AccessibilityWindowInfo)
io.flutter.embedding.android.FlutterFragmentActivity: java.util.List getDartEntrypointArgs()
androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)
com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int)
kotlin.ranges.ULongProgression$Companion: kotlin.ranges.ULongProgression fromClosedRange-7ftBX0g(long,long,long)
kotlin.math.UMathKt: int min-J1ME1BU(int,int)
kotlinx.coroutines.ChildJob$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ChildJob,kotlin.coroutines.CoroutineContext)
kotlin.collections.CollectionsKt__IterablesKt: java.lang.Iterable Iterable(kotlin.jvm.functions.Function0)
androidx.core.content.ContextCompat$Api30Impl: android.content.Context createAttributionContext(android.content.Context,java.lang.String)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel2Impl: androidx.window.embedding.SplitInfo translateCompat(androidx.window.extensions.embedding.SplitInfo)
androidx.core.app.ServiceCompat$Api24Impl: ServiceCompat$Api24Impl()
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder)
kotlin.collections.MapWithDefaultImpl: java.util.Set keySet()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: char first(char[],kotlin.jvm.functions.Function1)
io.flutter.plugin.common.MethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder dartLibraryUri(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ReduceKt$singleOrNull$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
kotlin.collections.AbstractMap: java.lang.String access$toString(kotlin.collections.AbstractMap,java.util.Map$Entry)
kotlinx.coroutines.DefaultExecutor: boolean notifyStartup()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: boolean onActivityResult(int,int,android.content.Intent)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowClipDataUriWithAuthority$11(java.lang.String,android.net.Uri)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowHistoryStackFlags()
androidx.core.view.WindowInsetsControllerCompat$Impl30: void lambda$addOnControllableInsetsChangedListener$0(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener,android.view.WindowInsetsController,int)
kotlin.NumbersKt__FloorDivModKt: int mod(short,int)
kotlin.NumbersKt__BigDecimalsKt: NumbersKt__BigDecimalsKt()
kotlin.time.Duration$Companion: void getDays-UwyO8pc$annotations(long)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: int getHintScreenTimeout()
kotlin.math.MathKt__MathJVMKt: float getUlp(float)
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger plus(java.math.BigInteger,java.math.BigInteger)
kotlin.Pair: java.lang.Object getFirst()
kotlin.collections.MapWithDefaultImpl: java.util.Set entrySet()
androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.profileinstaller.ProfileVerifier$Cache: void writeOnFile(java.io.File)
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintLaunchesActivity()
androidx.concurrent.futures.CallbackToFutureAdapter: CallbackToFutureAdapter()
androidx.activity.result.contract.ActivityResultContracts$OpenDocument: android.content.Intent createIntent(android.content.Context,java.lang.String[])
androidx.core.graphics.RegionKt: boolean contains(android.graphics.Region,android.graphics.Point)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn$default(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] toShortArray-rL5Bavg(short[])
androidx.activity.result.contract.ActivityResultContracts$OpenDocument: android.net.Uri parseResult(int,android.content.Intent)
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder clearMinUpdateIntervalMillis()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,float)
androidx.core.provider.FontRequestWorker$4: FontRequestWorker$4(java.lang.String)
kotlin.time.Duration: long div-UwyO8pc(long,int)
androidx.window.embedding.EmbeddingAdapter$Companion: EmbeddingAdapter$Companion()
kotlin.ranges.ULongRange: void getEndExclusive-s-VKNKU$annotations()
kotlinx.coroutines.internal.DispatchedContinuationKt: boolean executeUnconfined(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: int indexOf(java.lang.Object)
kotlin.io.FilesKt__UtilsKt: java.io.File createTempFile$default(java.lang.String,java.lang.String,java.io.File,int,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: boolean isCompleted()
androidx.core.os.ParcelCompat: android.util.SparseArray readSparseArray(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ActivityStack getActivityStack(android.app.Activity)
androidx.window.java.area.WindowAreaControllerCallbackAdapter: void presentContentOnWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback)
kotlin.ranges.UIntRange: int getEndInclusive-pVg5ArA()
androidx.core.os.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
androidx.core.location.GnssStatusWrapper: GnssStatusWrapper(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimEnd(java.lang.CharSequence,char[])
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.channels.ChannelSegment access$getNULL_SEGMENT$p()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long last-QwZRm1k(long[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxByOrNull(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type createPossiblyInnerType(java.lang.Class,java.util.List)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function1)
androidx.fragment.app.BackStackRecord: void executeOps()
kotlin.collections.IndexedValue: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.DoubleCompanionObject: double getPOSITIVE_INFINITY()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocusId(androidx.core.content.LocusIdCompat)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.window.embedding.SplitInfo: int hashCode()
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1: void onTransitionPause(android.transition.Transition)
androidx.core.view.ViewCompat$Api24Impl: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
androidx.loader.content.ModernAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
kotlin.text.StringsKt__StringsKt: java.lang.String padStart$default(java.lang.String,int,char,int,java.lang.Object)
kotlinx.coroutines.sync.Mutex: java.lang.Object lock(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,double)
androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.core.app.NotificationManagerCompat$Api34Impl: boolean canUseFullScreenIntent(android.app.NotificationManager)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongRange until-eb3DHEI(long,long)
kotlin.collections.EmptyList: java.lang.Void set(int,java.lang.Void)
androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)
kotlin.comparisons.ReverseOrderComparator: int compare(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
androidx.viewpager.widget.PagerTitleStrip: void setNonPrimaryAlpha(float)
androidx.window.embedding.RuleParser: androidx.window.embedding.ActivityRule parseActivityRule(android.content.Context,android.content.res.XmlResourceParser)
kotlin.NumbersKt__FloorDivModKt: long mod(byte,long)
kotlin.random.RandomKt: void checkRangeBounds(long,long)
androidx.core.util.PairKt: kotlin.Pair toKotlinPair(androidx.core.util.Pair)
androidx.core.content.pm.ActivityInfoCompat: ActivityInfoCompat()
androidx.core.app.NotificationCompat$BubbleMetadata: java.lang.String getShortcutId()
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
kotlin.sequences.FilteringSequence: boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
androidx.core.view.DisplayCompat$ModeCompat: boolean isNative()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void updateCircularCornerRadius()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(double[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.os.HandlerCompat: HandlerCompat()
kotlin.reflect.KClass: boolean isAbstract()
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOfRangeInline(int[],int,int)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: void recreateSurfaceIfNeeded()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object elementAt(java.lang.Object[],int)
androidx.window.area.WindowAreaInfo: android.os.Binder getToken()
androidx.activity.result.contract.ActivityResultContracts$GetContent: ActivityResultContracts$GetContent()
androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)
android.support.v4.os.IResultReceiver2$Stub$Proxy: android.os.IBinder asBinder()
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double minOrNull(java.lang.Iterable)
kotlin.ranges.ClosedFloatingPointRange: boolean contains(java.lang.Comparable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(float[],java.lang.Iterable)
kotlin.jvm.functions.FunctionN: int getArity()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)
androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)
androidx.core.widget.NestedScrollView: android.widget.OverScroller access$000(androidx.core.widget.NestedScrollView)
androidx.lifecycle.DispatchQueue: void dispatchAndEnqueue(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isEditable(android.widget.TextView)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharingConfig configureSharing$FlowKt__ShareKt(kotlinx.coroutines.flow.Flow,int)
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: ActivityResultContracts$CreateDocument()
kotlin.collections.ArraysKt__ArraysKt: void contentDeepToStringInternal$ArraysKt__ArraysKt(java.lang.Object[],java.lang.StringBuilder,java.util.List)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int)
kotlin.jvm.internal.MutablePropertyReference0: MutablePropertyReference0()
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxWithOrNull(char[],java.util.Comparator)
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture future$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.window.area.WindowAreaControllerDecorator: androidx.window.area.WindowAreaController decorate(androidx.window.area.WindowAreaController)
androidx.activity.BackEventCompat: float getProgress()
androidx.lifecycle.BlockRunner: void access$setRunningJob$p(androidx.lifecycle.BlockRunner,kotlinx.coroutines.Job)
androidx.loader.R$attr: R$attr()
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[],int)
androidx.core.view.inputmethod.EditorInfoCompat: int getProtocol(android.view.inputmethod.EditorInfo)
kotlin.StandardKt__StandardKt: java.lang.Void TODO(java.lang.String)
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(int[])
androidx.fragment.app.FragmentManager: void popBackStack(int,int)
kotlin.ExceptionsKt__ExceptionsKt: ExceptionsKt__ExceptionsKt()
kotlinx.coroutines.LazyStandaloneCoroutine: LazyStandaloneCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
androidx.core.view.ViewGroupKt$iterator$1: void remove()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void commitBackGesture()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
kotlinx.coroutines.selects.SelectBuilder$DefaultImpls: void onTimeout(kotlinx.coroutines.selects.SelectBuilder,long,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: short[] toShortArray(java.lang.Short[])
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
androidx.core.graphics.Insets: Insets(int,int,int,int)
androidx.core.location.LocationListenerCompat$-CC: void $default$onLocationChanged(androidx.core.location.LocationListenerCompat,java.util.List)
kotlinx.coroutines.JobSupport: java.lang.Throwable getCompletionCause()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: java.lang.String getTreeDocumentId(android.net.Uri)
kotlinx.coroutines.DeferredCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnAwait()
androidx.lifecycle.ProcessLifecycleOwner: void dispatchPauseIfNeeded$lifecycle_process_release()
kotlin.NumbersKt__FloorDivModKt: int mod(int,int)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: android.content.Intent createIntent(android.content.Context,java.lang.Object)
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
kotlinx.coroutines.future.FutureKt: java.util.concurrent.CompletableFuture asCompletableFuture(kotlinx.coroutines.Job)
kotlinx.coroutines.sync.SemaphoreKt: java.lang.Object withPermit(kotlinx.coroutines.sync.Semaphore,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte elementAtOrNull(byte[],int)
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: void propagateExceptionFinalResort(java.lang.Throwable)
androidx.lifecycle.DispatchQueue: void drainQueue()
androidx.core.view.inputmethod.InputConnectionCompat: InputConnectionCompat()
androidx.core.app.NotificationCompat$Style: boolean displayCustomViewInline()
kotlin.text.StringsKt___StringsKt: java.lang.Character firstOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.ReLinker: com.getkeepsafe.relinker.ReLinkerInstance recursively()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object last(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
io.flutter.view.VsyncWaiter$DisplayListener: void register()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.fragment.app.DialogFragment: void onDetach()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: byte elementAtOrElse(byte[],int,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
kotlin.UnsafeLazyImpl: UnsafeLazyImpl(kotlin.jvm.functions.Function0)
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)
kotlin.collections.builders.MapBuilder: java.util.Collection values()
io.flutter.plugin.platform.PlatformViewsController$1: void synchronizeToNativeViewHierarchy(boolean)
androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
androidx.core.view.MenuKt$iterator$1: void remove()
androidx.collection.MapCollections: java.util.Set getEntrySet()
kotlin.io.path.FileVisitorBuilderImpl: void onPostVisitDirectory(kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: java.lang.Throwable invoke(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt: java.lang.Object trySendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Comparable min(kotlin.sequences.Sequence)
androidx.fragment.app.FragmentStateManager: void moveToExpectedState()
kotlin.text.StringsKt__RegexExtensionsKt: kotlin.text.Regex toRegex(java.lang.String)
androidx.core.app.NotificationCompat$WearableExtender$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.JobSupport$onJoin$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void finalize()
androidx.fragment.app.DialogFragment$4: void onChanged(java.lang.Object)
androidx.core.app.JobIntentService$WorkEnqueuer: void enqueueWork(android.content.Intent)
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitRule: java.lang.String toString()
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.SharedFlow)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.reflect.KTypeParameter: java.lang.String getName()
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.collection.ArraySet: ArraySet(int)
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray(java.lang.String,char[],int,int,int)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: PlayStoreDeferredComponentManager(android.content.Context,io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.FragmentTabHost: void onAttachedToWindow()
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
androidx.fragment.app.strictmode.Violation: Violation(androidx.fragment.app.Fragment,java.lang.String)
androidx.core.util.SizeKt: float component1(androidx.core.util.SizeFCompat)
kotlin.ranges.UIntRange: int getEndExclusive-pVg5ArA()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldIndexed(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener: void onViolation(androidx.fragment.app.strictmode.Violation)
kotlin.jvm.internal.ByteSpreadBuilder: byte[] toArray()
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder clearActions()
androidx.window.core.Bounds: int getHeight()
kotlin.io.encoding.DecodeInputStream: void resetByteBufferIfEmpty()
kotlin.sequences.GeneratorSequence$iterator$1: java.lang.Object getNextItem()
io.flutter.embedding.android.FlutterFragment: void onDestroyView()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.fragment.app.Fragment: void restoreChildFragmentState()
androidx.core.view.ViewCompat$1: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.concurrent.futures.AbstractResolvableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)
androidx.fragment.app.FragmentController: boolean execPendingActions()
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()
androidx.core.net.MailTo: androidx.core.net.MailTo parse(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: void sortBy(java.util.List,kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: java.lang.String generateActivityResultKey()
kotlin.NumbersKt__NumbersJVMKt: boolean isInfinite(float)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Comparable min(java.lang.Comparable[])
kotlin.ranges.ClosedFloatRange: boolean lessThanOrEquals(float,float)
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId copy(long)
kotlin.time.Duration: void getHoursComponent$annotations()
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
kotlin.KotlinVersion: boolean isAtLeast(int,int)
androidx.core.view.VelocityTrackerCompat: void removeFallbackForTracker(android.view.VelocityTracker)
kotlin.UInt: long minus-VKZWuLQ(int,long)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String uppercase(java.lang.String,java.util.Locale)
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(java.lang.Object)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
io.flutter.embedding.android.KeyboardManager: java.util.Map getKeyboardState()
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double minOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.os.LocaleListInterface: int size()
io.flutter.embedding.engine.dart.DartExecutor: void executeDartCallback(io.flutter.embedding.engine.dart.DartExecutor$DartCallback)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
androidx.profileinstaller.ProfileInstallerInitializer: void lambda$writeInBackground$2(android.content.Context)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: void getSeconds-UwyO8pc$annotations(long)
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: NotificationManagerCompat$ServiceConnectedEvent(android.content.ComponentName,android.os.IBinder)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: void onClosedReceiveOnNoWaiterSuspend(kotlinx.coroutines.CancellableContinuation)
kotlin.collections.EmptyList: java.lang.Object readResolve()
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: DartMessenger$HandlerInfo(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue)
androidx.core.content.res.ResourcesCompat: void clearCachesForTheme(android.content.res.Resources$Theme)
com.getkeepsafe.relinker.elf.ElfParser: long offsetFromVma(com.getkeepsafe.relinker.elf.Elf$Header,long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong singleOrNull-QwZRm1k(long[])
kotlin.collections.MapsKt__MapsKt: java.util.Iterator iterator(java.util.Map)
androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
kotlinx.coroutines.channels.WaiterEB: WaiterEB(kotlinx.coroutines.Waiter)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer firstOrNull(int[])
androidx.window.core.Version$Companion: Version$Companion()
androidx.collection.SparseArrayCompat: int size()
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sortedDescending-rL5Bavg(short[])
androidx.core.app.NotificationCompat$Action$Extender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
io.flutter.util.TraceSection: io.flutter.util.TraceSection scoped(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFoldIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.util.Predicate$-CC: androidx.core.util.Predicate $default$negate(androidx.core.util.Predicate)
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(java.lang.Object[],int)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: CombineKt$combineInternal$2$1$1(kotlinx.coroutines.channels.Channel,int)
kotlin.time.Duration: boolean isInfinite-impl(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(float[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(short[])
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.RenderMode,io.flutter.embedding.android.TransparencyMode)
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxByOrNull(short[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
kotlin.collections.Grouping: java.lang.Object keyOf(java.lang.Object)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType fromLong(long)
androidx.core.util.SparseArrayKt$valueIterator$1: java.lang.Object next()
kotlin.UInt: kotlin.ranges.UIntRange rangeTo-WZ4Q5Ns(int,int)
androidx.core.content.ContextKt: void withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.fragment.app.Fragment: int getId()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
kotlin.jvm.internal.Ref$ShortRef: Ref$ShortRef()
kotlin.time.TimeSource$Monotonic: kotlin.time.ComparableTimeMark markNow()
io.flutter.plugin.platform.SingleViewWindowManager: void removeCrossWindowBlurEnabledListener(java.util.function.Consumer)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.view.NestedScrollingParent2: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
kotlin.math.MathKt__MathJVMKt: double cosh(double)
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.adapter.sidecar.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
kotlin.ranges.IntRange: boolean contains(int)
kotlinx.coroutines.channels.BufferedChannel: void onClosedSelectOnReceive(kotlinx.coroutines.selects.SelectInstance)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: java.util.concurrent.atomic.AtomicReferenceArray access$getKeys$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core)
androidx.core.app.ActivityCompat$Api30Impl: ActivityCompat$Api30Impl()
kotlin.io.encoding.EncodeOutputStream: void write(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invoke(kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentController: java.util.List retainNonConfig()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
androidx.lifecycle.ProcessLifecycleInitializer: androidx.lifecycle.LifecycleOwner create(android.content.Context)
androidx.core.os.BuildCompat: boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String)
kotlin.random.PlatformRandomKt: java.util.Random asJavaRandom(kotlin.random.Random)
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[])
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context,android.util.AttributeSet)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedFloatingPointRange rangeTo(double,double)
androidx.core.os.BundleCompat: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1: FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.MutablePropertyReference0Impl: MutablePropertyReference0Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.jvm.internal.Ref$DoubleRef: java.lang.String toString()
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()
kotlin.jvm.internal.TypeIntrinsics: java.util.Map asMutableMap(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: void cancel$default(kotlinx.coroutines.CoroutineScope,java.lang.String,java.lang.Throwable,int,java.lang.Object)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.ViewKt: void updatePaddingRelative(android.view.View,int,int,int,int)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Default: void onIsPermissionRevocationEnabledForAppResult(boolean,boolean)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] remove(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.os.BundleCompat$Api33Impl: java.lang.Object getParcelable(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.core.app.NotificationCompat$Builder$Api24Impl: android.widget.RemoteViews createHeadsUpContentView(android.app.Notification$Builder)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List mapIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
kotlin.jvm.internal.Ref$FloatRef: Ref$FloatRef()
androidx.core.util.SizeFCompat$Api21Impl: SizeFCompat$Api21Impl()
androidx.core.location.LocationCompat$Api34Impl: void setMslAltitudeMeters(android.location.Location,double)
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: InputContentInfoCompat$InputContentInfoCompatBaseImpl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.ranges.LongProgression: long getFirst()
androidx.core.graphics.PointKt: android.graphics.Point times(android.graphics.Point,float)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: android.os.IBinder asBinder()
kotlinx.coroutines.sync.MutexImpl: boolean holdsLock(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
kotlin.text.StringsKt__StringsJVMKt: int compareTo$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow mapNotNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-3iWJZGE(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.DisplayCompat: DisplayCompat()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)
androidx.collection.SimpleArrayMap: int indexOfNull()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,long)
androidx.core.view.ViewKt: void doOnDetach(android.view.View,kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate: boolean handleEvent(android.view.KeyEvent)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
androidx.window.core.FailedSpecification: java.lang.String getMessage()
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: android.content.Intent createIntent(android.content.Context,java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: double sumOfDouble(java.lang.Iterable)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceAvailable(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.flutter.Log: void w(java.lang.String,java.lang.String)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets: java.lang.String getAssetFilePathByName(java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
kotlin.KotlinNothingValueException: KotlinNothingValueException(java.lang.String,java.lang.Throwable)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.FragmentActivity: FragmentActivity()
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String f()
androidx.core.app.NotificationCompatSideChannelService: android.os.IBinder onBind(android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: java.lang.Object invoke()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.core.util.PairKt: java.lang.Object component1(androidx.core.util.Pair)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map foldTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void lambda$new$1(android.graphics.SurfaceTexture)
androidx.core.util.Pools$Pool: boolean release(java.lang.Object)
kotlin.collections.EmptyMap: java.util.Set entrySet()
androidx.core.app.ActivityCompat$Api32Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.fragment.app.FragmentManager: void dispatchLowMemory(boolean)
kotlinx.coroutines.channels.ProducerCoroutine: void onCompleted(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.AbstractMutableList: int size()
kotlin.UByteArray: void getStorage$annotations()
androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: void update$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.core.graphics.ColorUtils: void blendHSL(float[],float[],float,float[])
kotlin.time.DurationKt: void getHours$annotations(long)
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
androidx.core.graphics.CanvasKt: void withClip(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1)
androidx.lifecycle.AbstractSavedStateViewModelFactory$Companion: AbstractSavedStateViewModelFactory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfDouble(java.lang.Iterable)
androidx.core.math.MathUtils: int toIntExact(long)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-qFRl0hI(int[],int)
androidx.annotation.OptIn: java.lang.Class[] markerClass()
kotlin.jvm.internal.ReflectionFactory: void setUpperBounds(kotlin.reflect.KTypeParameter,java.util.List)
kotlin.jvm.internal.ClassReference: void isFun$annotations()
kotlin.collections.builders.ListBuilder: boolean add(java.lang.Object)
androidx.core.os.LocaleListCompatWrapper: java.lang.Object getLocaleList()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(double[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(java.lang.Object[])
kotlin.comparisons.UComparisonsKt___UComparisonsKt: short minOf-VKSA0NQ(short,short,short)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent[] getIntents()
androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)
androidx.core.view.WindowInsetsControllerCompat: void hide(int)
androidx.lifecycle.Transformations$switchMap$2: Transformations$switchMap$2(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
kotlin.collections.MovingSubList: int getSize()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: void update$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.fragment.app.FragmentManager$PrepareBackStackTransitionState: FragmentManager$PrepareBackStackTransitionState(androidx.fragment.app.FragmentManager)
kotlin.time.Duration: long toLongNanoseconds-impl(long)
kotlin.sequences.TransformingIndexedSequence$iterator$1: java.util.Iterator getIterator()
androidx.core.app.NotificationChannelGroupCompat: boolean isBlocked()
androidx.versionedparcelable.VersionedParcelStream: void writeByteArray(byte[])
kotlinx.coroutines.flow.FlowKt__ReduceKt$last$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedContinuation: java.lang.Object component1()
kotlin.sequences.SequencesKt__SequencesKt$shuffled$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1: void onTransitionPause(android.transition.Transition)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: ExceptionsConstructorKt$createConstructor$1$4(java.lang.reflect.Constructor)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
kotlin.collections.AbstractMap$keys$1$iterator$1: void remove()
androidx.window.layout.util.ContextCompatHelper: ContextCompatHelper()
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: void setPointerIcon(android.view.PointerIcon)
androidx.loader.app.LoaderManagerImpl: void markForRedelivery()
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
androidx.core.content.IntentSanitizer: boolean access$1502(androidx.core.content.IntentSanitizer,boolean)
kotlin.jvm.internal.FunInterfaceConstructorReference: FunInterfaceConstructorReference(java.lang.Class)
kotlin.collections.EmptySet: void clear()
androidx.core.view.WindowInsetsControllerCompat$Impl30: boolean isAppearanceLightStatusBars()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer find(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeIntrinsics: java.util.List castToList(java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation: void cancel(android.view.ViewGroup)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel(kotlinx.coroutines.channels.ReceiveChannel)
androidx.profileinstaller.DexProfileData: DexProfileData(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object getOrNull(java.util.List,int)
kotlin.ranges.ULongProgression: long getLast-s-VKNKU()
kotlinx.coroutines.sync.SemaphoreImpl: void acquire(java.lang.Object,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
io.flutter.plugin.platform.PlatformViewRenderTarget$-CC: void $default$scheduleFrame(io.flutter.plugin.platform.PlatformViewRenderTarget)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void onClosedHasNextNoWaiterSuspend()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
kotlin.UShortArray: boolean equals-impl0(short[],short[])
kotlin.UInt: long times-VKZWuLQ(int,long)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: byte coerceIn(byte,byte,byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sum-QwZRm1k(long[])
kotlin.ranges.ULongRange: java.lang.String toString()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action)
androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
androidx.viewpager.widget.PagerAdapter: java.lang.CharSequence getPageTitle(int)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngineGroup getEngineGroup()
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.AndroidTouchProcessor: int getVerticalScrollFactorPre26(android.content.Context)
io.flutter.util.HandlerCompat: android.os.Handler createAsyncHandler(android.os.Looper)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
androidx.collection.LongSparseArray: LongSparseArray()
androidx.core.net.TrafficStatsCompat: void untagSocket(java.net.Socket)
kotlinx.coroutines.JobSupport: java.lang.Object access$joinSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()
androidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
kotlinx.coroutines.CancellableContinuation: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.LinkedHashMap linkedMapOf(kotlin.Pair[])
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.fragment.app.Fragment: void initLifecycle()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none--ajY-9A(int[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String mapLibraryName(java.lang.String)
androidx.core.view.WindowInsetsControllerCompat$Impl: void hide(int)
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)
androidx.core.text.util.LinkifyCompat$Api24Impl: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
kotlin.io.encoding.Base64: Base64(boolean,boolean)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable asIterable(java.lang.Iterable)
kotlin.io.encoding.Base64: kotlin.io.encoding.Base64 access$getUrlSafe$cp()
kotlin.NumbersKt__NumbersJVMKt: int countOneBits(long)
androidx.window.embedding.EmbeddingAdapter: androidx.window.extensions.embedding.SplitAttributes translateSplitAttributesCalculator$lambda$0(androidx.window.embedding.EmbeddingAdapter,kotlin.jvm.functions.Function1,androidx.window.extensions.embedding.SplitAttributesCalculatorParams)
kotlinx.coroutines.sync.Semaphore: void release()
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void onFlushComplete(int)
androidx.core.app.RemoteInput$Api26Impl: RemoteInput$Api26Impl()
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
androidx.core.app.JobIntentService: void onCreate()
kotlin.ranges.OpenEndFloatRange: boolean lessThanOrEquals(float,float)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(boolean)
kotlin.ranges.URangesKt___URangesKt: URangesKt___URangesKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.flutter.embedding.android.KeyData: KeyData(java.nio.ByteBuffer)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object lastOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(char[],kotlin.jvm.functions.Function2)
androidx.collection.SparseArrayCompat: void removeAt(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double maxOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.lang.String,java.util.Set,android.content.Intent,boolean,androidx.window.embedding.SplitRule$FinishBehavior,int,int,int,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.EmbeddingAspectRatio,androidx.window.embedding.SplitAttributes)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)
kotlin.collections.ArrayDeque: void copyElements(int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(long[],kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend: void removeRule(androidx.window.embedding.EmbeddingRule)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,kotlin.text.Regex,int)
kotlin.sequences.SequencesKt___SequencesKt$onEachIndexed$1: java.lang.Object invoke(int,java.lang.Object)
androidx.core.os.TraceCompat$Api29Impl: void beginAsyncSection(java.lang.String,int)
androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.RemoteActionCompat$Api26Impl: android.app.RemoteAction createRemoteAction(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
androidx.fragment.app.FragmentTransaction: boolean isEmpty()
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener: boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.fragment.app.FragmentManager: void removeFragment(androidx.fragment.app.Fragment)
kotlinx.coroutines.flow.internal.FlowCoroutineKt: java.lang.Object flowScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.fragment.app.BackStackState: BackStackState(java.util.List,java.util.List)
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()
androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object foldRightIndexed(java.util.List,java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.CoroutineName: java.lang.String getName()
kotlin.time.DurationUnitKt__DurationUnitJvmKt: long convertDurationUnitOverflow(long,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
kotlin.jvm.internal.ShortSpreadBuilder: int getSize(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-GBYM_sE(byte[])
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int minOf(int,int,int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.loader.content.Loader: void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenStateAtLeast(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)
kotlin.collections.EmptyList: java.lang.String toString()
androidx.core.app.NotificationCompat$CallStyle$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,short)
io.flutter.embedding.android.FlutterActivity$1: FlutterActivity$1(io.flutter.embedding.android.FlutterActivity)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(short[],short)
androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectWithContextUndispatched(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableList(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void setDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
kotlin.time.Duration: void getMinutesComponent$annotations()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData$default(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.window.WindowSdkExtensions: int getExtensionVersion()
kotlin.time.DurationKt: long access$parseDuration(java.lang.String,boolean)
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectOld$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.os.HandlerCompat$Api29Impl: HandlerCompat$Api29Impl()
androidx.core.net.MailTo: MailTo()
kotlin.random.jdk8.PlatformThreadLocalRandom: int nextInt(int,int)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnSaveStateListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding$OnSaveInstanceStateListener)
kotlinx.coroutines.sync.MutexImpl$onLock$2: java.lang.Object invoke(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,java.lang.Object)
androidx.lifecycle.MediatorLiveData$Source: void unplug()
androidx.fragment.app.FragmentController: void doLoaderRetain()
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.core.view.WindowInsetsControllerCompat$Impl20: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
androidx.core.util.Predicate$-CC: boolean $private$lambda$or$2(androidx.core.util.Predicate,androidx.core.util.Predicate,java.lang.Object)
androidx.core.view.animation.PathInterpolatorApi14: PathInterpolatorApi14(android.graphics.Path)
kotlin.random.Random: long nextLong(long)
kotlinx.coroutines.android.HandlerContext: void invokeOnTimeout$lambda$3(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
androidx.core.content.res.CamUtils: void xyzFromInt(int,float[])
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
kotlin.collections.ArraysKt___ArraysKt: void forEach(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ULong: long or-VKZWuLQ(long,long)
kotlin.time.DurationKt: void getDays$annotations(long)
kotlin.ranges.ClosedFloatRange: java.lang.Comparable getEndInclusive()
kotlinx.coroutines.channels.BufferedChannel: void expandBuffer()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.util.AtomicFile: byte[] readFully()
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getControlState$FU$p()
androidx.loader.content.Loader: void stopLoading()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.builders.MapBuilder$Itr: void initNext$kotlin_stdlib()
kotlin.concurrent.TimersKt: java.util.Timer timer(java.lang.String,boolean,java.util.Date,long,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(long[])
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1(java.lang.Object,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.reflect.KParameter: java.lang.String getName()
kotlin.io.FilesKt__FileReadWriteKt: java.io.PrintWriter printWriter(java.io.File,java.nio.charset.Charset)
kotlinx.coroutines.DefaultExecutor: boolean isThreadPresent$kotlinx_coroutines_core()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.MergingSequence$iterator$1: java.util.Iterator getIterator1()
com.getkeepsafe.relinker.SystemLibraryLoader: SystemLibraryLoader()
androidx.lifecycle.Transformations$switchMap$2$onChanged$1: Transformations$switchMap$2$onChanged$1(androidx.lifecycle.MediatorLiveData)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancelAll(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(double[],double)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1: java.lang.String pendingToString()
kotlinx.coroutines.flow.internal.ChannelFlowKt: kotlinx.coroutines.flow.FlowCollector withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLastWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sortedArray-rL5Bavg(short[])
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map build(java.util.Map)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.location.LocationCompat: void removeVerticalAccuracy(android.location.Location)
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: BufferedChannel$SendBroadcast(kotlinx.coroutines.CancellableContinuation)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean)
androidx.core.view.WindowInsetsControllerCompat: androidx.core.view.WindowInsetsControllerCompat toWindowInsetsControllerCompat(android.view.WindowInsetsController)
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$2: androidx.lifecycle.LifecycleOwner invoke(android.view.View)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxByOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.util.Map)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.OpenEndRange rangeUntil(java.lang.Comparable,java.lang.Comparable)
kotlin.experimental.BitwiseOperationsKt: short inv(short)
kotlin.text.StringsKt__StringsJVMKt: boolean equals(java.lang.String,java.lang.String,boolean)
androidx.window.embedding.EmbeddingCompat: void invalidateTopVisibleSplitAttributes()
io.flutter.FlutterInjector: void setInstance(io.flutter.FlutterInjector)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$2: java.lang.Object invoke(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(short[])
kotlinx.coroutines.JobSupport: java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceRightIndexed(java.lang.Object[],kotlin.jvm.functions.Function3)
kotlin.UShortArray: short[] unbox-impl()
kotlin.ranges.RangesKt___RangesKt: float coerceAtMost(float,float)
androidx.lifecycle.ViewModelLazy$1: java.lang.Object invoke()
io.flutter.embedding.engine.dart.DartExecutor$DartCallback: java.lang.String toString()
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
androidx.fragment.app.FragmentViewLifecycleOwner: FragmentViewLifecycleOwner(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore,java.lang.Runnable)
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short minOrThrow-U(short[])
androidx.collection.LongSparseArray: void removeAt(int)
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-aLgx1Fo(short[],kotlin.jvm.functions.Function3)
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle(androidx.core.app.NotificationCompat$Builder)
kotlin.collections.EmptyMap: java.util.Set getEntries()
androidx.core.graphics.drawable.IconCompat$Api30Impl: IconCompat$Api30Impl()
androidx.core.view.ViewCompat$Api31Impl: ViewCompat$Api31Impl()
kotlinx.coroutines.flow.SharedFlowSlot: SharedFlowSlot()
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: FrameMetricsAggregator$FrameMetricsApi24Impl$1(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl)
androidx.fragment.app.ListFragment: void onDestroyView()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
kotlinx.coroutines.future.FutureKt$asDeferred$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.versionedparcelable.VersionedParcelStream: boolean readField(int)
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: java.util.Collection getPlatformExceptionHandlers()
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: ClassValueCtorCache$cache$1()
androidx.core.view.ViewCompat: ViewCompat()
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Boolean[] toTypedArray(boolean[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
androidx.customview.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(java.lang.Object[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(int[],kotlin.jvm.functions.Function2)
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,boolean,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
kotlin.ranges.ClosedFloatRange: boolean lessThanOrEquals(java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object prepare(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: java.lang.Object next()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.provider.SelfDestructiveThread: int getGeneration()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateWithTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer: void onTrimMemory(int)
androidx.core.widget.AutoScrollHelper: boolean shouldAnimate()
kotlin.UInt: int div-xj2QHRw(int,short)
kotlin.collections.ArraysKt___ArraysKt: boolean none(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(boolean[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)
androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.window.layout.util.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
kotlin.collections.ArraysKt___ArraysKt: short reduceRightIndexed(short[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(int[])
androidx.fragment.app.FragmentStore: java.util.List getFragments()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minWithOrNull(short[],java.util.Comparator)
androidx.core.internal.view.SupportMenuItem$-CC: android.view.MenuItem $default$setTooltipText(androidx.core.internal.view.SupportMenuItem,java.lang.CharSequence)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentById(int)
kotlinx.coroutines.CoroutineId: java.lang.String toString()
androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)
androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
kotlin.io.encoding.StreamEncodingKt__Base64IOStreamKt: StreamEncodingKt__Base64IOStreamKt()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(short[],short,int,int,int,java.lang.Object)
androidx.loader.R$drawable: R$drawable()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onRejectSharedElements(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(double[])
kotlin.ranges.ComparableRange: boolean isEmpty()
kotlin.jvm.internal.ArrayBooleanIterator: boolean hasNext()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(double[],java.util.Collection)
kotlin.collections.MapsKt__MapsKt: java.lang.Object getOrElse(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.fragment.app.FragmentStateManager: void createView()
androidx.core.content.ContextCompat: java.lang.String getAttributionTag(android.content.Context)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: int compareTo-6eNON_k(long,long)
androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
kotlin.jvm.internal.TypeReference: java.lang.String asString(boolean)
kotlin.ranges.LongRange: java.lang.Long getEndInclusive()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(char[],java.lang.Iterable)
kotlin.jvm.internal.Ref$ByteRef: java.lang.String toString()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.KeyData$Type: KeyData$Type(java.lang.String,int,long)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer firstOrNull(int[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.customview.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)
kotlin.text.Regex: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,int)
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.window.core.PredicateAdapter$BaseHandler: boolean isTest(java.lang.reflect.Method,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(int[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationControlListenerCompat: void onFinished(androidx.core.view.WindowInsetsAnimationControllerCompat)
androidx.core.view.DifferentialMotionFlingController: void onMotionEvent(android.view.MotionEvent,int)
kotlin.collections.AbstractIterator: java.lang.Object next()
androidx.core.app.ServiceCompat$Api29Impl: ServiceCompat$Api29Impl()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Long maxWith(long[],java.util.Comparator)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1)
androidx.core.transition.TransitionKt$addListener$2: void invoke(android.transition.Transition)
androidx.core.provider.FontsContractCompat: void resetCache()
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.view.MenuHostHelper: void onPrepareMenu(android.view.Menu)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable maxOrNull(java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(int[],java.lang.Iterable)
androidx.loader.content.AsyncTaskLoader$LoadTask: AsyncTaskLoader$LoadTask(androidx.loader.content.AsyncTaskLoader)
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable getStart()
androidx.lifecycle.MediatorLiveData: MediatorLiveData(java.lang.Object)
kotlin.time.Duration$Companion: void getMilliseconds-UwyO8pc$annotations(long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.lifecycle.AndroidViewModel: AndroidViewModel(android.app.Application)
kotlinx.coroutines.Incomplete: boolean isActive()
kotlin.Result: Result(java.lang.Object)
kotlin.io.path.PathTreeWalk: java.lang.Object yieldIfNeeded(kotlin.sequences.SequenceScope,kotlin.io.path.PathNode,kotlin.io.path.DirectoryEntriesReader,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
kotlin.ranges.LongRange: java.lang.Long getStart()
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
kotlinx.coroutines.internal.WeakMapCtorCache: kotlin.jvm.functions.Function1 get(java.lang.Class)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemBarsBehavior(int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: void authenticate(java.lang.Object,java.lang.Object,android.os.CancellationSignal,int,java.lang.Object,android.os.Handler)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: int getSize()
kotlin.collections.ArraysKt___ArraysKt: boolean getOrElse(boolean[],int,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isProjected()
kotlin.io.encoding.Base64: int decodeSize(byte[],int,int)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet)
kotlin.collections.builders.SerializedMap$Companion: SerializedMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
kotlin.ULong: void getData$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(java.lang.Object[],java.util.Comparator)
kotlin.collections.builders.ListBuilder$Itr: int nextIndex()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrap(java.lang.Throwable)
kotlin.UShort: short inv-Mh2AYeg(short)
androidx.activity.result.IntentSenderRequest$Companion: IntentSenderRequest$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(long[])
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(short[])
androidx.core.app.MultiWindowModeChangedInfo: MultiWindowModeChangedInfo(boolean,android.content.res.Configuration)
androidx.core.util.SizeKt: float component2(android.util.SizeF)
androidx.viewpager.widget.PagerTitleStrip: void onMeasure(int,int)
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender(android.app.Notification)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: ChannelFlowOperator(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.view.ViewConfigurationCompat: int getScaledMaximumFlingVelocity(android.content.Context,android.view.ViewConfiguration,int,int,int)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler: void announce(java.lang.String)
androidx.activity.ComponentActivity$5: void run()
kotlin.collections.SetsKt__SetsJVMKt: SetsKt__SetsJVMKt()
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getPathString(java.nio.file.Path)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-HqK1JgA(long[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.activity.FullyDrawnReporter: void removeOnReportDrawnListener(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: long component5(long[])
androidx.fragment.app.FragmentActivity$HostCallbacks: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeTextType(android.widget.TextView)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: boolean equals(java.lang.Object)
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1: void onTransitionCancel(android.transition.Transition)
kotlinx.coroutines.DelayWithTimeoutDiagnostics$DefaultImpls: java.lang.Object delay(kotlinx.coroutines.DelayWithTimeoutDiagnostics,long,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character maxWith(char[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function5)
androidx.startup.StartupLogger: void i(java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine spawn(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String,java.util.List,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean)
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: ProduceKt$awaitClose$1(kotlin.coroutines.Continuation)
androidx.lifecycle.EmittedSource$disposeNow$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
com.getkeepsafe.relinker.ReLinker: void loadLibrary(android.content.Context,java.lang.String,java.lang.String)
androidx.core.view.DisplayCompat$ModeCompat: DisplayCompat$ModeCompat(android.view.Display$Mode,android.graphics.Point)
androidx.fragment.app.SpecialEffectsController$Operation: void cancel(android.view.ViewGroup,boolean)
androidx.profileinstaller.ProfileTranscoder: void writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxOrNull(short[])
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$2: java.lang.Object invoke(java.lang.Object)
androidx.window.area.WindowAreaControllerImpl: void presentContentOnWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback)
androidx.fragment.app.SpecialEffectsController: void updateOperationDirection(boolean)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: java.lang.Object findSegmentAndMoveForward$atomicfu$array(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceArray,int,long,kotlinx.coroutines.internal.Segment,kotlin.jvm.functions.Function2)
kotlin.text.CharCategory: java.lang.String getCode()
kotlinx.coroutines.flow.ReadonlySharedFlow: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String intern(java.lang.String)
androidx.core.location.LocationCompat: void setMock(android.location.Location,boolean)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny$default(java.lang.CharSequence,char[],int,boolean,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: boolean isFinished()
androidx.core.view.ViewCompat$Api20Impl: ViewCompat$Api20Impl()
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: PausingDispatcherKt$whenStateAtLeast$2(androidx.lifecycle.Lifecycle,androidx.lifecycle.Lifecycle$State,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.LazyActorCoroutine: void onStart()
kotlin.io.TextStreamsKt$readLines$1: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isActivityEmbeddingComponentValid$1: java.lang.Object invoke()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancellableContinuationImpl: boolean trySuspend()
androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)
kotlinx.coroutines.channels.TickerMode: kotlinx.coroutines.channels.TickerMode valueOf(java.lang.String)
kotlin.jvm.internal.FloatCompanionObject: float getNaN()
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence)
io.flutter.embedding.engine.renderer.RenderSurface: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.core.app.RemoteActionCompat: RemoteActionCompat(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String)
androidx.core.app.NotificationManagerCompat: void cancelAll()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long randomOrNull(long[],kotlin.random.Random)
kotlinx.coroutines.CancellableContinuationImpl: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()
androidx.fragment.app.FragmentTransaction: FragmentTransaction()
io.flutter.plugin.common.EventChannel$StreamHandler: void onCancel(java.lang.Object)
kotlin.collections.builders.SetBuilder: SetBuilder(kotlin.collections.builders.MapBuilder)
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: void addOrUpdateRule$default(androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker,androidx.window.embedding.EmbeddingRule,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ShareKt: void launchSharingDeferred$FlowKt__ShareKt(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CompletableDeferred)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.window.embedding.RuleController: void addRule(androidx.window.embedding.EmbeddingRule)
kotlinx.coroutines.channels.BufferedChannel$onSend$2: BufferedChannel$onSend$2()
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
androidx.window.core.PredicateAdapter$BaseHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(byte[],java.util.Comparator)
kotlinx.coroutines.scheduling.CoroutineScheduler: void decrementBlockingTasks()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector)
androidx.core.provider.FontRequest: java.lang.String toString()
androidx.core.app.NotificationCompat$InboxStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBuffer()
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: java.lang.Object invoke(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: ActivityResultContracts$StartIntentSenderForResult()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(byte[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.app.NotificationCompat: boolean getAutoCancel(android.app.Notification)
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30: SoftwareKeyboardControllerCompat$Impl30(android.view.WindowInsetsController)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia$Companion: ActivityResultContracts$PickMultipleVisualMedia$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewParentCompat$Api21Impl: ViewParentCompat$Api21Impl()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWithOrNull-5NtCtWE(long[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context,android.util.AttributeSet)
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[],int)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setWindowFlag(int)
androidx.core.location.LocationCompat$Api26Impl: float getSpeedAccuracyMetersPerSecond(android.location.Location)
kotlin.sequences.SequencesKt___SequencesKt: double sumOfDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragmentActivity: void onUserLeaveHint()
androidx.core.content.pm.ShortcutInfoChangeListener: void onAllShortcutsRemoved()
kotlin.UnsafeLazyImpl: java.lang.Object writeReplace()
androidx.core.view.contentcapture.ContentCaptureSessionCompat: void notifyViewsAppeared(java.util.List)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: OnBackPressedDispatcher$OnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
io.flutter.util.Predicate: boolean test(java.lang.Object)
kotlin.ULongArray: boolean contains-VKZWuLQ(long[],long)
androidx.viewpager.widget.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-7znnbtw(int[],java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.view.ActionProvider: boolean hasSubMenu()
androidx.profileinstaller.ProfileInstaller: void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File)
com.getkeepsafe.relinker.ReLinkerInstance: com.getkeepsafe.relinker.ReLinkerInstance recursively()
androidx.core.content.pm.ShortcutManagerCompat: void enableShortcuts(android.content.Context,java.util.List)
kotlinx.coroutines.JobKt: void cancelFutureOnCancellation(kotlinx.coroutines.CancellableContinuation,java.util.concurrent.Future)
kotlin.UByteArray: boolean add(java.lang.Object)
kotlinx.coroutines.AwaitKt$joinAll$1: AwaitKt$joinAll$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BroadcastChannelImpl$send$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte last-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.sequences.SubSequence$iterator$1: boolean hasNext()
kotlin.ULong: long unbox-impl()
kotlin.time.Duration: boolean equals(java.lang.Object)
androidx.core.util.SparseIntArrayKt: boolean contains(android.util.SparseIntArray,int)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
kotlin.text.CharCategory: CharCategory(java.lang.String,int,int,java.lang.String)
kotlinx.coroutines.DefaultExecutor: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.Job: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File,java.lang.String)
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
androidx.window.embedding.EmbeddingAdapter$Companion: android.os.Binder getINVALID_ACTIVITY_STACK_TOKEN()
androidx.activity.result.ActivityResult$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.lifecycle.BlockRunner$maybeRun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.builders.MapBuilder$EntryRef: MapBuilder$EntryRef(kotlin.collections.builders.MapBuilder,int)
kotlinx.coroutines.CompletedContinuation: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: int minOrThrow(int[])
androidx.lifecycle.LiveDataScopeImpl: java.lang.Object getLatestValue()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float minOf(float,float)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
kotlin.ULongArray$Iterator: long next-s-VKNKU()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: java.lang.Boolean get(int)
androidx.core.os.BuildCompat: boolean isAtLeastO()
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$FlagEntry[] flagMapping()
androidx.core.util.SparseArrayKt$valueIterator$1: int getIndex()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)
kotlin.ranges.URangesKt___URangesKt: kotlin.ULong randomOrNull(kotlin.ranges.ULongRange)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getPERMIT$p()
androidx.window.WindowSdkExtensions$Companion$getInstance$1: WindowSdkExtensions$Companion$getInstance$1()
kotlinx.coroutines.CompletedWithCancellation: boolean equals(java.lang.Object)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
kotlin.sequences.TakeWhileSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeWhileSequence)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.fragment.app.FragmentManager: boolean dispatchOptionsItemSelected(android.view.MenuItem)
androidx.core.view.ViewCompat: void setImportantForContentCapture(android.view.View,int)
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.core.widget.CheckedTextViewCompat$Api21Impl: void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode)
kotlin.io.LineReader: int decode(boolean)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void startCreatingLoader()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(long[])
kotlinx.coroutines.selects.SelectOldKt: java.lang.Object selectUnbiasedOld$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: java.util.Iterator invoke(kotlin.sequences.Sequence)
androidx.loader.content.CursorLoader: void onCanceled(android.database.Cursor)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
kotlin.io.FileTreeWalk: FileTreeWalk(java.io.File,kotlin.io.FileWalkDirection,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int)
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment access$findSegmentReceive(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void show(int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlin.io.NoSuchFileException: NoSuchFileException(java.io.File,java.io.File,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt__StringsKt$iterator$1: char nextChar()
androidx.core.database.CursorWindowCompat$Api28Impl: android.database.CursorWindow createCursorWindow(java.lang.String,long)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$drop$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: boolean close(java.lang.Throwable)
kotlin.random.Random: int nextInt(int,int)
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)
androidx.core.widget.EdgeEffectCompat: float onPullDistance(android.widget.EdgeEffect,float,float)
io.flutter.embedding.engine.loader.FlutterLoader: void lambda$ensureInitializationCompleteAsync$1(android.content.Context,java.lang.String[],android.os.Handler,java.lang.Runnable)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api30Impl: android.view.accessibility.AccessibilityWindowInfo instantiateAccessibilityWindowInfo()
androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)
androidx.collection.MapCollections: int colGetSize()
androidx.core.graphics.MatrixKt: android.graphics.Matrix translationMatrix(float,float)
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransition(int)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toSet(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path div(java.nio.file.Path,java.nio.file.Path)
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
kotlin.io.path.ExceptionsCollector: ExceptionsCollector(int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.Window,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat)
androidx.collection.LongSparseArray: void gc()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: FlowKt__ShareKt$launchSharing$1$2(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.StandardKt__StandardKt: StandardKt__StandardKt()
kotlin.collections.CollectionsKt__ReversedViewsKt: int reverseElementIndex$CollectionsKt__ReversedViewsKt(java.util.List,int)
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: NotificationCompat$BigPictureStyle$Api23Impl()
kotlin.NumbersKt__FloorDivModKt: short mod(byte,short)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3: StreamsKt$asSequence$$inlined$Sequence$3(java.util.stream.LongStream)
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
io.flutter.plugin.common.MethodChannel$Result: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate: android.view.PointerIcon getSystemPointerIcon(int)
kotlin.collections.AbstractMap: boolean containsValue(java.lang.Object)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger xor(java.math.BigInteger,java.math.BigInteger)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component1-rL5Bavg(short[])
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List)
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupBy-bBsjw1Y(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filter$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getLiveRegion()
kotlinx.coroutines.InvokeOnCancel: InvokeOnCancel(kotlin.jvm.functions.Function1)
kotlin.reflect.KTypeProjection: java.lang.String toString()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: java.lang.Object initSelectResult()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function6)
kotlin.StandardKt__StandardKt: java.lang.Object let(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.io.ConsoleKt: java.lang.String readLine()
androidx.activity.SystemBarStyle$Companion$auto$1: java.lang.Boolean invoke(android.content.res.Resources)
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: BufferedChannel$onReceiveOrNull$2()
kotlin.random.PlatformRandom$Companion: PlatformRandom$Companion()
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.flutter.embedding.engine.loader.ResourceExtractor: ResourceExtractor(java.lang.String,java.lang.String,android.content.pm.PackageManager,android.content.res.AssetManager)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(short[],short)
androidx.core.text.util.LocalePreferences$FirstDayOfWeek: LocalePreferences$FirstDayOfWeek()
androidx.window.area.WindowAreaControllerImpl$RearDisplayPresentationSessionConsumer: void accept(java.lang.Object)
kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlin.sequences.FlatteningSequence$iterator$1: FlatteningSequence$iterator$1(kotlin.sequences.FlatteningSequence)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.ArrayList arrayListOf(java.lang.Object[])
kotlin.io.encoding.DecodeInputStream: DecodeInputStream(java.io.InputStream,kotlin.io.encoding.Base64)
kotlinx.coroutines.flow.EmptyFlow: EmptyFlow()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
kotlin.time.DurationKt: void getNanoseconds$annotations(double)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence filterNotNull(kotlin.sequences.Sequence)
androidx.core.util.AtomicFile: java.io.File getBaseFile()
kotlin.Result: java.lang.String toString-impl(java.lang.Object)
androidx.loader.content.CursorLoader: void onStartLoading()
kotlin.ULong: long floorDiv-7apg3OU(long,byte)
kotlin.collections.MapsKt___MapsKt: java.util.List toList(java.util.Map)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean hasValidVendorApiLevel2$window_release()
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: FlowKt__DelayKt$sample$2(long,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long minOf-eb3DHEI(long,long)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$toList$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
kotlin.time.TimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
kotlin.collections.ArrayDeque: java.lang.Object[] testToArray$kotlin_stdlib()
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(char[],kotlin.jvm.functions.Function1)
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewKt$addTextChangedListener$1: void invoke(java.lang.CharSequence,int,int,int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$8: java.util.Iterator iterator()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(io.flutter.embedding.engine.FlutterEngineGroup$Options)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl: ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invoke(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUShort(kotlin.UShort[])
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1: FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__ErrorsKt$retryWhen$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
io.flutter.embedding.android.KeyData: KeyData()
kotlin.reflect.KClass$DefaultImpls: void isInner$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(short[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoop: boolean isActive()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: boolean equals(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$Api31Impl: ExtensionEmbeddingBackend$Api31Impl()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
kotlin.collections.ArraysKt___ArraysKt: long minOrThrow(long[])
kotlinx.coroutines.selects.OnTimeout$register$$inlined$Runnable$1: OnTimeout$register$$inlined$Runnable$1(kotlinx.coroutines.selects.SelectInstance,kotlinx.coroutines.selects.OnTimeout)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.BackStackState: int describeContents()
androidx.core.os.ParcelCompat$Api33Impl: ParcelCompat$Api33Impl()
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int,int)
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender()
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)
androidx.core.util.SparseArrayKt: java.util.Iterator valueIterator(android.util.SparseArray)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(android.graphics.Rect)
androidx.core.view.ViewCompat$4: java.lang.Boolean frameworkGet(android.view.View)
kotlin.collections.LongIterator: long nextLong()
io.flutter.embedding.engine.dart.PlatformTaskQueue: void dispatch(java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: char reduceRight(char[],kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNotificationSilent()
androidx.window.core.PredicateAdapter$BaseHandler: boolean isToString(java.lang.reflect.Method,java.lang.Object[])
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.inputmethod.InputContentInfoCompat: java.lang.Object unwrap()
androidx.core.util.PairKt: java.lang.Object component1(android.util.Pair)
kotlinx.coroutines.Job: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
androidx.lifecycle.LiveDataScopeImpl: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectKt: java.lang.Object select$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.graphics.PathKt: android.graphics.Path xor(android.graphics.Path,android.graphics.Path)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(byte[],kotlin.jvm.functions.Function1)
androidx.core.text.util.LocalePreferences$Api33Impl: LocalePreferences$Api33Impl()
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.service.ServiceControlSurface getServiceControlSurface()
androidx.loader.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object fold(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,int)
io.flutter.plugin.common.MethodChannel$Result: void success(java.lang.Object)
androidx.core.app.NotificationCompat$TvExtender: androidx.core.app.NotificationCompat$TvExtender setSuppressShowOverApps(boolean)
kotlin.ranges.RangesKt___RangesKt: java.lang.Comparable coerceIn(java.lang.Comparable,kotlin.ranges.ClosedRange)
androidx.core.util.SparseBooleanArrayKt: boolean containsKey(android.util.SparseBooleanArray,int)
kotlin.collections.CollectionsKt___CollectionsKt: void forEach(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentHostCallback: void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyInto-sIZ3KeM(int[],int[],int,int,int)
androidx.core.app.NotificationCompat$Api29Impl: int getEditChoicesBeforeSending(android.app.RemoteInput)
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void probeCoroutineCompleted(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()
io.flutter.embedding.android.FlutterFragmentActivity: android.view.View createFragmentContainer()
androidx.core.transition.TransitionKt$addListener$4: void invoke(android.transition.Transition)
androidx.core.util.SparseArrayKt: void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: double tan(double)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort findLast-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(double[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.view.MarginLayoutParamsCompat: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
kotlinx.coroutines.channels.BufferedChannelKt: kotlin.reflect.KFunction createSegmentFunction()
androidx.core.graphics.drawable.RoundedBitmapDrawable21: void setMipMap(boolean)
androidx.core.view.WindowInsetsCompat$Type: int displayCutout()
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
kotlin.collections.AbstractMutableCollection: AbstractMutableCollection()
kotlin.ranges.RangesKt___RangesKt: char first(kotlin.ranges.CharProgression)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,int,int)
kotlinx.coroutines.channels.BufferedChannel: int updateCellSend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.math.MathKt__MathJVMKt: double withSign(double,double)
androidx.core.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-GBYM_sE(byte[])
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.fragment.app.DefaultSpecialEffectsController: void collectEffects(java.util.List,boolean)
kotlinx.coroutines.debug.internal.DebugProbesImpl: int findIndexOfFrame(int,java.lang.StackTraceElement[],java.util.List)
androidx.activity.ComponentActivity$1$1: void run()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.SplitController$SplitSupportStatus getSplitSupportStatus()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Iterable withIndex-QwZRm1k(long[])
androidx.fragment.app.FragmentActivity: void lambda$init$3(android.content.Context)
kotlin.collections.ArrayDeque: java.lang.Object internalGet(int)
androidx.core.text.util.LinkifyCompat: void pruneOverlaps(java.util.ArrayList,android.text.Spannable)
kotlinx.coroutines.DefaultExecutor: void ensureStarted$kotlinx_coroutines_core()
kotlinx.coroutines.ThreadState: void setup()
kotlinx.coroutines.flow.FlowKt__EmittersKt: void ensureActive(kotlinx.coroutines.flow.FlowCollector)
androidx.fragment.app.strictmode.FragmentStrictMode: void onGetTargetFragmentRequestCodeUsage(androidx.fragment.app.Fragment)
androidx.activity.result.ActivityResult$1: ActivityResult$1()
androidx.activity.result.contract.ActivityResultContracts$TakeVideo: android.content.Intent createIntent(android.content.Context,android.net.Uri)
androidx.fragment.app.ListFragment: void setListShownNoAnimation(boolean)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object)
kotlin.collections.TypeAliasesKt: void HashSet$annotations()
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)
kotlinx.coroutines.JobCancellationException: int hashCode()
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.SavedStateHandlesProvider: androidx.lifecycle.SavedStateHandlesVM getViewModel()
io.flutter.embedding.android.FlutterView: void init()
androidx.fragment.app.BackStackRecordState$1: androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.adapter.WindowBackend)
kotlinx.coroutines.intrinsics.UndispatchedKt: java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next()
androidx.collection.MapCollections$ValuesCollection: int size()
kotlin.collections.builders.MapBuilderValues: boolean remove(java.lang.Object)
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forScreeningCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
androidx.core.view.ViewCompat: void setAccessibilityHeading(android.view.View,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.Ref$ShortRef: java.lang.String toString()
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: SchedulerCoroutineDispatcher(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle cancelFutureOnCompletion(kotlinx.coroutines.Job,java.util.concurrent.Future)
com.getkeepsafe.relinker.SystemLibraryLoader: java.lang.String unmapLibraryName(java.lang.String)
kotlin.time.DurationKt: void getMinutes$annotations(double)
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(kotlin.reflect.KClassifier)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void shuffle(java.util.List)
kotlin.ULong: long plus-xj2QHRw(long,short)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(short[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceRightIndexedOrNull(boolean[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(boolean[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String getDataMimeType()
androidx.core.graphics.ColorKt: float component4(android.graphics.Color)
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,java.lang.Object[])
androidx.lifecycle.ProcessLifecycleOwner: void activityPaused$lifecycle_process_release()
io.flutter.embedding.engine.loader.ResourceExtractor: void access$100(java.lang.String,java.util.HashSet)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.collections.Grouping groupingBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object reduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalCpuWork()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean randomOrNull(boolean[],kotlin.random.Random)
io.flutter.plugin.common.BinaryMessenger: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue()
kotlin.collections.LongIterator: LongIterator()
kotlinx.coroutines.flow.FlowKt: java.lang.Void noImpl()
androidx.window.java.area.WindowAreaControllerCallbackAdapter: WindowAreaControllerCallbackAdapter(androidx.window.area.WindowAreaController)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(int[])
androidx.fragment.app.FragmentManager$2: void onPrepareMenu(android.view.Menu)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minWithOrNull-XMRcp5o(byte[],java.util.Comparator)
kotlinx.coroutines.CopyableThreadContextElement: kotlin.coroutines.CoroutineContext mergeForChild(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.channels.BroadcastChannelImpl: void registerSelectForSend(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterNotTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function1)
io.flutter.view.TextureRegistry: void onTrimMemory(int)
androidx.core.location.LocationRequestCompat$Api19Impl: java.lang.Object toLocationRequest(androidx.core.location.LocationRequestCompat,java.lang.String)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(byte,int)
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setMaxAspectRatioInPortrait(androidx.window.embedding.EmbeddingAspectRatio)
androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)
androidx.core.view.MenuCompat$Api28Impl: MenuCompat$Api28Impl()
kotlin.text.StringsKt__StringsKt: boolean matches(java.lang.CharSequence,kotlin.text.Regex)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableSet(java.lang.Object)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api34Impl: void notifyViewsAppeared(android.view.contentcapture.ContentCaptureSession,java.util.List)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.collections.ArraysKt___ArraysKt: long[] sliceArray(long[],kotlin.ranges.IntRange)
kotlin.text.StringsKt__StringsKt: boolean isEmpty(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setInitialRoute(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(char[],kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)
androidx.concurrent.futures.AbstractResolvableFuture: boolean isDone()
androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.core.os.BuildCompat: boolean isAtLeastV()
kotlin.collections.CollectionsKt___CollectionsKt: float minOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.io.ByteStreamsKt$iterator$1: boolean getNextPrepared()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.time.DurationKt: long access$millisToNanos(long)
kotlinx.coroutines.DisposeOnCompletion: void invoke(java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAllowSystemGeneratedContextualActions(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte firstOrNull(byte[])
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlin.collections.TypeAliasesKt: void ArrayList$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: java.util.Iterator invoke()
kotlin.io.path.PathRelativizer: PathRelativizer()
io.flutter.embedding.android.KeyboardManager$ViewDelegate: void redispatch(android.view.KeyEvent)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.ExclusiveAppComponent getExclusiveAppComponent()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()
kotlin.collections.unsigned.UArraysKt___UArraysKt: short last-xTcfx_M(short[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineGroup$Options: java.lang.String getInitialRoute()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long)
androidx.lifecycle.LiveData: LiveData(java.lang.Object)
androidx.core.content.pm.PackageInfoCompat: java.util.List getSignatures(android.content.pm.PackageManager,java.lang.String)
kotlinx.coroutines.channels.ActorKt: kotlinx.coroutines.channels.SendChannel actor$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.profileinstaller.DeviceProfileWriter: void lambda$result$0(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$withIndex$8: java.util.Iterator invoke()
kotlin.io.FileTreeWalk: kotlin.io.FileWalkDirection access$getDirection$p(kotlin.io.FileTreeWalk)
kotlinx.coroutines.flow.StateFlowImpl: kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
androidx.core.app.NotificationCompatBuilder$Api23Impl: NotificationCompatBuilder$Api23Impl()
androidx.core.text.util.LocalePreferences$HourCycle: LocalePreferences$HourCycle()
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(boolean[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BigPictureStyle: void restoreFromCompatExtras(android.os.Bundle)
kotlinx.coroutines.flow.internal.StackFrameContinuation: java.lang.StackTraceElement getStackTraceElement()
androidx.fragment.app.FragmentManager: boolean executePendingTransactions()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: boolean isReleased()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.UIntArray: java.lang.Object[] toArray(java.lang.Object[])
androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
kotlinx.coroutines.InvokeOnCancel: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentContainer: FragmentContainer()
kotlin.ranges.ComparableOpenEndRange: java.lang.Comparable getEndExclusive()
androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxHeight(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1(kotlinx.coroutines.channels.BufferedChannel)
kotlin.text.RegexKt: kotlin.ranges.IntRange access$range(java.util.regex.MatchResult)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
org.intellij.lang.annotations.Language: java.lang.String prefix()
androidx.core.os.ConfigurationCompat: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minWithOrThrow(kotlin.sequences.Sequence,java.util.Comparator)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isRemoved()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int indexOf(short)
androidx.window.layout.adapter.extensions.ExtensionWindowBackend: ExtensionWindowBackend(androidx.window.layout.adapter.WindowBackend)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: double maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt__ArraysJVMKt: ArraysKt__ArraysJVMKt()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAvailableExtraData(java.util.List)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)
kotlin.io.path.DirectoryEntriesReader: boolean getFollowLinks()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension(android.content.Context)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
androidx.core.database.sqlite.SQLiteDatabaseKt: java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double first(double[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt$groupingBy$1: java.util.Iterator sourceIterator()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.core.app.Person: android.app.Person toAndroidPerson()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
io.flutter.embedding.engine.FlutterEngine: void destroy()
androidx.core.hardware.display.DisplayManagerCompat: DisplayManagerCompat(android.content.Context)
kotlin.UByteArray: boolean removeAll(java.util.Collection)
androidx.core.view.ViewCompat: float getTranslationX(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: char minOrThrow(char[])
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntRange until-Kr8caGY(byte,byte)
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
kotlin.text.StringsKt___StringsKt: java.lang.String dropWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1(java.lang.Object[])
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion: androidx.window.sidecar.SidecarInterface getSidecarCompat$window_release(android.content.Context)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.SharedFlow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List drop-r7IrZao(long[],int)
androidx.core.view.MenuItemCompat: MenuItemCompat()
android.support.v4.os.IResultReceiver2$Default: void send(int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.app.NotificationCompat$Api29Impl: android.app.Notification$BubbleMetadata getBubbleMetadata(android.app.Notification)
io.flutter.util.ViewUtils: boolean childHasFocus(android.view.View)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: boolean hasNext()
kotlin.text.StringsKt__StringsJVMKt: java.util.Comparator getCASE_INSENSITIVE_ORDER(kotlin.jvm.internal.StringCompanionObject)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterIsInstanceTo(java.lang.Iterable,java.util.Collection)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: AbstractDoubleTimeSource$DoubleTimeMark(double,kotlin.time.AbstractDoubleTimeSource,long,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.text.StringsKt___StringsKt: java.lang.Object maxOfWith(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow sample(kotlinx.coroutines.flow.Flow,long)
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,int)
kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(boolean[],boolean)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.os.ParcelCompat$Api30Impl: android.os.Parcelable$Creator readParcelableCreator(android.os.Parcel,java.lang.ClassLoader)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1: void onTransitionResume(android.transition.Transition)
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.graphics.Insets getUpperBound()
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ReduceKt$single$2: FlowKt__ReduceKt$single$2(kotlin.jvm.internal.Ref$ObjectRef)
kotlin.time.ComparableTimeMark: int hashCode()
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.window.WindowSdkExtensions$Companion: WindowSdkExtensions$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int)
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: SubscribedSharedFlow$collect$1(kotlinx.coroutines.flow.SubscribedSharedFlow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: byte maxOrThrow(byte[])
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List orEmpty(java.util.List)
androidx.window.WindowSdkExtensions$Companion: androidx.window.WindowSdkExtensions getInstance()
com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long)
androidx.core.text.util.LocalePreferences$Api33Impl: java.lang.String getHourCycle(java.util.Locale)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2: boolean hasRegisteredListeners()
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1: KeyboardChannel$1(io.flutter.embedding.engine.systemchannels.KeyboardChannel)
androidx.customview.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)
kotlin.collections.EmptyList: java.lang.Object remove(int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: void insecureEnterDirectory$PathsKt__PathRecursiveFunctionsKt(java.nio.file.Path,kotlin.io.path.ExceptionsCollector)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(java.lang.Object[],int,int,int,java.lang.Object)
kotlinx.coroutines.Unconfined: Unconfined()
kotlin.collections.ArrayAsCollection: java.util.Iterator iterator()
kotlinx.coroutines.channels.ChannelCoroutine: boolean isEmpty()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyInto(double[],double[],int,int,int)
androidx.window.area.utils.DeviceMetrics: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,kotlin.text.Regex)
androidx.window.area.WindowAreaController: void transferActivityToWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback)
kotlin.collections.builders.ListBuilder: boolean isEffectivelyReadOnly()
androidx.core.location.GnssStatusWrapper$Api30Impl: boolean hasBasebandCn0DbHz(android.location.GnssStatus,int)
androidx.fragment.app.FragmentManager: void cancelBackStackTransition()
androidx.core.view.ContentInfoCompat$Compat: int getSource()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
kotlin.ranges.CharProgressionIterator: char nextChar()
androidx.core.graphics.PathKt: java.lang.Iterable flatten$default(android.graphics.Path,float,int,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.math.BigInteger sumOfBigInteger(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.animation.AnimatorKt$addListener$4: AnimatorKt$addListener$4()
androidx.window.embedding.SplitAttributes: androidx.window.embedding.SplitAttributes$SplitType getSplitType()
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void lambda$onStopped$1(java.util.concurrent.Executor)
kotlin.UByte: int rem-xj2QHRw(byte,short)
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(boolean[],boolean)
androidx.lifecycle.ViewModel: void addCloseable(java.io.Closeable)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$doSelectSuspend(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlin.time.DurationKt: long nanosToMillis(long)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForPanZoom(int)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
io.flutter.view.TextureRegistry$-CC: void $default$onTrimMemory(io.flutter.view.TextureRegistry,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(char[],kotlin.jvm.functions.Function2)
kotlin.sequences.FlatteningSequence$iterator$1: boolean ensureItemIterator()
androidx.fragment.app.FragmentActivity: void onStart()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnSpan()
kotlinx.coroutines.future.CompletableFutureCoroutine: void onCompleted(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyInto$default(boolean[],boolean[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: OnUndeliveredElementKt$bindCancellationFun$1(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlin.random.URandomKt: int nextUInt-a8DCA5k(kotlin.random.Random,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2(kotlin.jvm.functions.Function1)
androidx.window.core.PredicateAdapter$BaseHandler: boolean isHashCode(java.lang.reflect.Method,java.lang.Object[])
androidx.window.core.FailedSpecification: androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.UIntArray: int hashCode-impl(int[])
io.flutter.embedding.engine.loader.ResourceExtractor: long getVersionCode(android.content.pm.PackageInfo)
androidx.core.util.Preconditions: int checkFlagsArgument(int,int)
androidx.viewpager.widget.PagerAdapter: void notifyDataSetChanged()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[])
kotlin.jvm.internal.SpreadBuilder: void addSpread(java.lang.Object)
androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
kotlin.collections.builders.MapBuilder$EntryRef: java.lang.Object getKey()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(char[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNot(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
androidx.core.app.NotificationCompat$Action$Builder$Api28Impl: NotificationCompat$Action$Builder$Api28Impl()
kotlin.collections.CollectionsKt__MutableCollectionsKt: void minusAssign(java.util.Collection,java.lang.Object[])
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)
kotlin.collections.CollectionsKt___CollectionsKt: int sumOfShort(java.lang.Iterable)
androidx.core.graphics.drawable.DrawableKt: void updateBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api29Impl: ContentCaptureSessionCompat$Api29Impl()
kotlin.io.path.PathsKt__PathUtilsKt: void getInvariantSeparatorsPath$annotations(java.nio.file.Path)
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$2: ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$2()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast$default(java.lang.String,char,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.activity.ComponentActivity$4: ComponentActivity$4(androidx.activity.ComponentActivity)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: DatagramSocketWrapper$DatagramSocketImplWrapper(java.net.DatagramSocket,java.io.FileDescriptor)
kotlin.Result: java.lang.Object getOrNull-impl(java.lang.Object)
kotlin.collections.MapWithDefaultImpl: int hashCode()
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentStatePagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.core.app.JobIntentService: boolean doStopCurrentWork()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minByOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateActivityPredicates$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-oBK06Vg(int[],int,int)
androidx.core.graphics.PathSegment: android.graphics.PointF getEnd()
kotlin.NumbersKt__FloorDivModKt: long floorDiv(int,long)
kotlin.collections.AbstractMap$values$1$iterator$1: void remove()
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
kotlinx.coroutines.CompletionHandlerBase: void invoke(java.lang.Throwable)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: ExploreByTouchHelper$MyNodeProvider(androidx.customview.widget.ExploreByTouchHelper)
kotlin.sequences.SequencesKt___SequencesKt$minus$2$iterator$1: SequencesKt___SequencesKt$minus$2$iterator$1(java.lang.Object[])
androidx.core.app.NotificationCompat$CarExtender$Api29Impl: int getEditChoicesBeforeSending(android.app.RemoteInput)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invokeSuspend(java.lang.Object)
androidx.viewpager.widget.PagerTitleStrip: void setTextColor(int)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,byte)
androidx.core.content.ContextCompat$Api30Impl: java.lang.String getAttributionTag(android.content.Context)
kotlinx.coroutines.AbstractTimeSource: void trackTask()
kotlin.collections.CollectionsKt___CollectionsKt: void sortByDescending(java.util.List,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding(android.content.ContentProvider)
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext)
androidx.core.widget.ContentLoadingProgressBar: void showOnUiThread()
androidx.activity.OnBackPressedDispatcher: void access$onBackProgressed(androidx.activity.OnBackPressedDispatcher,androidx.activity.BackEventCompat)
kotlin.text.MatchResult$Destructured: java.util.List toList()
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1$emit$1: FlowKt__LimitKt$collectWhile$collector$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1,kotlin.coroutines.Continuation)
androidx.tracing.Trace: void forceEnableAppTracing()
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
kotlin.NumbersKt__BigIntegersKt: NumbersKt__BigIntegersKt()
kotlin.jvm.internal.ArrayBooleanIterator: ArrayBooleanIterator(boolean[])
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause1 getOnReceiveCatching()
androidx.core.app.NotificationChannelCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
androidx.core.app.NotificationCompat$Api29Impl: NotificationCompat$Api29Impl()
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])
kotlin.io.FilesKt__FilePathComponentsKt: int getRootLength$FilesKt__FilePathComponentsKt(java.lang.String)
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1: java.lang.Boolean invoke()
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setDeclineButtonColorHint(android.app.Notification$CallStyle,int)
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.core.app.PendingIntentCompat: void send(android.app.PendingIntent,android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)
androidx.lifecycle.LiveDataScopeImpl$emitSource$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.widget.CheckedTextViewCompat: void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode)
androidx.core.content.FileProvider: java.lang.String removeTrailingSlash(java.lang.String)
androidx.core.view.WindowInsetsAnimationControllerCompat: void finish(boolean)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1: FlowKt__MergeKt$flattenConcat$1$1(kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.ArraysKt___ArraysKt: java.util.List reversed(float[])
androidx.lifecycle.LegacySavedStateHandleController: LegacySavedStateHandleController()
kotlin.time.DurationKt: long getMinutes(double)
kotlin.PropertyReferenceDelegatesKt: java.lang.Object getValue(kotlin.reflect.KProperty1,java.lang.Object,kotlin.reflect.KProperty)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
androidx.core.view.NestedScrollingParent2: void onStopNestedScroll(android.view.View,int)
kotlin.math.MathKt__MathJVMKt: float withSign(float,int)
kotlin.random.Random$Default: int nextInt()
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt$withIndex$6: ArraysKt___ArraysKt$withIndex$6(float[])
kotlin.io.path.PathNode: java.lang.Object getKey()
kotlinx.coroutines.sync.MutexImpl: void onLockRegFunction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed$default(java.lang.Iterable,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.lifecycle.LiveData: boolean hasObservers()
kotlinx.coroutines.NonCancellable: kotlin.sequences.Sequence getChildren()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: CombineKt$zipImpl$1$1$second$1$1$emit$1(kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ArrayShortIterator: short nextShort()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List take(java.lang.Iterable,int)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$2(byte[])
kotlinx.coroutines.stream.StreamFlow: StreamFlow(java.util.stream.Stream)
kotlin.text.RegexKt: kotlin.text.MatchResult findNext(java.util.regex.Matcher,int,java.lang.CharSequence)
androidx.profileinstaller.ProfileTranscoder: void writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt reduceRightIndexedOrNull-D40WMg8(int[],kotlin.jvm.functions.Function3)
kotlin.math.MathKt__MathJVMKt: double withSign(double,int)
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,short)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
androidx.fragment.app.Fragment$8: java.lang.Object apply(java.lang.Object)
kotlinx.coroutines.flow.StateFlowSlot: boolean allocateLocked(java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Companion: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityResumed(android.app.Activity)
kotlinx.coroutines.scheduling.WorkQueue: void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue)
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getChildNonConfigs()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(long[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,int)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
kotlin.time.AdjustedTimeMark: boolean hasPassedNow()
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyInto$default(char[],char[],int,int,int,int,java.lang.Object)
kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()
kotlin.random.Random: byte[] nextBytes$default(kotlin.random.Random,byte[],int,int,int,java.lang.Object)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
kotlin.math.MathKt__MathJVMKt: float asin(float)
androidx.activity.ComponentActivity: void onPanelClosed(int,android.view.Menu)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26: void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path)
kotlin.random.Random: byte[] nextBytes(byte[])
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt: void cancel$default(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable,int,java.lang.Object)
androidx.core.view.ContentInfoCompat$CompatImpl: android.content.ClipData getClip()
androidx.window.core.Bounds: int getWidth()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
kotlin.ranges.RangesKt___RangesKt: short coerceAtMost(short,short)
androidx.window.reflection.ReflectionUtils: ReflectionUtils()
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: java.lang.Boolean parseResult(int,android.content.Intent)
kotlin.text.UStringsKt: int toUInt(java.lang.String,int)
kotlin.coroutines.CoroutineContext$Element: kotlin.coroutines.CoroutineContext$Key getKey()
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(short[],short[])
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle(androidx.core.app.NotificationCompat$Builder)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int get-pVg5ArA(int)
androidx.core.view.ViewKt$doOnAttach$1: ViewKt$doOnAttach$1(android.view.View,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment: void onStop()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.fragment.app.BackStackRecord: void executePopOps()
kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(char[],char,int,int)
kotlinx.coroutines.channels.BufferedChannel$onReceiveCatching$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult[] values()
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcel)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setDisplayMetrics(android.util.DisplayMetrics)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: short elementAt-nggk6HY(short[],int)
androidx.activity.result.contract.ActivityResultContracts$OpenDocument: ActivityResultContracts$OpenDocument()
androidx.loader.content.Loader: boolean onCancelLoad()
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.FlutterView$3: void onFlutterUiNoLongerDisplayed()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.OpenEndRange,long)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String typeToString(int)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(boolean[],boolean[])
kotlin.ranges.ULongRange: boolean isEmpty()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException: CallbackToFutureAdapter$FutureGarbageCollectedException(java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$2: java.lang.Object invoke-WpGqRn0(java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: android.content.Intent createIntent(android.content.Context,androidx.activity.result.PickVisualMediaRequest)
kotlin.text.Typography: void getRightGuillemete$annotations()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(double[],int,int,int,java.lang.Object)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.io.path.PathTreeWalk$bfsIterator$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object single(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.DoubleCompanionObject: double getNEGATIVE_INFINITY()
androidx.window.embedding.EmbeddingInterfaceCompat: void invalidateTopVisibleSplitAttributes()
io.flutter.embedding.android.FlutterView$4: FlutterView$4(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
kotlinx.coroutines.JobKt: java.lang.Object cancelAndJoin(kotlinx.coroutines.Job,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
kotlin.ranges.ComparableRange: java.lang.Comparable getEndInclusive()
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(boolean[],kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilderKeys: boolean addAll(java.util.Collection)
androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context)
androidx.window.layout.adapter.WindowBackend$-CC: boolean $default$hasRegisteredListeners(androidx.window.layout.adapter.WindowBackend)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element)
androidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[])
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence chunkedSequence(java.lang.CharSequence,int)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component1--ajY-9A(int[])
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowSourceBounds()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionEnd()
kotlin.text.CharsKt__CharJVMKt: java.lang.String uppercase(char)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: FlutterFragment$CachedEngineFragmentBuilder(java.lang.String)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: int getLayer(android.view.accessibility.AccessibilityWindowInfo)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int reduceRight-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.text.CharsKt__CharJVMKt: boolean isLetterOrDigit(char)
kotlin.collections.CollectionsKt___CollectionsKt: char[] toCharArray(java.util.Collection)
kotlinx.coroutines.flow.FlowKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void cancel(java.lang.String,int,java.lang.String)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2: ComparisonsKt__ComparisonsKt$compareBy$2(kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object)
kotlin.ULongArray: java.util.Iterator iterator-impl(long[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(char[],kotlin.ranges.IntRange)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(int[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt__SequencesKt: SequencesKt__SequencesKt()
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
androidx.core.location.LocationCompat$Api26Impl: boolean hasSpeedAccuracy(android.location.Location)
androidx.core.app.ActivityCompat: void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle)
androidx.core.location.LocationRequestCompat: long getMinUpdateIntervalMillis()
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
kotlin.jvm.JvmSuppressWildcards: boolean suppress()
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1)
kotlin.text.MatchResult: kotlin.text.MatchResult next()
kotlin.text.StringsKt___StringsKt: boolean none(java.lang.CharSequence)
io.flutter.plugin.common.BinaryMessenger$-CC: void $default$enableBufferingIncomingMessages(io.flutter.plugin.common.BinaryMessenger)
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture: void run()
kotlinx.coroutines.channels.BufferedChannel: void completeCancel(long)
androidx.profileinstaller.Encoding: void writeUInt8(java.io.OutputStream,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean lastOrNull(boolean[])
androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.lang.Object minOfWithOrNull(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsKt: CollectionsKt__CollectionsKt()
androidx.lifecycle.EmittedSource: EmittedSource(androidx.lifecycle.LiveData,androidx.lifecycle.MediatorLiveData)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-WyvcNBI(int[],kotlin.jvm.functions.Function2)
kotlin.text.RegexOption: RegexOption(java.lang.String,int,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()
kotlin.ExceptionsKt__ExceptionsKt: java.lang.StackTraceElement[] getStackTrace(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float firstOrNull(float[],kotlin.jvm.functions.Function1)
androidx.core.graphics.ColorKt: long toColorLong(int)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(char[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-H21X9dk(byte[],java.util.Map,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$StringAttributeType: AccessibilityBridge$StringAttributeType(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow timeout-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
io.flutter.plugin.platform.PlatformViewsController: void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.embedding.android.KeyEmbedderResponder: void synthesizeEvent(boolean,java.lang.Long,java.lang.Long,long)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.core.app.NotificationManagerCompat$Api24Impl: NotificationManagerCompat$Api24Impl()
io.flutter.plugin.platform.PlatformViewsController: void diposeAllViews()
kotlinx.coroutines.DisposeOnCancel: java.lang.String toString()
kotlin.ranges.OpenEndDoubleRange: java.lang.Double getEndExclusive()
kotlinx.coroutines.ResumeOnCompletion: ResumeOnCompletion(kotlin.coroutines.Continuation)
androidx.core.location.GnssStatusCompat: boolean usedInFix(int)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.core.view.WindowInsetsCompat computeWindowInsetsCompat$window_release(android.content.Context)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object reduceOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long first-QwZRm1k(long[])
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
kotlinx.coroutines.internal.MainDispatcherFactory: int getLoadPriority()
androidx.core.widget.TextViewCompat$OreoCallback: void recomputeProcessTextMenuItems(android.view.Menu)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: IntrinsicsKt__IntrinsicsJvmKt()
androidx.core.content.res.GrowingArrayUtils: GrowingArrayUtils()
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1: SettingsChannel$ConfigurationQueue$1(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue,io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration)
androidx.annotation.Dimension$Companion: Dimension$Companion()
kotlinx.coroutines.channels.BufferedChannelKt: long access$constructSendersAndCloseStatus(long,int)
kotlinx.coroutines.CompletedContinuation: int hashCode()
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: FlowKt__CountKt$count$1(kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: void setLinkUri(android.net.Uri)
kotlin.jvm.internal.MutablePropertyReference2Impl: MutablePropertyReference2Impl(java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.embedding.SplitController$SplitSupportStatus$Companion: SplitController$SplitSupportStatus$Companion()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,java.lang.String[],boolean)
kotlin.sequences.SequencesKt___SequencesKt$minus$4: java.util.Iterator iterator()
androidx.fragment.app.Fragment$7: androidx.activity.result.ActivityResultRegistry apply(java.lang.Void)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
kotlin.io.ExposingBufferByteArrayOutputStream: ExposingBufferByteArrayOutputStream(int)
kotlinx.coroutines.channels.BroadcastCoroutine: boolean isClosedForSend()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()
kotlin.collections.AbstractMap$values$1$iterator$1: boolean hasNext()
kotlin.collections.CollectionsKt___CollectionsKt: boolean any(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.view.NestedScrollingChild: boolean startNestedScroll(int)
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener: void onPreEngineRestart()
androidx.core.view.ViewCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentTabHost$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.lifecycle.LifecycleRegistry$Companion: LifecycleRegistry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasWindowAnimations()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void isClosedForReceive$annotations()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
kotlinx.coroutines.AbstractCoroutine: void afterResume(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow catch(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: void flushField()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
kotlin.collections.builders.MapBuilder: int hash(java.lang.Object)
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object awaitPending(kotlin.coroutines.Continuation)
androidx.core.app.Person: Person(androidx.core.app.Person$Builder)
com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String,java.lang.String)
androidx.core.content.IntentSanitizer: boolean access$1302(androidx.core.content.IntentSanitizer,boolean)
io.flutter.embedding.android.KeyChannelResponder: void lambda$handleEvent$0(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)
androidx.core.view.MenuProvider: boolean onMenuItemSelected(android.view.MenuItem)
androidx.core.content.res.CamUtils: float lerp(float,float,float)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] plus(java.lang.Object[],java.lang.Object)
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: ProduceKt$awaitClose$2()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle)
androidx.fragment.app.Fragment: boolean isResumed()
androidx.core.graphics.RectKt: android.graphics.RectF transform(android.graphics.RectF,android.graphics.Matrix)
androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)
androidx.customview.view.AbsSavedState$2: AbsSavedState$2()
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
kotlin.ranges.OpenEndRange: java.lang.Comparable getStart()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
org.intellij.lang.annotations.Language: java.lang.String value()
kotlin.sequences.USequencesKt___USequencesKt: int sumOfUShort(kotlin.sequences.Sequence)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float minWithOrThrow(float[],java.util.Comparator)
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailTo()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(long[],long[])
kotlin.text.StringsKt___StringsKt: char last(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.core.view.VelocityTrackerFallback: VelocityTrackerFallback()
kotlin.jvm.internal.FloatCompanionObject: float getMIN_VALUE()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getCallingApplicationLabel()
androidx.tracing.TraceApi29Impl: boolean isEnabled()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$500(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: ShortcutInfoCompatSaver$NoopImpl()
androidx.window.embedding.SplitPlaceholderRule: boolean isSticky()
androidx.lifecycle.LifecycleController: void observer$lambda$0(androidx.lifecycle.LifecycleController,kotlinx.coroutines.Job,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.util.SparseArrayKt: android.util.SparseArray plus(android.util.SparseArray,android.util.SparseArray)
io.flutter.plugin.platform.PlatformOverlayView: boolean onHoverEvent(android.view.MotionEvent)
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: long last(long[],kotlin.jvm.functions.Function1)
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
kotlinx.coroutines.internal.DispatchedContinuation: boolean isReusable()
androidx.versionedparcelable.VersionedParcelStream: void writeStrongBinder(android.os.IBinder)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort min-rL5Bavg(short[])
androidx.core.view.ViewGroupKt: void updateMargins(android.view.ViewGroup$MarginLayoutParams,int,int,int,int)
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator getItemIterator()
androidx.core.service.quicksettings.TileServiceCompat$TileServiceWrapper: void startActivityAndCollapse(android.app.PendingIntent)
androidx.core.graphics.PointKt: android.graphics.PointF minus(android.graphics.PointF,android.graphics.PointF)
androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$EnumEntry[] enumMapping()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object foldIndexed(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.FlutterEngineGroupCache: void clear()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$ValuesItr valuesIterator$kotlin_stdlib()
io.flutter.plugin.platform.PlatformViewWrapper: boolean onTouchEvent(android.view.MotionEvent)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float maxOf(float,float,float)
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
androidx.loader.content.ModernAsyncTask$3: void done()
androidx.core.graphics.BitmapKt: int get(android.graphics.Bitmap,int,int)
kotlin.collections.MapsKt___MapsKt: MapsKt___MapsKt()
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int getAVAILABLE_PROCESSORS()
androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)
kotlinx.coroutines.flow.FlowKt: java.lang.Object single(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
kotlin.collections.builders.ListBuilder: int retainOrRemoveAllInternal(int,int,java.util.Collection,boolean)
androidx.core.graphics.PathSegment: PathSegment(android.graphics.PointF,float,android.graphics.PointF,float)
kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,short)
androidx.customview.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort lastOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxWithOrNull(short[],java.util.Comparator)
androidx.core.os.ProcessCompat$Api19Impl: boolean isApplicationUid(int)
kotlin.ULongArray: boolean isEmpty-impl(long[])
kotlin.jvm.internal.BooleanSpreadBuilder: boolean[] toArray()
kotlin.text.MatcherMatchResult$groupValues$1: int lastIndexOf(java.lang.Object)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: void requestPermission()
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
androidx.core.view.contentcapture.ContentCaptureSessionCompat: void notifyViewsDisappeared(long[])
kotlin.coroutines.CoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.ShortIterator: java.lang.Object next()
kotlin.collections.MapsKt___MapsKt: boolean all(java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
kotlin.text.Regex: boolean containsMatchIn(java.lang.CharSequence)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void access$setContinuation$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,kotlinx.coroutines.CancellableContinuationImpl)
androidx.window.embedding.EmbeddingAspectRatio: float getValue$window_release()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: int lastIndexOf(java.lang.Object)
kotlin.enums.EnumEntriesSerializationProxy$Companion: EnumEntriesSerializationProxy$Companion()
androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.List,int)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
kotlin.time.DurationKt: long getHours(double)
kotlin.text.StringsKt___StringsKt: java.lang.Comparable maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathReadWriteKt: PathsKt__PathReadWriteKt()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: void requestPermission()
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$2: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$onLock$2: MutexImpl$onLock$2()
androidx.core.content.res.ConfigurationHelper: ConfigurationHelper()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object awaitValue(kotlinx.coroutines.flow.SharedFlowSlot,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(int[],int,int,int,java.lang.Object)
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: AccessibilityNodeInfoCompat$RangeInfoCompat(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
kotlin.time.AdjustedTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object getOrThrow-impl(java.lang.Object)
androidx.core.location.LocationListenerCompat: void onFlushComplete(int)
kotlin.text.DelimitedRangesSequence: int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat: boolean hasStableInsets()
kotlin.Deprecated: kotlin.DeprecationLevel level()
kotlinx.coroutines.internal.Segment: int getNumberOfSlots()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$takeWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlin.ranges.URangesKt___URangesKt: boolean contains-GYNo2lE(kotlin.ranges.ULongRange,kotlin.ULong)
androidx.core.app.LocaleManagerCompat$Api33Impl: LocaleManagerCompat$Api33Impl()
kotlinx.coroutines.channels.ChannelResult: java.lang.Object unbox-impl()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List shuffled(java.lang.Iterable,java.util.Random)
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
kotlin.collections.builders.MapBuilder$EntriesItr: MapBuilder$EntriesItr(kotlin.collections.builders.MapBuilder)
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
kotlin.jvm.internal.PackageReference: PackageReference(java.lang.Class,java.lang.String)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow runningReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.window.area.WindowAreaInfo: androidx.window.area.WindowAreaSession createRearFacingSession(androidx.window.area.WindowAreaCapability$Operation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.time.TimeKt: void onTimeout(kotlinx.coroutines.selects.SelectBuilder,java.time.Duration,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMap$keys$1$iterator$1: java.lang.Object next()
androidx.core.view.GestureDetectorCompat: void setIsLongpressEnabled(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(float[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.location.LocationRequestCompat: long getDurationMillis()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setIsVideo(android.app.Notification$CallStyle,boolean)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object getNextOrClosed()
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: WindowAreaControllerImpl$RearDisplaySessionConsumer(java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback,androidx.window.extensions.area.WindowAreaComponent)
androidx.lifecycle.ProcessLifecycleOwner$Companion: ProcessLifecycleOwner$Companion()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1: FlowKt__TransformKt$filterIsInstance$$inlined$filter$1(kotlinx.coroutines.flow.Flow)
androidx.lifecycle.ProcessLifecycleOwner: void init$lifecycle_process_release(android.content.Context)
androidx.core.app.NotificationManagerCompat$CancelTask: void send(android.support.v4.app.INotificationSideChannel)
androidx.fragment.app.FragmentTabHost$SavedState: FragmentTabHost$SavedState(android.os.Parcelable)
androidx.core.os.ContinuationOutcomeReceiver: java.lang.String toString()
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiChangeListener()
androidx.core.util.AndroidXContinuationConsumer: void accept(java.lang.Object)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: LayoutInflaterCompat$Factory2Wrapper(androidx.core.view.LayoutInflaterFactory)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: LoaderManagerImpl$LoaderViewModel$1()
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(boolean[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
kotlinx.coroutines.flow.ReadonlyStateFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(double[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapIndexedNotNullTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
androidx.collection.LongSparseArray: boolean containsKey(long)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
androidx.fragment.app.DialogFragment$1: void run()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChangeStarted(androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp(java.lang.String,long,long,long)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(float)
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter)
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object wrapTransitionInSet(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)
kotlinx.coroutines.internal.ThreadSafeHeap: void clear()
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri)
androidx.core.view.animation.PathInterpolatorApi14: float getInterpolation(float)
kotlin.random.RandomKt: java.lang.String boundsErrorMessage(java.lang.Object,java.lang.Object)
kotlin.ranges.OpenEndDoubleRange: java.lang.Double getStart()
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.core.os.TraceCompat: void beginAsyncSection(java.lang.String,int)
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.io.SerializableKt: void Serializable$annotations()
kotlinx.coroutines.internal.ResizableAtomicArray: java.lang.Object get(int)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4: java.util.Iterator iterator()
kotlin.collections.AbstractMutableSet: boolean add(java.lang.Object)
kotlin.experimental.BitwiseOperationsKt: short and(short,short)
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
androidx.fragment.app.Fragment: void onStart()
androidx.core.util.SparseBooleanArrayKt: void set(android.util.SparseBooleanArray,int,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte firstOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.core.text.util.LocalePreferences$Api24Impl: java.util.Locale getDefaultLocale()
kotlin.coroutines.CombinedContext$toString$1: CombinedContext$toString$1()
kotlin.ULongArray: int hashCode-impl(long[])
androidx.core.location.LocationRequestCompat: android.location.LocationRequest toLocationRequest(java.lang.String)
androidx.core.graphics.ColorUtils: double pivotXyzComponent(double)
io.flutter.embedding.android.FlutterFragment: boolean access$000(io.flutter.embedding.android.FlutterFragment,java.lang.String)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.extensions.embedding.SplitPairRule$Builder setDefaultSplitAttributesCompat(androidx.window.extensions.embedding.SplitPairRule$Builder,androidx.window.embedding.SplitAttributes)
kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt$minus$1$iterator$1: java.lang.Object invoke(java.lang.Object)
androidx.core.util.LongSparseArrayKt: void putAll(android.util.LongSparseArray,android.util.LongSparseArray)
kotlin.collections.CollectionsKt__IteratorsKt: void forEach(java.util.Iterator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(java.lang.Runnable,boolean)
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: java.lang.Object invoke()
kotlin.SynchronizedLazyImpl: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte[] toTypedArray-GBYM_sE(byte[])
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: NotificationCompat$CarExtender$UnreadConversation(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long)
kotlinx.coroutines.CancellableContinuation: boolean isCompleted()
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: NotificationCompatSideChannelService$NotificationSideChannelStub(androidx.core.app.NotificationCompatSideChannelService)
kotlin.collections.SetsKt___SetsKt: java.util.Set minus(java.util.Set,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double[] sliceArray(double[],kotlin.ranges.IntRange)
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle forScreeningCall(androidx.core.app.Person,android.app.PendingIntent,android.app.PendingIntent)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
kotlin.collections.ArraysKt___ArraysKt: void reverse(short[],int,int)
androidx.fragment.app.FragmentManagerViewModel: boolean equals(java.lang.Object)
androidx.versionedparcelable.VersionedParcelStream: byte[] readByteArray()
androidx.lifecycle.viewmodel.CreationExtras$Empty: CreationExtras$Empty()
androidx.core.app.NotificationChannelCompat$Api26Impl: boolean canShowBadge(android.app.NotificationChannel)
kotlinx.coroutines.SupervisorCoroutine: boolean childCancelled(java.lang.Throwable)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)
kotlin.UInt: int compareTo-VKZWuLQ(int,long)
kotlin.text.StringsKt___StringsKt: java.lang.Comparable maxOf(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setTransientExtras(android.os.Bundle)
kotlin.collections.MapsKt__MapsKt: java.lang.Object remove(java.util.Map,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object find(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int minOf-WZ9TVnA(int,int,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)
kotlinx.coroutines.channels.BroadcastChannelImpl: BroadcastChannelImpl(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong lastOrNull-QwZRm1k(long[])
androidx.activity.ComponentDialog: void onStop()
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: void setLastObservedFrame$kotlinx_coroutines_core(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-QxgOkWg(long[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(float[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)
kotlin.UByte: long toULong-s-VKNKU(byte)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object)
kotlinx.coroutines.NonCancellable: void cancel()
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassSimpleName(java.lang.Class)
kotlinx.coroutines.internal.LimitedDispatcher$Worker: LimitedDispatcher$Worker(kotlinx.coroutines.internal.LimitedDispatcher,java.lang.Runnable)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.loader.R$id: R$id()
androidx.core.view.WindowInsetsAnimationControllerCompat: float getCurrentAlpha()
androidx.core.graphics.CanvasKt: void withSave(android.graphics.Canvas,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$withIndex$4: java.lang.Object invoke()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void onStart$lambda$6$lambda$5(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect)
androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Object)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.jvm.internal.ShortCompanionObject: void getSIZE_BYTES$annotations()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean hasPassedNow-impl(long)
androidx.core.util.SparseLongArrayKt: int getSize(android.util.SparseLongArray)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: kotlin.coroutines.CoroutineContext getContext()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: SequencesKt___SequencesKt$runningReduceIndexed$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$withIndex$3: ArraysKt___ArraysKt$withIndex$3(short[])
androidx.customview.widget.ExploreByTouchHelper: ExploreByTouchHelper(android.view.View)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.content.res.TypedArrayUtils: int getResourceId(android.content.res.TypedArray,int,int,int)
io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener: void onMoveToBackground()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int,boolean)
io.flutter.embedding.engine.loader.ResourceExtractor: io.flutter.embedding.engine.loader.ResourceExtractor start()
androidx.lifecycle.Transformations$sam$androidx_lifecycle_Observer$0: int hashCode()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinctBy(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object cloneTransition(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api21Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat createCollectionItemInfo(int,int,int,int,boolean,boolean)
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()
androidx.window.area.WindowAreaCapability$Operation: WindowAreaCapability$Operation(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker()
androidx.core.location.LocationManagerCompat: void lambda$getCurrentLocation$0(androidx.core.util.Consumer,android.location.Location)
androidx.core.app.AlarmManagerCompat$Api21Impl: android.app.AlarmManager$AlarmClockInfo createAlarmClockInfo(long,android.app.PendingIntent)
kotlin.random.URandomKt: int nextUInt-qCasIEU(kotlin.random.Random,int)
androidx.core.graphics.PathSegment: java.lang.String toString()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object onClosedSend(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.builders.ListBuilder: boolean addAll(java.util.Collection)
androidx.core.content.ContextCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1(java.lang.Object)
kotlin.UShort: boolean equals-impl(short,java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.util.Collection filterIsInstanceTo(kotlin.sequences.Sequence,java.util.Collection,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(byte[],java.lang.Iterable)
androidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)
androidx.window.embedding.SplitAttributes$LayoutDirection: int getValue$window_release()
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
org.jetbrains.annotations.Contract: boolean pure()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(byte[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(byte[])
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentAction(int)
kotlin.collections.ArraysKt___ArraysKt: float random(float[],kotlin.random.Random)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
kotlinx.coroutines.internal.ThreadLocalElement: ThreadLocalElement(java.lang.Object,java.lang.ThreadLocal)
kotlinx.coroutines.channels.BroadcastChannelKt: kotlinx.coroutines.internal.Symbol access$getNO_ELEMENT$p()
androidx.core.location.LocationManagerCompat$Api28Impl: java.lang.String getGnssHardwareModelName(android.location.LocationManager)
kotlin.jvm.internal.TypeReference: TypeReference(kotlin.reflect.KClassifier,java.util.List,kotlin.reflect.KType,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sum-GBYM_sE(byte[])
androidx.core.location.GnssStatusWrapper: boolean hasAlmanacData(int)
androidx.loader.content.CursorLoader: void onStopLoading()
kotlin.collections.MapsKt___MapsJvmKt: MapsKt___MapsJvmKt()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMapMerge(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2)
androidx.activity.ImmLeaksCleaner: ImmLeaksCleaner(android.app.Activity)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(float[])
kotlin.jvm.internal.PrimitiveSpreadBuilder: void addSpread(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollX()
androidx.core.graphics.drawable.ColorDrawableKt: android.graphics.drawable.ColorDrawable toDrawable(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(short[],java.lang.Object,kotlin.jvm.functions.Function3)
android.support.v4.app.INotificationSideChannel$Default: android.os.IBinder asBinder()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: LockFreeTaskQueueCore(int,boolean)
kotlin.jvm.internal.TypeParameterReference: void setUpperBounds(java.util.List)
kotlinx.coroutines.channels.BroadcastCoroutine: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobKt: boolean cancel$default(kotlin.coroutines.CoroutineContext,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(byte[],int)
kotlin.SynchronizedLazyImpl: boolean isInitialized()
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,long,long,java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: byte toByte(java.lang.String,int)
kotlin.time.DurationKt: long getMinutes(long)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow merge(java.lang.Iterable)
androidx.core.location.LocationCompat: boolean hasMslAltitude(android.location.Location)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence padStart(java.lang.CharSequence,int,char)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler,java.lang.String)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set entrySet()
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOf(long[])
androidx.core.util.SparseArrayKt$valueIterator$1: boolean hasNext()
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-GBYM_sE(byte[])
kotlin.io.path.PathsKt__PathUtilsKt: boolean deleteIfExists(java.nio.file.Path)
kotlin.UByteArray: boolean containsAll-impl(byte[],java.util.Collection)
androidx.core.location.LocationCompat: long getElapsedRealtimeNanos(android.location.Location)
androidx.core.graphics.RectKt: android.graphics.RectF times(android.graphics.RectF,float)
androidx.core.location.LocationCompat$Api33Impl: LocationCompat$Api33Impl()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getRules()
kotlin.jvm.internal.FloatSpreadBuilder: void add(float)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.MapWithDefaultImpl: java.util.Map getMap()
kotlin.collections.AbstractMutableList: int getSize()
androidx.window.core.Bounds: int getTop()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder penaltyLog()
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.core.text.SpannableStringBuilderKt: android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.location.LocationCompat: double getMslAltitudeMeters(android.location.Location)
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
androidx.core.service.quicksettings.PendingIntentActivityWrapper: int getRequestCode()
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion: SidecarAdapter$Companion()
kotlin.text.StringsKt___StringsKt: java.lang.Iterable asIterable(java.lang.CharSequence)
androidx.core.widget.TextViewKt: android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
kotlin.jvm.internal.ArrayDoubleIterator: ArrayDoubleIterator(double[])
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void lambda$onLocationChanged$1(java.util.List)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean)
androidx.core.view.MenuKt: int getSize(android.view.Menu)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: int addFailReason(long)
kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
androidx.versionedparcelable.VersionedParcelStream: void writeString(java.lang.String)
kotlin.text.MatcherMatchResult: java.lang.String getValue()
kotlinx.coroutines.flow.StartedLazily$command$1$1: StartedLazily$command$1$1(kotlin.jvm.internal.Ref$BooleanRef,kotlinx.coroutines.flow.FlowCollector)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: long elapsedNow-UwyO8pc()
kotlin.collections.unsigned.UArraysKt: UArraysKt()
androidx.core.util.SparseArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseArray)
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.ranges.IntRange: boolean isEmpty()
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int count-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] plus-uWY9BYg(int[],int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
kotlin.ULongArrayKt: long[] ulongArrayOf-QwZRm1k(long[])
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.core.location.LocationCompat$Api26Impl: void removeSpeedAccuracy(android.location.Location)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(long)
kotlin.collections.ArraysKt___ArraysKt: double[] sliceArray(double[],java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(kotlin.ULong[])
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.Fragment createFragment(java.lang.Class,android.os.Bundle)
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
kotlin.ranges.UIntProgression: int getLast-pVg5ArA()
kotlin.math.MathKt__MathJVMKt: float cos(float)
androidx.window.area.utils.DeviceMetrics: DeviceMetrics(java.lang.String,java.lang.String,android.util.DisplayMetrics)
kotlin.io.encoding.Base64: java.lang.String encode(byte[],int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlin.collections.builders.MapBuilderKeys: int getSize()
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setMaxAspectRatioInPortrait(androidx.window.embedding.EmbeddingAspectRatio)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeRange(java.lang.CharSequence,kotlin.ranges.IntRange)
io.flutter.plugin.platform.PlatformPlugin: void access$1100(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
kotlin.collections.ArraysKt: ArraysKt()
kotlin.text.UStringsKt: int toUInt(java.lang.String)
kotlin.math.MathKt__MathJVMKt: double abs(double)
androidx.window.embedding.EmbeddingRule: java.lang.String getTag()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createTempFile$default(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute[],int,java.lang.Object)
androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)
kotlin.NumbersKt__NumbersKt: NumbersKt__NumbersKt()
androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)
androidx.window.area.WindowAreaInfo: androidx.window.layout.WindowMetrics getMetrics()
androidx.core.graphics.BlendModeUtils: android.graphics.PorterDuff$Mode obtainPorterDuffFromCompat(androidx.core.graphics.BlendModeCompat)
androidx.activity.OnBackPressedDispatcher$1: void invoke(androidx.activity.BackEventCompat)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackJavaConsumerValid$1: SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackJavaConsumerValid$1(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
androidx.core.graphics.ColorUtils: double calculateContrast(int,int)
androidx.core.view.ViewCompat$4: java.lang.Object frameworkGet(android.view.View)
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.time.Duration$Companion: void getSeconds-UwyO8pc$annotations(int)
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry castToMapEntry(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlin.ranges.UIntProgression: UIntProgression(int,int,int)
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$zip$1: ChannelsKt__DeprecatedKt$zip$1()
androidx.core.app.Person$Api22Impl: androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(boolean[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult: boolean isSuccess-impl(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: short[] plus(short[],short[])
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
kotlin.time.DurationKt: void getMilliseconds$annotations(double)
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
kotlin.random.jdk8.PlatformThreadLocalRandom: long nextLong(long,long)
androidx.core.graphics.ColorKt: android.graphics.ColorSpace getColorSpace(long)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(float[],float,int,int)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIntent(android.app.PendingIntent)
kotlin.concurrent.TimersKt: java.util.Timer timer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.builders.MapBuilder$KeysItr: MapBuilder$KeysItr(kotlin.collections.builders.MapBuilder)
androidx.core.app.NotificationManagerCompat$NotificationWithIdAndTag: NotificationManagerCompat$NotificationWithIdAndTag(int,android.app.Notification)
kotlin.reflect.KCallable: java.lang.Object call(java.lang.Object[])
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray(java.lang.String)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path relativeTo(java.nio.file.Path,java.nio.file.Path)
kotlinx.coroutines.flow.internal.SafeCollector: void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionContext,java.lang.Object)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
kotlin.text.CharsKt__CharJVMKt: boolean isLowSurrogate(char)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)
androidx.profileinstaller.ProfileInstallerInitializer$Result: ProfileInstallerInitializer$Result()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.util.List)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
kotlin.NumbersKt__FloorDivModKt: byte mod(long,byte)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String invoke(java.lang.String)
kotlinx.coroutines.scheduling.DefaultScheduler: void shutdown$kotlinx_coroutines_core()
kotlinx.coroutines.internal.DispatchedContinuation: void release()
kotlinx.coroutines.JobNode: void dispose()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler: void activateSystemCursor(java.lang.String)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker(kotlinx.coroutines.CoroutineScope,long,long)
kotlinx.coroutines.future.FutureKt: kotlin.Unit setupCancellation$lambda$2(kotlinx.coroutines.Job,java.lang.Object,java.lang.Throwable)
kotlin.sequences.SequencesKt___SequencesKt: int lastIndexOf(kotlin.sequences.Sequence,java.lang.Object)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.core.view.inputmethod.EditorInfoCompat: void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)
kotlin.ranges.RangesKt___RangesKt: long random(kotlin.ranges.LongRange)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)
kotlinx.coroutines.channels.ChannelSegment: void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext)
androidx.lifecycle.EmittedSource$dispose$1: EmittedSource$dispose$1(androidx.lifecycle.EmittedSource,kotlin.coroutines.Continuation)
kotlin.io.encoding.Base64Kt: byte[] access$getBase64EncodeMap$p()
androidx.fragment.app.Fragment: void restoreViewState()
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIsInstance(java.lang.Object[])
kotlin.DeepRecursiveScopeImpl$crossFunctionCompletion$$inlined$Continuation$1: kotlin.coroutines.CoroutineContext getContext()
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeightResId(int)
androidx.loader.content.AsyncTaskLoader: AsyncTaskLoader(android.content.Context)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget[] $values()
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: java.lang.Object translateActivityPredicates(java.util.Set)
androidx.activity.result.ActivityResult: ActivityResult(int,android.content.Intent)
androidx.activity.SystemBarStyle: SystemBarStyle(int,int,int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean any(byte[])
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1: java.lang.Object invoke(java.lang.Object)
androidx.core.database.CursorKt: java.lang.String getStringOrNull(android.database.Cursor,int)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
kotlin.ranges.URangesKt___URangesKt: boolean contains-ULb-yJY(kotlin.ranges.ULongRange,byte)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component1(java.lang.Object[])
androidx.core.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.fragment.app.FragmentContainerView: void removeViewInLayout(android.view.View)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)
kotlin.collections.MapsKt__MapsKt: java.util.HashMap hashMapOf()
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiNoLongerDisplayed()
androidx.loader.R$layout: R$layout()
kotlin.text.StringsKt___StringsKt: java.lang.Character maxOrNull(java.lang.CharSequence)
androidx.core.app.ServiceCompat$Api34Impl: void startForeground(android.app.Service,int,android.app.Notification,int)
kotlinx.coroutines.flow.StartedLazily: StartedLazily()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder transparencyMode(io.flutter.embedding.android.TransparencyMode)
androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)
kotlin.io.encoding.Base64: int encodeSize(int)
androidx.customview.R$styleable: R$styleable()
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor createFullyDrawnExecutor()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$KeyValueSet: ConcurrentWeakMap$KeyValueSet(kotlinx.coroutines.debug.internal.ConcurrentWeakMap,kotlin.jvm.functions.Function2)
kotlin.UInt: int toUInt-pVg5ArA(int)
io.flutter.view.VsyncWaiter$FrameCallback: long access$302(io.flutter.view.VsyncWaiter$FrameCallback,long)
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayAdded(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8(long[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-qFRl0hI(int[],int)
androidx.profileinstaller.Encoding: int readUInt16(java.io.InputStream)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: boolean timeToExecute(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.CharSequence getInitialTextAfterCursor(android.view.inputmethod.EditorInfo,int,int)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
androidx.core.app.LocaleManagerCompat: LocaleManagerCompat()
androidx.fragment.app.BackStackRecord: int getId()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
kotlin.collections.EmptySet: java.lang.Object readResolve()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
kotlinx.coroutines.flow.FlowKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.app.PendingIntent getPendingIntent()
androidx.fragment.app.FragmentManager$PrepareBackStackTransitionState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.lifecycle.viewmodel.CreationExtras: CreationExtras()
androidx.viewpager.widget.ViewPager: int getCurrentItem()
androidx.viewpager.widget.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort max-rL5Bavg(short[])
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.activity.EdgeToEdgeApi29: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.os.Bundle getOptions()
kotlin.jvm.internal.ArrayIntIterator: ArrayIntIterator(int[])
kotlin.time.TimeMark$DefaultImpls: boolean hasPassedNow(kotlin.time.TimeMark)
androidx.core.location.LocationManagerCompat$Api28Impl: boolean isLocationEnabled(android.location.LocationManager)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: ConcurrentWeakMap$Entry(java.lang.Object,java.lang.Object)
androidx.versionedparcelable.ParcelUtils: java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: ChannelsKt__DeprecatedKt$minWith$1(kotlin.coroutines.Continuation)
androidx.concurrent.futures.AbstractResolvableFuture: boolean isCancelled()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
kotlin.UShort: void getData$annotations()
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-WpHrYlw(byte[],byte,int,int)
io.flutter.plugin.platform.PlatformViewRenderTarget: int getHeight()
androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,double,double,int,java.nio.ByteBuffer)
androidx.lifecycle.Transformations$switchMap$2: void setLiveData(androidx.lifecycle.LiveData)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect,androidx.core.view.WindowInsetsCompat,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.channels.ChannelResult: int hashCode-impl(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int single--ajY-9A(int[])
androidx.core.app.ServiceCompat: void startForeground(android.app.Service,int,android.app.Notification,int)
androidx.lifecycle.LiveData: void onActive()
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)
androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
androidx.core.view.ViewCompat$1: boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.core.view.MenuHost: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
kotlin.collections.ArraysKt___ArraysKt: long[] toLongArray(java.lang.Long[])
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setBadgeIconType(int)
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
kotlin.jvm.internal.LocalVariableReferencesKt: java.lang.Void access$notSupportedError()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
androidx.core.util.SparseIntArrayKt: void putAll(android.util.SparseIntArray,android.util.SparseIntArray)
androidx.core.widget.NestedScrollView: boolean shouldAbsorb(android.widget.EdgeEffect,int)
kotlinx.coroutines.CancellableContinuation: boolean isActive()
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean isFoldingFeatureValid()
androidx.core.view.WindowInsetsControllerCompat$Impl: boolean isAppearanceLightNavigationBars()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
kotlin.sequences.TakeSequence: TakeSequence(kotlin.sequences.Sequence,int)
kotlinx.coroutines.channels.BufferedChannel: void resumeWaiterOnClosedChannel(kotlinx.coroutines.Waiter,boolean)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path relativeToOrSelf(java.nio.file.Path,java.nio.file.Path)
androidx.core.graphics.MatrixKt: float[] values(android.graphics.Matrix)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightStatusBars(boolean)
kotlin.collections.builders.ListBuilder: void add(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean all(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: char[] onEach(char[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: FlutterRenderer$DisplayFeatureType(java.lang.String,int,int)
kotlin.random.jdk8.PlatformThreadLocalRandom: long nextLong(long)
io.flutter.util.TraceSection: void endAsyncSection(java.lang.String,int)
androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)
kotlin.text.StringsKt___StringsKt: java.lang.Appendable filterIndexedTo(java.lang.CharSequence,java.lang.Appendable,kotlin.jvm.functions.Function2)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$4(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder initialRoute(java.lang.String)
androidx.core.view.SoftwareKeyboardControllerCompat: void show()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.profileinstaller.ProfileTranscoder: int computeMethodFlags(androidx.profileinstaller.DexProfileData)
kotlin.random.Random$Default: double nextDouble()
androidx.core.net.MailTo: androidx.core.net.MailTo parse(android.net.Uri)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch(java.util.List,int,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
io.flutter.util.TraceSection: java.lang.String cropSectionName(java.lang.String)
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)
kotlin.jvm.internal.TypeReference$asString$args$1: TypeReference$asString$args$1(kotlin.jvm.internal.TypeReference)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable getSendException()
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
kotlin.collections.builders.MapBuilder: boolean removeEntry$kotlin_stdlib(java.util.Map$Entry)
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
io.flutter.embedding.android.FlutterView: boolean access$202(io.flutter.embedding.android.FlutterView,boolean)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
kotlin.StandardKt__StandardKt: java.lang.Object takeIf(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.window.WindowSdkExtensions: WindowSdkExtensions()
androidx.core.graphics.TypefaceCompatApi24Impl: boolean isUsable()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: long coerceAtLeast-eb3DHEI(long,long)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
kotlin.text.StringsKt__StringsJVMKt: int nativeLastIndexOf(java.lang.String,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: void reverse(byte[],int,int)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap toSortedMap(java.util.Map,java.util.Comparator)
androidx.versionedparcelable.VersionedParcel: void writeCharArray(char[],int)
kotlin.collections.builders.ListBuilder: java.util.List build()
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.viewpager.widget.PagerTabStrip$1: PagerTabStrip$1(androidx.viewpager.widget.PagerTabStrip)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
kotlin.io.ByteStreamsKt: java.io.InputStreamReader reader(java.io.InputStream,java.nio.charset.Charset)
kotlin.io.ByteStreamsKt$iterator$1: boolean hasNext()
kotlin.collections.ArrayAsCollection: java.lang.Object[] getValues()
androidx.core.view.WindowInsetsControllerCompat: void show(int)
androidx.lifecycle.LifecycleKt$eventFlow$1$1: java.lang.Object invoke()
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float reduceIndexedOrNull(float[],kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: long toLong(java.lang.String)
androidx.core.app.NotificationChannelGroupCompat: NotificationChannelGroupCompat(android.app.NotificationChannelGroup)
androidx.core.view.ViewKt$allViews$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.core.app.Person: boolean isImportant()
androidx.collection.ArraySet: int indexOfNull()
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
kotlinx.coroutines.internal.ThreadLocalKey: ThreadLocalKey(java.lang.ThreadLocal)
kotlinx.coroutines.AwaitKt: java.lang.Object joinAll(java.util.Collection,kotlin.coroutines.Continuation)
kotlinx.coroutines.AbstractTimeSourceKt: long nanoTime()
kotlin.collections.AbstractSet: int hashCode()
androidx.core.service.quicksettings.TileServiceCompat$TileServiceWrapper: void startActivityAndCollapse(android.content.Intent)
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$1: java.lang.Object invoke(java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture: void releaseWaiters()
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
androidx.core.net.ConnectivityManagerCompat: ConnectivityManagerCompat()
kotlin.jvm.internal.CharSpreadBuilder: char[] toArray()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
kotlinx.coroutines.DispatchedTaskKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(boolean[],kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
kotlinx.coroutines.ChildJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.ChildJob,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlin.UInt: int floorDiv-WZ4Q5Ns(int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.util.SparseLongArrayKt: boolean isNotEmpty(android.util.SparseLongArray)
androidx.loader.content.CursorLoader: void deliverResult(android.database.Cursor)
kotlin.jvm.internal.CharCompanionObject: void getMAX_VALUE$annotations()
androidx.customview.widget.ExploreByTouchHelper: void invalidateRoot()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentDeepEqualsNullable(java.lang.Object[],java.lang.Object[])
androidx.core.widget.TextViewCompat$OreoCallback: java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
io.flutter.embedding.android.FlutterActivity: void release()
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)
androidx.activity.ComponentActivity: void lambda$new$2(android.content.Context)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: android.media.ImageReader createImageReader33()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: FallbackThreadLocalRandom$implStorage$1()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-gMuBH34(byte[],byte)
kotlin.DeepRecursiveScope: java.lang.Object callRecursive(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat: boolean getUsesChronometer(android.app.Notification)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri getDataUri()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function4)
kotlin.random.AbstractPlatformRandom: double nextDouble()
com.getkeepsafe.relinker.elf.ElfParser: void read(java.nio.ByteBuffer,long,int)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(short[],int,int)
androidx.core.widget.TintableCompoundDrawablesView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
androidx.window.SafeWindowExtensionsProvider: java.lang.Class getWindowExtensionsClass$window_release()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$1: java.lang.Boolean invoke(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$single$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.editing.ListenableEditingState: void clearBatchDeltas()
kotlin.time.Duration$Companion: long seconds-UwyO8pc(double)
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toCollection(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
kotlin.StandardKt__StandardKt: java.lang.Object also(java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DispatchedTaskKt: boolean isReusableMode(int)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retry$default(kotlinx.coroutines.flow.Flow,long,kotlin.jvm.functions.Function2,int,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse--nroSd4(long[],int,int)
androidx.core.util.Preconditions: float checkArgumentFinite(float,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldHandleDeeplinking()
androidx.collection.LruCache: int putCount()
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl: kotlinx.coroutines.CancellableContinuationImpl access$getCont$p(kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: DefaultSpecialEffectsController$Api24Impl()
kotlin.io.path.PathsKt__PathUtilsKt: java.util.Set getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption[])
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: NotificationCompat$CallStyle$Api31Impl()
androidx.core.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle setGroupConversation(android.app.Notification$MessagingStyle,boolean)
androidx.collection.ContainerHelpers: int idealLongArraySize(int)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
kotlin.ranges.ClosedDoubleRange: ClosedDoubleRange(double,double)
kotlin.text.StringsKt__RegexExtensionsKt: StringsKt__RegexExtensionsKt()
androidx.core.view.ViewCompat$1: void frameworkSet(android.view.View,java.lang.Boolean)
androidx.core.view.DisplayCompat: android.graphics.Point parsePhysicalDisplaySizeFromSystemProperties(java.lang.String,android.view.Display)
io.flutter.view.AccessibilityBridge: boolean doesLayoutInDisplayCutoutModeRequireLeftInset()
kotlin.collections.builders.SetBuilder: boolean retainAll(java.util.Collection)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.fragment.app.FragmentTransitionCompat21$1: FragmentTransitionCompat21$1(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
androidx.lifecycle.CoroutineLiveData: java.lang.Object clearSource$lifecycle_livedata_release(kotlin.coroutines.Continuation)
androidx.core.app.Person: androidx.core.app.Person$Builder toBuilder()
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getSender()
kotlin.time.Duration$Companion: long seconds-UwyO8pc(long)
androidx.core.util.SparseIntArrayKt: kotlin.collections.IntIterator valueIterator(android.util.SparseIntArray)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
kotlin.text.CharDirectionality: kotlin.text.CharDirectionality valueOf(java.lang.String)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: ChannelFlow$collect$2(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation)
kotlin.DeepRecursiveScopeImpl: void access$setResult$p(kotlin.DeepRecursiveScopeImpl,java.lang.Object)
kotlin.collections.ArrayAsCollection: boolean isVarargs()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: StartedWhileSubscribed$command$2(kotlin.coroutines.Continuation)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$0(java.lang.String)
kotlinx.coroutines.EventLoop: EventLoop()
androidx.core.app.ActivityCompat$Api21Impl: void finishAfterTransition(android.app.Activity)
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.lifecycle.ComputableLiveData$_liveData$1: ComputableLiveData$_liveData$1(androidx.lifecycle.ComputableLiveData)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String)
kotlin.UShort: int compareTo-xj2QHRw(short,short)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object lastOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object processResultAndInvokeBlockRecoveringException(kotlinx.coroutines.selects.SelectImplementation$ClauseData,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.util.SparseArrayKt: boolean contains(android.util.SparseArray,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(java.util.Locale)
androidx.activity.result.PickVisualMediaRequest: PickVisualMediaRequest()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.view.AccessibilityBridge: int access$1176(io.flutter.view.AccessibilityBridge,int)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: RestrictedContinuationImpl(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.core.content.res.GrowingArrayUtils: boolean[] append(boolean[],int,boolean)
androidx.core.provider.FontRequestWorker$1: java.lang.Object call()
com.getkeepsafe.relinker.elf.Dynamic32Structure: Dynamic32Structure(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int)
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(char[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation)
kotlin.sequences.DropWhileSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropWhileSequence)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setPlatformViewClient(int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference()
androidx.core.app.ActivityOptionsCompat: void update(androidx.core.app.ActivityOptionsCompat)
io.flutter.embedding.android.FlutterFragment: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference1Impl: void set(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationChannelGroupCompat$Builder: NotificationChannelGroupCompat$Builder(java.lang.String)
androidx.core.text.util.LocalePreferences: java.lang.String getTemperatureHardCoded(java.util.Locale)
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
io.flutter.plugin.platform.PlatformViewsController: void lambda$configureForTextureLayerComposition$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,android.view.View,boolean)
androidx.core.app.RemoteInput: java.util.Set getAllowedDataTypes()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void getOnReceiveOrNull$annotations()
androidx.core.util.SparseLongArrayKt$keyIterator$1: void setIndex(int)
androidx.core.util.LruCacheKt$lruCache$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(double[],int)
kotlinx.coroutines.flow.ChannelAsFlow: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.DefaultExecutor: void shutdown()
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3: java.util.Iterator iterator()
kotlin.sequences.SequencesKt___SequencesKt$onEach$1: SequencesKt___SequencesKt$onEach$1(kotlin.jvm.functions.Function1)
kotlin.collections.builders.SerializedCollection$Companion: SerializedCollection$Companion()
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,short)
kotlin.io.FileWalkDirection: kotlin.io.FileWalkDirection[] values()
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.Stream)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(float[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] onEach-xTcfx_M(short[],kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.ReLinkerInstance: void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String)
androidx.activity.OnBackPressedDispatcher: void onBackStarted(androidx.activity.BackEventCompat)
kotlinx.coroutines.selects.SelectUnbiasedKt: java.lang.Object selectUnbiased$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.getkeepsafe.relinker.elf.Elf32Header: com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int)
androidx.core.content.res.ViewingConditions: float getNc()
androidx.window.core.Bounds: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer max(int[])
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
kotlin.ranges.ClosedFloatRange: java.lang.Comparable getStart()
kotlin.text.UStringsKt: java.lang.String toString-V7xB4Y4(int,int)
kotlin.NumbersKt__FloorDivModKt: long floorDiv(long,byte)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],long[])
androidx.collection.CircularIntArray: CircularIntArray(int)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$nullResult$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.channels.ChannelSegment: boolean casState$kotlinx_coroutines_core(int,java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWithOrNull-l8EHGbQ(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: java.util.Iterator iterator()
kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
androidx.core.content.pm.ShortcutXmlParser: java.util.List getShortcutIds(android.content.Context)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object getElement$kotlinx_coroutines_core(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void shuffle-s5X_as8(short[],kotlin.random.Random)
kotlin.collections.CollectionsKt__CollectionsJVMKt: int checkIndexOverflow(int)
androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
kotlinx.coroutines.JobSupport: java.lang.String toString()
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
kotlin.time.Duration$Companion: long getINFINITE-UwyO8pc()
kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)
androidx.window.core.ValidSpecification: androidx.window.core.Logger getLogger()
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(int,int)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder backgroundMode(io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$SingleMimeType: ActivityResultContracts$PickVisualMedia$SingleMimeType(java.lang.String)
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: android.view.Surface getSurface()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedSequence(java.lang.Object[],kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion: ExtensionWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
kotlin.collections.builders.MapBuilderKeys: boolean retainAll(java.util.Collection)
androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)
androidx.core.os.ExecutorCompat$HandlerExecutor: ExecutorCompat$HandlerExecutor(android.os.Handler)
kotlin.collections.ArraysUtilJVM: ArraysUtilJVM()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long randomOrNull(kotlin.ranges.LongRange)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-JQknh5Q(byte[],java.lang.Iterable)
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.Job getParent()
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int)
kotlin.time.Duration: double getInMinutes-impl(long)
kotlin.text.RegexOption: kotlin.text.RegexOption[] $values()
androidx.core.widget.ScrollerCompat: int getCurrX()
androidx.fragment.app.FragmentStore: void restoreSaveState(java.util.HashMap)
kotlinx.coroutines.future.FutureKt$await$2$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentManager: java.util.Map access$100(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.channels.ConflatedBufferedChannel: boolean isConflatedDropOldest()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: kotlin.Pair createMergedTransition(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation)
androidx.versionedparcelable.VersionedParcel: void writeCollection(java.util.Collection,int)
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitRule$FinishBehavior getFinishPrimaryWithPlaceholder()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1: DebugProbesImpl$dumpCoroutinesSynchronized$$inlined$sortedBy$1()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(int[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(byte[])
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
kotlin.UInt: int compareTo-xj2QHRw(int,short)
androidx.core.os.LocaleListCompat$Api24Impl: LocaleListCompat$Api24Impl()
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver[] newArray(int)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(char[],kotlin.jvm.functions.Function1)
kotlin.reflect.KFunction: boolean isSuspend()
androidx.window.embedding.SplitAttributes$SplitType: java.lang.String getDescription$window_release()
androidx.core.app.NotificationCompat: androidx.core.content.LocusIdCompat getLocusId(android.app.Notification)
kotlinx.coroutines.channels.LazyBroadcastCoroutine: void onStart()
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoaderReset(androidx.loader.content.Loader)
androidx.annotation.LongDef: long[] value()
androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)
androidx.core.graphics.WeightTypefaceApi21: android.graphics.Typeface createWeightStyle(android.graphics.Typeface,int,boolean)
kotlin.time.Duration$Companion: long parse-UwyO8pc(java.lang.String)
androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
androidx.core.app.ActivityRecreator$3: void run()
kotlinx.coroutines.internal.UndeliveredElementException: UndeliveredElementException(java.lang.String,java.lang.Throwable)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder detectSetUserVisibleHint()
kotlin.jvm.internal.ClassReference: java.util.List getSealedSubclasses()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] plus-XzdR7RA(short[],short)
androidx.core.app.RemoteActionCompat$Api28Impl: boolean shouldShowIcon(android.app.RemoteAction)
io.flutter.embedding.android.FlutterFragment: java.lang.String getDartEntrypointFunctionName()
kotlinx.coroutines.EventLoopImplBase: long getNextTime()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
kotlin.collections.ArraysKt___ArraysKt: boolean any(int[],kotlin.jvm.functions.Function1)
kotlin.collections.AbstractMutableMap: java.util.Collection values()
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.viewpager.widget.PagerAdapter: void setViewPagerObserver(android.database.DataSetObserver)
kotlin.UIntKt: int toUInt(float)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStarted()
kotlin.text.StringsKt___StringsKt: void forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: DocumentsContractCompat$DocumentsContractApi21Impl()
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trimStart(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.location.GnssStatusWrapper$Api26Impl: boolean hasCarrierFrequencyHz(android.location.GnssStatus,int)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] plus(long[],long)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder clear(java.lang.StringBuilder)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: android.content.Intent createIntent(android.content.Context,android.content.Intent)
androidx.customview.widget.ExploreByTouchHelper: androidx.collection.SparseArrayCompat getAllNodes()
androidx.window.embedding.EmbeddingAspectRatio: boolean equals(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,long)
androidx.activity.ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$1: ViewTreeOnBackPressedDispatcherOwner$findViewTreeOnBackPressedDispatcherOwner$1()
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChangeProgressed(androidx.activity.BackEventCompat)
kotlin.ULong: long div-VKZWuLQ(long,long)
kotlinx.coroutines.channels.BufferedChannel: boolean shouldSendSuspend$kotlinx_coroutines_core()
androidx.core.text.BidiFormatter$Builder: void initialize(boolean)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause0,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void initCancellability()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: byte first(byte[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String getPackage()
kotlin.ranges.RangesKt___RangesKt: long random(kotlin.ranges.LongRange,kotlin.random.Random)
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropWhile(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
kotlin.time.AbstractLongTimeSource$LongTimeMark: long effectiveDuration-UwyO8pc$kotlin_stdlib()
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: WindowInsetsAnimationCompat$Impl30$ProxyCallback(androidx.core.view.WindowInsetsAnimationCompat$Callback)
kotlin.time.Duration: boolean equals-impl(long,java.lang.Object)
kotlin.random.Random$Default: java.lang.Object writeReplace()
com.getkeepsafe.relinker.ReLinker: ReLinker()
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface,int)
androidx.profileinstaller.ProfileInstaller: boolean deleteProfileWrittenFor(java.io.File)
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
kotlin.io.FilesKt__FileReadWriteKt: java.io.BufferedReader bufferedReader(java.io.File,java.nio.charset.Charset,int)
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scanIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.location.GnssStatusWrapper: boolean usedInFix(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface: void detachFromContentProvider()
androidx.core.transition.TransitionKt$addListener$3: void invoke(android.transition.Transition)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
androidx.core.app.PendingIntentCompat$Api23Impl: void send(android.app.PendingIntent,android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable minOf(java.lang.Comparable,java.lang.Comparable[])
kotlin.collections.ArraysKt___ArraysKt: double average(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: UArraysKt___UArraysJvmKt$asList$4(short[])
androidx.core.graphics.CanvasKt: void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MigrationKt: java.lang.Void noImpl()
androidx.loader.content.ModernAsyncTask: android.os.Handler getHandler()
kotlin.ranges.ULongRange: int hashCode()
kotlin.reflect.TypeVariableImpl: java.lang.String toString()
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onCompletion(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.lifecycle.Transformations$switchMap$1$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapSequenceTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult: java.lang.String toString-impl(java.lang.Object)
kotlin.sequences.SequenceBuilderIterator: java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.Mutex$DefaultImpls: boolean tryLock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$4: StreamsKt$asSequence$$inlined$Sequence$4(java.util.stream.DoubleStream)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.RenderMode getRenderMode()
androidx.collection.ContainerHelpers: ContainerHelpers()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMapIndexedSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64: byte[] access$getMimeLineSeparatorSymbols$cp()
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.Person getUser()
androidx.fragment.app.FragmentTransitionImpl: void setCurrentPlayTime(java.lang.Object,float)
kotlin.collections.ArraysKt___ArraysKt$groupingBy$1: java.util.Iterator sourceIterator()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
androidx.arch.core.internal.SafeIterableMap: int hashCode()
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: SequencesKt__SequencesKt$flatMapIndexed$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
androidx.core.util.SparseBooleanArrayKt: android.util.SparseBooleanArray plus(android.util.SparseBooleanArray,android.util.SparseBooleanArray)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.ExtensionEmbeddingBackend: android.app.ActivityOptions setLaunchingActivityStack(android.app.ActivityOptions,android.os.IBinder)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])
kotlinx.coroutines.scheduling.TaskContextImpl: TaskContextImpl(int)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlin.UByte: int times-WZ4Q5Ns(byte,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence requireNoNulls(kotlin.sequences.Sequence)
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$1102(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
kotlin.coroutines.jvm.internal.RunSuspend: RunSuspend()
androidx.core.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigIntegerOrNull(java.lang.String,int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
io.flutter.plugin.common.BasicMessageChannel: java.nio.ByteBuffer packetFromEncodedMessage(java.nio.ByteBuffer)
androidx.core.widget.NestedScrollView: boolean canOverScroll()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component1-GBYM_sE(byte[])
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: AbstractResolvableFuture$AtomicHelper()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void reverse-4UcCI2c(byte[],int,int)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getDartEntrypointFunctionName()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel)
androidx.activity.result.IntentSenderRequest$Companion: IntentSenderRequest$Companion()
kotlinx.coroutines.sync.SemaphoreSegment: java.util.concurrent.atomic.AtomicReferenceArray getAcquirers()
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
androidx.fragment.app.FragmentActivity$HostCallbacks: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1$1: FlowLiveDataConversions$asLiveData$1$1(androidx.lifecycle.LiveDataScope)
androidx.core.view.WindowInsetsAnimationCompat$Callback: WindowInsetsAnimationCompat$Callback(int)
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
kotlinx.coroutines.scheduling.DefaultIoScheduler: java.lang.String toString()
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceRightOrNull(double[],kotlin.jvm.functions.Function2)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onFirstFix(int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(short,short)
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context)
kotlin.collections.ArrayDeque: int indexOf(java.lang.Object)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: boolean hasNotPassedNow()
androidx.core.app.NotificationCompat$MessagingStyle$Message: long getTimestamp()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(short[],kotlin.jvm.functions.Function1)
kotlin.time.DurationUnitKt: DurationUnitKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.app.JobIntentService$CompatJobEngine: android.os.IBinder compatGetBinder()
kotlin.time.Duration: long getInWholeMilliseconds-impl(long)
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray()
androidx.core.view.ViewCompat: int getLayerType(android.view.View)
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
kotlin.time.MonotonicTimeSource: java.lang.String toString()
kotlin.ranges.CharProgression: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(double[])
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstNotNullOfOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
kotlin.UByteArray$Iterator: UByteArray$Iterator(byte[])
androidx.activity.ComponentDialog: void onBackPressedDispatcher$lambda$1(androidx.activity.ComponentDialog)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api33Impl: void getRegionInScreen(android.view.accessibility.AccessibilityWindowInfo,android.graphics.Region)
androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: ChannelsKt__DeprecatedKt$consumes$1(kotlinx.coroutines.channels.ReceiveChannel)
androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration,boolean)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
org.intellij.lang.annotations.PrintFormatPattern: PrintFormatPattern()
androidx.core.util.SparseArrayKt$valueIterator$1: void setIndex(int)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMinTextSize()
androidx.core.provider.FontRequestWorker$2: FontRequestWorker$2(androidx.core.provider.CallbackWithHandler)
kotlin.math.MathKt__MathJVMKt: float abs(float)
kotlin.collections.AbstractList$IteratorImpl: boolean hasNext()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long minOf-sambcqE(long,long,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object fold-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider)
kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: FlowKt__ZipKt$combine$$inlined$unsafeFlow$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt__MapWithDefaultKt: MapsKt__MapWithDefaultKt()
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol getPARAM_CLAUSE_0()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.collections.CollectionsKt__IteratorsKt: java.util.Iterator withIndex(java.util.Iterator)
kotlinx.coroutines.BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
kotlin.reflect.KProperty$DefaultImpls: void isConst$annotations()
androidx.core.app.NotificationCompat$TvExtender: androidx.core.app.NotificationCompat$TvExtender setContentIntent(android.app.PendingIntent)
androidx.core.location.LocationManagerCompat$Api19Impl: LocationManagerCompat$Api19Impl()
kotlin.collections.CollectionsKt___CollectionsKt: int count(java.util.Collection)
androidx.core.content.ContextCompat: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)
androidx.profileinstaller.ProfileVerifier: com.google.common.util.concurrent.ListenableFuture getCompilationStatusAsync()
androidx.core.os.ConfigurationCompat$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1: FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$1(kotlin.jvm.internal.Ref$ObjectRef)
androidx.fragment.app.strictmode.GetRetainInstanceUsageViolation: GetRetainInstanceUsageViolation(androidx.fragment.app.Fragment)
kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()
kotlin.UInt: int plus-xj2QHRw(int,short)
androidx.core.util.AtomicFileKt: java.lang.String readText(android.util.AtomicFile,java.nio.charset.Charset)
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: void disposeAll()
androidx.core.content.res.TypedArrayKt: java.lang.Object use(android.content.res.TypedArray,kotlin.jvm.functions.Function1)
kotlin.random.URandomKt: byte[] nextUBytes(kotlin.random.Random,int)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
kotlin.collections.ArraysKt___ArraysKt: double first(double[])
androidx.core.app.PendingIntentCompat$GatedCallback: void complete()
androidx.core.view.ViewCompat: float getZ(android.view.View)
kotlin.sequences.DropSequence$iterator$1: int getLeft()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long lastOrNull(long[])
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
androidx.core.content.MimeTypeFilter: MimeTypeFilter()
androidx.fragment.app.FragmentTransaction: void addOp(androidx.fragment.app.FragmentTransaction$Op)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)
kotlinx.coroutines.channels.BroadcastChannel: void cancel(java.util.concurrent.CancellationException)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(short[])
androidx.customview.R$style: R$style()
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getPOISONED$p()
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(float[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutManagerCompat: void setShortcutInfoCompatSaver(androidx.core.content.pm.ShortcutInfoCompatSaver)
com.example.wellnesshub.R: R()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$4(int[])
androidx.viewpager.widget.ViewPager$SavedState: java.lang.String toString()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isActivityEmbeddingComponentValid$1: java.lang.Boolean invoke()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List)
kotlin.UByteArray: byte[] constructor-impl(int)
kotlinx.coroutines.NonCancellable: boolean cancel(java.lang.Throwable)
kotlin.text.FlagEnum: int getMask()
kotlin.io.path.PathsKt__PathUtilsKt: boolean isWritable(java.nio.file.Path)
androidx.core.app.ShareCompat$IntentReader: android.content.ComponentName getCallingActivity()
kotlinx.coroutines.flow.internal.FlowCoroutineKt$scopedFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double maxOrNull(java.lang.Iterable)
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getDisabledMessage()
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
kotlin.io.path.DefaultCopyActionContext: kotlin.io.path.CopyActionResult copyToIgnoringExistingDirectory(java.nio.file.Path,java.nio.file.Path,boolean)
androidx.core.graphics.ColorKt: int getBlue(int)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api23Impl: android.os.Bundle getExtras(android.view.ViewStructure)
kotlin.collections.ArraysKt___ArraysKt: boolean contains(byte[],byte)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ClassReference: ClassReference(java.lang.Class)
androidx.lifecycle.PausingDispatcher: PausingDispatcher()
androidx.activity.ComponentActivity: void initializeViewTreeOwners()
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
androidx.core.app.ShareCompat: void migrateExtraStreamToClipData(android.content.Intent,java.util.ArrayList)
kotlinx.coroutines.channels.LazyActorCoroutine: LazyActorCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,kotlin.jvm.functions.Function2)
androidx.customview.R$dimen: R$dimen()
androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)
kotlin.coroutines.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
kotlin.text.StringsKt___StringsKt: char maxOrThrow(java.lang.CharSequence)
androidx.core.view.MenuHostHelper: void lambda$addMenuProvider$0(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeLast(java.lang.CharSequence,int)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$onClosedSend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt$runningFold$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference2: MutablePropertyReference2()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()
androidx.activity.result.contract.ActivityResultContracts$TakePicture: java.lang.Boolean parseResult(int,android.content.Intent)
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
kotlin.collections.builders.ListBuilder$Itr: int previousIndex()
androidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minWithOrNull(java.lang.Object[],java.util.Comparator)
androidx.core.widget.TintableImageSourceView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.startup.AppInitializer: AppInitializer(android.content.Context)
kotlin.text.MatcherMatchResult$groups$1$iterator$1: MatcherMatchResult$groups$1$iterator$1(kotlin.text.MatcherMatchResult$groups$1)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: java.lang.Void noImpl()
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.ranges.RangesKt___RangesKt: double coerceAtLeast(double,double)
androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
kotlin.collections.ArraysKt___ArraysKt$withIndex$7: java.lang.Object invoke()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: java.lang.Object get(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(byte[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.PropertyReference0Impl: PropertyReference0Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(int[],kotlin.random.Random)
kotlin.UShort: short or-xj2QHRw(short,short)
kotlinx.coroutines.internal.ScopeCoroutine: boolean isScopedCoroutine()
kotlin.time.MonotonicTimeSource: MonotonicTimeSource()
androidx.viewpager.widget.ViewPager: void onSizeChanged(int,int,int,int)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: void forEachSlotLocked(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationManagerCompat: NotificationManagerCompat(android.app.NotificationManager,android.content.Context)
androidx.collection.ArraySet: boolean removeAll(androidx.collection.ArraySet)
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
kotlin.collections.MapsKt__MapsKt: void plusAssign(java.util.Map,java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(float[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.internal.ChannelFlow: java.lang.String toString()
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor)
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
androidx.window.layout.WindowMetrics: androidx.core.view.WindowInsetsCompat getWindowInsets()
kotlinx.coroutines.sync.SemaphoreSegment: java.lang.Object getAndSet(int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.android.FlutterActivity$1: void onBackInvoked()
io.flutter.plugin.editing.SpellCheckPlugin: void performSpellCheck(java.lang.String,java.lang.String)
kotlin.collections.ArrayDeque: java.lang.Object set(int,java.lang.Object)
com.getkeepsafe.relinker.SystemLibraryLoader: void loadLibrary(java.lang.String)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
androidx.fragment.app.SpecialEffectsController$Operation: void setAwaitingContainerChanges(boolean)
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(char[],int,int)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setDefaultSplitAttributes(androidx.window.embedding.SplitAttributes)
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: EventLoopImplBase$DelayedTaskQueue(long)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KProperty2 property2(kotlin.jvm.internal.PropertyReference2)
kotlin.collections.ArraysKt___ArraysKt: boolean none(short[])
androidx.core.view.ViewKt: kotlin.sequences.Sequence getAllViews(android.view.View)
kotlin.time.DurationUnitKt__DurationUnitKt: kotlin.time.DurationUnit durationUnitByIsoChar(char,boolean)
androidx.collection.LongSparseArray: boolean replace(long,java.lang.Object,java.lang.Object)
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
androidx.versionedparcelable.VersionedParcelStream: void setOutputField(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short reduce-xzaTVY8(short[],kotlin.jvm.functions.Function2)
androidx.window.embedding.ActivityStack: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: short maxOrThrow(short[])
kotlin.collections.IndexedValue: IndexedValue(int,java.lang.Object)
kotlin.reflect.KClass: boolean isData()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setFilterBitmap(boolean)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: TypefaceCompat$ResourcesCallbackAdapter(androidx.core.content.res.ResourcesCompat$FontCallback)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$3: java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float,float,float)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: void access$400(io.flutter.plugin.editing.TextInputPlugin)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()
androidx.lifecycle.ProcessLifecycleOwner: void activityStarted$lifecycle_process_release()
androidx.versionedparcelable.VersionedParcelParcel: void writeDouble(double)
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
androidx.fragment.app.BackStackRecord: int commit()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: ActivityRecreator$LifecycleCheckCallbacks(android.app.Activity)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.Float toFloatOrNull(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewRenderTarget: void resize(int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-F7u83W8(long[],java.lang.Iterable)
kotlin.collections.CollectionsKt__IteratorsJVMKt$iterator$1: boolean hasNext()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associate(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions$asLiveData$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int indexOf(java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.List flatMapIndexedIterable(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(double[])
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)
androidx.activity.result.contract.ActivityResultContracts$GetContent: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(short[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.location.LocationListenerCompat: void onProviderEnabled(java.lang.String)
androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenStarted(androidx.lifecycle.Lifecycle,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.lifecycle.LiveDataScope: java.lang.Object emitSource(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)
androidx.lifecycle.CoroutineLiveData$clearSource$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.FragmentManager: void reportBackStackChanged()
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1(java.lang.Object[])
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.ByteIterator iterator(byte[])
androidx.core.view.ViewKt: void setGone(android.view.View,boolean)
kotlinx.coroutines.CancelFutureOnCompletion: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterActivity$1: void onBackProgressed(android.window.BackEvent)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object updateCellReceiveSlow(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
kotlin.jvm.internal.PropertyReference2Impl: java.lang.Object get(java.lang.Object,java.lang.Object)
androidx.viewpager.widget.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForSend()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Parcel)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: FrameMetricsAggregator$FrameMetricsBaseImpl()
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: java.lang.Object getOption(int)
androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)
androidx.window.embedding.SplitController: void invalidateTopVisibleSplitAttributes()
kotlinx.coroutines.sync.MutexImpl$onLock$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.random.Random: int nextInt(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
kotlin.sequences.IndexingSequence: java.util.Iterator iterator()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: android.app.Activity getActivity()
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper: java.io.File getCodeCacheDir(android.content.Context)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()
androidx.tracing.Trace: void endAsyncSection(java.lang.String,int)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
kotlin.io.ConsoleKt: void println(boolean)
kotlinx.coroutines.sync.SemaphoreImpl: int getAvailablePermits()
kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()
kotlin.collections.EmptyIterator: void add(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component4(java.lang.Object[])
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: SelectImplementation$doSelectSuspend$1(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.profileinstaller.ProfileVerifier: androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: SafeCollector_commonKt$checkContext$result$1(kotlinx.coroutines.flow.internal.SafeCollector)
androidx.fragment.app.Fragment$SavedState$1: androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void initLoadingUnitMappingToComponentNames()
kotlin.collections.ArraysKt___ArraysKt: float minOrThrow(java.lang.Float[])
kotlinx.coroutines.debug.internal.DebugProbesImpl: boolean isInstalled$kotlinx_coroutines_core()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: int getSize()
kotlin.OptIn: java.lang.Class[] markerClass()
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.CharRange,java.lang.Character)
kotlin.io.path.PathsKt__PathUtilsKt: boolean notExists(java.nio.file.Path,java.nio.file.LinkOption[])
kotlin.io.ByteStreamsKt: kotlin.collections.ByteIterator iterator(java.io.BufferedInputStream)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()
androidx.versionedparcelable.VersionedParcel: void writeNoException()
androidx.annotation.RequiresApi: int value()
androidx.core.view.ViewCompat$Api29Impl: ViewCompat$Api29Impl()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: double minOf(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.content.res.GrowingArrayUtils: long[] append(long[],int,long)
androidx.viewpager.R$dimen: R$dimen()
androidx.core.os.LocaleListInterface: java.lang.String toLanguageTags()
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object access$collectWithContextUndispatched(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: ExceptionsConstructorKt$createConstructor$1$3(java.lang.reflect.Constructor)
kotlin.sequences.SequencesKt___SequencesKt$requireNoNulls$1: java.lang.Object invoke(java.lang.Object)
androidx.core.content.res.TypedArrayUtils: int getAttr(android.content.Context,int,int)
kotlin.random.KotlinRandom$Companion: KotlinRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(float[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__LimitKt: java.lang.Object access$emitAbort$FlowKt__LimitKt(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.Job launchSharing$FlowKt__ShareKt(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.MutableSharedFlow,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
kotlin.annotation.AnnotationRetention: kotlin.annotation.AnnotationRetention valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong minBy-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.lifecycle.ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$1: ViewTreeLifecycleOwner$findViewTreeLifecycleOwner$1()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment(boolean)
com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
kotlin.collections.AbstractSet$Companion: AbstractSet$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.util.LongSparseArrayKt: boolean isEmpty(android.util.LongSparseArray)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$3: java.util.Iterator iterator()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.activity.BackEventCompat$Companion: BackEventCompat$Companion()
kotlinx.coroutines.CoroutineStart: void isLazy$annotations()
kotlinx.coroutines.TimeoutCancellationException: kotlinx.coroutines.TimeoutCancellationException createCopy()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filter$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(int[])
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setVibrationPattern(long[])
kotlinx.coroutines.channels.BufferedChannel: void loop$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)
kotlin.jvm.internal.LongSpreadBuilder: int getSize(long[])
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean hasRunningLoaders()
kotlin.text.CharsKt__CharKt: java.lang.Integer digitToIntOrNull(char)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setVisible(int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minByOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: int size()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float maxOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAt(kotlin.sequences.Sequence,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWithOrNull(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort firstOrNull-rL5Bavg(short[])
kotlin.sequences.TakeWhileSequence$iterator$1: void calcNext()
androidx.core.view.WindowInsetsAnimationCompat$Impl30: WindowInsetsAnimationCompat$Impl30(android.view.WindowInsetsAnimation)
androidx.fragment.app.ListFragment$1: void run()
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Deferred async$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: NotificationCompat$CallStyle$Api23Impl()
kotlin.collections.AbstractMap: java.util.Set entrySet()
kotlin.io.path.LinkFollowing: java.util.Set toVisitOptions(boolean)
kotlin.collections.CollectionsKt__IteratorsKt: java.util.Iterator iterator(java.util.Iterator)
kotlin.time.TimeSource$WithComparableMarks: kotlin.time.ComparableTimeMark markNow()
androidx.window.embedding.EmbeddingAdapter: androidx.window.extensions.embedding.SplitAttributes translateSplitAttributes(androidx.window.embedding.SplitAttributes)
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: java.util.Iterator sourceIterator()
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpDebuggerInfo$$inlined$dumpCoroutinesInfoImpl$1: java.lang.Object invoke(kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner)
kotlin.sequences.FlatteningSequence$iterator$1: java.util.Iterator getIterator()
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearchBy(java.util.List,java.lang.Comparable,int,int,kotlin.jvm.functions.Function1)
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: FilesKt__UtilsKt$copyRecursively$2(kotlin.jvm.functions.Function2)
kotlin.text.StringsKt___StringsKt: java.lang.String slice(java.lang.String,java.lang.Iterable)
kotlin.UByte: int compareTo-7apg3OU(byte)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double getOrNull(double[],int)
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.sequences.SequencesKt__SequencesKt$flatten$1: SequencesKt__SequencesKt$flatten$1()
kotlinx.coroutines.DeferredCoroutine: DeferredCoroutine(kotlin.coroutines.CoroutineContext,boolean)
kotlin.UnsignedKt: int doubleToUInt(double)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: NotificationCompat$BubbleMetadata$Api29Impl()
kotlinx.coroutines.channels.BufferedChannel$onSend$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1: void onTransitionResume(android.transition.Transition)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
org.jetbrains.annotations.Debug$Renderer: java.lang.String text()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(double[],java.lang.Iterable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
androidx.core.graphics.ColorKt: int getGreen(int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.ref.ReferenceQueue access$getWeakRefQueue$p(kotlinx.coroutines.debug.internal.ConcurrentWeakMap)
kotlinx.coroutines.flow.ChannelAsFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
kotlin.sequences.DropSequence$iterator$1: void remove()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
kotlin.properties.NotNullVar: NotNullVar()
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLastWhile(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void noWindowsAreFocused()
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintDisplayActionInline()
kotlinx.coroutines.internal.LimitedDispatcher: java.lang.Runnable access$obtainTaskOrDeallocateWorker(kotlinx.coroutines.internal.LimitedDispatcher)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-2fe2U9s(int[],int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] asUShortArray(short[])
androidx.collection.CircularIntArray: void doubleCapacity()
kotlin.KotlinVersion: int getPatch()
kotlin.UInt: int plus-7apg3OU(int,byte)
androidx.activity.ComponentActivity: void invalidateMenu()
kotlin.ULong: long minus-7apg3OU(long,byte)
androidx.collection.CircularIntArray: int size()
androidx.core.util.LruCacheKt$lruCache$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: boolean initializePlatformViewIfNeeded(int)
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
kotlin.text.Charsets: java.nio.charset.Charset UTF32_BE()
androidx.window.embedding.SplitAttributes$Builder: SplitAttributes$Builder()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plusElement(java.util.Collection,java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1()
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$2: java.util.Iterator invoke()
kotlinx.coroutines.ResumeUndispatchedRunnable: ResumeUndispatchedRunnable(kotlinx.coroutines.CoroutineDispatcher,kotlinx.coroutines.CancellableContinuation)
io.flutter.embedding.engine.FlutterEngineGroupCache: FlutterEngineGroupCache()
io.flutter.embedding.android.KeyChannelResponder: KeyChannelResponder(io.flutter.embedding.engine.systemchannels.KeyEventChannel)
kotlin.collections.builders.MapBuilder: boolean equals(java.lang.Object)
android.support.v4.os.IResultReceiver2$Stub$Proxy: void send(int,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte minByOrThrow-U(byte[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short minByOrThrow-U(short[],kotlin.jvm.functions.Function1)
androidx.core.os.ProcessCompat: ProcessCompat()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel produceIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
kotlinx.coroutines.YieldContext: YieldContext()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(java.lang.Object[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
androidx.core.os.LocaleListCompatWrapper$Api21Impl: java.lang.String getScript(java.util.Locale)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String toString()
kotlin.collections.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: androidx.collection.ArrayMap getFirstOutViews()
androidx.core.widget.TextViewCompat$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$sendBlocking$1: ChannelsKt__ChannelsKt$sendBlocking$1(kotlinx.coroutines.channels.SendChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer[] toTypedArray(int[])
kotlinx.coroutines.selects.SelectClause2Impl: kotlin.jvm.functions.Function3 getProcessResFunc()
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate: void setFrameworkHandlesBack(boolean)
kotlin.collections.ArrayDeque: int getSize()
kotlinx.coroutines.channels.BroadcastCoroutine: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.internal.OnDemandAllocatingPool: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: void unpark()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
androidx.window.layout.adapter.extensions.ExtensionWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.Object keyOf(java.lang.Object)
kotlin.NumbersKt__NumbersJVMKt: double fromBits(kotlin.jvm.internal.DoubleCompanionObject,long)
androidx.core.util.RangeKt$toClosedRange$1: boolean contains(java.lang.Comparable)
androidx.window.embedding.ExtensionEmbeddingBackend$Api31Impl: androidx.window.embedding.SplitController$SplitSupportStatus isSplitPropertyEnabled(android.content.Context)
androidx.core.util.Predicate$-CC: boolean $private$lambda$negate$1(androidx.core.util.Predicate,java.lang.Object)
androidx.activity.ComponentActivity: void onNewIntent(android.content.Intent)
androidx.core.app.RemoteInput$Api28Impl: void setResultsSource(android.content.Intent,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding(android.content.BroadcastReceiver)
kotlin.ranges.CharProgressionIterator: CharProgressionIterator(char,char,int)
androidx.profileinstaller.ProfileTranscoder: byte[] createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[])
kotlinx.coroutines.scheduling.DefaultScheduler: DefaultScheduler()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object lastOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
androidx.lifecycle.BlockRunner$maybeRun$1: BlockRunner$maybeRun$1(androidx.lifecycle.BlockRunner,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: ArraysKt___ArraysJvmKt$asList$1(byte[])
androidx.core.util.SparseArrayKt$valueIterator$1: void remove()
androidx.window.embedding.RuleController: androidx.window.embedding.RuleController getInstance(android.content.Context)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List windowed(java.lang.Iterable,int,int,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setRowIndex(int)
androidx.core.app.NotificationCompat: java.lang.CharSequence getSettingsText(android.app.Notification)
androidx.core.graphics.PointKt: android.graphics.Point toPoint(android.graphics.PointF)
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(java.lang.CharSequence)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()
kotlin.collections.CollectionsKt__IterablesKt: kotlin.Pair unzip(java.lang.Iterable)
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.OpenEndRange,short)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void isFeatureAvailable(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List sorted-QwZRm1k(long[])
kotlin.time.ComparableTimeMark$DefaultImpls: boolean hasNotPassedNow(kotlin.time.ComparableTimeMark)
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt$mapLatest$1: FlowKt__MergeKt$mapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1: void beforeTextChanged(java.lang.CharSequence,int,int,int)
kotlin.reflect.KClass$DefaultImpls: void getVisibility$annotations()
kotlinx.coroutines.channels.ChannelCoroutine: void invokeOnClose(kotlin.jvm.functions.Function1)
androidx.core.view.ContentInfoCompat$Compat: android.net.Uri getLinkUri()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: ConflatedBroadcastChannel(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion: androidx.window.layout.adapter.WindowBackend newInstance(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter)
androidx.core.app.Person: java.lang.String getUri()
kotlin.sequences.GeneratorSequence: kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence)
kotlinx.coroutines.ThreadPoolDispatcherKt: kotlinx.coroutines.ExecutorCoroutineDispatcher newFixedThreadPoolContext(int,java.lang.String)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope plus(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.View,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
kotlin.io.ByteStreamsKt: java.io.BufferedReader bufferedReader$default(java.io.InputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.StateFlow asStateFlow(kotlinx.coroutines.flow.MutableStateFlow)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize: PlatformViewsChannel$PlatformViewBufferSize(int,int)
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1$emit$1: FlowKt__MergeKt$flattenConcat$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$1$1,kotlin.coroutines.Continuation)
androidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded()
kotlin.text.StringsKt___StringsKt: char first(java.lang.CharSequence)
kotlin.jvm.internal.Reflection: Reflection()
androidx.core.widget.PopupMenuCompat: android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object)
androidx.core.app.NotificationCompat: java.lang.CharSequence getContentTitle(android.app.Notification)
kotlin.collections.ArraysKt___ArraysKt: long reduceRightIndexed(long[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(byte[],byte,int,int,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler: void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.math.BigDecimal sumOfBigDecimal(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.Flow)
androidx.core.view.WindowInsetsCompat$Type: int navigationBars()
kotlin.io.OnErrorAction: OnErrorAction(java.lang.String,int)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: java.lang.Object invoke(kotlin.Unit,kotlin.coroutines.Continuation)
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
kotlin.collections.ArraysKt___ArraysKt: void reverse(long[])
androidx.core.view.OnReceiveContentViewBehavior: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.graphics.WeightTypefaceApi26: android.graphics.Typeface createWeightStyle(android.graphics.Typeface,int,boolean)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setExclusive(boolean)
kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(android.graphics.Rect,java.util.List)
io.flutter.plugin.platform.PlatformViewsController$1: void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: IUnusedAppRestrictionsBackportService$Stub$Proxy(android.os.IBinder)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(boolean[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.ranges.UIntProgression: UIntProgression(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.JobSupport: void onAwaitInternalRegFunc(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlin.annotation.AnnotationTarget: AnnotationTarget(java.lang.String,int)
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getUNDECIDED$annotations()
kotlin.text.StringsKt___StringsKt: char getOrElse(java.lang.CharSequence,int,kotlin.jvm.functions.Function1)
kotlin.collections.builders.ListBuilder: boolean equals(java.lang.Object)
kotlin.text.DelimitedRangesSequence$iterator$1: int getCounter()
androidx.core.os.BuildCompat: boolean isAtLeastS()
androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)
kotlinx.coroutines.channels.BufferedChannel: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person)
kotlin.sequences.SequencesKt___SequencesKt$flatMapIndexed$2: java.util.Iterator invoke(kotlin.sequences.Sequence)
androidx.window.embedding.EmbeddingAdapter: boolean translateSplitPairRule$lambda$3(androidx.window.embedding.SplitPairRule,android.util.Pair)
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy()
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$7(android.content.ClipData)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(byte[])
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int maxOf-Md2H83M(int,int[])
kotlin.text.StringsKt___StringsKt: void forEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getType()
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 nullArrayFactory$FlowKt__ZipKt()
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted getLazily()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence withIndex(kotlin.sequences.Sequence)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.view.inputmethod.InputConnectionCompat$1: InputConnectionCompat$1(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
androidx.loader.content.ModernAsyncTask: java.lang.Object get()
io.flutter.embedding.android.KeyData$Type: long getValue()
kotlinx.coroutines.Active: java.lang.String toString()
kotlin.jvm.internal.ClassReference: java.lang.Void error()
com.getkeepsafe.relinker.TextUtils: TextUtils()
androidx.core.os.PersistableBundleApi21ImplKt: PersistableBundleApi21ImplKt()
kotlinx.coroutines.channels.ReceiveChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
kotlin.collections.ArraysKt__ArraysKt: kotlin.Pair unzip(kotlin.Pair[])
androidx.core.graphics.drawable.IconCompat$Api28Impl: IconCompat$Api28Impl()
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.internal.Symbol access$getNO_RESULT$p()
androidx.profileinstaller.DeviceProfileWriter: DeviceProfileWriter(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityBackward()
androidx.window.reflection.ReflectionUtils: boolean validateReflection$window_release(java.lang.String,kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: int sumOfByte(java.lang.Byte[])
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte first-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: float maxOf(int[],kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
kotlinx.coroutines.AwaitAll$DisposeHandlersOnCancel: java.lang.String toString()
kotlin.io.ConsoleKt: void println(byte)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(double[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long maxOf(long,long[])
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$3: java.lang.Long invoke(java.lang.Object)
kotlin.ranges.ClosedRange$DefaultImpls: boolean contains(kotlin.ranges.ClosedRange,java.lang.Comparable)
kotlin.sequences.DropWhileSequence$iterator$1: java.lang.Object getNextItem()
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[])
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
io.flutter.embedding.android.FlutterActivity: void onPostResume()
io.flutter.view.VsyncWaiter: long access$000(io.flutter.view.VsyncWaiter)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean close(java.lang.Throwable)
kotlinx.coroutines.internal.Segment: boolean tryIncPointers$kotlinx_coroutines_core()
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxByOrThrow(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.SharingStartedKt: kotlinx.coroutines.flow.SharingStarted WhileSubscribed-5qebJ5I(kotlinx.coroutines.flow.SharingStarted$Companion,long,long)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.io.path.PathsKt__PathUtilsKt: void getExtension$annotations(java.nio.file.Path)
kotlinx.coroutines.flow.FlowKt__ReduceKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
kotlin.io.LineReader: java.lang.String readLine(java.io.InputStream,java.nio.charset.Charset)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],int[])
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1: void onAnimationRepeat(android.animation.Animator)
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.core.animation.AnimatorKt$addListener$1: void invoke(android.animation.Animator)
kotlin.reflect.KClass: boolean isCompanion()
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(boolean[])
kotlin.UIntArray: int[] unbox-impl()
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation)
kotlin.time.Duration: long access$getNEG_INFINITE$cp()
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationStart(android.animation.Animator)
kotlin.collections.ArraysKt___ArraysKt: float reduceIndexed(float[],kotlin.jvm.functions.Function3)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.OutputStreamWriter writer(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object first(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.text.Regex: Regex(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(byte[],java.nio.charset.Charset)
androidx.core.view.MenuItemCompat$1: MenuItemCompat$1(androidx.core.view.MenuItemCompat$OnActionExpandListener)
androidx.core.location.GnssStatusWrapper: float getElevationDegrees(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: boolean imageQueueIsEmpty()
kotlin.collections.ArraysKt___ArraysKt: float elementAtOrElse(float[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt: void ensurePlatformExceptionHandlerLoaded(kotlinx.coroutines.CoroutineExceptionHandler)
androidx.activity.ComponentActivity$3: ComponentActivity$3(androidx.activity.ComponentActivity)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void printStackTrace(java.io.PrintStream,java.util.List)
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
androidx.core.os.ParcelCompat: java.lang.Object[] readArray(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.core.graphics.PathKt: android.graphics.Path and(android.graphics.Path,android.graphics.Path)
androidx.core.os.BundleCompat$Api33Impl: android.util.SparseArray getSparseParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.viewpager.widget.ViewPager: void draw(android.graphics.Canvas)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder dartEntrypoint(java.lang.String)
androidx.core.widget.NestedScrollView: void requestLayout()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)
androidx.window.embedding.SplitPairFilter: int hashCode()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
kotlinx.coroutines.internal.MainDispatchersKt: void getSUPPORT_MISSING$annotations()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.Semaphore: java.lang.Object acquire(kotlin.coroutines.Continuation)
androidx.core.app.NotificationChannelGroupCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
kotlin.jvm.internal.Intrinsics: void throwIllegalState(java.lang.String)
io.flutter.Log: void d(java.lang.String,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int maxByOrThrow-U(int[],kotlin.jvm.functions.Function1)
kotlin.UByte: kotlin.ranges.UIntRange rangeTo-7apg3OU(byte,byte)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener)
kotlinx.coroutines.flow.LintKt: kotlin.coroutines.CoroutineContext getCoroutineContext(kotlinx.coroutines.flow.FlowCollector)
kotlin.time.Duration$Companion: long microseconds-UwyO8pc(double)
kotlin.ranges.RangesKt__RangesKt: RangesKt__RangesKt()
kotlin.time.DurationUnitKt__DurationUnitJvmKt: double convertDurationUnit(double,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
kotlinx.coroutines.flow.SharedFlowImpl: void enqueueLocked(java.lang.Object)
androidx.core.app.NotificationCompat$Style$Api24Impl: void setChronometerCountDown(android.widget.RemoteViews,int,boolean)
kotlin.math.MathKt__MathJVMKt: float nextTowards(float,float)
kotlin.jvm.internal.Intrinsics: Intrinsics()
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: TypesJVMKt$typeToString$unwrap$1()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
kotlin.ranges.UIntProgression: int getFirst-pVg5ArA()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
kotlin.collections.AbstractList: java.lang.Object set(int,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2: java.lang.Object emit(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setContentDescription(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$6$1: FlowKt__ZipKt$combine$6$1(kotlinx.coroutines.flow.Flow[])
kotlin.text.StringsKt___StringsKt: java.lang.String slice(java.lang.String,kotlin.ranges.IntRange)
kotlin.text.StringsKt___StringsJvmKt: java.math.BigDecimal sumOfBigDecimal(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-A8wKCXQ(long[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: double elementAtOrElse(double[],int,kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: FlowLiveDataConversions$asFlow$1(androidx.lifecycle.LiveData,kotlin.coroutines.Continuation)
kotlin.io.FilesKt__FileReadWriteKt: byte[] readBytes(java.io.File)
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(java.lang.Object[],java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-nggk6HY(short[],int)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: boolean cancelWithoutNotifyingCompleter(boolean)
androidx.fragment.app.FragmentTransitionImpl: boolean isSeekingSupported(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float minWith(float[],java.util.Comparator)
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long minOf(long,long)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigDecimal toBigDecimal(java.lang.String)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flatMapMerge(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function2)
androidx.lifecycle.HasDefaultViewModelProviderFactory$-CC: androidx.lifecycle.viewmodel.CreationExtras $default$getDefaultViewModelCreationExtras(androidx.lifecycle.HasDefaultViewModelProviderFactory)
androidx.core.app.JobIntentService$CommandProcessor: java.lang.Object doInBackground(java.lang.Object[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List drop(java.lang.Iterable,int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: FlowKt__DelayKt$debounceInternal$1$values$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: int getIndex()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Comparable[],int,int)
kotlinx.coroutines.flow.SharedFlowImpl: int access$getTotalSize(kotlinx.coroutines.flow.SharedFlowImpl)
androidx.core.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])
androidx.core.view.WindowInsetsCompat: int hashCode()
kotlin.ranges.ULongProgression: java.lang.String toString()
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: android.net.Uri parseResult(int,android.content.Intent)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.ranges.URangesKt___URangesKt: boolean contains-biwQdVI(kotlin.ranges.UIntRange,kotlin.UInt)
kotlin.io.path.PathTreeWalk: boolean getIncludeDirectories()
androidx.core.view.DragAndDropPermissionsCompat: DragAndDropPermissionsCompat(android.view.DragAndDropPermissions)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object removeFirst(java.util.List)
androidx.core.net.TrafficStatsCompat: TrafficStatsCompat()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] $values()
kotlin.sequences.SequencesKt___SequencesKt: boolean contains(kotlin.sequences.Sequence,java.lang.Object)
kotlinx.coroutines.BuildersKt__BuildersKt: java.lang.Object runBlocking$default(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.ParameterName: java.lang.String name()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore(java.lang.String,char,java.lang.String,java.lang.String)
androidx.core.graphics.ColorKt: int toColorInt(java.lang.String)
kotlinx.coroutines.ResumeAwaitOnCompletion: void invoke(java.lang.Throwable)
kotlinx.coroutines.android.HandlerDispatcherKt: void getMain$annotations()
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
kotlin.reflect.KProperty1: kotlin.reflect.KProperty1$Getter getGetter()
androidx.activity.ComponentActivity: ComponentActivity(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)
kotlinx.coroutines.channels.BufferedChannel: void cancel(java.util.concurrent.CancellationException)
androidx.window.area.WindowAreaControllerImpl: java.util.HashMap access$getCurrentWindowAreaInfoMap$p(androidx.window.area.WindowAreaControllerImpl)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow map(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2: java.lang.Object invoke()
io.flutter.util.TraceSection: void begin(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: ViewCompat$Api21Impl()
androidx.core.app.ActivityManagerCompat: ActivityManagerCompat()
kotlin.sequences.SequencesKt___SequencesKt: void forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: ResourcesCompat$ThemeCompat$Api29Impl()
androidx.fragment.app.FragmentLayoutInflaterFactory$1: void onViewAttachedToWindow(android.view.View)
androidx.collection.ArraySet$1: int colIndexOfKey(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: short component2(short[])
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence)
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequestWorker$TypefaceResult call()
kotlin.io.encoding.Base64: byte[] encodeToByteArrayImpl$kotlin_stdlib(byte[],int,int)
kotlinx.coroutines.AwaitKt: java.lang.Object joinAll(kotlinx.coroutines.Job[],kotlin.coroutines.Continuation)
androidx.core.content.res.ResourcesCompat$Api29Impl: float getFloat(android.content.res.Resources,int)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-PabeH-Q(long[],long[],kotlin.jvm.functions.Function2)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
kotlin.collections.builders.SerializedCollection: SerializedCollection(java.util.Collection,int)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysKt: float[] sliceArray(float[],java.util.Collection)
kotlinx.coroutines.flow.FlowKt__CountKt: java.lang.Object count(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel access$1400(io.flutter.plugin.platform.PlatformPlugin)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongRange until(short,long)
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailCc()
kotlin.UByte: byte inv-w2LRezQ(byte)
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.PendingIntent getDeleteIntent()
kotlinx.coroutines.channels.BufferedChannel: boolean isClosedForSend0(long)
kotlinx.coroutines.JobKt: void cancel(kotlinx.coroutines.Job,java.lang.String,java.lang.Throwable)
androidx.core.view.TreeIterator: void prepareNextIterator(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1: void onStart()
kotlin.sequences.SequencesKt___SequencesKt$minus$3: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: byte[] toByteArray(java.lang.Byte[])
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexed$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3,int,java.lang.Object)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: android.util.SparseArray access$400(io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager)
androidx.core.util.RangeKt: android.util.Range rangeTo(java.lang.Comparable,java.lang.Comparable)
androidx.core.telephony.TelephonyManagerCompat$Api23Impl: java.lang.String getDeviceId(android.telephony.TelephonyManager,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateByTo(byte[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
kotlin.ranges.LongProgression: kotlin.collections.LongIterator iterator()
androidx.core.view.inputmethod.InputConnectionCompat: boolean lambda$createOnCommitContentListenerUsingPerformReceiveContent$0(android.view.View,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
androidx.window.embedding.SplitRule: androidx.window.embedding.EmbeddingAspectRatio getMaxAspectRatioInLandscape()
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object singleOrNull(kotlin.sequences.Sequence)
androidx.versionedparcelable.VersionedParcel: void writeInt(int)
kotlin.time.Duration$Companion: long minutes-UwyO8pc(long)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
androidx.core.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(byte[])
kotlin.collections.builders.MapBuilderEntries: int getSize()
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection copy$default(kotlin.reflect.KTypeProjection,kotlin.reflect.KVariance,kotlin.reflect.KType,int,java.lang.Object)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.app.RemoteInput$Builder setAllowFreeFormInput(android.app.RemoteInput$Builder,boolean)
androidx.core.internal.view.SupportMenuItem$-CC: android.view.MenuItem $default$setContentDescription(androidx.core.internal.view.SupportMenuItem,java.lang.CharSequence)
kotlin.jvm.internal.TypeReference: java.lang.String access$asString(kotlin.jvm.internal.TypeReference,kotlin.reflect.KTypeProjection)
androidx.window.area.EmptyWindowAreaControllerImpl: void presentContentOnWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaPresentationSessionCallback)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.SharedFlowSlot createSlot()
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2: SequencesKt__SequencesKt$generateSequence$2(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$TakeVideo: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1: kotlin.jvm.functions.Function1 invoke(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character singleOrNull(char[],kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderValues: boolean addAll(java.util.Collection)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
kotlin.random.KotlinRandom: kotlin.random.Random getImpl()
androidx.core.content.pm.ShortcutInfoCompat: ShortcutInfoCompat()
androidx.viewpager.widget.PagerAdapter: int getItemPosition(java.lang.Object)
androidx.collection.CircularArray: CircularArray(int)
androidx.core.view.ViewCompat: void compatOffsetTopAndBottom(android.view.View,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.Segment: void onSlotCleaned()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: short get-Mh2AYeg(int)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackWindowConsumerValid$1: java.lang.Object invoke()
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(boolean[],kotlin.jvm.functions.Function1)
kotlin.StandardKt__StandardKt: void repeat(int,kotlin.jvm.functions.Function1)
androidx.lifecycle.LifecycleKt$eventFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.Pair: java.lang.Object component1()
androidx.core.view.inputmethod.EditorInfoCompat: boolean isCutOnSurrogate(java.lang.CharSequence,int,int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$7100(io.flutter.view.AccessibilityBridge,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float last(float[])
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api24Impl: android.app.Notification$Style createDecoratedCustomViewStyle()
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void lambda$dispatch$0()
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.lifecycle.LiveDataKt$observe$wrappedObserver$1: LiveDataKt$observe$wrappedObserver$1(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedLazily$command$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewWrapper: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.collection.ArrayMap: ArrayMap(androidx.collection.SimpleArrayMap)
kotlin.NumbersKt__FloorDivModKt: long mod(long,long)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyInto(float[],float[],int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduceRightIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: android.graphics.SurfaceTexture getSurfaceTexture()
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1: void afterTextChanged(android.text.Editable)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,long)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean reduceIndexedOrNull(boolean[],kotlin.jvm.functions.Function3)
io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$CachedEngineIntentBuilder destroyEngineWithActivity(boolean)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void updateState(kotlin.coroutines.Continuation,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean elementAtOrNull(boolean[],int)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$1: java.lang.Throwable invoke(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong lastOrNull-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.core.graphics.RectKt: float component2(android.graphics.RectF)
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput)
kotlin.collections.CollectionsKt__IteratorsKt: CollectionsKt__IteratorsKt()
kotlin.collections.ArraysKt___ArraysKt: boolean contains(java.lang.Object[],java.lang.Object)
androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)
kotlin.text.MatcherMatchResult$groups$1: boolean contains(java.lang.Object)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: boolean defaultIsRtl()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
kotlin.text.RegexOption: kotlin.text.RegexOption valueOf(java.lang.String)
androidx.core.location.GnssStatusWrapper$Api30Impl: float getBasebandCn0DbHz(android.location.GnssStatus,int)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.Object invoke(java.lang.Object)
androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
androidx.core.location.GnssStatusCompat: float getAzimuthDegrees(int)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void forEach-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.WindowManagerHandler access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
kotlin.ULongArray: boolean containsAll-impl(long[],java.util.Collection)
androidx.lifecycle.livedata.core.R: R()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow asSharedFlow(kotlinx.coroutines.flow.MutableSharedFlow)
kotlinx.coroutines.channels.BufferedChannel: BufferedChannel(int,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView$SavedState: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: java.lang.Object invoke(java.lang.Object)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: java.io.OutputStream getOutputStream()
kotlin.collections.ArraysKt___ArraysJvmKt: short elementAt(short[],int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-us8wMrg(long[],long[])
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentDeepEqualsInline(java.lang.Object[],java.lang.Object[])
androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()
kotlin.random.Random$Default: long nextLong(long,long)
kotlinx.coroutines.BlockingCoroutine: BlockingCoroutine(kotlin.coroutines.CoroutineContext,java.lang.Thread,kotlinx.coroutines.EventLoop)
kotlin.jvm.internal.ClassReference: java.util.List getTypeParameters()
androidx.core.view.MenuHost: void removeMenuProvider(androidx.core.view.MenuProvider)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(double[],kotlin.jvm.functions.Function3)
kotlin.text.RegexKt: kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int)
androidx.core.location.LocationManagerCompat: boolean hasProvider(android.location.LocationManager,java.lang.String)
kotlin.sequences.TakeWhileSequence: java.util.Iterator iterator()
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.PlatformPlugin$1: void setFrameworkHandlesBack(boolean)
kotlinx.coroutines.scheduling.WorkQueue: boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue)
androidx.core.os.LocaleListCompatWrapper: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void hide()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.activity.ComponentActivity$Api33Impl: ComponentActivity$Api33Impl()
kotlin.sequences.TakeWhileSequence$iterator$1: void setNextItem(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: double readDouble()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void onFlutterUiNoLongerDisplayed()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Byte toByteOrNull(java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean contains(java.lang.Object)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void createMergedTransition$lambda$13(androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect)
androidx.viewpager.widget.ViewPager: boolean isDecorView(android.view.View)
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: void unregister()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void computeBitmapSize()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(double[],kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
kotlin.text.CharDirectionality: CharDirectionality(java.lang.String,int,int)
androidx.window.core.ConsumerAdapter: java.lang.Class unsafeConsumerClass()
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: androidx.core.graphics.Insets getCurrentInsets()
androidx.core.view.MenuHostHelper: MenuHostHelper(java.lang.Runnable)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute(io.flutter.view.AccessibilityBridge$1)
kotlin.coroutines.Continuation: kotlin.coroutines.CoroutineContext getContext()
androidx.core.os.LocaleListInterface: int indexOf(java.util.Locale)
kotlinx.coroutines.channels.BroadcastChannelImpl: void getValueOrNull$annotations()
kotlin.math.MathKt__MathJVMKt: double sqrt(double)
androidx.core.provider.FontsContractCompat: void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$1: ChannelsKt__DeprecatedKt$filterNotNullTo$1(kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
androidx.core.content.OnConfigurationChangedProvider: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
androidx.window.embedding.SplitAttributes$SplitType$Companion$ratio$checkedRatio$1: java.lang.Boolean invoke(float)
androidx.lifecycle.ProcessLifecycleOwner: androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.fragment.app.BackStackRecordState: void writeToParcel(android.os.Parcel,int)
androidx.core.os.ParcelCompat: java.io.Serializable readSerializable(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.fragment.app.BackStackRecordState$1: androidx.fragment.app.BackStackRecordState[] newArray(int)
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(int[])
kotlin.text.RegexKt$fromInt$1$1: RegexKt$fromInt$1$1(int)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
kotlin.UShort: int floorDiv-7apg3OU(short,byte)
kotlin.io.path.PathsKt__PathReadWriteKt: void appendText(java.nio.file.Path,java.lang.CharSequence,java.nio.charset.Charset)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo(long[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
kotlinx.coroutines.flow.SharedFlowImpl: SharedFlowImpl(int,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Iterable)
kotlin.sequences.GeneratorSequence$iterator$1: int getNextState()
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: android.content.Intent createIntent(android.content.Context,java.lang.Object)
androidx.lifecycle.LifecycleCoroutineScopeImpl$register$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.properties.NotNullVar: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
kotlin.TypeAliasesKt: void NullPointerException$annotations()
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)
kotlinx.coroutines.internal.ConcurrentKt: boolean removeFutureOnCancel(java.util.concurrent.Executor)
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
androidx.core.view.ViewCompat: void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
kotlin.UShortArray: kotlin.UShortArray box-impl(short[])
androidx.core.app.NotificationCompat$CallStyle: java.util.ArrayList getActionsListWithSystemActions()
kotlinx.coroutines.channels.BufferedChannel: void invokeOnClose(kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short component4-rL5Bavg(short[])
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: int getExitAnim()
kotlin.collections.ArraysKt___ArraysKt: int last(int[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] onEach-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
androidx.window.embedding.SplitAttributes: SplitAttributes(androidx.window.embedding.SplitAttributes$SplitType,androidx.window.embedding.SplitAttributes$LayoutDirection,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.ranges.ULongProgression$Companion: ULongProgression$Companion()
com.getkeepsafe.relinker.ReLinker$LibraryInstaller: void installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)
kotlin.jvm.internal.DoubleSpreadBuilder: void add(double)
kotlinx.coroutines.stream.StreamFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(short[],java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint getDartEntrypoint()
androidx.core.text.ICUCompat$Api24Impl: ICUCompat$Api24Impl()
androidx.fragment.app.FragmentTabHost: void ensureContent()
kotlinx.coroutines.channels.BufferedChannel: void getOnReceiveCatching$annotations()
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt firstOrNull(kotlin.ranges.UIntProgression)
androidx.core.content.PackageManagerCompat: com.google.common.util.concurrent.ListenableFuture getUnusedAppRestrictionsStatus(android.content.Context)
androidx.fragment.app.FragmentManager: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
kotlin.text.StringsKt___StringsKt: java.lang.Object fold(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
kotlin.io.encoding.Base64: void checkDestinationBounds(int,int,int)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope valueOf(java.lang.String)
kotlin.collections.builders.MapBuilderKeys: boolean removeAll(java.util.Collection)
kotlin.collections.builders.MapBuilder$EntriesItr: int nextHashCode$kotlin_stdlib()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean)
kotlin.time.Duration: int getSecondsComponent-impl(long)
kotlin.jvm.internal.PackageReference: java.util.Collection getMembers()
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: SparseBooleanArrayKt$valueIterator$1(android.util.SparseBooleanArray)
kotlin.text.StringsKt___StringsJvmKt: java.lang.Character max(java.lang.CharSequence)
androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat build()
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableIterable(java.lang.Object)
androidx.fragment.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$keys$1: ConcurrentWeakMap$keys$1()
kotlin.collections.ArraysKt___ArraysKt: boolean single(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.ranges.URangesKt___URangesKt: int coerceAtLeast-J1ME1BU(int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],char[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(long[],int)
io.flutter.plugin.text.ProcessTextPlugin: void onDetachedFromActivity()
kotlinx.coroutines.Deferred: java.lang.Object getCompleted()
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1: TransitionKt$doOnResume$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
kotlin.text.StringsKt___StringsKt: char minWithOrThrow(java.lang.CharSequence,java.util.Comparator)
kotlinx.coroutines.channels.TickerChannelsKt$fixedPeriodTicker$1: TickerChannelsKt$fixedPeriodTicker$1(kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivity: void onStop()
kotlin.UNumbersKt: long rotateRight-JSWoG40(long,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: boolean getAllowFreeFormInput(android.app.RemoteInput)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,double)
kotlinx.coroutines.sync.SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1: SemaphoreImpl$tryResumeNextFromQueue$createNewSegment$1()
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.IndexedValue: boolean equals(java.lang.Object)
kotlinx.coroutines.sync.MutexKt: kotlinx.coroutines.sync.Mutex Mutex$default(boolean,int,java.lang.Object)
kotlin.UShort: int plus-WZ4Q5Ns(short,int)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentDeepHashCodeNullable(java.lang.Object[])
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub: android.os.IBinder asBinder()
androidx.lifecycle.LiveData$1: void run()
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.extensions.embedding.SplitPairRule translateSplitPairRuleCompat(android.content.Context,androidx.window.embedding.SplitPairRule,java.lang.Class)
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
androidx.profileinstaller.Encoding: java.lang.RuntimeException error(java.lang.String)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.selects.SelectImplementation: void selectInRegistrationPhase(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void cancelBackGesture()
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List lastObservedStackTrace()
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
androidx.lifecycle.MutableLiveData: MutableLiveData(java.lang.Object)
androidx.core.content.res.FontResourcesParserCompat: FontResourcesParserCompat()
kotlinx.coroutines.EventLoopImplBase: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlin.jvm.JvmClassMappingKt: void getJavaClass$annotations(kotlin.reflect.KClass)
kotlin.collections.MapsKt___MapsKt: java.lang.Double maxOfOrNull(java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(boolean[])
kotlin.StandardKt__SynchronizedKt: java.lang.Object synchronized(java.lang.Object,kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.FlutterEngine: void updateDisplayMetrics(float,float,float)
kotlinx.coroutines.channels.BufferedChannel: void checkSegmentStructureInvariants()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1: CombineKt$zipImpl$1$1$second$1(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int maxOf-J1ME1BU(int,int)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$3: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(short[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand valueOf(java.lang.String)
androidx.versionedparcelable.VersionedParcelStream$1: long skip(long)
kotlin.io.encoding.Base64$Default: kotlin.io.encoding.Base64 getMime()
kotlin.collections.RingBuffer: void removeFirst(int)
kotlin.io.path.PathNode: java.nio.file.Path getPath()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3(short[])
kotlin.text.UStringsKt: byte toUByte(java.lang.String,int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
kotlin.text.StringsKt__StringsKt: java.lang.String commonSuffixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: java.lang.Object get(int)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.selects.SelectClause0 getOnJoin()
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: java.lang.Class invoke(java.lang.Class)
androidx.lifecycle.ViewModelProvider$Factory$Companion: ViewModelProvider$Factory$Companion()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt singleOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)
androidx.core.app.Person: boolean isBot()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
kotlin.collections.EmptyList: EmptyList()
androidx.window.area.WindowAreaControllerImpl$windowAreaInfos$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.builders.MapBuilder: boolean putAllEntries(java.util.Collection)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionResume(android.transition.Transition)
kotlin.ExceptionsKt: ExceptionsKt()
com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
kotlinx.coroutines.AwaitAll$AwaitAllNode: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent getActionIntent()
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.BooleanIterator iterator(boolean[])
androidx.lifecycle.ReportFragment$ActivityInitializationListener: void onStart()
androidx.core.location.LocationCompat$Api28Impl: void removeBearingAccuracy(android.location.Location)
kotlin.time.DurationKt: void getDays$annotations(int)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged()
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(byte[],kotlin.jvm.functions.Function1)
kotlin.Pair: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.drawable.Icon)
io.flutter.embedding.android.FlutterFragment: android.app.Activity getActivity()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: java.lang.String toString()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: ActivityResultRegistry$LifecycleContainer(androidx.lifecycle.Lifecycle)
androidx.core.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api34Impl: android.os.LocaleList getLocales(android.view.accessibility.AccessibilityWindowInfo)
androidx.core.os.ContinuationOutcomeReceiver: void onResult(java.lang.Object)
androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)
androidx.collection.CircularArray: java.lang.Object get(int)
androidx.core.os.BuildCompat: BuildCompat()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger and(java.math.BigInteger,java.math.BigInteger)
kotlin.collections.builders.MapBuilderValues: int getSize()
androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)
kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder insertRange(java.lang.StringBuilder,int,char[],int,int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
io.flutter.embedding.android.FlutterView: void convertToImageView()
androidx.core.app.NotificationCompat$WearableExtender: int getCustomContentHeight()
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
kotlinx.coroutines.selects.SelectClause0Impl: java.lang.Object getClauseObject()
kotlin.collections.ArraysKt___ArraysKt: int count(float[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api21Impl: AccessibilityNodeInfoCompat$Api21Impl()
androidx.core.util.SparseLongArrayKt: void putAll(android.util.SparseLongArray,android.util.SparseLongArray)
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: void onAnimationResume(android.animation.Animator)
kotlin.text.CharCategory$Companion: kotlin.text.CharCategory valueOf(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void requestAutofill()
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30: SoftwareKeyboardControllerCompat$Impl30(android.view.View)
androidx.core.app.NotificationCompat$BigTextStyle: void clearCompatExtraKeys(android.os.Bundle)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int getSize()
androidx.customview.widget.FocusStrategy: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.window.core.BuildConfig: androidx.window.core.VerificationMode getVerificationMode()
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: AccessibilityNodeInfoCompat$CollectionInfoCompat(java.lang.Object)
kotlin.collections.AbstractList$SubList: java.lang.Object get(int)
androidx.core.view.ViewConfigurationCompat: int getPreApi34MaximumFlingVelocityResId(android.content.res.Resources,int,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isScrollable()
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,android.app.Notification)
androidx.core.graphics.Insets: int hashCode()
io.flutter.embedding.engine.dart.DartMessenger: int getPendingChannelResponseCount()
kotlin.sequences.SequencesKt___SequencesKt$groupingBy$1: SequencesKt___SequencesKt$groupingBy$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2: DefaultSpecialEffectsController$TransitionEffect$onStart$4$2(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup)
androidx.core.graphics.TypefaceCompatApi29Impl: TypefaceCompatApi29Impl()
kotlin.ULong: int compareTo(java.lang.Object)
androidx.core.location.GpsStatusWrapper: int getSatelliteCount()
org.jetbrains.annotations.Debug$Renderer: java.lang.String hasChildren()
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray$default(java.lang.String,int,int,int,java.lang.Object)
androidx.core.view.MenuItemCompat: androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
kotlinx.coroutines.Active: Active()
kotlin.io.ConsoleKt: void print(boolean)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach(kotlinx.coroutines.channels.BroadcastChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-ZRhS8yI(long[],kotlin.ranges.IntRange)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.TimeMark plus-LRDsOJo(long)
kotlin.sequences.DropSequence: int access$getCount$p(kotlin.sequences.DropSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.fragment.app.DialogFragment$2: void onCancel(android.content.DialogInterface)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBefore$default(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path relativeToOrNull(java.nio.file.Path,java.nio.file.Path)
androidx.core.widget.CheckedTextViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getCheckMarkTintMode(android.widget.CheckedTextView)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration: android.util.DisplayMetrics access$000(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.IntentCompat$Api33Impl: java.lang.Object[] getParcelableArrayExtra(android.content.Intent,java.lang.String,java.lang.Class)
androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getCONDITION_FALSE$annotations()
kotlin.time.Duration: void appendFractional-impl(long,java.lang.StringBuilder,int,int,int,java.lang.String,boolean)
androidx.core.view.ViewGroupKt: boolean contains(android.view.ViewGroup,android.view.View)
kotlin.collections.builders.MapBuilder: MapBuilder()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharJVMKt: kotlin.text.CharCategory getCategory(char)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.core.provider.FontProvider$ContentQueryWrapperApi24Impl: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(char[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty0$Setter getSetter()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
androidx.core.util.SparseIntArrayKt$keyIterator$1: void setIndex(int)
androidx.window.WindowSdkExtensions$Companion: void reset$window_release()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(boolean[],kotlin.jvm.functions.Function2)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: DefaultSpecialEffectsController$AnimationEffect$onCommit$1(androidx.fragment.app.SpecialEffectsController$Operation,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short minWithOrThrow-U(short[],java.util.Comparator)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: android.net.Uri getContentUri()
androidx.loader.content.AsyncTaskLoader: AsyncTaskLoader(android.content.Context,java.util.concurrent.Executor)
kotlin.collections.ArraysKt___ArraysKt: int component5(int[])
androidx.core.location.GnssStatusCompat: boolean hasBasebandCn0DbHz(int)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)
androidx.core.os.BundleCompat: java.util.ArrayList getParcelableArrayList(android.os.Bundle,java.lang.String,java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(boolean[],kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.R: R()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.core.app.PendingIntentCompat: void send(android.app.PendingIntent,int,android.app.PendingIntent$OnFinished,android.os.Handler)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda$1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.core.widget.NestedScrollView: int clamp(int,int,int)
androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
kotlinx.coroutines.AbstractTimeSourceKt: void trackTask()
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context)
androidx.collection.CircularArray: void addFirst(java.lang.Object)
androidx.core.provider.SelfDestructiveThread$1: SelfDestructiveThread$1(androidx.core.provider.SelfDestructiveThread)
kotlin.collections.ArraysKt___ArraysKt: short component5(short[])
kotlin.coroutines.jvm.internal.DebugMetadata: int[] l()
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
kotlin.math.UMathKt: long min-eb3DHEI(long,long)
kotlinx.coroutines.JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] reset()
androidx.window.embedding.ActivityRule$Builder: androidx.window.embedding.ActivityRule$Builder setTag(java.lang.String)
kotlinx.coroutines.RunnableKt$Runnable$1: RunnableKt$Runnable$1(kotlin.jvm.functions.Function0)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: boolean contains(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api20Impl: NotificationCompatBuilder$Api20Impl()
androidx.lifecycle.ViewModelLazy: ViewModelLazy(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)
kotlin.collections.builders.MapBuilder$ValuesItr: MapBuilder$ValuesItr(kotlin.collections.builders.MapBuilder)
androidx.core.util.LruCacheKt$lruCache$1: LruCacheKt$lruCache$1()
androidx.core.view.ViewKt: int getMarginEnd(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: java.lang.Object get(int)
androidx.core.view.WindowCompat$Api28Impl: java.lang.Object requireViewById(android.view.Window,int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
kotlin.ranges.OpenEndFloatRange: java.lang.Float getEndExclusive()
kotlin.UShortArray: boolean isEmpty-impl(short[])
kotlin.text.StringsKt___StringsKt: char minOrThrow(java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: FlowKt__ZipKt$combine$5$1(kotlinx.coroutines.flow.Flow[])
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounce-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
kotlinx.coroutines.EventLoop: void shutdown()
androidx.core.app.Person: java.lang.String getKey()
io.flutter.plugin.platform.PlatformViewsController: void access$000(io.flutter.plugin.platform.PlatformViewsController,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flattenMerge(kotlinx.coroutines.flow.Flow,int)
androidx.profileinstaller.ProfileInstallerInitializer: java.util.List dependencies()
androidx.core.content.IntentSanitizer: void putExtra(android.content.Intent,java.lang.String,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float minOf(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.ChannelFlowBuilder,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.internal.view.SupportMenuItem: boolean collapseActionView()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
androidx.core.content.res.ViewingConditions: float getFl()
kotlin.collections.ArraysKt___ArraysKt: boolean component4(boolean[])
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: int hashCode()
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: int getResId(java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
kotlin.LazyThreadSafetyMode: LazyThreadSafetyMode(java.lang.String,int)
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: RequestExecutor$DefaultThreadFactory$ProcessPriorityThread(java.lang.Runnable,java.lang.String,int)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: java.util.Set getFlags$fragment_release()
kotlin.collections.builders.ListBuilder: java.util.List subList(int,int)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSetSplitInfoCallbackJavaConsumerValid$1: java.lang.Boolean invoke()
kotlinx.coroutines.channels.LazyActorCoroutine: boolean offer(java.lang.Object)
android.support.v4.os.IResultReceiver2$Stub: IResultReceiver2$Stub()
kotlin.collections.ArraysKt___ArraysJvmKt: float[] copyOf(float[],int)
kotlin.collections.ArraysKt___ArraysKt: boolean minByOrThrow(boolean[],kotlin.jvm.functions.Function1)
androidx.customview.widget.ViewDragHelper$Callback: ViewDragHelper$Callback()
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
androidx.core.app.ActivityOptionsCompat$Api23Impl: android.app.ActivityOptions makeBasic()
androidx.core.view.ContentInfoCompat$Compat31Impl: int getSource()
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFoldIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.internal.FastServiceLoader: FastServiceLoader()
io.flutter.plugin.editing.SpellCheckPlugin: void destroy()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow channelFlow(kotlin.jvm.functions.Function2)
androidx.window.area.EmptyWindowAreaControllerImpl: kotlinx.coroutines.flow.Flow getWindowAreaInfos()
androidx.core.app.PendingIntentCompat$Api23Impl: PendingIntentCompat$Api23Impl()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence dropWhile(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
kotlin.jvm.internal.DoubleSpreadBuilder: DoubleSpreadBuilder(int)
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
kotlinx.coroutines.flow.internal.SafeCollectorKt: void getEmitFun$annotations()
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: androidx.window.core.ConsumerAdapter access$getConsumerAdapter$p(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener: void onControllableInsetsChanged(androidx.core.view.WindowInsetsControllerCompat,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(double[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasMipMap()
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: ComparisonsKt__ComparisonsKt$compareByDescending$2(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1: java.lang.Object get()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[])
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
kotlin.jvm.internal.ArrayIterator: ArrayIterator(java.lang.Object[])
androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()
androidx.lifecycle.LifecycleCoroutineScope$launchWhenResumed$1: LifecycleCoroutineScope$launchWhenResumed$1(androidx.lifecycle.LifecycleCoroutineScope,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.sequences.EmptySequence: kotlin.sequences.Sequence take(int)
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(double[])
kotlin.Metadata$DefaultImpls: void xi$annotations()
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person getPerson()
androidx.fragment.app.strictmode.SetUserVisibleHintViolation: SetUserVisibleHintViolation(androidx.fragment.app.Fragment,boolean)
androidx.window.layout.adapter.extensions.ExtensionWindowBackend: boolean hasRegisteredListeners()
kotlin.ranges.LongProgression: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: double[] sortedArray(double[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(float[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder addCapabilityBinding(java.lang.String)
androidx.collection.ArraySet: void allocArrays(int)
androidx.fragment.app.FragmentManager$9: void onActivityResult(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(int[],kotlin.jvm.functions.Function1)
kotlin.UShort: int times-WZ4Q5Ns(short,int)
androidx.core.app.AppComponentFactory: android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
kotlin.jvm.internal.PropertyReference0: java.lang.Object invoke()
kotlin.time.DurationKt: void getMicroseconds$annotations(long)
kotlin.collections.ArraysKt___ArraysKt: double averageOfDouble(java.lang.Double[])
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
kotlin.text.CharDirectionality$Companion: CharDirectionality$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(short[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.activity.EdgeToEdge: int getDefaultLightScrim()
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.collections.ArraysKt___ArraysKt: byte[] reversedArray(byte[])
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double maxOrNull(kotlin.sequences.Sequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] onEach-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMapIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.LimitingDispatcher: void execute(java.lang.Runnable)
androidx.lifecycle.Api26Impl: long toMillis(java.time.Duration)
androidx.savedstate.SavedStateRegistry$Companion: SavedStateRegistry$Companion()
androidx.core.view.ViewKt$allViews$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayImpl(java.util.Collection)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()
androidx.fragment.app.FragmentPagerAdapter: java.lang.String makeFragmentName(int,long)
androidx.window.embedding.EmbeddingAdapter: boolean translateSplitPlaceholderRule$lambda$10(androidx.window.embedding.SplitPlaceholderRule,android.content.Intent)
org.intellij.lang.annotations.MagicConstant: java.lang.Class valuesFromClass()
androidx.window.area.utils.DeviceMetrics: java.lang.String getModel()
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.core.location.LocationCompat: void removeBearingAccuracy(android.location.Location)
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
kotlin.NumbersKt__NumbersJVMKt: long toBits(double)
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: FlowKt__ReduceKt$first$1(kotlin.coroutines.Continuation)
kotlin.jvm.internal.DoubleCompanionObject: double getNaN()
androidx.collection.SimpleArrayMap: void allocArrays(int)
androidx.customview.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.core.util.LruCacheKt$lruCache$1: java.lang.Integer invoke(java.lang.Object,java.lang.Object)
androidx.core.util.SparseIntArrayKt$valueIterator$1: int nextInt()
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
androidx.profileinstaller.ProfileInstaller$1: void onDiagnosticReceived(int,java.lang.Object)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()
kotlinx.coroutines.Job: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)
androidx.core.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks)
androidx.core.app.NotificationCompat: java.util.List getInvisibleActions(android.app.Notification)
io.flutter.embedding.engine.FlutterEngineCache: void clear()
kotlin.ranges.OpenEndDoubleRange: boolean isEmpty()
androidx.core.app.NotificationChannelCompat$Api26Impl: boolean shouldShowLights(android.app.NotificationChannel)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(char[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object invoke()
androidx.core.content.SharedPreferencesCompat$EditorCompat: SharedPreferencesCompat$EditorCompat()
kotlinx.coroutines.channels.ConflatedBroadcastChannel: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character reduceRightIndexedOrNull(char[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character getOrNull(char[],int)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
kotlin.collections.IndexingIterator: boolean hasNext()
io.flutter.plugin.editing.InputConnectionAdaptor: int clampIndexToEditable(int,android.text.Editable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRight-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)
kotlin.collections.SetsKt: SetsKt()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: boolean isEmpty()
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow onStart(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.ClassValueCtorCache$cache$1: kotlin.jvm.functions.Function1 computeValue(java.lang.Class)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMapIterable(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: ArraysKt___ArraysKt()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(java.lang.Object[])
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
kotlin.collections.MutableMapWithDefaultImpl: int getSize()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)
kotlinx.coroutines.channels.ChannelResult: java.lang.Object constructor-impl(java.lang.Object)
kotlin.collections.MapsKt___MapsKt: java.util.List map(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: long first(long[])
kotlin.collections.UArraySortingKt: int partition--nroSd4(long[],int,int)
kotlin.jvm.internal.ClassReference: java.util.Collection getMembers()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.flow.StartedWhileSubscribed: int hashCode()
kotlin.sequences.SequencesKt___SequencesKt$flatMap$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.SetsKt__SetsKt: java.util.Set setOf()
androidx.core.widget.TextViewCompat: int getMaxLines(android.widget.TextView)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object getAndSetState$kotlinx_coroutines_core(int,java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: double minOf-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment$SavedState$1: androidx.fragment.app.Fragment$SavedState[] newArray(int)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: PackageInfoCompat$Api28Impl()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: java.lang.Object invoke(java.lang.Object)
kotlin.Metadata: int xi()
androidx.core.app.OnNewIntentProvider: void removeOnNewIntentListener(androidx.core.util.Consumer)
kotlin.properties.PropertyDelegateProvider: java.lang.Object provideDelegate(java.lang.Object,kotlin.reflect.KProperty)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void detachFromService()
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
androidx.core.app.NotificationCompat$CarExtender$Api20Impl: android.app.RemoteInput$Builder setChoices(android.app.RemoteInput$Builder,java.lang.CharSequence[])
androidx.window.area.WindowAreaCapability$Status: androidx.window.area.WindowAreaCapability$Status access$getWINDOW_AREA_STATUS_UNKNOWN$cp()
kotlin.text.StringsKt___StringsKt: kotlin.Pair partition(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: void addObserver(androidx.lifecycle.LifecycleEventObserver)
androidx.loader.content.Loader: int getId()
androidx.customview.widget.FocusStrategy: java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)
kotlin.coroutines.CoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.util.TypedValueCompat$Api34Impl: TypedValueCompat$Api34Impl()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(char[],char,int,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.location.LocationCompat: boolean hasVerticalAccuracy(android.location.Location)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.fragment.app.BackStackRecord: int commitInternal(boolean)
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean getOrNull(boolean[],int)
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1: TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1(kotlin.jvm.functions.Function4)
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1: AbstractResolvableFuture$Failure$1(java.lang.String)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesByImpl$ComparisonsKt__ComparisonsKt(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[])
kotlinx.coroutines.selects.SelectKt: boolean tryResume(kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function1)
kotlin.text.Regex$splitToSequence$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int nullsLast$lambda$4$ComparisonsKt__ComparisonsKt(java.util.Comparator,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int sumOfUInt(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$onJoin$1: JobSupport$onJoin$1()
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: android.content.Intent createIntent(android.content.Context,java.lang.String[])
androidx.annotation.experimental.Experimental$Level: androidx.annotation.experimental.Experimental$Level valueOf(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListKt: void getFAILURE$annotations()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: void getACTION_SYSTEM_FALLBACK_PICK_IMAGES$annotations()
androidx.core.provider.RequestExecutor: RequestExecutor()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: int incrementCreatedWorkers()
androidx.core.text.SpannableStringKt: android.text.Spannable toSpannable(java.lang.CharSequence)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path copyTo$default(java.nio.file.Path,java.nio.file.Path,boolean,int,java.lang.Object)
kotlin.collections.AbstractList: java.util.ListIterator listIterator(int)
kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceFirstCharWithChar(java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] $values()
kotlin.ULong: long minus-xj2QHRw(long,short)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
kotlin.collections.ArraysKt___ArraysKt: int indexOfFirst(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending--nroSd4(long[],int,int)
kotlinx.coroutines.channels.ChannelResult: int hashCode()
androidx.window.area.SafeWindowAreaComponentProvider$isWindowAreaProviderValid$1: java.lang.Boolean invoke()
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1: void onTextChanged(java.lang.CharSequence,int,int,int)
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer,android.content.Context)
kotlin.text.StringsKt___StringsKt: java.lang.Character minByOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.graphics.ColorUtils: float circularInterpolate(float,float,float)
kotlin.ULong: short toUShort-Mh2AYeg(long)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate: android.view.View getPlatformViewById(int)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void finalize()
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
kotlin.jvm.internal.ArrayIntIterator: int nextInt()
androidx.core.content.LocusIdCompat: androidx.core.content.LocusIdCompat toLocusIdCompat(android.content.LocusId)
io.flutter.embedding.engine.dart.PlatformMessageHandler: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow runningFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.activity.result.PickVisualMediaRequest$Builder: PickVisualMediaRequest$Builder()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateHead(long,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void draw(android.graphics.Canvas)
androidx.core.app.NotificationCompat$Api20Impl: NotificationCompat$Api20Impl()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forIncomingCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
kotlin.time.DurationKt: java.lang.String substringWhile(java.lang.String,int,kotlin.jvm.functions.Function1)
kotlin.io.path.CopyActionContext: kotlin.io.path.CopyActionResult copyToIgnoringExistingDirectory(java.nio.file.Path,java.nio.file.Path,boolean)
androidx.versionedparcelable.VersionedParcelStream: void writeLong(long)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: FlutterActivityAndFragmentDelegate$2(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,io.flutter.embedding.android.FlutterView)
kotlin.jvm.functions.Function14: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.os.HandlerCompat$Api28Impl: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop createEventLoop()
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue: DartMessenger$ConcurrentTaskQueue(java.util.concurrent.ExecutorService)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
androidx.core.app.ActivityRecreator$1: ActivityRecreator$1(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.util.Map filterValues(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.content.res.GrowingArrayUtils: long[] insert(long[],int,int,long)
kotlin.math.MathKt__MathJVMKt: double IEEErem(double,double)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.util.Iterator)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(short[])
kotlinx.coroutines.debug.internal.DebugProbesImpl: void stopWeakRefCleanerThread()
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator,int,int)
androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void usePrivateScheduler$kotlinx_coroutines_core()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.contentprovider.ContentProviderControlSurface getContentProviderControlSurface()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int)
kotlinx.coroutines.flow.SharedFlowImpl: void resetReplayCache()
androidx.window.embedding.SplitAttributes: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat,android.animation.ValueAnimator)
kotlin.jvm.internal.PropertyReference1: PropertyReference1()
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.TypeReference$asString$args$1: java.lang.CharSequence invoke(kotlin.reflect.KTypeProjection)
androidx.core.util.ConsumerKt: java.util.function.Consumer asConsumer(kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat$Builder: ContentInfoCompat$Builder(android.content.ClipData,int)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: SurfaceTexturePlatformViewRenderTarget(io.flutter.view.TextureRegistry$SurfaceTextureEntry)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyOfRange(long[],int,int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
androidx.core.view.TreeIterator: TreeIterator(java.util.Iterator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-wU5IKMo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(java.lang.Object[],kotlin.random.Random)
androidx.window.core.ConsumerAdapter: void createConsumer(java.lang.Object,kotlin.reflect.KClass,java.lang.String,android.app.Activity,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(byte[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLastWhile(float[],kotlin.jvm.functions.Function1)
kotlin.collections.UArraySortingKt: void quickSort--nroSd4(long[],int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToStringNullable(char[])
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator: void validateRequestPermissionsRequestCode(int)
kotlinx.coroutines.internal.SegmentOrClosed: void getSegment$annotations()
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$5(android.content.ComponentName)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(byte[],int)
kotlin.io.TextStreamsKt: java.lang.String readText(java.io.Reader)
androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
kotlinx.coroutines.selects.SelectImplementation: void access$reregisterClause(kotlinx.coroutines.selects.SelectImplementation,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.MatcherMatchResult$groupValues$1: int lastIndexOf(java.lang.String)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.ClassReference: java.lang.String getQualifiedName()
kotlinx.coroutines.flow.SharingStartedKt: kotlinx.coroutines.flow.SharingStarted WhileSubscribed-5qebJ5I$default(kotlinx.coroutines.flow.SharingStarted$Companion,long,long,int,java.lang.Object)
kotlinx.coroutines.selects.SelectBuilder: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object random(java.util.Collection,kotlin.random.Random)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt lastOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort maxBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
kotlin.jvm.internal.Reflection: kotlin.reflect.KTypeParameter typeParameter(java.lang.Object,java.lang.String,kotlin.reflect.KVariance,boolean)
kotlin.reflect.TypesJVMKt$typeToString$unwrap$1: java.lang.Object invoke(java.lang.Object)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: int minOf-Md2H83M(int,int[])
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$second$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.MatchGroup: kotlin.ranges.IntRange component2()
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(short[],kotlin.jvm.functions.Function1)
kotlin.io.encoding.Base64: boolean isMimeScheme$kotlin_stdlib()
kotlin.time.AbstractLongTimeSource$LongTimeMark: java.lang.String toString()
androidx.window.embedding.EmbeddingBackend$-CC: void reset()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: java.lang.String getInterfaceDescriptor()
androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
kotlin.time.Duration$Companion: long getDays-UwyO8pc(double)
kotlin.UByteArray: byte get-w2LRezQ(byte[],int)
kotlin.collections.ArraysKt___ArraysKt: short[] onEach(short[],kotlin.jvm.functions.Function1)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutor: void activityDestroyed()
kotlin.collections.ArraysKt___ArraysKt: int reduceRightIndexed(int[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
androidx.viewpager.R$styleable: R$styleable()
kotlin.collections.ArraysKt___ArraysKt: float maxOf(double[],kotlin.jvm.functions.Function1)
androidx.core.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)
androidx.core.graphics.PathSegment: float getEndFraction()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()
kotlin.jvm.internal.ByteSpreadBuilder: int getSize(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.view.animation.Animation)
kotlinx.coroutines.selects.OnTimeout: kotlinx.coroutines.selects.SelectClause0 getSelectClause()
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)
androidx.fragment.app.DialogFragment: android.view.View onFindViewById(int)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean cancel(java.lang.Throwable)
kotlin.collections.MapWithDefaultImpl: int size()
kotlin.io.ExceptionsKt: java.lang.String constructMessage(java.io.File,java.io.File,java.lang.String)
kotlin.io.ByteStreamsKt: java.io.BufferedWriter bufferedWriter(java.io.OutputStream,java.nio.charset.Charset)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double find(double[],kotlin.jvm.functions.Function1)
kotlin.UShort: int div-7apg3OU(short,byte)
androidx.profileinstaller.ProfileInstallReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.core.view.WindowInsetsAnimationControllerCompat: void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float)
androidx.profileinstaller.DeviceProfileWriter: androidx.profileinstaller.DeviceProfileWriter read()
androidx.core.content.IntentCompat: android.content.Intent createManageUnusedAppRestrictionsIntent(android.content.Context,java.lang.String)
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.core.view.ActionProvider: android.view.View onCreateActionView()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumesAll$1: ChannelsKt__DeprecatedKt$consumesAll$1(kotlinx.coroutines.channels.ReceiveChannel[])
androidx.core.view.ViewKt: void doOnLayout(android.view.View,kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCornerRadius(float)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean)
kotlin.ReplaceWith: java.lang.String[] imports()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMapKt: kotlinx.coroutines.debug.internal.Marked access$mark(java.lang.Object)
kotlinx.coroutines.flow.StartedWhileSubscribed$command$2: java.lang.Object invoke(kotlinx.coroutines.flow.SharingCommand,kotlin.coroutines.Continuation)
kotlinx.coroutines.CancelFutureOnCancel: CancelFutureOnCancel(java.util.concurrent.Future)
androidx.core.graphics.WeightTypefaceApi21: long getNativeInstance(android.graphics.Typeface)
androidx.core.content.res.TypedArrayKt: java.lang.CharSequence[] getTextArrayOrThrow(android.content.res.TypedArray,int)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.core.text.StringKt: java.lang.String htmlEncode(java.lang.String)
kotlin.UIntArray: boolean retainAll(java.util.Collection)
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroupsCompat()
kotlin.io.FilesKt__UtilsKt: java.io.File normalize(java.io.File)
kotlin.collections.SlidingWindowKt$windowedSequence$$inlined$Sequence$1: SlidingWindowKt$windowedSequence$$inlined$Sequence$1(kotlin.sequences.Sequence,int,int,boolean,boolean)
kotlin.io.path.PathTreeWalk$dfsIterator$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.io.FilePathComponents: int getSize()
androidx.core.view.MenuKt: boolean isNotEmpty(android.view.Menu)
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: void setDisplayFeatures(java.util.List)
androidx.core.net.TrafficStatsCompat: void clearThreadStatsTag()
androidx.profileinstaller.ProfileVersion: java.lang.String dexKeySeparator(byte[])
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2: SidecarAdapter$translate$checkedFeature$2()
kotlin.collections.RingBuffer: boolean isFull()
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
androidx.core.database.CursorKt: java.lang.Long getLongOrNull(android.database.Cursor,int)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long minus-LRDsOJo(long)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)
androidx.fragment.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: int getNCollectors()
kotlin.collections.ArraysKt___ArraysKt: void shuffle(char[])
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(long[])
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,java.lang.Object,java.util.Comparator,int,int,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map groupByTo-4D70W2E(int[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.profileinstaller.DeviceProfileWriter: java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean isTail()
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int)
androidx.core.os.PersistableBundleApi21ImplKt: android.os.PersistableBundle createPersistableBundle(int)
kotlin.io.encoding.Base64: byte[] decode(byte[],int,int)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
androidx.core.content.pm.ShortcutXmlParser: java.util.List parseShortcutIds(org.xmlpull.v1.XmlPullParser)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void resumeUndispatched(kotlinx.coroutines.CoroutineDispatcher,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: float component2(float[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
androidx.versionedparcelable.VersionedParcelStream: android.os.Parcelable readParcelable()
io.flutter.plugin.platform.PlatformPlugin: void destroy()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: android.os.Bundle createArgs()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minWithOrThrow(java.lang.Iterable,java.util.Comparator)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel map(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
io.flutter.view.TextureRegistry: io.flutter.view.TextureRegistry$ImageTextureEntry createImageTexture()
androidx.window.embedding.RuleController: RuleController(androidx.window.embedding.EmbeddingBackend)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getTextFieldHint()
androidx.core.app.NotificationChannelCompat$Api26Impl: void setShowBadge(android.app.NotificationChannel,boolean)
kotlin.collections.ArraysKt___ArraysKt: int count(short[],kotlin.jvm.functions.Function1)
androidx.core.graphics.RegionKt$iterator$1: boolean hasNext()
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.adapter.sidecar.SidecarWindowBackend)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] copyOf-qFRl0hI(int[],int)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
kotlin.UShort: double toDouble-impl(short)
kotlin.math.MathKt__MathJVMKt: double sign(double)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.SharedFlow onSubscription(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function2)
androidx.core.util.TypedValueCompat: TypedValueCompat()
androidx.viewpager.widget.ViewPager$ViewPositionComparator: ViewPager$ViewPositionComparator()
androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isTextSelectable()
kotlin.comparisons.ReverseOrderComparator: int compare(java.lang.Comparable,java.lang.Comparable)
androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
io.flutter.embedding.android.FlutterActivity: boolean shouldDispatchAppLifecycleState()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.Set getCapturedCoroutines()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
androidx.core.content.IntentCompat: android.os.Parcelable[] getParcelableArrayExtra(android.content.Intent,java.lang.String,java.lang.Class)
kotlin.reflect.KDeclarationContainer: java.util.Collection getMembers()
androidx.profileinstaller.ProfileTranscoder: void writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData)
androidx.loader.content.CursorLoader: void setProjection(java.lang.String[])
androidx.window.area.SafeWindowAreaComponentProvider: SafeWindowAreaComponentProvider(java.lang.ClassLoader)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException)
androidx.core.os.TraceCompat: boolean isEnabled()
androidx.activity.contextaware.OnContextAvailableListener: void onContextAvailable(android.content.Context)
androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
androidx.activity.OnBackPressedDispatcher$4: OnBackPressedDispatcher$4(androidx.activity.OnBackPressedDispatcher)
androidx.activity.result.contract.ActivityResultContracts$RequestPermission: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)
androidx.fragment.app.Fragment: int getPopExitAnim()
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)
androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)
androidx.fragment.app.FragmentManager: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
kotlin.jdk7.AutoCloseableKt: void closeFinally(java.lang.AutoCloseable,java.lang.Throwable)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setMinHeightDp(int)
com.getkeepsafe.relinker.elf.Elf64Header: com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int)
androidx.core.internal.view.SupportMenuItem: android.view.View getActionView()
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minOrNull(long[])
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $values()
kotlin.reflect.KClass: int hashCode()
androidx.core.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)
kotlin.io.ConsoleKt: java.lang.String readlnOrNull()
androidx.lifecycle.SavedStateHandle: kotlinx.coroutines.flow.StateFlow getStateFlow(java.lang.String,java.lang.Object)
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onChanged()
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.text.util.FindAddress: java.lang.String findAddress(java.lang.String)
androidx.core.service.quicksettings.TileServiceCompat: void startActivityAndCollapse(android.service.quicksettings.TileService,androidx.core.service.quicksettings.PendingIntentActivityWrapper)
androidx.fragment.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1)
io.flutter.embedding.android.KeyEmbedderResponder: java.util.Map getPressedState()
kotlin.text.CharsKt__CharJVMKt: boolean isDefined(char)
kotlin.collections.CollectionsKt___CollectionsKt: boolean all(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: AccessibilityNodeInfoCompat$TouchDelegateInfoCompat(java.util.Map)
androidx.savedstate.SavedStateRegistryController$Companion: SavedStateRegistryController$Companion()
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setFlag(int,boolean)
androidx.core.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)
androidx.core.view.WindowInsetsControllerCompat: boolean isAppearanceLightStatusBars()
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
kotlin.UByteArray: void clear()
androidx.core.location.LocationListenerCompat$-CC: void $default$onFlushComplete(androidx.core.location.LocationListenerCompat,int)
kotlin.collections.MapsKt__MapsKt: java.util.LinkedHashMap linkedMapOf()
kotlin.ranges.OpenEndFloatRange: java.lang.String toString()
kotlinx.coroutines.internal.ThreadSafeHeapNode: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
androidx.core.view.contentcapture.ContentCaptureSessionCompat: ContentCaptureSessionCompat(android.view.contentcapture.ContentCaptureSession,android.view.View)
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: NotificationCompat$DecoratedCustomViewStyle()
kotlin.jvm.functions.Function4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow filterNotNull(kotlinx.coroutines.flow.Flow)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object getAndUpdate$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.activity.SystemBarStyle$Companion: SystemBarStyle$Companion()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxOrNull(int[])
kotlin.collections.BooleanIterator: boolean nextBoolean()
io.flutter.embedding.android.FlutterFragment: boolean shouldRestoreAndSaveState()
kotlin.time.DurationKt: long access$durationOfMillis(long)
androidx.collection.ArrayMap$1: void colRemoveAt(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat x(float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte minWithOrThrow-U(byte[],java.util.Comparator)
androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.util.SparseArrayKt: boolean containsKey(android.util.SparseArray,int)
io.flutter.plugin.platform.PlatformPlugin: boolean access$1200(io.flutter.plugin.platform.PlatformPlugin)
kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,boolean)
kotlin.ranges.RangesKt___RangesKt: java.lang.Long randomOrNull(kotlin.ranges.LongRange,kotlin.random.Random)
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
kotlin.jvm.optionals.OptionalsKt: kotlin.sequences.Sequence asSequence(java.util.Optional)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder withNewEngine()
kotlin.jvm.internal.Intrinsics: void checkFieldIsNotNull(java.lang.Object,java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: java.util.regex.Pattern toPattern(java.lang.String,int)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
androidx.activity.result.contract.ActivityResultContracts$CreateDocument: android.content.Intent createIntent(android.content.Context,java.lang.String)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$4(java.lang.String)
kotlin.sequences.EmptySequence: kotlin.sequences.EmptySequence drop(int)
androidx.core.app.PendingIntentCompat: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
kotlin.io.FilesKt__FilePathComponentsKt: java.lang.String getRootName(java.io.File)
androidx.core.widget.TextViewKt: android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1)
androidx.fragment.app.strictmode.FragmentStrictMode: void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean moveForward$atomicfu(java.lang.Object,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlinx.coroutines.internal.Segment)
kotlin.sequences.SequencesKt___SequencesJvmKt$filterIsInstance$1: SequencesKt___SequencesJvmKt$filterIsInstance$1(java.lang.Class)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: ComparisonsKt__ComparisonsKt()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(double[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String trim(java.lang.String,char[])
androidx.core.view.MenuItemCompat: boolean collapseActionView(android.view.MenuItem)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
kotlinx.coroutines.flow.FlowKt__ErrorsKt: boolean isSameExceptionAs$FlowKt__ErrorsKt(java.lang.Throwable,java.lang.Throwable)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: FrameMetricsAggregator$FrameMetricsApi24Impl(int)
kotlin.text.StringsKt__StringsJVMKt: byte[] toByteArray$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.window.area.reflectionguard.WindowAreaComponentValidator: boolean isExtensionWindowAreaPresentationValid$window_release(java.lang.Class,int)
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1: SequencesKt___SequencesKt$zipWithNext$1()
kotlin.ULong: java.lang.String toString-impl(long)
kotlin.collections.RingBuffer: RingBuffer(java.lang.Object[],int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setMipMap(boolean)
androidx.activity.result.ActivityResultCallback: void onActivityResult(java.lang.Object)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Entry: java.lang.Object setValue(java.lang.Object)
androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()
androidx.core.graphics.BitmapCompat$Api27Impl: BitmapCompat$Api27Impl()
kotlinx.coroutines.selects.SelectImplementation: boolean getInRegistrationPhase()
androidx.core.service.quicksettings.PendingIntentActivityWrapper: android.app.PendingIntent createPendingIntent()
io.flutter.embedding.android.FlutterFragment: boolean getBackCallbackState()
kotlin.time.AbstractLongTimeSource$LongTimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlin.reflect.KClass: boolean isFun()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.util.SparseLongArrayKt: boolean containsValue(android.util.SparseLongArray,long)
kotlin.text.MatchResult$Destructured: java.lang.String component9()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object randomOrNull(java.lang.Object[])
kotlin.sequences.SequencesKt___SequencesKt: kotlin.Pair partition(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.random.AbstractPlatformRandom: int nextBits(int)
androidx.core.view.WindowInsetsControllerCompat: WindowInsetsControllerCompat(android.view.WindowInsetsController)
kotlin.time.Duration$Companion: Duration$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt$withIndex$2: ArraysKt___ArraysKt$withIndex$2(byte[])
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double findLast(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.MapsKt__MapsKt: java.lang.Object getValue(java.util.Map,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(java.lang.Object[])
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: DefaultSpecialEffectsController$AnimationInfo(androidx.fragment.app.SpecialEffectsController$Operation,boolean)
kotlin.io.ConsoleKt: void print(float)
kotlinx.coroutines.flow.FlowKt__ZipKt$nullArrayFactory$1: java.lang.Object invoke()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] copyOfRange(boolean[],int,int)
kotlin.collections.GroupingKt__GroupingKt: java.util.Map reduceTo(kotlin.collections.Grouping,java.util.Map,kotlin.jvm.functions.Function3)
androidx.core.view.VelocityTrackerCompat: VelocityTrackerCompat()
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.editing.ScribePlugin: ScribePlugin(android.view.View,android.view.inputmethod.InputMethodManager,io.flutter.embedding.engine.systemchannels.ScribeChannel)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews)
kotlin.text.StringsKt___StringsKt: java.util.List mapNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderEntries: kotlin.collections.builders.MapBuilder getBacking()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: ChannelsKt__DeprecatedKt$toChannel$1(kotlin.coroutines.Continuation)
androidx.core.provider.RequestExecutor$HandlerExecutor: RequestExecutor$HandlerExecutor(android.os.Handler)
androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
android.support.v4.os.IResultReceiver2: void send(int,android.os.Bundle)
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
kotlin.NumbersKt__NumbersKt: int countLeadingZeroBits(byte)
androidx.loader.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.Executor getExecutor()
androidx.loader.R$color: R$color()
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColor(int)
androidx.core.view.contentcapture.ContentCaptureSessionCompat: androidx.core.view.ViewStructureCompat newVirtualViewStructure(android.view.autofill.AutofillId,long)
kotlin.collections.ArraysKt___ArraysKt: boolean any(int[])
kotlin.collections.State: State(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float[] toTypedArray(float[])
androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1: void onAnimationCancel(android.animation.Animator)
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: void accept(java.lang.Object)
androidx.fragment.app.Fragment: android.view.View requireView()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlin.ranges.LongProgression: java.lang.String toString()
androidx.core.view.DisplayCutoutCompat: androidx.core.graphics.Insets getWaterfallInsets()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.window.core.PredicateAdapter: java.lang.Class predicateClassOrThrow()
kotlin.time.LongSaturatedMathKt: long checkInfiniteSumDefined-PjuGub4(long,long,long)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableMapEntry(java.lang.Object)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void createMergedTransition$lambda$12(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect)
org.jetbrains.annotations.Contract: java.lang.String mutates()
androidx.lifecycle.LifecycleKt$eventFlow$1: LifecycleKt$eventFlow$1(androidx.lifecycle.Lifecycle,kotlin.coroutines.Continuation)
kotlin.DeepRecursiveScopeImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.core.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)
androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.graphics.drawable.IconCompat getIcon()
kotlinx.coroutines.scheduling.CoroutineScheduler: int blockingTasks(long)
androidx.core.view.ViewKt: void setPadding(android.view.View,int)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
kotlin.ranges.LongRange: boolean isEmpty()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateTail(long,int)
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: java.lang.Object parseResult(int,android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double lastOrNull(double[])
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.animation.AnimatorKt$addPauseListener$listener$1: void onAnimationPause(android.animation.Animator)
androidx.core.graphics.BlendModeUtils: BlendModeUtils()
kotlinx.coroutines.CompletedContinuation: boolean getCancelled()
io.flutter.plugin.common.BasicMessageChannel$Reply: void reply(java.lang.Object)
androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace$Named)
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
kotlin.UInt: long toLong-impl(int)
androidx.core.view.MenuKt: void forEach(android.view.Menu,kotlin.jvm.functions.Function1)
androidx.profileinstaller.ProfileTranscoder: void writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map groupByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-ciTST-8(short[],java.util.Map,kotlin.jvm.functions.Function1)
org.jetbrains.annotations.ApiStatus$AvailableSince: java.lang.String value()
kotlin.collections.SetsKt__SetsKt: java.util.LinkedHashSet linkedSetOf()
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: NotificationCompat$MessagingStyle$Api28Impl()
androidx.core.util.SparseIntArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseIntArray)
androidx.fragment.app.strictmode.FragmentStrictMode: void onFragmentReuse(androidx.fragment.app.Fragment,java.lang.String)
androidx.core.location.LocationManagerCompat$GpsStatusTransport: void lambda$onGpsStatusChanged$2(java.util.concurrent.Executor,int)
_COROUTINE.ArtificialStackFrames: java.lang.StackTraceElement coroutineCreation()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.concurrent.ThreadsKt$thread$thread$1: void run()
androidx.core.view.MenuItemCompat: boolean expandActionView(android.view.MenuItem)
androidx.core.view.ViewParentCompat: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(boolean[])
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$4: UArraysKt___UArraysKt$withIndex$4(short[])
kotlin.text.Regex$Companion: Regex$Companion()
kotlin.collections.ArraysKt___ArraysKt: float minOf(byte[],kotlin.jvm.functions.Function1)
androidx.core.view.ContentInfoCompat$Compat: android.content.ClipData getClip()
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast(java.lang.String,char,java.lang.String,java.lang.String)
androidx.window.layout.adapter.sidecar.SidecarAdapter: SidecarAdapter(androidx.window.core.VerificationMode,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.DisplayCompat: boolean isTv(android.content.Context)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte minOf(byte,byte)
kotlinx.coroutines.DelayKt$awaitCancellation$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.InlineList: java.lang.Object unbox-impl()
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void completeInstallError(java.lang.String,java.lang.String)
androidx.window.embedding.SplitAttributes$LayoutDirection$Companion: SplitAttributes$LayoutDirection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.os.LocaleListCompatWrapper: void toLanguageTag(java.lang.StringBuilder,java.util.Locale)
androidx.tracing.Trace: void endAsyncSectionFallback(java.lang.String,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SharedFlowImpl: kotlinx.coroutines.flow.SharedFlowSlot[] createSlotArray(int)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void lambda$onFlushComplete$2(int)
androidx.customview.widget.ExploreByTouchHelper: int keyToDirection(int)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getLastObservedThreadName()
kotlin.NumbersKt__NumbersJVMKt: long takeLowestOneBit(long)
kotlin.io.FileTreeWalk$FileTreeWalkIterator: kotlin.io.FileTreeWalk$DirectoryState directoryState(java.io.File)
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)
androidx.activity.result.contract.ActivityResultContracts$RequestPermission: android.content.Intent createIntent(android.content.Context,java.lang.String)
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap sortedMapOf(kotlin.Pair[])
kotlin.text.StringsKt__StringsKt: kotlin.collections.CharIterator iterator(java.lang.CharSequence)
androidx.core.widget.TextViewKt$addTextChangedListener$3: java.lang.Object invoke(java.lang.Object)
kotlin.ranges.OpenEndFloatRange: boolean contains(java.lang.Comparable)
androidx.window.java.core.CallbackToFlowAdapter: void connect(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
kotlin.sequences.SequenceBuilderIterator: java.lang.Throwable exceptionalState()
androidx.core.app.NotificationCompat$Api28Impl: NotificationCompat$Api28Impl()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(boolean[])
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
androidx.fragment.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.lifecycle.ReportFragment: void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
kotlinx.coroutines.channels.ProduceKt: java.lang.Object awaitClose$default(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int)
kotlinx.coroutines.flow.SharedFlowImpl: java.util.List getReplayCache()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
androidx.core.view.ViewKt: void setVisible(android.view.View,boolean)
androidx.core.view.WindowInsetsControllerCompat$Impl: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
kotlin.ranges.URangesKt___URangesKt: boolean contains-uhHAxoY(kotlin.ranges.ULongRange,short)
kotlin.collections.CollectionsKt___CollectionsKt: double averageOfLong(java.lang.Iterable)
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isPhotoPickerAvailable(android.content.Context)
androidx.core.widget.ScrollerCompat: ScrollerCompat(android.content.Context,android.view.animation.Interpolator)
kotlin.collections.ArraysKt___ArraysKt: int reduce(int[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(float[])
androidx.core.util.SizeFCompat: android.util.SizeF toSizeF()
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UByte max-GBYM_sE(byte[])
androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.jvm.internal.Intrinsics: void checkReturnedValueIsNotNull(java.lang.Object,java.lang.String,java.lang.String)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
kotlin.ranges.URangesKt___URangesKt: long coerceAtMost-eb3DHEI(long,long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.util.TypedValueCompat: float spToPx(float,android.util.DisplayMetrics)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstNotNullOf(java.lang.Object[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedLazily: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toMutableList(float[])
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)
kotlin.io.FilesKt__FileTreeWalkKt: FilesKt__FileTreeWalkKt()
androidx.lifecycle.Transformations$switchMap$1: void invoke(java.lang.Object)
androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.core.view.WindowInsetsCompat$Type: int tappableElement()
androidx.lifecycle.ProcessLifecycleOwner: void activityResumed$lifecycle_process_release()
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry minBy(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: ChannelFlowTransformLatest$flowCollect$3$1$2(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Byte min(byte[])
kotlin.math.MathKt__MathJVMKt: float round(float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong findLast-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence windowed$default(kotlin.sequences.Sequence,int,int,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat)
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedWriter bufferedWriter$default(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[],int,java.lang.Object)
kotlinx.coroutines.DispatchedTask: java.lang.Object takeState$kotlinx_coroutines_core()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte maxOf(byte,byte)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
androidx.core.view.DisplayCompat$ModeCompat: DisplayCompat$ModeCompat(android.graphics.Point)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long minOf(long,long,long)
io.flutter.plugin.common.BinaryMessenger$BinaryReply: void reply(java.nio.ByteBuffer)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
kotlin.collections.ArraysKt___ArraysKt: long random(long[],kotlin.random.Random)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.Pair partition(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.UByte: void getData$annotations()
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void lambda$startTimeout$0()
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter access$getAdapter$p(androidx.window.embedding.EmbeddingCompat)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List map-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.util.ObjectsCompat: java.lang.String toString(java.lang.Object,java.lang.String)
kotlin.time.Duration: int getUnitDiscriminator-impl(long)
kotlin.collections.MapsKt___MapsKt: java.util.Collection mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow emptyFlow()
androidx.window.java.embedding.SplitControllerCallbackAdapter: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-QwZRm1k(long[])
kotlinx.coroutines.channels.BroadcastCoroutine: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.JobSupport: void cancel()
androidx.core.os.BuildCompat$Api30Impl: BuildCompat$Api30Impl()
androidx.profileinstaller.Encoding: byte[] read(java.io.InputStream,int)
androidx.window.embedding.SplitController$splitInfoList$1: void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,java.util.List)
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object addShortcuts(java.util.List)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest: ChannelFlowTransformLatest(kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.selects.UnbiasedSelectBuilderImpl$initSelectResult$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
kotlin.sequences.FilteringSequence$iterator$1: boolean hasNext()
kotlinx.coroutines.JobImpl: boolean getHandlesException$kotlinx_coroutines_core()
androidx.fragment.app.LogWriter: LogWriter(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfULong(int[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object lock$suspendImpl(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.String readText(java.io.File,java.nio.charset.Charset)
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption[] values()
kotlin.time.Duration$Companion: long minutes-UwyO8pc(double)
kotlin.ranges.ComparableRange: boolean contains(java.lang.Comparable)
kotlin.io.path.PathTreeWalk$dfsIterator$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: kotlinx.coroutines.selects.SelectClause1 getOnReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
androidx.viewpager.widget.PagerTitleStrip: void onDetachedFromWindow()
androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
kotlinx.coroutines.future.FutureKt: java.lang.Object asDeferred$lambda$4(kotlin.jvm.functions.Function2,java.lang.Object,java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysKt: boolean none(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer: byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])
androidx.window.area.WindowAreaSessionPresenter: android.content.Context getContext()
kotlin.collections.AbstractCollection$toString$1: AbstractCollection$toString$1(kotlin.collections.AbstractCollection)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
kotlinx.coroutines.flow.SharedFlowKt: java.lang.Object access$getBufferAt(java.lang.Object[],long)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(long[])
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder()
kotlinx.coroutines.channels.BufferedChannelKt: long initialBufferEnd(int)
io.flutter.embedding.android.FlutterFragmentActivity: java.lang.String getInitialRoute()
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)
androidx.core.util.Predicate$-CC: androidx.core.util.Predicate $default$and(androidx.core.util.Predicate,androidx.core.util.Predicate)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.ProcessTextChannel getProcessTextChannel()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte lastOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.BufferedReader bufferedReader(java.nio.file.Path,java.nio.charset.Charset,int,java.nio.file.OpenOption[])
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.core.content.IntentSanitizer: androidx.core.util.Predicate access$602(androidx.core.content.IntentSanitizer,androidx.core.util.Predicate)
kotlin.UIntArray: kotlin.UIntArray box-impl(int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sortDescending-Aa5vz7o(short[],int,int)
kotlin.collections.ArraysKt___ArraysKt: void shuffle(byte[],kotlin.random.Random)
androidx.lifecycle.ComputableLiveData: void invalidate()
androidx.window.area.WindowAreaController$Companion: void reset()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.math.BigInteger toBigIntegerOrNull(java.lang.String)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService: void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.MapsKt___MapsKt: int count(java.util.Map,kotlin.jvm.functions.Function1)
androidx.activity.SystemBarStyle$Companion$light$1: java.lang.Boolean invoke(android.content.res.Resources)
kotlin.jvm.internal.FloatSpreadBuilder: int getSize(float[])
androidx.core.os.LocaleListCompatWrapper: java.util.Locale computeFirstMatch(java.util.Collection,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(java.lang.String,boolean)
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment)
kotlin.text.StringsKt__StringsKt: boolean contentEqualsIgnoreCaseImpl(java.lang.CharSequence,java.lang.CharSequence)
kotlin.text.Regex: boolean matchesAt(java.lang.CharSequence,int)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable)
kotlin.sequences.IndexingSequence$iterator$1: java.util.Iterator getIterator()
kotlin.collections.CollectionsKt__IterablesKt: CollectionsKt__IterablesKt()
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void fireCancellationListeners()
androidx.core.graphics.TypefaceCompat: java.lang.String createResourceUid(android.content.res.Resources,int,java.lang.String,int,int)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable compute()
android.support.v4.os.IResultReceiver$_Parcel: java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString(byte[],int,int,boolean)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.Triple: kotlin.Triple copy(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.collection.LongSparseArray: void setValueAt(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] plus(int[],int)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Object[],int,int)
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object minOfWith-LTi4i_s(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void detachFromFlutterEngine()
kotlin.coroutines.cancellation.CancellationExceptionKt: void CancellationException$annotations()
io.flutter.embedding.engine.FlutterEngine: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragment(android.view.View)
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20: void show()
androidx.core.app.SharedElementCallback: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentStatePagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.fragment.app.FragmentContainerView: void startViewTransition(android.view.View)
androidx.core.location.LocationManagerCompat$Api24Impl: boolean registerGnssMeasurementsCallback(android.location.LocationManager,android.location.GnssMeasurementsEvent$Callback)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.app.NotificationCompat$CarExtender: int getColor()
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: ContentInfoCompat$BuilderCompat31Impl(android.content.ClipData,int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] $values()
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: io.flutter.plugin.common.BasicMessageChannel$Reply enqueueConfiguration(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration)
kotlin.collections.builders.ListBuilder: boolean contentEquals(java.util.List)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void start()
kotlin.collections.ArraysKt___ArraysKt: int sumBy(float[],kotlin.jvm.functions.Function1)
androidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event downTo(androidx.lifecycle.Lifecycle$State)
kotlin.collections.CollectionsKt___CollectionsKt: int lastIndexOf(java.lang.Iterable,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: java.lang.Object singleOrNull(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.time.Duration$Companion: long parseIsoString-UwyO8pc(java.lang.String)
androidx.lifecycle.Lifecycle: void _get_currentStateFlow_$lambda$0(kotlinx.coroutines.flow.MutableStateFlow,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.DelayKt: java.lang.Object delay-VtjQ1oo(long,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.lang.String take(java.lang.String,int)
androidx.core.app.RemoteActionCompat: void setEnabled(boolean)
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause2 getOnSend()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)
androidx.window.core.Bounds: int hashCode()
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder(androidx.core.view.WindowInsetsCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollHorizontally(int)
kotlin.text.StringsKt__StringBuilderKt: StringsKt__StringBuilderKt()
kotlinx.coroutines.internal.Symbol: java.lang.Object unbox(java.lang.Object)
androidx.core.app.ActivityOptionsCompat$Api21Impl: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])
io.flutter.embedding.engine.FlutterEngineGroup$Options: io.flutter.embedding.engine.FlutterEngineGroup$Options setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String,java.util.Locale)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-K6DWlUc(long[],long,int,int)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()
kotlin.collections.ArraysKt___ArraysKt: int component3(int[])
androidx.lifecycle.LifecycleKt: kotlinx.coroutines.flow.Flow getEventFlow(androidx.lifecycle.Lifecycle)
_COROUTINE._BOUNDARY: _BOUNDARY()
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: void setSource(int)
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener: void onFlutterUiDisplayed()
androidx.window.layout.adapter.sidecar.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
kotlin.UIntArray$Iterator: UIntArray$Iterator(int[])
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.core.view.VelocityTrackerCompat: float getAxisVelocity(android.view.VelocityTracker,int)
androidx.core.app.NotificationCompat$Action: int getIcon()
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1: void onTransitionCancel(android.transition.Transition)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
kotlin.collections.AbstractMutableSet: AbstractMutableSet()
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void serviceProcessingFinished()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long sumOfLong(long[],kotlin.jvm.functions.Function1)
kotlin.reflect.KProperty0: kotlin.reflect.KProperty0$Getter getGetter()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double minOf(double[],kotlin.jvm.functions.Function1)
androidx.core.app.SharedElementCallback: SharedElementCallback()
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: ComparisonsKt___ComparisonsKt()
kotlinx.coroutines.flow.FlowKt__ShareKt: kotlinx.coroutines.flow.SharedFlow shareIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(float[])
kotlin.collections.ArraysKt___ArraysKt: int count(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean defaultIsRtl()
androidx.viewpager.widget.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List dumpDebuggerInfo()
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.ExecutorCoroutineDispatcher from(java.util.concurrent.ExecutorService)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
androidx.core.graphics.drawable.DrawableKt: android.graphics.Bitmap toBitmapOrNull$default(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config,int,java.lang.Object)
androidx.core.app.PendingIntentCompat: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,boolean)
androidx.profileinstaller.DeviceProfileWriter: java.io.InputStream getProfileInputStream(android.content.res.AssetManager)
kotlin.collections.EmptySet: boolean isEmpty()
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$1500(io.flutter.plugin.platform.PlatformViewsController)
androidx.profileinstaller.ProfileInstallerInitializer: void lambda$delayAfterFirstFrame$0(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: boolean all(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Appendable joinTo$default(int[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.UIntArray: int[] constructor-impl(int)
androidx.core.view.OneShotPreDrawListener: OneShotPreDrawListener(android.view.View,java.lang.Runnable)
androidx.core.graphics.CanvasKt: void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.view.ViewCompat: androidx.core.view.contentcapture.ContentCaptureSessionCompat getContentCaptureSession(android.view.View)
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$2: java.lang.Object invoke(kotlinx.coroutines.flow.SharingCommand,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: java.util.Iterator invoke()
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void cancelAll(java.lang.String)
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence getOldText()
androidx.viewpager.widget.PagerTitleStrip: void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(java.lang.Object[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: FlutterRenderer$DisplayFeatureState(java.lang.String,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$1: java.lang.Object invoke()
kotlinx.coroutines.DelayWithTimeoutDiagnostics: java.lang.String timeoutMessage-LRDsOJo(long)
androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
kotlin.text.StringsKt___StringsKt: int count(java.lang.CharSequence)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.flow.CallbackFlowBuilder: CallbackFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1: AnimatorKt$doOnStart$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
androidx.window.java.core.CallbackToFlowAdapter: void disconnect(androidx.core.util.Consumer)
androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0()
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback: void onResultReceived(int,java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayImpl(java.util.Collection,java.lang.Object[])
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,android.os.Bundle)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop()
androidx.activity.result.ActivityResultRegistryOwner: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1: FlowKt__LimitKt$take$$inlined$unsafeFlow$1$1(kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1,kotlin.coroutines.Continuation)
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValuesBy(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1[])
kotlin.reflect.KProperty: kotlin.reflect.KProperty$Getter getGetter()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: void performStart()
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$2: FlowKt__ReduceKt$fold$2(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__StringsKt: boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.util.HashSet toHashSet(java.lang.CharSequence)
kotlin.sequences.MergingSequence$iterator$1: boolean hasNext()
androidx.fragment.app.SpecialEffectsController: void completeBack()
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowComponent(androidx.core.util.Predicate)
androidx.startup.StartupException: StartupException(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List distinct(java.lang.Iterable)
kotlin.collections.AbstractList$ListIteratorImpl: int nextIndex()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
kotlinx.coroutines.flow.FlowKt__LimitKt$collectWhile$collector$1: FlowKt__LimitKt$collectWhile$collector$1(kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List flatMap-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.lifecycle.ComputableLiveData: java.util.concurrent.Executor getExecutor$lifecycle_livedata_release()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(kotlin.reflect.KClassifier)
androidx.core.service.quicksettings.TileServiceCompat: void setTileServiceWrapper(androidx.core.service.quicksettings.TileServiceCompat$TileServiceWrapper)
io.flutter.plugin.common.BinaryCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List shuffled(java.lang.Iterable)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenByDescending$1: ComparisonsKt__ComparisonsKt$thenByDescending$1(java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$emit$1: ChannelFlowTransformLatest$flowCollect$3$1$emit$1(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningFold$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.reflection.ReflectionUtils$validateImplementation$1$1: java.lang.Object invoke()
kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)
kotlinx.coroutines.channels.BufferedChannelKt: long getEbCompletedCounter(long)
androidx.core.util.SparseIntArrayKt: int getOrDefault(android.util.SparseIntArray,int,int)
androidx.core.app.RemoteInput: boolean isDataOnly()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$processResultSelectReceiveOrNull(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
kotlinx.coroutines.channels.BroadcastChannelImpl: void getValue$annotations()
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1: FlowKt__LimitKt$transformWhile$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.util.SparseLongArrayKt$valueIterator$1: int getIndex()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte singleOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
kotlin.UByte$Companion: UByte$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.PendingIntentCompat$Api26Impl: android.app.PendingIntent getForegroundService(android.content.Context,int,android.content.Intent,int)
io.flutter.embedding.engine.FlutterEngineGroup$Options: android.content.Context getContext()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)
kotlin.text.MatchResult$Destructured: java.lang.String component4()
androidx.window.core.SpecificationComputer$Companion: SpecificationComputer$Companion()
androidx.core.content.res.CamColor: androidx.core.content.res.CamColor findCamByJ(float,float,float)
kotlin.random.KotlinRandom: void setSeed(long)
kotlin.time.Duration: long toLongMilliseconds-impl(long)
androidx.core.app.NotificationCompat$Action$Builder: void checkContextualActionNullFields()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-zi1B2BA(int[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.ULongArray: ULongArray(long[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $values()
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: WindowInfoRepositoryCallbackAdapterWrapper(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter)
kotlin.Pair: kotlin.Pair copy(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge$collectTo$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyInto-FUQE5sA(byte[],byte[],int,int,int)
androidx.activity.EdgeToEdgeBase: EdgeToEdgeBase()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List getDisplayFeatures()
androidx.core.util.SparseIntArrayKt$valueIterator$1: int getIndex()
androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)
androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()
kotlin.io.path.PathsKt__PathUtilsKt: void getNameWithoutExtension$annotations(java.nio.file.Path)
kotlin.random.PlatformRandomKt: kotlin.random.Random defaultPlatformRandom()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Path)
androidx.lifecycle.ViewTreeLifecycleOwner: androidx.lifecycle.LifecycleOwner get(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
io.flutter.embedding.engine.systemchannels.ScribeChannel: void access$100(io.flutter.embedding.engine.systemchannels.ScribeChannel,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
kotlin.io.FilePathComponents: java.io.File component1()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
androidx.core.view.ViewStructureCompat: void setContentDescription(java.lang.CharSequence)
kotlin.collections.AbstractList: int indexOf(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOf(java.lang.Iterable,java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.EmbeddingAspectRatio: EmbeddingAspectRatio(java.lang.String,float)
kotlinx.coroutines.channels.BufferedChannel: void incCompletedExpandBufferAttempts$default(kotlinx.coroutines.channels.BufferedChannel,long,int,java.lang.Object)
androidx.fragment.app.strictmode.WrongFragmentContainerViolation: WrongFragmentContainerViolation(androidx.fragment.app.Fragment,android.view.ViewGroup)
kotlinx.coroutines.DebugKt: void assert(kotlin.jvm.functions.Function0)
androidx.loader.content.ModernAsyncTask: boolean isCancelled()
androidx.core.app.NotificationChannelCompat$Api26Impl: android.app.NotificationChannel createNotificationChannel(java.lang.String,java.lang.CharSequence,int)
kotlin.collections.CollectionsKt__CollectionsJVMKt: CollectionsKt__CollectionsJVMKt()
kotlinx.coroutines.channels.BufferedChannelKt: boolean tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BroadcastCoroutine: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.channels.LazyActorCoroutine: void access$onSendRegFunction(kotlinx.coroutines.channels.LazyActorCoroutine,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: ViewModelProvider$AndroidViewModelFactory$Companion()
androidx.fragment.app.FragmentTransitionCompat21: void removeTarget(java.lang.Object,android.view.View)
kotlin.sequences.SequencesKt___SequencesKt$minus$3$iterator$1: SequencesKt___SequencesKt$minus$3$iterator$1(java.util.Collection)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-4D70W2E(int[],java.util.Map,kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.ReLinkerInstance: com.getkeepsafe.relinker.ReLinkerInstance log(com.getkeepsafe.relinker.ReLinker$Logger)
androidx.profileinstaller.ProfileTranscoder: byte[] createMethodBitmapRegion(androidx.profileinstaller.DexProfileData)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2: FlowKt__TransformKt$filterIsInstance$$inlined$filter$2$2(kotlinx.coroutines.flow.FlowCollector,kotlin.reflect.KClass)
androidx.core.util.SparseLongArrayKt$valueIterator$1: void setIndex(int)
androidx.fragment.app.FragmentStore: int getActiveFragmentCount()
androidx.core.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)
kotlin.UByte: int times-xj2QHRw(byte,short)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: boolean equals(java.lang.Object)
androidx.core.os.HandlerKt$postDelayed$runnable$1: HandlerKt$postDelayed$runnable$1(kotlin.jvm.functions.Function0)
kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: void invoke(java.lang.Throwable)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.core.content.res.TypedArrayUtils: java.lang.String getString(android.content.res.TypedArray,int,int)
kotlin.collections.EmptySet: int hashCode()
kotlinx.coroutines.internal.WeakMapCtorCache: WeakMapCtorCache()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.ComparableTimeMark plus-LRDsOJo(long)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNotNull$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.reflection.ReflectionUtils: boolean isPublic$window_release(java.lang.reflect.Method)
kotlin.UInt: int toInt-impl(int)
kotlin.collections.AbstractMutableMap: int getSize()
kotlin.sequences.SequencesKt___SequencesKt$minus$2: SequencesKt___SequencesKt$minus$2(kotlin.sequences.Sequence,java.lang.Object[])
kotlin.jvm.optionals.OptionalsKt: java.lang.Object getOrElse(java.util.Optional,kotlin.jvm.functions.Function0)
androidx.core.location.GpsStatusWrapper: boolean equals(java.lang.Object)
androidx.core.widget.ScrollerCompat: void notifyVerticalEdgeReached(int,int,int)
androidx.core.view.DisplayCutoutCompat$Api30Impl: DisplayCutoutCompat$Api30Impl()
androidx.annotation.GuardedBy: java.lang.String value()
kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer$default(kotlinx.coroutines.flow.Flow,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow onEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlin.jvm.functions.Function0 access$nullArrayFactory()
kotlin.collections.ArraysKt___ArraysKt: byte component2(byte[])
kotlin.coroutines.ContinuationInterceptor: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray getCapturedKeys()
io.flutter.view.AccessibilityBridge$SemanticsNode: void log(java.lang.String,boolean)
kotlin.collections.builders.MapBuilder: java.lang.Object remove(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receive$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
kotlin.sequences.SequenceBuilderIterator: java.lang.Object next()
androidx.core.util.SparseArrayKt: boolean isNotEmpty(android.util.SparseArray)
kotlin.text.StringsKt___StringsKt$groupingBy$1: java.lang.Object keyOf(char)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getWorkerCtl()
androidx.core.view.WindowInsetsControllerCompat: boolean isAppearanceLightNavigationBars()
androidx.core.view.ViewKt: void updatePadding(android.view.View,int,int,int,int)
androidx.fragment.app.Fragment$10: void unregister()
androidx.activity.result.contract.ActivityResultContracts$PickContact: android.net.Uri parseResult(int,android.content.Intent)
kotlin.time.ComparableTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
androidx.core.content.pm.ShortcutManagerCompat: int getIconDimensionInternal(android.content.Context,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-s8dVfGU(long[],kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
kotlinx.coroutines.flow.internal.ChannelFlow: kotlin.jvm.functions.Function2 getCollectToFun$kotlinx_coroutines_core()
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
kotlin.sequences.IndexingSequence$iterator$1: void remove()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: IntrinsicsKt__IntrinsicsKt()
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeoutOrNull-KLykuaI(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.io.encoding.Base64: byte[] decode$default(kotlin.io.encoding.Base64,byte[],int,int,int,java.lang.Object)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path)
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.WritableFileSection createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[])
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List dropLast-nggk6HY(short[],int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api34Impl: AccessibilityWindowInfoCompat$Api34Impl()
io.flutter.embedding.android.FlutterFragment: boolean shouldDestroyEngineWithHost()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job)
androidx.window.embedding.SplitAttributes$SplitType$Companion: SplitAttributes$SplitType$Companion()
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
androidx.fragment.app.DefaultSpecialEffectsController: void collectAnimEffects(java.util.List)
kotlin.collections.ArrayDeque: java.lang.Object removeLast()
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowComponent(android.content.ComponentName)
androidx.core.view.OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.flow.SharingStarted$Companion: kotlinx.coroutines.flow.SharingStarted WhileSubscribed(long,long)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: byte maxOf(byte,byte,byte)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,long)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult$Companion: ActivityResultContracts$StartActivityForResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(long[],java.lang.Iterable)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.Symbol access$getCLOSED$p()
kotlinx.coroutines.scheduling.WorkQueue: int getSize$kotlinx_coroutines_core()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minOfWithOrNull(java.lang.Iterable,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.graphics.CanvasKt: void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1: TransitionKt$doOnPause$$inlined$addListener$default$1(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object,java.lang.String)
androidx.core.app.RemoteInput$Builder: android.os.Bundle getExtras()
androidx.fragment.app.FragmentContainerView: void removeViewAt(int)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
kotlinx.coroutines.NonCancellable: kotlinx.coroutines.Job getParent()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long findLast(long[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(float,java.math.MathContext)
kotlin.collections.ReversedList: void clear()
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener: void onAccessibilityChanged(boolean,boolean)
kotlin.time.Duration: long access$getZERO$cp()
kotlin.collections.builders.MapBuilderEntries: void clear()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
kotlin.time.DurationKt: long getMicroseconds(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associate(char[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$3: java.util.Iterator iterator()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte randomOrNull-oSF2wD8(byte[],kotlin.random.Random)
androidx.core.widget.TintableCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: AccessibilityNodeInfoCompat$Api30Impl()
androidx.core.content.ContentValuesKt: android.content.ContentValues contentValuesOf(kotlin.Pair[])
androidx.core.location.GnssStatusWrapper: float getBasebandCn0DbHz(int)
androidx.fragment.app.strictmode.Violation: androidx.fragment.app.Fragment getFragment()
kotlin.collections.ArraysKt___ArraysKt: boolean contains(char[],char)
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$3: boolean isEmpty()
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CopyableThreadContextElement,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.DropWhileSequence$iterator$1: void setNextItem(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManager: java.util.Set fragmentsFromRecord(androidx.fragment.app.BackStackRecord)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
androidx.fragment.app.Fragment: void onDetach()
io.flutter.embedding.android.FlutterFragment: void onBackPressed()
kotlin.io.FilesKt__UtilsKt: java.io.File resolveSibling(java.io.File,java.lang.String)
kotlin.text.StringsKt___StringsKt: java.lang.Object maxOfWithOrNull(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void close()
kotlinx.coroutines.channels.BufferedChannel$onSend$1: void invoke(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.util.ContinuationRunnable: ContinuationRunnable(kotlin.coroutines.Continuation)
androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)
kotlin.UShortArrayKt: short[] UShortArray(int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int indexOf(int[],int)
androidx.window.area.WindowAreaControllerImpl: void transferActivityToWindowArea$lambda$1(androidx.window.area.WindowAreaSessionCallback)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isHeading()
kotlin.sequences.SequencesKt___SequencesKt: double minOrThrow(kotlin.sequences.Sequence)
androidx.core.widget.TextViewCompat$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle[] getBundleArrayForMessages(java.util.List)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.String toString()
kotlin.collections.builders.MapBuilderKeys: boolean contains(java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
androidx.annotation.ChecksSdkIntAtLeast: int lambda()
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: SubscribedFlowCollector$onSubscription$1(kotlinx.coroutines.flow.SubscribedFlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$lastOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: java.util.Set readSet(java.util.Set,int)
kotlin.collections.ArraysKt___ArraysKt: float first(float[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component4-GBYM_sE(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(double[],java.lang.Iterable)
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)
androidx.window.embedding.EmbeddingCompat: void setSplitAttributesCalculator(kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: void updateSystemUiOverlays()
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: RestrictedSuspendLambda(int)
kotlin.collections.AbstractMap: java.util.Map$Entry implFindEntry(java.lang.Object)
androidx.lifecycle.DispatchQueue: void dispatchAndEnqueue$lambda$2$lambda$1(androidx.lifecycle.DispatchQueue,java.lang.Runnable)
kotlin.sequences.SequencesKt___SequencesKt: double sumOfDouble(kotlin.sequences.Sequence)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: java.lang.Object[] invoke()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int getSize()
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
androidx.collection.ArraySet: int indexOf(java.lang.Object)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: void finish(boolean)
kotlin.sequences.SequenceScope: java.lang.Object yieldAll(java.lang.Iterable,kotlin.coroutines.Continuation)
kotlin.io.path.LinkFollowing: java.nio.file.LinkOption[] toLinkOptions(boolean)
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper: boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(byte[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.adapter.sidecar.SidecarCompat)
kotlin.collections.GroupingKt__GroupingKt: GroupingKt__GroupingKt()
androidx.activity.OnBackPressedDispatcher$4: java.lang.Object invoke()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(float[],kotlin.jvm.functions.Function2)
kotlin.random.KotlinRandom: int nextInt()
androidx.viewpager.widget.ViewPager: void endFakeDrag()
kotlinx.coroutines.channels.BufferedChannel: int updateCellSendSlow(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ConflatedBufferedChannel: boolean shouldSendSuspend$kotlinx_coroutines_core()
androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingBackend$Companion$overrideDecorator$1: androidx.window.embedding.EmbeddingBackend invoke(androidx.window.embedding.EmbeddingBackend)
androidx.window.embedding.EmbeddingBackend: void updateSplitAttributes(androidx.window.embedding.SplitInfo,androidx.window.embedding.SplitAttributes)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.UByteArrayKt: byte[] ubyteArrayOf-GBYM_sE(byte[])
kotlin.time.DurationKt: long durationOfMillisNormalized(long)
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener(androidx.fragment.app.Fragment$1)
kotlin.io.encoding.Base64: int encodeIntoByteArray$default(kotlin.io.encoding.Base64,byte[],byte[],int,int,int,int,java.lang.Object)
kotlin.io.encoding.Base64: java.lang.Appendable encodeToAppendable$default(kotlin.io.encoding.Base64,byte[],java.lang.Appendable,int,int,int,java.lang.Object)
androidx.window.R$id: R$id()
io.flutter.embedding.android.FlutterFragment: void onPostResume()
kotlin.collections.IndexingIterable: IndexingIterable(kotlin.jvm.functions.Function0)
io.flutter.plugin.common.MethodChannel$Result: void notImplemented()
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getAlpha()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void onNewIntent(android.content.Intent)
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getBridgeTag()
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setMinHeightDp(int)
kotlinx.coroutines.SchedulerTaskKt: void getTaskContext$annotations(kotlinx.coroutines.scheduling.Task)
org.jetbrains.annotations.PropertyKey: java.lang.String resourceBundle()
androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentController: void doLoaderStart()
androidx.collection.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: void forEach(kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$toChannel$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: java.lang.Object tryResume(kotlin.Unit,java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.reflect.KTypeParameter: kotlin.reflect.KVariance getVariance()
io.flutter.embedding.engine.FlutterEngineGroup: FlutterEngineGroup(android.content.Context,java.lang.String[])
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean shouldUpdate(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BroadcastChannelImpl$registerSelectForSend$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object controlDelayedTransition(android.view.ViewGroup,java.lang.Object)
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.window.core.Bounds: int getBottom()
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1: java.lang.Boolean invoke()
androidx.lifecycle.ComputableLiveData: java.util.concurrent.atomic.AtomicBoolean getInvalid$lifecycle_livedata_release()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.core.app.NotificationCompat$Api20Impl: android.os.Bundle getExtras(android.app.Notification$Action)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: kotlinx.coroutines.internal.ConcurrentLinkedListNode close(kotlinx.coroutines.internal.ConcurrentLinkedListNode)
kotlin.PreconditionsKt__PreconditionsKt: void require(boolean,kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: void onGlobalFocusChanged(android.view.View,android.view.View)
kotlin.collections.MutableMapWithDefaultImpl: int size()
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
androidx.lifecycle.PausingDispatcherKt: java.lang.Object whenCreated(androidx.lifecycle.Lifecycle,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void showForType(int)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeTextType()
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Float,float)
io.flutter.embedding.engine.plugins.activity.ActivityAware: void onDetachedFromActivity()
androidx.customview.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)
kotlin.enums.EnumEntriesList: java.lang.Object writeReplace()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: int getGranularity()
kotlinx.coroutines.DefaultExecutor: void shutdownForTests(long)
androidx.viewpager.widget.ViewPager: int determineTargetPage(int,float,int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean isIo()
androidx.fragment.app.strictmode.FragmentStrictMode: FragmentStrictMode()
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Double max(kotlin.sequences.Sequence)
kotlin.UNumbersKt: int countOneBits-WZ4Q5Ns(int)
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(short[],kotlin.jvm.functions.Function1)
kotlin.reflect.KMutableProperty0: void set(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: androidx.window.extensions.core.util.function.Function translateSplitAttributesCalculator(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean cancelCoroutine(java.lang.Throwable)
androidx.core.view.WindowInsetsAnimationControllerCompat: boolean isFinished()
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat getIconCompat()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int hashCode()
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayEach$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentState: int describeContents()
kotlin.text.StringsKt__StringsKt: java.util.List split(java.lang.CharSequence,char[],boolean,int)
kotlin.collections.SlidingWindowKt: void checkWindowSizeStep(int,int)
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
androidx.core.view.MotionEventCompat: MotionEventCompat()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()
kotlin.NumbersKt__NumbersKt: int countOneBits(short)
kotlin.ranges.URangesKt___URangesKt: boolean contains-ZsK3CEQ(kotlin.ranges.UIntRange,short)
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
kotlinx.coroutines.channels.BufferedChannel: void cancel()
kotlin.random.Random: boolean nextBoolean()
kotlinx.coroutines.CancellableContinuation: void resumeUndispatchedWithException(kotlinx.coroutines.CoroutineDispatcher,java.lang.Throwable)
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[],int,int)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] values()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] sortedArray--ajY-9A(int[])
kotlin.sequences.SequencesKt___SequencesKt$zip$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
kotlin.UShort: int compareTo-7apg3OU(short,byte)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String decodeToString(byte[])
kotlinx.coroutines.selects.SelectImplementation$ClauseData: java.lang.Object invokeBlock(java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia: boolean isSystemFallbackPickerAvailable$activity_release(android.content.Context)
androidx.core.content.res.TypedArrayApi26ImplKt: android.graphics.Typeface getFont(android.content.res.TypedArray,int)
kotlin.collections.ArraysKt___ArraysKt: int getOrElse(int[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlin.sequences.SequencesKt___SequencesKt$minus$3: SequencesKt___SequencesKt$minus$3(java.lang.Iterable,kotlin.sequences.Sequence)
androidx.core.os.HandlerCompat: boolean hasCallbacks(android.os.Handler,java.lang.Runnable)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
kotlinx.coroutines.ThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
kotlin.jvm.internal.PropertyReference0Impl: java.lang.Object get()
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
kotlin.collections.ShortIterator: short nextShort()
androidx.core.view.MarginLayoutParamsCompat: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
io.flutter.embedding.android.FlutterImageView: void pause()
androidx.core.os.ParcelCompat: ParcelCompat()
androidx.core.location.LocationCompat: boolean containsExtra(android.location.Location,java.lang.String)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void invokeOnCancellation(kotlin.jvm.functions.Function1)
androidx.core.graphics.WeightTypefaceApi21: long nativeCreateWeightAlias(long,int)
androidx.fragment.app.FragmentManager$4: FragmentManager$4(androidx.fragment.app.FragmentManager)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int indexOf(byte)
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldHandleDeeplinking()
androidx.core.location.LocationCompat: void setVerticalAccuracyMeters(android.location.Location,float)
io.flutter.embedding.android.KeyEmbedderResponder: void lambda$synchronizePressingKey$1(io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent)
kotlin.text.StringsKt___StringsKt: StringsKt___StringsKt()
androidx.core.view.WindowInsetsControllerCompat$Impl23: void setAppearanceLightStatusBars(boolean)
androidx.versionedparcelable.VersionedParcelStream: float readFloat()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.loader.content.ModernAsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1: DebugProbesImpl$dumpCoroutinesInfo$$inlined$dumpCoroutinesInfoImpl$1()
androidx.loader.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable withIndex(java.lang.Iterable)
_COROUTINE.CoroutineDebuggingKt: java.lang.StackTraceElement artificialFrame(java.lang.Throwable,java.lang.String)
androidx.fragment.app.FragmentActivity$HostCallbacks: void removeMenuProvider(androidx.core.view.MenuProvider)
kotlin.io.FilesKt__FileReadWriteKt: java.io.PrintWriter printWriter$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: float nextUp(float)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$distinctBy$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.TypefaceCompatBaseImpl$1: TypefaceCompatBaseImpl$1(androidx.core.graphics.TypefaceCompatBaseImpl)
androidx.core.widget.AutoScrollHelper: boolean isExclusive()
androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.Long getCoroutineId()
kotlin.sequences.SequenceBuilderIterator: java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: boolean reduce(boolean[],kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
androidx.activity.result.PickVisualMediaRequest$Builder: androidx.activity.result.PickVisualMediaRequest$Builder setMediaType(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)
androidx.core.provider.DocumentsContractCompat: android.net.Uri buildChildDocumentsUri(java.lang.String,java.lang.String)
androidx.core.widget.NestedScrollView$DifferentialMotionFlingTargetImpl: boolean startDifferentialMotionFling(float)
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object firstOrNull(java.lang.Object[])
androidx.collection.SparseArrayCompat: boolean containsKey(int)
androidx.core.location.LocationManagerCompat: int getGnssYearOfHardware(android.location.LocationManager)
androidx.core.view.ViewCompat: java.lang.String[] getOnReceiveContentMimeTypes(android.view.View)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow sample-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightStatusBars(boolean)
androidx.core.view.ViewCompat: int combineMeasuredStates(int,int)
androidx.fragment.app.FragmentManager$1: void handleOnBackProgressed(androidx.activity.BackEventCompat)
com.getkeepsafe.relinker.ReLinkerInstance$1: void run()
androidx.collection.CircularArray: java.lang.Object popFirst()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()
kotlinx.coroutines.channels.Channel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.Channel,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence emptySequence()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMapIndexedIterable(char[],kotlin.jvm.functions.Function2)
androidx.window.core.Version: int getMinor()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean)
androidx.core.view.ViewKt: void doOnAttach(android.view.View,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilderKeys: boolean remove(java.lang.Object)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
io.flutter.plugin.platform.PlatformViewWrapper: PlatformViewWrapper(android.content.Context)
kotlin.text.StringsKt__IndentKt: java.lang.String prependIndent$default(java.lang.String,java.lang.String,int,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: void unregister()
kotlinx.coroutines.CancellableContinuation: void invokeOnCancellation(kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int getLastIndex-QwZRm1k(long[])
kotlin.collections.builders.MapBuilder: boolean containsAllEntries$kotlin_stdlib(java.util.Collection)
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.savedstate.Recreator$SavedStateProvider: Recreator$SavedStateProvider(androidx.savedstate.SavedStateRegistry)
androidx.core.app.ActivityCompat$Api23Impl: ActivityCompat$Api23Impl()
androidx.profileinstaller.DeviceProfileWriter: boolean write()
androidx.fragment.app.FragmentHostCallback: boolean onShouldShowRequestPermissionRationale(java.lang.String)
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1: CombineKt$combineInternal$2$1(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object consumeEach$$forInline(kotlinx.coroutines.channels.ReceiveChannel,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
kotlin.jvm.internal.ArrayIteratorsKt: kotlin.collections.LongIterator iterator(long[])
kotlin.ranges.ClosedDoubleRange: boolean contains(double)
kotlin.jvm.internal.TypeIntrinsics: java.util.Map$Entry asMutableMapEntry(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(short,byte)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)
androidx.core.os.BuildCompat$Api30Impl: int getExtensionVersion(int)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)
androidx.loader.content.ModernAsyncTask$Status: ModernAsyncTask$Status(java.lang.String,int)
kotlin.ranges.IntProgression: int hashCode()
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.viewpager.widget.ViewPager$1: int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo)
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean,io.flutter.embedding.engine.FlutterEngineGroup)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(long[],kotlin.jvm.functions.Function1)
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1: java.util.Iterator iterator()
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
kotlinx.coroutines.internal.ClassValueCtorCache: ClassValueCtorCache()
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.RectKt: android.graphics.Region xor(android.graphics.Rect,android.graphics.Rect)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection mapTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.selects.SelectImplementation: void cleanup(kotlinx.coroutines.selects.SelectImplementation$ClauseData)
kotlinx.coroutines.debug.internal.StackTraceFrame: StackTraceFrame(kotlin.coroutines.jvm.internal.CoroutineStackFrame,java.lang.StackTraceElement)
kotlin.collections.MapsKt___MapsKt: java.util.Map onEach(java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.widget.EdgeEffectCompat: boolean isFinished()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.location.LocationCompat$Api29Impl: LocationCompat$Api29Impl()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeWhile-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.functions.Function11: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterFragment: void onStart()
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$1: FlowKt__ReduceKt$fold$1(kotlin.coroutines.Continuation)
kotlin.text.StringsKt__IndentKt: StringsKt__IndentKt()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.lifecycle.ReportFragment$Companion: void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event)
androidx.core.util.LongSparseArrayKt: android.util.LongSparseArray plus(android.util.LongSparseArray,android.util.LongSparseArray)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions)
androidx.core.view.WindowInsetsCompat: int getStableInsetLeft()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(long[])
kotlin.io.FilesKt__FileReadWriteKt: void forEachLine(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void synthesizeMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
androidx.core.graphics.TypefaceCompatApi21Impl: void init()
androidx.lifecycle.Transformations$distinctUntilChanged$1: Transformations$distinctUntilChanged$1(androidx.lifecycle.MediatorLiveData,kotlin.jvm.internal.Ref$BooleanRef)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
kotlin.random.Random: double nextDouble(double,double)
kotlin.text.StringsKt___StringsKt: java.lang.Character minWithOrNull(java.lang.CharSequence,java.util.Comparator)
androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
kotlinx.coroutines.NonCancellable: java.util.concurrent.CancellationException getCancellationException()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: ConcurrentWeakMap(boolean)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection flatMapIndexedSequenceTo(kotlin.sequences.Sequence,java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.content.pm.ShortcutManagerCompat: boolean convertUriIconToBitmapIcon(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.StackFrameContinuation: kotlin.coroutines.CoroutineContext getContext()
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow,kotlin.reflect.KClass)
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlinx.coroutines.flow.internal.AbortFlowException: java.lang.Throwable fillInStackTrace()
io.flutter.view.TextureRegistry$TextureEntry: long id()
kotlin.collections.ArraysKt___ArraysKt: long sum(long[])
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object)
androidx.core.content.res.TypedArrayUtils: TypedArrayUtils()
androidx.core.view.inputmethod.EditorInfoCompat: void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)
androidx.annotation.RequiresOptIn$Level: RequiresOptIn$Level(java.lang.String,int)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(short[],kotlin.jvm.functions.Function2)
kotlin.math.MathKt__MathJVMKt: float getSign(float)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte lastOrNull(byte[])
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
kotlin.text.StringsKt___StringsKt: java.util.Map associateWithTo(java.lang.CharSequence,java.util.Map,kotlin.jvm.functions.Function1)
androidx.core.provider.SelfDestructiveThread: void post(java.lang.Runnable)
kotlin.jvm.functions.Function15: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.util.List asList-GBYM_sE(byte[])
kotlin.internal.RequireKotlin: java.lang.String version()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldRightIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast(java.lang.String,char,java.lang.String)
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
androidx.core.view.ViewCompat: boolean isOpaque(android.view.View)
io.flutter.embedding.engine.plugins.service.ServiceControlSurface: void attachToService(android.app.Service,androidx.lifecycle.Lifecycle,boolean)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.ReceiveChannel fixedPeriodTicker(kotlinx.coroutines.CoroutineScope,long,long)
androidx.core.database.CursorKt: java.lang.Float getFloatOrNull(android.database.Cursor,int)
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: JobIntentService$JobServiceEngineImpl$WrapperWorkItem(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem)
io.flutter.plugin.common.MethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
androidx.collection.SparseArrayCompat: void delete(int)
androidx.fragment.app.FragmentManager: android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceBeforeLast(java.lang.String,char,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentManager$BackStackEntry: int getId()
kotlin.collections.builders.MapBuilder: boolean isReadOnly$kotlin_stdlib()
androidx.window.area.WindowAreaAdapter: WindowAreaAdapter()
kotlinx.coroutines.AwaitKt$joinAll$3: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow transformLatest(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.app.NotificationCompat$Api23Impl: android.graphics.drawable.Icon getIcon(android.app.Notification$Action)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(char[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scan(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.activity.contextaware.ContextAware: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(boolean[])
androidx.core.graphics.BitmapCompat$Api29Impl: void setPaintBlendMode(android.graphics.Paint)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$thenComparator$1: ComparisonsKt__ComparisonsKt$thenComparator$1(java.util.Comparator,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNumber(int)
androidx.core.provider.FontRequestWorker$4: void accept(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfDouble(kotlin.sequences.Sequence)
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
androidx.fragment.app.BackStackRecord: void commitNowAllowingStateLoss()
androidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int)
androidx.activity.result.ActivityResult: void writeToParcel(android.os.Parcel,int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: boolean isHardwareDetected(java.lang.Object)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()
androidx.core.util.SparseBooleanArrayKt$valueIterator$1: boolean hasNext()
kotlin.collections.ArrayDeque: java.lang.Object[] toArray(java.lang.Object[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRightIndexed(java.util.List,kotlin.jvm.functions.Function3)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: FingerprintManagerCompat$AuthenticationCallback()
kotlin.text.Regex: kotlin.text.MatchResult matchEntire(java.lang.CharSequence)
android.support.v4.os.ResultReceiver: void send(int,android.os.Bundle)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence takeWhile(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.text.CharsKt__CharKt: java.lang.Integer digitToIntOrNull(char,int)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void getDebugString$annotations(kotlinx.coroutines.Job)
kotlin.collections.ArraysKt___ArraysKt: short random(short[])
androidx.core.graphics.BitmapKt: android.graphics.Bitmap scale(android.graphics.Bitmap,int,int,boolean)
kotlin.collections.EmptyMap: java.lang.Object readResolve()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int)
kotlin.properties.ReadOnlyProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError(java.lang.String,java.lang.Throwable)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow zip(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWith(float[],kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: long getId()
androidx.fragment.app.FragmentTransitionImpl: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.activity.result.ActivityResultLauncher: void unregister()
androidx.core.os.LocaleListInterface: java.util.Locale get(int)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
io.flutter.embedding.android.FlutterFragment$NewEngineInGroupFragmentBuilder: FlutterFragment$NewEngineInGroupFragmentBuilder(java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-C-E_24M(int[],java.lang.Object[])
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minByOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder allowViolation(java.lang.Class,java.lang.Class)
androidx.window.area.WindowAreaSessionCallback: void onSessionEnded(java.lang.Throwable)
kotlin.collections.EmptyList: void add(int,java.lang.Void)
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
androidx.core.app.NotificationCompat$BigPictureStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.app.NotificationCompat$Api26Impl: int getBadgeIconType(android.app.Notification)
kotlin.collections.ArraysKt___ArraysJvmKt: long[] copyInto(long[],long[],int,int,int)
kotlin.Metadata: java.lang.String xs()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
kotlin.math.MathKt__MathJVMKt: float atan2(float,float)
androidx.core.content.FileProvider: int modeToMode(java.lang.String)
kotlinx.coroutines.flow.FlowKt__EmittersKt: kotlinx.coroutines.flow.Flow transform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt__MutableCollectionsKt: java.util.Collection convertToListIfNotCollection(java.lang.Iterable)
androidx.core.location.GnssStatusCompat$Callback: void onStopped()
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean)
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: short maxWithOrThrow(short[],java.util.Comparator)
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.sync.SemaphoreSegment access$createSegment(long,kotlinx.coroutines.sync.SemaphoreSegment)
kotlin.collections.CollectionsKt___CollectionsKt: void sortDescending(java.util.List)
kotlin.UShort: boolean equals-impl0(short,short)
androidx.activity.contextaware.ContextAwareKt: java.lang.Object withContextAvailable(androidx.activity.contextaware.ContextAware,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.view.MenuProvider$-CC: void $default$onMenuClosed(androidx.core.view.MenuProvider,android.view.Menu)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(short[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1: int compare(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy: android.os.IBinder asBinder()
kotlin.ResultKt: java.lang.Object map(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.lifecycle.LegacySavedStateHandleController: void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
org.jetbrains.annotations.NotNull: java.lang.String value()
androidx.core.location.LocationManagerCompat$GnssMeasurementsTransport: void lambda$onGnssMeasurementsReceived$0(java.util.concurrent.Executor,android.location.GnssMeasurementsEvent)
kotlin.collections.IndexedValue: int component1()
androidx.core.widget.TintableCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.StandaloneCoroutine: StandaloneCoroutine(kotlin.coroutines.CoroutineContext,boolean)
androidx.core.view.ViewKt$allViews$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleCoroutineScopeImpl: void register()
androidx.core.os.PersistableBundleApi21ImplKt: void putValue(android.os.PersistableBundle,java.lang.String,java.lang.Object)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setUri(java.lang.String)
androidx.activity.ComponentDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$4: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.io.IOException)
org.intellij.lang.annotations.Language: java.lang.String suffix()
androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
androidx.window.java.embedding.SplitControllerCallbackAdapter: SplitControllerCallbackAdapter(androidx.window.embedding.SplitController,androidx.window.java.core.CallbackToFlowAdapter)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-Aa5vz7o(short[],int,int)
androidx.core.content.res.TypedArrayApi26ImplKt: TypedArrayApi26ImplKt()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal dec(java.math.BigDecimal)
androidx.core.os.ParcelCompat: void writeBoolean(android.os.Parcel,boolean)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
androidx.lifecycle.viewmodel.MutableCreationExtras: MutableCreationExtras(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.autofill.AutofillIdCompat: AutofillIdCompat(android.view.autofill.AutofillId)
kotlinx.coroutines.internal.ResizableAtomicArray: ResizableAtomicArray(int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$5(kotlin.sequences.Sequence)
androidx.core.text.util.LocalePreferences: java.lang.String getHourCycle(java.util.Locale,boolean)
io.flutter.plugin.text.ProcessTextPlugin: ProcessTextPlugin(io.flutter.embedding.engine.systemchannels.ProcessTextChannel)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$new$3(java.lang.String)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$3: FlowKt__ReduceKt$firstOrNull$3(kotlin.coroutines.Continuation)
androidx.loader.content.Loader: void onStartLoading()
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
androidx.activity.result.contract.ActivityResultContracts$PickContact: android.content.Intent createIntent(android.content.Context,java.lang.Void)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api23Impl: ContentCaptureSessionCompat$Api23Impl()
androidx.core.view.ViewKt: void postOnAnimationDelayed$lambda$1(kotlin.jvm.functions.Function0)
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedByDescending(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.builders.SetBuilder: SetBuilder()
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
androidx.core.os.UserHandleCompat$Api24Impl: UserHandleCompat$Api24Impl()
kotlin.time.Duration: int getMinutesComponent-impl(long)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.ViewModelStore: ViewModelStore()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.jvm.internal.ArrayIteratorKt: java.util.Iterator iterator(java.lang.Object[])
kotlinx.coroutines.TimeoutKt: java.lang.Object withTimeoutOrNull(long,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.app.JobIntentService$WorkEnqueuer: void ensureJobId(int)
androidx.core.telephony.mbms.MbmsHelper$Api28Impl: MbmsHelper$Api28Impl()
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.database.CursorWindowCompat: CursorWindowCompat()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] toUByteArray(byte[])
kotlin.jvm.internal.SpreadBuilder: SpreadBuilder(int)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: java.lang.String getDeferredComponentInstallState(int,java.lang.String)
androidx.core.util.SparseIntArrayKt$keyIterator$1: SparseIntArrayKt$keyIterator$1(android.util.SparseIntArray)
kotlin.jvm.internal.Intrinsics: void throwIllegalArgument()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
kotlin.collections.UCollectionsKt___UCollectionsKt: long[] toULongArray(java.util.Collection)
kotlinx.coroutines.flow.StateFlowKt: kotlinx.coroutines.internal.Symbol access$getPENDING$p()
androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)
androidx.core.widget.ScrollerCompat: boolean isOverScrolled()
androidx.core.app.NotificationChannelGroupCompat$Api28Impl: NotificationChannelGroupCompat$Api28Impl()
androidx.customview.widget.ExploreByTouchHelper$1: void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void park()
androidx.core.content.pm.ShortcutManagerCompat: void removeLongLivedShortcuts(android.content.Context,java.util.List)
androidx.versionedparcelable.VersionedParcel: void writeByte(byte,int)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.SchedulerTaskKt: void afterTask(kotlinx.coroutines.scheduling.TaskContext)
androidx.viewpager.widget.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)
androidx.loader.content.Loader: void deliverCancellation()
androidx.viewpager.widget.PagerTitleStrip: void setGravity(int)
kotlin.text.StringsKt___StringsKt: char single(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setEditChoicesBeforeSending(int)
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()
androidx.lifecycle.FlowLiveDataConversions$asFlow$1$2$1: FlowLiveDataConversions$asFlow$1$2$1(androidx.lifecycle.LiveData,androidx.lifecycle.Observer,kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-ELGow60(byte[],kotlin.jvm.functions.Function2)
androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcutInfoChangeListeners()
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicWidth()
kotlin.sequences.SequenceBuilderIterator: void setNextStep(kotlin.coroutines.Continuation)
androidx.viewpager.widget.PagerTitleStrip: void setTextSpacing(int)
kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(double[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: EventLoopImplBase$DelayedTask(long)
kotlin.collections.builders.MapBuilder: boolean removeValue$kotlin_stdlib(java.lang.Object)
kotlin.sequences.SubSequence: java.util.Iterator iterator()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionCancel(android.transition.Transition)
kotlin.ranges.UIntProgression: int getStep()
kotlin.io.ByteStreamsKt: java.io.OutputStreamWriter writer(java.io.OutputStream,java.nio.charset.Charset)
androidx.window.embedding.SplitController$SplitSupportStatus: SplitController$SplitSupportStatus(int)
kotlin.collections.CharIterator: java.lang.Object next()
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(float[])
kotlin.collections.ArraysKt___ArraysKt: float minOf(int[],kotlin.jvm.functions.Function1)
kotlin.ranges.ComparableOpenEndRange: boolean isEmpty()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.ClassReference: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
androidx.core.content.IntentSanitizer: boolean access$1002(androidx.core.content.IntentSanitizer,boolean)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set build(java.util.Set)
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)
androidx.core.provider.FontRequestWorker: int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)
androidx.core.graphics.BitmapCompat: int sizeAtStep(int,int,int,int)
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$values$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void clearSplitAttributesCalculator()
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManager: void attachFragment(androidx.fragment.app.Fragment)
kotlin.ULongArray$Iterator: ULongArray$Iterator(long[])
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
androidx.lifecycle.PausingDispatcherKt$whenStateAtLeast$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.concurrent.LocksKt: java.lang.Object write(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0)
kotlin.text.StringsKt__StringsJVMKt: char[] toCharArray$default(java.lang.String,char[],int,int,int,int,java.lang.Object)
com.getkeepsafe.relinker.elf.ElfParser: ElfParser(java.io.File)
androidx.fragment.app.FragmentController: void noteStateNotSaved()
kotlin.coroutines.SafeContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlin.text.TypeAliasesKt: void Appendable$annotations()
kotlin.io.encoding.DecodeInputStream: int handlePaddingSymbol(int)
kotlin.reflect.ParameterizedTypeImpl: ParameterizedTypeImpl(java.lang.Class,java.lang.reflect.Type,java.util.List)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object access$awaitFrameSlowPath(kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastOrNull$1: ChannelsKt__DeprecatedKt$lastOrNull$1(kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: FragmentLifecycleCallbacksDispatcher(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.DefaultExecutor: void run()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: FlowKt__ReduceKt$reduce$1(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Default: void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)
kotlinx.coroutines.EventLoop: boolean isEmpty()
androidx.fragment.app.SpecialEffectsController$Operation: void onStart()
androidx.core.app.NotificationCompat$BigTextStyle: void restoreFromCompatExtras(android.os.Bundle)
androidx.activity.FullyDrawnReporter: void removeReporter()
kotlin.ranges.URangesKt___URangesKt: int coerceIn-WZ9TVnA(int,int,int)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: FragmentManager$LaunchedFragmentInfo(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: void lambda$new$0(android.media.ImageReader)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getLinkUri()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: ConcurrentWeakMap$Core$KeyValueIterator(kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.lifecycle.CoroutineLiveDataKt$sam$androidx_lifecycle_Observer$0: void onChanged(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(double[],kotlin.jvm.functions.Function1)
kotlin.sequences.USequencesKt: USequencesKt()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List filterIsInstance(java.lang.Iterable)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentDeepHashCodeInline(java.lang.Object[])
androidx.fragment.app.FragmentTabHost: void setup()
androidx.activity.result.contract.ActivityResultContracts$TakeVideo: java.lang.Object parseResult(int,android.content.Intent)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Comparator)
kotlin.collections.builders.SerializedMap: void readExternal(java.io.ObjectInput)
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightNavigationBars(boolean)
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: void endTouchDrag()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
kotlinx.coroutines.channels.ChannelIterator$next0$1: ChannelIterator$next0$1(kotlin.coroutines.Continuation)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State from(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(short[],kotlin.jvm.functions.Function1)
androidx.core.view.MenuHostHelper: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
android.support.v4.app.INotificationSideChannel$Stub: INotificationSideChannel$Stub()
kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection getSTAR()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression reversed(kotlin.ranges.ULongProgression)
androidx.core.util.Pools: Pools()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object getPeekedValueLockedAt(long)
kotlin.collections.MovingSubList: java.lang.Object get(int)
kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)
androidx.core.app.NotificationManagerCompat$Api23Impl: NotificationManagerCompat$Api23Impl()
io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener: void onFlutterEngineDetachedFromFlutterView()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core: void cleanWeakRef(kotlinx.coroutines.debug.internal.HashedWeakRef)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(boolean[],java.lang.Object[])
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMapIndexedIterable(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2$emit$1: FlowKt__ReduceKt$reduce$2$emit$1(kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ClassReference: void isCompanion$annotations()
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] $values()
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
kotlin.text.StringsKt__StringsKt: boolean startsWith$default(java.lang.CharSequence,char,boolean,int,java.lang.Object)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.NestedScrollingParent2: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte maxOf-b33U2AM(byte,byte,byte)
androidx.core.view.WindowInsetsCompat: boolean hasSystemWindowInsets()
kotlinx.coroutines.channels.BroadcastChannelImpl: int getCapacity()
androidx.fragment.app.DialogFragment: void prepareDialog(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte findLast(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt___StringsKt: kotlin.sequences.Sequence windowedSequence(java.lang.CharSequence,int,int,boolean,kotlin.jvm.functions.Function1)
kotlin.Metadata: java.lang.String pn()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function2)
io.flutter.view.AccessibilityBridge: void setBoldTextFlag()
kotlinx.coroutines.channels.ChannelCoroutine: kotlinx.coroutines.selects.SelectClause1 getOnReceive()
androidx.window.area.WindowAreaCapability: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(double[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
kotlin.text.StringsKt___StringsKt: java.lang.String dropLastWhile(java.lang.String,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List distinctBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.collection.MapCollections$MapIterator: void remove()
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
io.flutter.Log: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxWithOrNull(byte[],java.util.Comparator)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$complete(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ArrayByteIterator: boolean hasNext()
androidx.core.view.DragStartHelper: void attach()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5(kotlinx.coroutines.flow.Flow[],kotlin.coroutines.Continuation,kotlin.jvm.functions.Function7)
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigInteger sumOfBigInteger(int[],kotlin.jvm.functions.Function1)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
kotlin.ranges.ULongProgression: java.util.Iterator iterator()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfterLast(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.core.view.GestureDetectorCompat: boolean isLongpressEnabled()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: java.util.ArrayList getSharedElementLastInViews()
androidx.viewpager.widget.ViewPager: void populate()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
kotlin.collections.ArraysKt___ArraysKt: long[] onEachIndexed(long[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRight(double[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.view.MenuProvider: void onPrepareMenu(android.view.Menu)
androidx.collection.MapCollections$EntrySet: int hashCode()
kotlin.text.StringsKt___StringsKt: java.lang.Character minOrNull(java.lang.CharSequence)
androidx.customview.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle getExtras()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: float maxOf(float,float[])
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getDismissalId()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.window.core.ConsumerAdapter: java.lang.Object buildConsumer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets getFlutterAssets()
kotlin.time.Duration: long getInWholeHours-impl(long)
kotlin.collections.builders.MapBuilder$Itr: void setIndex$kotlin_stdlib(int)
kotlin.jvm.internal.ShortSpreadBuilder: int getSize(short[])
kotlin.coroutines.CombinedContext: java.lang.String toString()
kotlinx.coroutines.AwaitAll$AwaitAllNode: kotlinx.coroutines.DisposableHandle getHandle()
androidx.core.util.Pools$SynchronizedPool: java.lang.Object acquire()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] copyInto-FUQE5sA$default(byte[],byte[],int,int,int,int,java.lang.Object)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(boolean[])
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parseFile(java.io.BufferedReader)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap$Core$KeyValueIterator: java.lang.Void remove()
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
kotlin.text.MatcherMatchResult$groups$1: java.util.Iterator iterator()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationEnd(android.view.View)
kotlin.sequences.SequencesKt__SequencesKt$flatMapIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
kotlin.collections.SetsKt__SetsJVMKt: java.util.TreeSet sortedSetOf(java.util.Comparator,java.lang.Object[])
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: int getWidth()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: void clearRules()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void enableBufferingIncomingMessages()
kotlin.collections.UCollectionsKt___UCollectionsKt: long sumOfULong(java.lang.Iterable)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.time.TimedValue: kotlin.time.TimedValue copy-RFiDyg4$default(kotlin.time.TimedValue,java.lang.Object,long,int,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData$default(java.time.Duration,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UInt maxWith-YmdZ_VM(int[],java.util.Comparator)
kotlin.collections.ArraysKt___ArraysKt: int single(int[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsControllerCompat$Impl26: WindowInsetsControllerCompat$Impl26(android.view.Window,androidx.core.view.SoftwareKeyboardControllerCompat)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(int[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int)
androidx.window.area.utils.DeviceMetrics: android.util.DisplayMetrics getRearDisplayMetrics()
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float minBy(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxByOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.annotation.Discouraged: java.lang.String message()
kotlinx.coroutines.internal.OnDemandAllocatingPoolKt: java.lang.Void loop(kotlin.jvm.functions.Function0)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1$1: java.lang.Object invoke(java.lang.Object)
androidx.core.location.LocationCompat$Api34Impl: void removeMslAltitude(android.location.Location)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$2: void invoke()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: void disposeOnCompletion(kotlinx.coroutines.DisposableHandle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $values()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlinx.coroutines.selects.SelectClause0Impl: kotlin.jvm.functions.Function3 getOnCancellationConstructor()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class)
androidx.core.animation.AnimatorKt: android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
kotlin.text.Regex$Companion: java.lang.String escape(java.lang.String)
kotlin.NumbersKt__NumbersJVMKt: int toRawBits(float)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object[],java.util.Comparator)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: ActivityResultContracts$RequestMultiplePermissions()
kotlinx.coroutines.CancellableContinuationImpl: boolean cancelLater(java.lang.Throwable)
androidx.fragment.app.FragmentManagerState$1: FragmentManagerState$1()
androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)
androidx.concurrent.futures.DirectExecutor: DirectExecutor(java.lang.String,int)
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
androidx.activity.ComponentActivity$5: ComponentActivity$5(androidx.activity.ComponentActivity)
kotlinx.coroutines.flow.FlowKt__MergeKt: void getDEFAULT_CONCURRENCY_PROPERTY_NAME$annotations()
kotlinx.coroutines.Deferred$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Deferred,kotlin.coroutines.CoroutineContext$Key)
androidx.window.area.utils.DeviceUtils: android.util.DisplayMetrics getRearDisplayMetrics$window_release(java.lang.String,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt$withIndex$3: java.lang.Object invoke()
androidx.concurrent.futures.AbstractResolvableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
kotlin.jvm.internal.Ref$BooleanRef: Ref$BooleanRef()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void loadDartLibrary(int,java.lang.String)
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
androidx.core.view.DisplayCompat: android.graphics.Point getCurrentDisplaySizeFromWorkarounds(android.content.Context,android.view.Display)
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
kotlin.collections.ArrayDeque: java.lang.Object removeLastOrNull()
kotlin.collections.builders.MapBuilder: kotlin.collections.builders.MapBuilder$EntriesItr entriesIterator$kotlin_stdlib()
androidx.core.app.NotificationCompat$Api20Impl: java.lang.String getGroup(android.app.Notification)
kotlin.text.StringsKt___StringsKt: java.lang.Comparable minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
androidx.window.WindowSdkExtensions: void requireExtensionVersion$window_release(int)
androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)
androidx.versionedparcelable.VersionedParcel: int readInt()
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.core.content.IntentSanitizer: boolean access$1402(androidx.core.content.IntentSanitizer,boolean)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.PictureInPictureModeChangedInfo: PictureInPictureModeChangedInfo(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host,io.flutter.embedding.engine.FlutterEngineGroup)
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.IndexingIterator: IndexingIterator(java.util.Iterator)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
kotlinx.coroutines.flow.ChannelFlowBuilder: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List scan(float[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.JobIntentService$CompatWorkItem: void complete()
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$8$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.lang.Object[])
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.fragment.app.SpecialEffectsController$Operation getOperation()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1: FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4$1(kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4,kotlin.coroutines.Continuation)
androidx.core.content.ContextKt: java.lang.Object getSystemService(android.content.Context)
kotlin.text.MatchNamedGroupCollection: kotlin.text.MatchGroup get(java.lang.String)
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long maxOf-R03FKyM(long,long[])
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
kotlinx.coroutines.channels.ChannelCoroutine: boolean close(java.lang.Throwable)
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
androidx.lifecycle.BlockRunner: kotlin.jvm.functions.Function0 access$getOnDone$p(androidx.lifecycle.BlockRunner)
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onStopped()
androidx.core.app.NotificationCompat$Api26Impl: long getTimeoutAfter(android.app.Notification)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived()
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
androidx.lifecycle.MediatorLiveData: void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
androidx.core.provider.FontRequest: java.lang.String getId()
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: boolean markAsClosed()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int,boolean)
androidx.window.core.SpecificationComputer: androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1)
com.getkeepsafe.relinker.elf.Section32Header: Section32Header(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set union(byte[],java.lang.Iterable)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setImportant(boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte single-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
androidx.core.text.util.LocalePreferences$Api24Impl: LocalePreferences$Api24Impl()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(long[],java.lang.Iterable)
androidx.core.view.WindowInsetsCompat$Type: int systemGestures()
kotlin.io.FilesKt__UtilsKt$copyRecursively$2: void invoke(java.io.File,java.io.IOException)
kotlin.collections.ArraysKt___ArraysKt: short first(short[])
kotlin.collections.ArraysKt___ArraysKt: int indexOf(char[],char)
kotlin.io.LinesSequence$iterator$1: LinesSequence$iterator$1(kotlin.io.LinesSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(short[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.InvokeOnCancel: java.lang.String toString()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumOfDouble(short[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.util.SparseArrayKt: void set(android.util.SparseArray,int,java.lang.Object)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setNumericShortcut(char,int)
kotlin.UShort: long toULong-s-VKNKU(short)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.UInt: int or-WZ4Q5Ns(int,int)
androidx.core.math.MathUtils: float clamp(float,float,float)
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String,int)
kotlin.collections.builders.MapBuilder: void removeKeyAt(int)
kotlinx.coroutines.channels.LazyActorCoroutine: boolean close(java.lang.Throwable)
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColorResource(int)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: FileTreeWalk$FileTreeWalkIterator$SingleFileState(kotlin.io.FileTreeWalk$FileTreeWalkIterator,java.io.File)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection filterIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
kotlin.text.UStringsKt: kotlin.ULong toULongOrNull(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.sequences.FlatteningSequence: FlatteningSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
kotlin.jvm.internal.ClassReference: java.util.Collection getNestedClasses()
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
kotlinx.coroutines.CompletableJob: boolean completeExceptionally(java.lang.Throwable)
androidx.core.graphics.BitmapCompat$Api31Impl: android.graphics.Bitmap$Config getHardwareBitmapConfig(android.graphics.Bitmap)
kotlin.text.StringsKt___StringsKt: java.lang.Character getOrNull(java.lang.CharSequence,int)
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: ArraysKt___ArraysKt$withIndex$1(java.lang.Object[])
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
androidx.window.area.WindowAreaControllerImpl: boolean shouldRemoveWindowAreaInfo(androidx.window.area.WindowAreaInfo)
androidx.core.app.NotificationCompat$CallStyle: NotificationCompat$CallStyle(int,androidx.core.app.Person,android.app.PendingIntent,android.app.PendingIntent,android.app.PendingIntent)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap)
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
kotlin.text.Regex: kotlin.sequences.Sequence splitToSequence$default(kotlin.text.Regex,java.lang.CharSequence,int,int,java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.ImageReaderPlatformViewRenderTarget: int getWidth()
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3$emit$1: FlowKt__CollectKt$collect$3$emit$1(kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceRight(java.util.List,kotlin.jvm.functions.Function2)
io.flutter.plugin.platform.PlatformPlugin: void access$900(io.flutter.plugin.platform.PlatformPlugin)
kotlin.time.DurationKt: long millisToNanos(long)
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: void setClip(android.content.ClipData)
androidx.core.text.SpannedStringKt: java.lang.Object[] getSpans$default(android.text.Spanned,int,int,int,java.lang.Object)
androidx.lifecycle.ViewModelStore: void clear()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List take-PpDY95g(byte[],int)
kotlinx.coroutines.CancellableContinuation: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[],int)
kotlin.text.RegexKt: kotlin.ranges.IntRange range(java.util.regex.MatchResult,int)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence flatMapIndexedIterable(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.fragment.app.FragmentManager$PopBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
androidx.core.provider.SelfDestructiveThread$2$1: SelfDestructiveThread$2$1(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object)
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onSuccess-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.text.Regex: java.util.regex.Pattern access$getNativePattern$p(kotlin.text.Regex)
kotlin.time.Duration$Companion: Duration$Companion()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: boolean clipboardHasStrings()
kotlinx.coroutines.flow.FlowKt: java.lang.Object toList(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation)
kotlin.collections.builders.ListBuilder: boolean retainAll(java.util.Collection)
androidx.core.view.DifferentialMotionFlingController$FlingVelocityThresholdCalculator: void calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int)
com.getkeepsafe.relinker.elf.Section64Header: Section64Header(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int)
androidx.window.embedding.SplitRule$FinishBehavior$Companion: androidx.window.embedding.SplitRule$FinishBehavior getFinishBehaviorFromValue$window_release(int)
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: java.lang.Object call()
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object currentCoroutineContext(kotlin.coroutines.Continuation)
kotlin.collections.UCollectionsKt___UCollectionsKt: int sumOfUByte(java.lang.Iterable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.collection.CircularArray: void removeFromStart(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)
kotlin.text.StringsKt___StringsKt: java.lang.CharSequence onEachIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.core.view.ContentInfoCompat: android.net.Uri getLinkUri()
androidx.core.view.ContentInfoCompat$BuilderCompatImpl: ContentInfoCompat$BuilderCompatImpl(androidx.core.view.ContentInfoCompat)
kotlin.collections.builders.MapBuilderValues: kotlin.collections.builders.MapBuilder getBacking()
androidx.core.view.ViewKt: void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean addConditionally$atomicfu$array(java.lang.Object,java.util.concurrent.atomic.AtomicIntegerArray,int,int,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minOrNull(int[])
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: boolean tryRegisterAsWaiter(kotlinx.coroutines.selects.SelectImplementation)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)
kotlinx.coroutines.CancellableContinuationKt: void disposeOnCancellation(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.DisposableHandle)
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: int minOf(int,int[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] asULongArray(long[])
kotlin.text.StringsKt__StringsKt$splitToSequence$2: StringsKt__StringsKt$splitToSequence$2(java.lang.CharSequence)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short single-rL5Bavg(short[])
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte maxOf-Kr8caGY(byte,byte)
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.ULong min-QwZRm1k(long[])
androidx.window.embedding.EmbeddingBackend$Companion: void reset()
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: void onSessionStarted()
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1: FlowKt__MergeKt$flatMapConcat$$inlined$map$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlin.text.Regex$Companion: int ensureUnicodeCase(int)
kotlin.ResultKt: java.lang.Object runCatching(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.telephony.mbms.MbmsHelper$Api28Impl: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)
kotlin.collections.ArraysKt___ArraysKt: long last(long[])
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.os.LocaleListCompat getLocales()
_COROUTINE.ArtificialStackFrames: ArtificialStackFrames()
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.core.graphics.Insets: androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: int binarySearch-EtDCXyQ$default(short[],short,int,int,int,java.lang.Object)
kotlin.jvm.internal.Ref$BooleanRef: java.lang.String toString()
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup: int atMost(int)
kotlinx.coroutines.CompletionHandlerKt: kotlin.jvm.functions.Function1 getAsHandler(kotlinx.coroutines.CancelHandlerBase)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)
androidx.fragment.app.SpecialEffectsController$Operation: java.lang.String toString()
io.flutter.embedding.android.FlutterFragmentActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder withCachedEngine(java.lang.String)
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
androidx.core.view.MarginLayoutParamsCompat: MarginLayoutParamsCompat()
androidx.core.util.SparseBooleanArrayKt: kotlin.collections.IntIterator keyIterator(android.util.SparseBooleanArray)
androidx.core.view.ViewKt: boolean isGone(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(java.lang.Object[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Map associateWithTo-X6OPwNk(long[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke()
kotlinx.coroutines.Job: kotlin.sequences.Sequence getChildren()
androidx.core.graphics.PaintCompat: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.util.SortedSet toSortedSet(java.lang.Iterable)
kotlin.collections.CollectionsKt___CollectionsKt$withIndex$1: java.util.Iterator invoke()
kotlin.collections.builders.MapBuilder$Companion: int computeShift(int)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$4: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreKt: int access$getSEGMENT_SIZE$p()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)
androidx.lifecycle.SavedStateHandlesProvider: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$RequestPermission: ActivityResultContracts$RequestPermission()
kotlin.ranges.RangesKt___RangesKt: double coerceIn(double,double,double)
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String)
androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)
androidx.annotation.IntDef: boolean open()
androidx.window.embedding.SplitController$splitInfoList$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
kotlin.text.StringsKt__StringsKt: java.lang.String commonPrefixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlin.math.MathKt__MathJVMKt: float tanh(float)
androidx.core.graphics.Insets: boolean equals(java.lang.Object)
androidx.core.app.Person: java.lang.CharSequence getName()
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment findSegmentReceive(long,kotlinx.coroutines.channels.ChannelSegment)
kotlin.internal.ProgressionUtilKt: long getProgressionLastElement(long,long,long)
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$filterNot$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(int[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.graphics.PaintCompat: androidx.core.util.Pair obtainEmptyRects()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$7: java.util.Iterator iterator()
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Iterable onEach(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$3: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],byte[])
androidx.window.layout.EmptyDecorator: EmptyDecorator()
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.EventLoopKt: long runSingleTaskFromCurrentSystemDispatcher()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
androidx.core.location.LocationCompat$Api34Impl: void setMslAltitudeAccuracyMeters(android.location.Location,float)
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1: void onTransitionCancel(android.transition.Transition)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List reversed-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyInto$default(double[],double[],int,int,int,int,java.lang.Object)
com.getkeepsafe.relinker.elf.Elf$SectionHeader: Elf$SectionHeader()
kotlin.reflect.KClass: kotlin.reflect.KVisibility getVisibility()
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)
kotlinx.coroutines.ThreadState: void loop$atomicfu(java.util.concurrent.atomic.AtomicIntegerFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1: SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1(androidx.window.layout.SafeWindowLayoutComponentProvider)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
androidx.profileinstaller.Encoding: byte[] readCompressed(java.io.InputStream,int,int)
kotlin.io.FilePathComponents: boolean equals(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler access$600(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlin.sequences.DistinctSequence: DistinctSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.CharCodeKt: int getCode(char)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: boolean isAccessibilityFocused(android.view.accessibility.AccessibilityWindowInfo)
kotlin.io.FileTreeWalk: kotlin.jvm.functions.Function2 access$getOnFail$p(kotlin.io.FileTreeWalk)
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$900(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.core.ConsumerAdapter$createSubscription$1: ConsumerAdapter$createSubscription$1(java.lang.reflect.Method,java.lang.Object,java.lang.Object)
androidx.activity.result.ActivityResultRegistry: void registerKey(java.lang.String)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long elapsedNow-UwyO8pc(long)
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat valueOf(java.lang.String)
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: ViewPager$MyAccessibilityDelegate(androidx.viewpager.widget.ViewPager)
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(long[])
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection flatMapIndexedSequenceTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2)
androidx.loader.app.LoaderManagerImpl: void destroyLoader(int)
kotlinx.coroutines.channels.BufferedChannel: void access$prepareReceiverForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
kotlin.random.Random$Default: byte[] nextBytes(int)
kotlin.time.MeasureTimeKt: long measureTime(kotlin.time.TimeSource,kotlin.jvm.functions.Function0)
androidx.window.core.Bounds: java.lang.String toString()
androidx.fragment.app.SpecialEffectsController$Operation: boolean isStarted()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence runningFold(kotlin.sequences.Sequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.fragment.app.LogWriter: void flush()
androidx.core.transition.TransitionKt$addListener$3: TransitionKt$addListener$3()
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.flow.FlowKt__LimitKt: kotlinx.coroutines.flow.Flow drop(kotlinx.coroutines.flow.Flow,int)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
androidx.collection.ArraySet: ArraySet(java.util.Collection)
androidx.core.app.NotificationChannelCompat: android.media.AudioAttributes getAudioAttributes()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void startWeakRefCleanerThread()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character find(char[],kotlin.jvm.functions.Function1)
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion: void registerIn(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1: void onTransitionEnd(android.transition.Transition)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt$distinct$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitAttributes$LayoutDirection: androidx.window.embedding.SplitAttributes$LayoutDirection getLayoutDirectionFromValue$window_release(int)
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
androidx.core.graphics.TypefaceCompat: TypefaceCompat()
kotlin.collections.ArraysKt___ArraysKt: kotlin.ranges.IntRange getIndices(java.lang.Object[])
kotlin.sequences.SequencesKt: SequencesKt()
androidx.core.graphics.ColorKt: int component3(int)
kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.ReceiveChannel)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.adapter.sidecar.SidecarCompat,android.app.Activity)
androidx.customview.widget.ViewDragHelper: float clampMag(float,float,float)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filterNot(int[],kotlin.jvm.functions.Function1)
android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)
androidx.core.provider.CallbackWithHandler: void onTypefaceRequestFailed(int)
kotlinx.coroutines.flow.FlowKt__ReduceKt$firstOrNull$$inlined$collectWhile$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void fill-EtDCXyQ(short[],short,int,int)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitAttributesCalculator(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(long[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable asMutableIterable(java.lang.Object,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)
androidx.loader.content.ModernAsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2: void invoke()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()
androidx.customview.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)
kotlin.collections.builders.MapBuilder: boolean isEmpty()
kotlin.jvm.internal.ByteCompanionObject: void getSIZE_BITS$annotations()
androidx.versionedparcelable.VersionedParcelize: java.lang.String jetifyAs()
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)
androidx.profileinstaller.ProfileVerifier$Cache: androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object elementAtOrElse(kotlin.sequences.Sequence,int,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
kotlin.jvm.internal.CharSpreadBuilder: int getSize(java.lang.Object)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.OpenEndRange,long)
kotlinx.coroutines.CompletableDeferredKt: boolean completeWith(kotlinx.coroutines.CompletableDeferred,java.lang.Object)
kotlinx.coroutines.selects.SelectImplementation: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
androidx.core.view.DisplayCutoutCompat: int hashCode()
androidx.core.location.LocationCompat: LocationCompat()
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher()
kotlin.math.MathKt__MathJVMKt: void getAbsoluteValue$annotations(long)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder createActionBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(androidx.window.core.ActivityComponentInfo,androidx.window.core.ActivityComponentInfo,java.lang.String)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getPrev()
kotlinx.coroutines.EventLoopImplPlatform: java.lang.Thread getThread()
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel take$default(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndentByMargin$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper$2: int size(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isAccessibilityFocused()
androidx.core.view.inputmethod.InputConnectionCompat: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListenerUsingPerformReceiveContent(android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigInteger sumOfBigInteger(int[],kotlin.jvm.functions.Function1)
androidx.annotation.InspectableProperty$FlagEntry: java.lang.String name()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.util.Collection,java.lang.Object[])
androidx.core.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])
androidx.lifecycle.DispatchQueue: void resume()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence removeSurrounding(java.lang.CharSequence,java.lang.CharSequence)
androidx.loader.content.ModernAsyncTask: void postResultIfNotInvoked(java.lang.Object)
androidx.savedstate.ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$1: ViewTreeSavedStateRegistryOwner$findViewTreeSavedStateRegistryOwner$1()
kotlin.io.FileTreeWalk$FileTreeWalkIterator: java.io.File gotoNext()
kotlin.DeepRecursiveScopeImpl: java.lang.Object runCallLoop()
kotlin.coroutines.CombinedContext: int hashCode()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.String toString()
kotlin.concurrent.TimersKt$timerTask$1: void run()
kotlin.coroutines.ContinuationKt: java.lang.Object suspendCoroutine(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
androidx.fragment.app.FragmentManager: void dispatchOnAttachFragment(androidx.fragment.app.Fragment)
androidx.core.telephony.SubscriptionManagerCompat$Api29Impl: SubscriptionManagerCompat$Api29Impl()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.core.net.MailTo: java.lang.String getCc()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
kotlin.jvm.internal.LongSpreadBuilder: void add(long)
io.flutter.embedding.engine.systemchannels.ProcessTextChannel: io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler access$000(io.flutter.embedding.engine.systemchannels.ProcessTextChannel)
androidx.core.view.ContentInfoCompat$Compat31Impl: android.os.Bundle getExtras()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean handlesCropAndRotation()
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle()
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt: void handleUncaughtCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[])
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManager findFragmentManager(android.view.View)
androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics: ProfileInstallReceiver$ResultDiagnostics(androidx.profileinstaller.ProfileInstallReceiver)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: NotificationCompat$MessagingStyle$Message$Api24Impl()
kotlin.reflect.TypeVariableImpl: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
kotlin.text.MatchGroup: kotlin.text.MatchGroup copy(java.lang.String,kotlin.ranges.IntRange)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationChannelGroupCompat getNotificationChannelGroupCompat(java.lang.String)
io.flutter.plugin.text.ProcessTextPlugin: void cacheResolveInfos()
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2: FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$2(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.app.NotificationCompat$WearableExtender: android.app.PendingIntent getDisplayIntent()
kotlin.jvm.internal.FunctionImpl: void throwWrongArity(int)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.String toString()
kotlin.text.CharDirectionality$Companion: CharDirectionality$Companion()
androidx.core.os.ParcelCompat$Api33Impl: void readList(android.os.Parcel,java.util.List,java.lang.ClassLoader,java.lang.Class)
io.flutter.Log: void e(java.lang.String,java.lang.String)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.core.app.OnPictureInPictureModeChangedProvider: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString--ajY-9A(int[])
androidx.core.view.WindowInsetsControllerCompat$Impl30: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)
androidx.core.text.method.LinkMovementMethodCompat: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)
io.flutter.embedding.engine.systemchannels.KeyboardChannel: KeyboardChannel(io.flutter.plugin.common.BinaryMessenger)
kotlinx.coroutines.EventLoopImplBase: void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.savedstate.SavedStateRegistry: SavedStateRegistry()
androidx.fragment.app.DialogFragment$5: android.view.View onFindViewById(int)
androidx.core.graphics.BitmapKt: boolean contains(android.graphics.Bitmap,android.graphics.Point)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int lastIndexOf(int)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
kotlin.sequences.SequencesKt___SequencesKt: float minOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat[] $values()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder clearInvisibleActions()
androidx.core.provider.CallbackWithHandler$1: void run()
kotlinx.coroutines.sync.MutexImpl: java.lang.Object access$lockSuspend(kotlinx.coroutines.sync.MutexImpl,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getChildJobCancellationCause()
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,int,int)
androidx.activity.ComponentActivity$1: ComponentActivity$1(androidx.activity.ComponentActivity)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence sortedWith(kotlin.sequences.Sequence,java.util.Comparator)
kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1: FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1(kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence)
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfFirst(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.core.util.SparseBooleanArrayKt: boolean contains(android.util.SparseBooleanArray,int)
androidx.lifecycle.DefaultLifecycleObserver$-CC: void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator reverseOrder()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
kotlin.text.StringsKt___StringsKt: java.lang.String drop(java.lang.String,int)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(java.lang.Object)
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.BooleanSpreadBuilder: void add(boolean)
kotlin.Result: java.lang.Object unbox-impl()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection)
kotlinx.coroutines.ParentJob: java.util.concurrent.CancellationException getChildJobCancellationCause()
androidx.core.app.NotificationChannelGroupCompat: NotificationChannelGroupCompat(android.app.NotificationChannelGroup,java.util.List)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toList$default(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.fragment.app.strictmode.TargetFragmentUsageViolation: TargetFragmentUsageViolation(androidx.fragment.app.Fragment,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.MagicApiIntrinsics: java.lang.Object anyMagicApiCall(int,java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function1)
androidx.savedstate.Recreator$Companion: Recreator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
io.flutter.embedding.engine.plugins.PluginRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
androidx.activity.OnBackPressedDispatcher$addCancellableCallback$1: OnBackPressedDispatcher$addCancellableCallback$1(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.selects.SelectClause2 getOnSend()
androidx.core.content.res.CamColor: void getM3HCTfromColor(int,float[])
androidx.core.graphics.BlendModeCompat: BlendModeCompat(java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.ULongArray: java.lang.String toString-impl(long[])
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty$Setter getSetter()
kotlin.sequences.FilteringSequence$iterator$1: void setNextState(int)
kotlinx.coroutines.channels.ChannelResult$Closed: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()
kotlin.ranges.ClosedDoubleRange: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: NotificationCompat$MessagingStyle$Message$Api28Impl()
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List drop(double[],int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $values()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void probeCoroutineSuspended$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
androidx.window.core.PredicateAdapter$PredicateStubHandler: int hashCode()
kotlin.jvm.internal.MagicApiIntrinsics: void voidMagicApiCall(java.lang.Object)
androidx.customview.widget.FocusStrategy: FocusStrategy()
androidx.core.content.ContextKt: void withStyledAttributes(android.content.Context,int,int[],kotlin.jvm.functions.Function1)
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper: void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
kotlin.jvm.internal.CharSpreadBuilder: void add(char)
kotlinx.coroutines.channels.ChannelSegment: java.lang.Object getState$kotlinx_coroutines_core(int)
kotlinx.coroutines.channels.LazyActorCoroutine$onSend$1: LazyActorCoroutine$onSend$1()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$lastIndexOf$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UByte: byte and-7apg3OU(byte,byte)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
kotlin.sequences.FilteringSequence: FilteringSequence(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20: void hide()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
kotlin.io.path.FileVisitorBuilder: void onPostVisitDirectory(kotlin.jvm.functions.Function2)
kotlin.jvm.internal.Reflection: kotlin.reflect.KType typeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.util.List enhanceStackTraceWithThreadDump(kotlinx.coroutines.debug.internal.DebugCoroutineInfo,java.util.List)
androidx.window.layout.adapter.sidecar.SidecarCompat: SidecarCompat(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceRightIndexedOrNull(byte[],kotlin.jvm.functions.Function3)
androidx.core.net.MailTo: boolean isMailTo(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Object[])
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.collection.ArraySet$1: void colPut(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedBy(short[],kotlin.jvm.functions.Function1)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,double)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.ClosedFloatingPointRange rangeTo(float,float)
kotlin.jvm.internal.ArrayBooleanIterator: boolean nextBoolean()
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object maxBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: androidx.window.SafeWindowExtensionsProvider access$getSafeWindowExtensionsProvider$p(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
androidx.core.content.pm.PackageInfoCompat: PackageInfoCompat()
kotlinx.coroutines.flow.FlowKt__TransformKt$filterIsInstance$$inlined$filter$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.PaintCompat: PaintCompat()
kotlin.time.MonoTimeSourceKt: void ValueTimeMarkReading$annotations()
kotlin.text.CharCategory: kotlin.text.CharCategory valueOf(java.lang.String)
kotlinx.coroutines.flow.SubscribedSharedFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo)
kotlinx.coroutines.sync.MutexImpl$SelectInstanceWithOwner: MutexImpl$SelectInstanceWithOwner(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.selects.SelectInstanceInternal,java.lang.Object)
androidx.fragment.app.FragmentController: void dispatchDestroyView()
kotlin.collections.ArraysKt___ArraysKt: boolean all(float[],kotlin.jvm.functions.Function1)
kotlin.io.FileTreeWalk$DirectoryState: FileTreeWalk$DirectoryState(java.io.File)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View)
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldDestroyEngineWithHost()
kotlin.jvm.internal.TypeReference: java.util.List getAnnotations()
kotlin.ranges.OpenEndDoubleRange: boolean contains(java.lang.Comparable)
androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)
androidx.core.graphics.WeightTypefaceApi14: android.graphics.Typeface createWeightStyle(androidx.core.graphics.TypefaceCompatBaseImpl,android.content.Context,android.graphics.Typeface,int,boolean)
kotlin.text.MatcherMatchResult$groups$1: kotlin.text.MatchGroup get(int)
kotlin.collections.builders.ListBuilder$Itr: void remove()
kotlin.io.FilesKt__FileReadWriteKt: java.io.InputStreamReader reader$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object)
androidx.collection.SparseArrayCompat: void putAll(androidx.collection.SparseArrayCompat)
kotlin.text.StringsKt__StringsJVMKt: int compareTo(java.lang.String,java.lang.String,boolean)
io.flutter.plugin.text.ProcessTextPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.graphics.MatrixKt: android.graphics.Matrix scaleMatrix$default(float,float,int,java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
kotlin.coroutines.jvm.internal.DebugMetadata: java.lang.String[] n()
androidx.fragment.app.FragmentManager: void popBackStack(java.lang.String,int)
kotlin.UByteArray: UByteArray(byte[])
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy: void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)
androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: kotlin.time.ComparableTimeMark minus-LRDsOJo(long)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger or(java.math.BigInteger,java.math.BigInteger)
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1: java.lang.Object prepare(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
kotlin.UShort: int plus-xj2QHRw(short,short)
kotlin.time.DurationUnitKt__DurationUnitJvmKt: long convertDurationUnit(long,kotlin.time.DurationUnit,kotlin.time.DurationUnit)
kotlinx.coroutines.InvokeOnCompletion: java.lang.Object invoke(java.lang.Object)
androidx.core.util.LongSparseArrayKt$valueIterator$1: void remove()
kotlinx.coroutines.channels.BufferedChannel: boolean shouldSendSuspend(long)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: StringsKt__StringNumberConversionsJVMKt()
androidx.core.app.JobIntentService$CompatWorkItem: JobIntentService$CompatWorkItem(androidx.core.app.JobIntentService,android.content.Intent,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(long[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.view.accessibility.AccessibilityEventCompat: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityEvent)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)
kotlin.collections.IndexedValue: java.lang.Object getValue()
androidx.core.widget.CheckedTextViewCompat: void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList)
kotlinx.coroutines.internal.OnDemandAllocatingPool: int tryForbidNewElements()
androidx.lifecycle.ReportFragment$Companion: ReportFragment$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4: DefaultSpecialEffectsController$TransitionEffect$onCommit$4(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup,java.lang.Object)
android.support.v4.app.INotificationSideChannel$_Parcel: void access$100(android.os.Parcel,android.os.Parcelable,int)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(boolean[],boolean,int,int)
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder: androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Builder detectRetainInstanceUsage()
kotlin.text.StringsKt__StringsJVMKt: boolean contentEquals(java.lang.String,java.lang.StringBuffer)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.content.pm.ShortcutXmlParser: android.content.res.XmlResourceParser getXmlResourceParser(android.content.Context,android.content.pm.ActivityInfo)
androidx.collection.MapCollections: java.util.Map colGetMap()
kotlin.random.RandomKt: kotlin.random.Random Random(long)
kotlin.ranges.RangesKt___RangesKt: char random(kotlin.ranges.CharRange)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object)
kotlin.text.MatcherMatchResult$groupValues$1: int indexOf(java.lang.String)
kotlin.ranges.LongRange$Companion: LongRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getId()
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduceIndexed(boolean[],kotlin.jvm.functions.Function3)
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap getBitmap()
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName copy(java.lang.String)
androidx.arch.core.internal.SafeIterableMap$SupportRemove: SafeIterableMap$SupportRemove()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$8: int lastIndexOf(char)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitRule$FinishBehavior getFinishSecondaryWithPrimary()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.core.location.LocationListenerCompat: void onLocationChanged(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(char[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: kotlin.time.TimeSource$Monotonic$ValueTimeMark box-impl(long)
kotlinx.coroutines.flow.FlowKt__CountKt$count$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.FileProvider: java.lang.String access$000(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: long sumOfULong(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List scan(java.lang.Iterable,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String flagToString(int)
kotlin.text.MatcherMatchResult: java.util.List getGroupValues()
kotlin.collections.MapWithDefaultImpl: java.util.Collection getValues()
io.flutter.embedding.android.FlutterActivityLaunchConfigs: boolean deepLinkEnabled(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(char[])
androidx.core.view.ContentInfoCompat: androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(long[],kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerTabStrip: void setPadding(int,int,int,int)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short maxOf(short,short)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)
kotlinx.coroutines.channels.BroadcastChannelImpl: kotlinx.coroutines.channels.ReceiveChannel openSubscription()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long maxOf(long,long)
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getHeadsUpContentView()
kotlin.UNumbersKt: int countTrailingZeroBits-7apg3OU(byte)
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object)
androidx.core.view.WindowInsetsCompat: boolean isRound()
androidx.core.util.LongSparseArrayKt: boolean containsKey(android.util.LongSparseArray,long)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.embedding.android.FlutterFragmentActivity: void ensureFlutterFragmentCreated()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: OnBackPressedDispatcher$LifecycleOnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)
androidx.window.embedding.ActivityStack: java.lang.String toString()
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException)
androidx.window.area.SafeWindowAreaComponentProvider: java.lang.Class getWindowAreaComponentClass()
kotlin.NumbersKt__FloorDivModKt: double mod(double,float)
kotlin.io.TextStreamsKt: void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
kotlin.time.LongSaturatedMathKt: long saturatingOriginsDiff(long,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
kotlinx.coroutines.flow.SharedFlowImpl: void access$enqueueLocked(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip$default(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounceInternal$FlowKt__DelayKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: FontResourcesParserCompat$Api21Impl()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.core.content.FileProvider: FileProvider(int)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combineTransformUnsafe$FlowKt__ZipKt(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function3)
kotlin.ExceptionsKt__ExceptionsKt: void getStackTrace$annotations(java.lang.Throwable)
androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(byte,byte)
kotlinx.coroutines.channels.BufferedChannel: long getReceiversCounter$kotlinx_coroutines_core()
kotlinx.coroutines.ResumeOnCompletion: void invoke(java.lang.Throwable)
io.flutter.util.ViewUtils: boolean lambda$childHasFocus$0(android.view.View)
androidx.window.embedding.ActivityEmbeddingController: androidx.window.embedding.ActivityEmbeddingController getInstance(android.content.Context)
androidx.core.view.WindowInsetsAnimationControllerCompat: boolean isCancelled()
kotlinx.coroutines.JobSupport$Finishing: java.lang.String toString()
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
kotlin.collections.AbstractSet$Companion: boolean setEquals$kotlin_stdlib(java.util.Set,java.util.Set)
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence getTitle()
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute(io.flutter.view.AccessibilityBridge$1)
kotlin.text.StringsKt__StringsJVMKt: byte[] toByteArray(java.lang.String,java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxWithOrNull(float[],java.util.Comparator)
kotlin.collections.builders.SetBuilder: void clear()
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toList(kotlinx.coroutines.flow.Flow,java.util.List,kotlin.coroutines.Continuation)
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api28Impl: android.app.NotificationChannelGroup getNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(double[],java.lang.Iterable)
kotlin.Result$Companion: java.lang.Object success(java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: WindowInsetsAnimationCompat$Impl21(int,android.view.animation.Interpolator,long)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(short[])
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl: java.util.List lastObservedStackTrace()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches$default(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(long[],kotlin.jvm.functions.Function1)
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
kotlinx.coroutines.AwaitAll: java.lang.Object await(kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.ExclusiveAppComponent getExclusiveAppComponent()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] plus-kdPth3s(byte[],byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(byte[],int)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
io.flutter.embedding.engine.systemchannels.SettingsChannel: boolean hasNonlinearTextScalingSupport()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
kotlin.text.UStringsKt: java.lang.String toString-JSWoG40(long,int)
kotlin.UInt$Companion: UInt$Companion()
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.internal.LocalAtomicsKt: void LocalAtomicInt$annotations()
androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer: void onSessionFinished$lambda$2(androidx.window.area.WindowAreaControllerImpl$RearDisplaySessionConsumer)
androidx.activity.result.IntentSenderRequest$Companion$CREATOR$1: androidx.activity.result.IntentSenderRequest[] newArray(int)
kotlinx.coroutines.flow.FlowKt__LimitKt$emitAbort$1: FlowKt__LimitKt$emitAbort$1(kotlin.coroutines.Continuation)
kotlin.reflect.KCallable$DefaultImpls: void getVisibility$annotations()
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion()
io.flutter.embedding.android.FlutterFragmentActivity: void configureWindowForTransparency()
kotlinx.coroutines.flow.internal.NopCollector: NopCollector()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()
kotlinx.coroutines.DelayKt: kotlinx.coroutines.Delay getDelay(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.sync.SemaphoreImpl: boolean tryAcquire()
kotlin.UNumbersKt: int countLeadingZeroBits-VKZWuLQ(long)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.profileinstaller.ProfileInstallerInitializer: void lambda$installAfterDelay$1(android.content.Context)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: float getCurrentFraction()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.widget.AutoScrollHelper: boolean isEnabled()
kotlin.collections.MapsKt__MapsJVMKt: java.util.SortedMap toSortedMap(java.util.Map)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.OpenEndRange rangeUntil(double,double)
kotlinx.coroutines.NonCancellable: java.lang.Object join(kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: int count(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.versionedparcelable.VersionedParcel: void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.core.content.res.CamUtils: int intFromLStar(float)
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: java.util.Iterator invoke()
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAntiAlias(boolean)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$Api20Impl: java.lang.String getResultKey(android.app.RemoteInput)
kotlin.jvm.internal.InlineMarker: void afterInlineCall()
androidx.fragment.app.SpecialEffectsController: void processProgress(androidx.activity.BackEventCompat)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect: DefaultSpecialEffectsController$AnimationEffect(androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
kotlin.jvm.internal.Intrinsics$Kotlin: Intrinsics$Kotlin()
androidx.core.graphics.ColorKt: float component3(long)
androidx.window.layout.adapter.sidecar.SidecarAdapter: SidecarAdapter()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List buildListInternal(int,kotlin.jvm.functions.Function1)
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Object newFamily()
kotlinx.coroutines.channels.BroadcastCoroutine: kotlinx.coroutines.channels.BroadcastChannel get_channel()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: void invoke(kotlin.io.path.FileVisitorBuilder)
kotlin.jvm.functions.Function22: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentStore: void removeFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveCatching-JP2dKIU$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onLocationChanged(android.location.Location)
kotlin.random.Random$Default: boolean nextBoolean()
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.net.SocketAddress,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean all-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateBy(byte[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterFragment: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextSearchIndex(int)
androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)
kotlinx.coroutines.flow.AbstractFlow$collect$1: AbstractFlow$collect$1(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object maxOfWith-myNOsp4(int[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] asShortArray-rL5Bavg(short[])
kotlin.jvm.internal.ClassReference: java.lang.String getSimpleName()
androidx.core.app.NotificationManagerCompat$Api28Impl: NotificationManagerCompat$Api28Impl()
kotlin.collections.builders.ListBuilder$Itr: boolean hasNext()
kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int component3--ajY-9A(int[])
androidx.loader.content.AsyncTaskLoader: java.lang.Object loadInBackground()
kotlin.text.UStringsKt: java.lang.String toString-olVBNx4(short,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Iterable)
io.flutter.embedding.android.ExclusiveAppComponent: java.lang.Object getAppComponent()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge: java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.ranges.IntProgression: java.lang.String toString()
kotlinx.coroutines.selects.SelectImplementation: void update$atomicfu(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void sort-rL5Bavg(short[])
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.Fragment getItem(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-JQknh5Q(byte[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)
androidx.startup.AppInitializer: java.lang.Object initializeComponent(java.lang.Class)
androidx.window.embedding.SplitRule: boolean checkParentBounds$window_release(float,android.graphics.Rect)
io.flutter.util.ViewUtils: boolean hasChildViewOfType(android.view.View,java.lang.Class[])
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
kotlinx.coroutines.channels.BroadcastCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean isClosedForSend()
androidx.window.embedding.EmbeddingBackend$-CC: androidx.window.embedding.EmbeddingBackend getInstance(android.content.Context)
kotlin.jvm.internal.unsafe.MonitorKt: void monitorEnter(java.lang.Object)
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$any$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlin.sequences.IndexingSequence$iterator$1: IndexingSequence$iterator$1(kotlin.sequences.IndexingSequence)
kotlin.ranges.ULongRange: ULongRange(long,long)
kotlin.collections.builders.MapBuilder$Itr: int getLastIndex$kotlin_stdlib()
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Cipher)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
kotlin.collections.ArraysKt___ArraysKt: double averageOfInt(java.lang.Integer[])
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: SpecialEffectsController$Operation$LifecycleImpact(java.lang.String,int)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object findLast(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Object foldIndexed-bzxtMww(short[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlinx.coroutines.EventLoopImplBase: int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.InvokeOnCancelling: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.window.R$attr: R$attr()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(double[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.BlockRunner$cancel$1: BlockRunner$cancel$1(androidx.lifecycle.BlockRunner,kotlin.coroutines.Continuation)
androidx.fragment.app.ListFragment: void setListShown(boolean,boolean)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.os.ParcelCompat: java.util.List readParcelableList(android.os.Parcel,java.util.List,java.lang.ClassLoader,java.lang.Class)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: boolean addConditionally$atomicfu(java.lang.Object,java.util.concurrent.atomic.AtomicIntegerFieldUpdater,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.ChildHandle: kotlinx.coroutines.Job getParent()
androidx.core.view.ContentInfoCompat$CompatImpl: android.view.ContentInfo getWrapped()
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
kotlinx.coroutines.scheduling.TaskContextImpl: void afterTask()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.flutter.plugin.editing.TextEditingDelta: int getNewSelectionStart()
kotlin.collections.AbstractList: int getSize()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
androidx.lifecycle.LifecycleCoroutineScopeImpl: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.embedding.engine.loader.ResourceExtractor: void deleteFiles(java.lang.String,java.util.HashSet)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow scan(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: int getLastIndex(short[])
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$400(io.flutter.embedding.android.FlutterView)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: FlowKt__MigrationKt$delayFlow$1(long,kotlin.coroutines.Continuation)
kotlin.collections.builders.ListBuilder: boolean addAll(int,java.util.Collection)
androidx.window.layout.SafeWindowLayoutComponentProvider: androidx.window.core.ConsumerAdapter access$getConsumerAdapter$p(androidx.window.layout.SafeWindowLayoutComponentProvider)
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$9: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodIsActivityEmbeddedValid$1: java.lang.Object invoke()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin get(java.lang.Class)
androidx.core.view.ViewConfigurationCompat: boolean hasPermanentMenuKey(android.view.ViewConfiguration)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message)
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1: CollectionsKt__IterablesKt$Iterable$1(kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.lifecycle.GeneratedAdapter: void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] sortedArrayDescending-GBYM_sE(byte[])
androidx.core.app.ActivityOptionsCompat$Api23Impl: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)
kotlinx.coroutines.channels.BufferedChannel: kotlinx.coroutines.channels.ChannelSegment findSegmentSend(long,kotlinx.coroutines.channels.ChannelSegment)
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display getDisplay(int)
kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)
kotlin.collections.builders.MapBuilder: int[] access$getPresenceArray$p(kotlin.collections.builders.MapBuilder)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable)
kotlin.coroutines.SafeContinuation: SafeContinuation(kotlin.coroutines.Continuation,java.lang.Object)
androidx.window.core.ConsumerAdapter$ConsumerHandler: ConsumerAdapter$ConsumerHandler(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)
androidx.startup.AppInitializer: java.lang.Object doInitialize(java.lang.Class,java.util.Set)
kotlinx.coroutines.JobSupport: boolean start()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)
kotlin.time.Duration: long times-UwyO8pc(long,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt$splitToSequence$2: java.lang.String invoke(kotlin.ranges.IntRange)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List minus(java.lang.Iterable,java.lang.Iterable)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
kotlin.NumbersKt__FloorDivModKt: int floorDiv(int,short)
kotlin.collections.ArraysKt___ArraysKt: int maxByOrThrow(int[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ClassReference: java.util.HashMap access$getClassFqNames$cp()
androidx.activity.ComponentActivity$6: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.os.ContinuationOutcomeReceiver: void onError(java.lang.Throwable)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object component3(java.util.List)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxOrNull-QwZRm1k(long[])
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int,int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ConflatedBufferedChannel: ConflatedBufferedChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List load(java.lang.Class,java.lang.ClassLoader)
kotlin.collections.MapWithDefaultImpl: java.lang.Object get(java.lang.Object)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
androidx.core.view.ViewGroupKt: void plusAssign(android.view.ViewGroup,android.view.View)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Comparable minOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.graphics.RegionKt: android.graphics.Region plus(android.graphics.Region,android.graphics.Rect)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
kotlinx.coroutines.debug.internal.DebugCoroutineInfo: java.util.List getCreationStackTrace()
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable component5()
androidx.core.view.accessibility.AccessibilityManagerCompat$Api34Impl: boolean isRequestFromAccessibilityTool(android.view.accessibility.AccessibilityManager)
kotlin.ranges.CharRange: int hashCode()
kotlinx.coroutines.channels.ChannelSegment: void onCancelledRequest(int,boolean)
kotlin.collections.MovingSubList: void move(int,int)
kotlin.Result: boolean isFailure-impl(java.lang.Object)
kotlin.collections.MutableMapWithDefaultImpl: java.util.Set getKeys()
kotlin.time.AbstractDoubleTimeSource: double read()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldRightIndexed(char[],java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.LazyKt__LazyKt: java.lang.Object getValue(kotlin.Lazy,java.lang.Object,kotlin.reflect.KProperty)
androidx.versionedparcelable.VersionedParcel: void writeDouble(double,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setFlutterLoader(io.flutter.embedding.engine.loader.FlutterLoader)
kotlin.ULongArray: java.lang.Object[] toArray(java.lang.Object[])
kotlin.jvm.internal.ArrayDoubleIterator: double nextDouble()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.channels.BufferedChannelKt: long constructEBCompletedAndPauseFlag(long,boolean)
kotlin.jvm.internal.ArrayFloatIterator: ArrayFloatIterator(float[])
androidx.core.app.ActivityCompat$Api22Impl: android.net.Uri getReferrer(android.app.Activity)
androidx.core.view.NestedScrollingParent: void onStopNestedScroll(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)
kotlin.jvm.JvmClassMappingKt: boolean isArrayOf(java.lang.Object[])
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getConfirmLabel()
androidx.core.util.ObjectsCompat: ObjectsCompat()
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget: void release()
kotlinx.coroutines.JobSupport$onAwaitInternal$2: JobSupport$onAwaitInternal$2()
kotlin.ranges.OpenEndFloatRange: boolean equals(java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
android.support.v4.app.INotificationSideChannel$Default: INotificationSideChannel$Default()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
kotlinx.coroutines.flow.FlowKt__CollectKt$collect$3: FlowKt__CollectKt$collect$3(kotlin.jvm.functions.Function2)
kotlin.sequences.SequencesKt___SequencesKt: int sumOfInt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.StandaloneCoroutine: boolean handleJobException(java.lang.Throwable)
kotlin.ranges.UIntRange$Companion: UIntRange$Companion()
androidx.collection.SimpleArrayMap: int hashCode()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: ActivityResultContracts$OpenMultipleDocuments()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void setEnableCreationStackTraces(boolean)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void requestUsageTimeReport(android.app.PendingIntent)
androidx.fragment.app.strictmode.FragmentStrictMode: void setDefaultPolicy(androidx.fragment.app.strictmode.FragmentStrictMode$Policy)
kotlinx.coroutines.CancellableContinuationImpl: void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable)
kotlinx.coroutines.sync.SemaphoreImpl$onCancellationRelease$1: void invoke(java.lang.Throwable)
androidx.fragment.app.Fragment$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.lifecycle.LifecycleCoroutineScopeImpl: kotlin.coroutines.CoroutineContext getCoroutineContext()
kotlin.time.DurationKt: long getHours(long)
kotlin.ULong: boolean equals-impl(long,java.lang.Object)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object)
androidx.core.view.ViewGroupKt: void updateMargins$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object)
androidx.fragment.app.FragmentManager: void dispatchDestroy()
kotlin.text.StringsKt__StringsKt: java.lang.String commonPrefixWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.fragment.app.Fragment: int getPopEnterAnim()
kotlinx.coroutines.flow.FlowKt: java.lang.Object firstOrNull(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence)
kotlin.math.MathKt__MathJVMKt: double acos(double)
kotlin.reflect.KTypeProjection: KTypeProjection(kotlin.reflect.KVariance,kotlin.reflect.KType)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getReceiveSegment$FU$p()
androidx.core.view.MenuKt$iterator$1: MenuKt$iterator$1(android.view.Menu)
kotlin.collections.builders.MapBuilder$Companion: int access$computeHashSize(kotlin.collections.builders.MapBuilder$Companion,int)
androidx.collection.CircularIntArray: void removeFromStart(int)
androidx.core.graphics.drawable.DrawableCompat: DrawableCompat()
androidx.collection.SparseArrayCompat: boolean remove(int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$retry$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.strictmode.FragmentStrictMode$Policy: androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release()
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
com.getkeepsafe.relinker.ReLinker$Logger: void log(java.lang.String)
androidx.lifecycle.MediatorLiveData$Source: void plug()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
kotlinx.coroutines.channels.BufferedChannel: boolean isRendezvousOrUnlimited()
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: boolean cancel$default(kotlinx.coroutines.channels.BroadcastChannel,java.lang.Throwable,int,java.lang.Object)
kotlin.collections.builders.ListBuilder: int access$getLength$p(kotlin.collections.builders.ListBuilder)
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
kotlin.math.MathKt__MathJVMKt: int min(int,int)
androidx.core.os.HandlerCompat$Api28Impl: HandlerCompat$Api28Impl()
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle()
kotlin.jvm.JvmClassMappingKt: java.lang.Class getRuntimeClassOfKClassInstance(kotlin.reflect.KClass)
kotlin.internal.PlatformImplementationsKt: boolean apiVersionIsAtLeast(int,int,int)
kotlin.io.ByteStreamsKt: java.io.BufferedOutputStream buffered$default(java.io.OutputStream,int,int,java.lang.Object)
kotlinx.coroutines.internal.ConcurrentLinkedListKt: void loop$atomicfu$array(java.util.concurrent.atomic.AtomicReferenceArray,int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.core.app.ComponentActivity: boolean shouldSkipDump(java.lang.String[])
kotlin.collections.AbstractMap$keys$1: java.util.Iterator iterator()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager: void installDeferredComponent(int,java.lang.String)
androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)
kotlin.collections.ArraysKt___ArraysKt$withIndex$5: ArraysKt___ArraysKt$withIndex$5(long[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow transformWhile(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.customview.widget.ViewDragHelper: boolean isValidPointerForActionMove(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)
androidx.core.content.pm.ShortcutManagerCompat: ShortcutManagerCompat()
kotlin.UNumbersKt: int countTrailingZeroBits-VKZWuLQ(long)
kotlinx.coroutines.internal.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
kotlin.random.URandomKt: byte[] nextUBytes-Wvrt4B4(kotlin.random.Random,byte[],int,int)
kotlin.text.StringsKt__IndentKt$prependIndent$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: int sumBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: void onCancel(android.view.ViewGroup)
androidx.lifecycle.LifecycleDispatcher: void init(android.content.Context)
androidx.window.embedding.SplitController: void setSplitAttributesCalculator(kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: boolean none(kotlin.sequences.Sequence)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: AutoScrollHelper$ScrollAnimationRunnable(androidx.core.widget.AutoScrollHelper)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(float[])
androidx.loader.content.CursorLoader: void deliverResult(java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
kotlin.text.StringsKt___StringsKt: java.lang.Float minOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zip(java.lang.Iterable,java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: boolean[] plus(boolean[],boolean[])
kotlin.text.MatchResult$Destructured: java.lang.String component7()
kotlin.jvm.internal.PropertyReference0Impl: PropertyReference0Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: ChannelsKt__DeprecatedKt$count$1(kotlin.coroutines.Continuation)
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$6: int indexOf(double)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNot$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.core.util.LruCacheKt$lruCache$2: LruCacheKt$lruCache$2()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
androidx.core.util.SparseLongArrayKt$keyIterator$1: int nextInt()
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
androidx.window.area.WindowAreaController$Companion: void overrideDecorator(androidx.window.area.WindowAreaControllerDecorator)
kotlin.time.Duration$Companion: long getMilliseconds-UwyO8pc(int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)
kotlin.text.StringsKt___StringsKt: java.lang.Object foldRight(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.window.area.WindowAreaInfo: java.lang.String toString()
kotlin.collections.State: kotlin.collections.State[] $values()
kotlinx.coroutines.CancelHandler: CancelHandler()
androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)
kotlinx.coroutines.flow.FlowKt__CollectionKt$toCollection$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void lambda$onStarted$0(java.util.concurrent.Executor)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(java.lang.Object[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long)
kotlinx.coroutines.ChildHandleNode: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.common.PluginRegistry$ActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
androidx.customview.widget.ViewDragHelper$2: ViewDragHelper$2(androidx.customview.widget.ViewDragHelper)
androidx.activity.result.contract.ActivityResultContracts$PickContact: java.lang.Object parseResult(int,android.content.Intent)
androidx.activity.result.contract.ActivityResultContracts$PickMultipleVisualMedia: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
androidx.core.view.SoftwareKeyboardControllerCompat: SoftwareKeyboardControllerCompat(android.view.View)
androidx.window.embedding.RuleController: void setRules(java.util.Set)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfByte(kotlin.sequences.Sequence)
androidx.window.embedding.EmbeddingAdapter: int getVendorApiLevel()
kotlin.collections.MapWithDefaultImpl: boolean containsValue(java.lang.Object)
androidx.tracing.Trace: void setCounter(java.lang.String,int)
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext)
androidx.fragment.app.FragmentTransaction: FragmentTransaction(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader,androidx.fragment.app.FragmentTransaction)
kotlin.collections.AbstractMap$keys$1: boolean contains(java.lang.Object)
androidx.core.view.ViewGroupKt$children$1: java.util.Iterator iterator()
kotlin.collections.ArraysKt___ArraysKt: boolean any(boolean[])
androidx.loader.app.LoaderManagerImpl: boolean hasRunningLoaders()
kotlinx.coroutines.CompletableJob$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.CompletableJob,java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.jvm.internal.ArrayIterator: void remove()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterImageView)
androidx.lifecycle.viewmodel.R: R()
androidx.core.graphics.drawable.IconCompat$Api23Impl: IconCompat$Api23Impl()
kotlin.streams.jdk8.StreamsKt: java.util.stream.Stream asStream(kotlin.sequences.Sequence)
androidx.fragment.app.Fragment: Fragment()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character lastOrNull(char[])
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.livedata.core.ktx.R: R()
io.flutter.embedding.android.FlutterActivity: java.util.List getDartEntrypointArgs()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.window.embedding.SplitPlaceholderRule$Builder: androidx.window.embedding.SplitPlaceholderRule$Builder setTag(java.lang.String)
kotlin.collections.CollectionsKt___CollectionsKt: int indexOfFirst(java.util.List,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendRange(java.lang.StringBuilder,char[],int,int)
androidx.core.util.LongSparseArrayKt$keyIterator$1: boolean hasNext()
androidx.core.view.NestedScrollingChild: boolean hasNestedScrollingParent()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clone()
kotlinx.coroutines.internal.LimitedDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.core.widget.TextViewOnReceiveContentListener: androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
kotlin.TypeAliasesKt: void Comparator$annotations()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduceIndexed-EOyYB1Y(byte[],kotlin.jvm.functions.Function3)
io.flutter.util.HandlerCompat: HandlerCompat()
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt firstOrNull--ajY-9A(int[])
androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.EmptyIterator: void remove()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: void onKeyEventHandled(boolean)
kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,short)
androidx.core.view.ViewKt$postDelayed$runnable$1: void run()
androidx.lifecycle.LifecycleCoroutineScope: kotlinx.coroutines.Job launchWhenCreated(kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.OpenEndRange,int)
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager: boolean uninstallDeferredComponent(int,java.lang.String)
kotlinx.coroutines.internal.LimitedDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KCallable computeReflected()
kotlin.collections.CollectionsKt___CollectionsKt: double minOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
androidx.lifecycle.DefaultLifecycleObserverAdapter: DefaultLifecycleObserverAdapter(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.String invoke(java.lang.String)
androidx.fragment.app.FragmentStateManager: void ensureInflatedView()
kotlin.collections.ArraysKt__ArraysKt: java.lang.String contentDeepToString(java.lang.Object[])
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
kotlin.text.DelimitedRangesSequence$iterator$1: int getNextSearchIndex()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View,int)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.CompletableDeferred,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__EmittersKt$invokeSafely$1: FlowKt__EmittersKt$invokeSafely$1(kotlin.coroutines.Continuation)
androidx.startup.InitializationProvider: InitializationProvider()
kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1: FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: int getHeight()
kotlin.collections.ArraysKt___ArraysKt: double last(double[])
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.core.view.NestedScrollingChild2: void stopNestedScroll(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.core.content.pm.ShortcutInfoCompat: int getRank()
kotlin.collections.ArrayDeque: int decremented(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] toUIntArray(int[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.activity.result.contract.ActivityResultContracts$OpenDocument: android.content.Intent createIntent(android.content.Context,java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: java.lang.Comparable maxOf(java.lang.Comparable,java.lang.Comparable[])
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: java.lang.Object get(int)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.window.embedding.EmbeddingBackend$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
androidx.viewpager.widget.ViewPager: void dataSetChanged()
kotlin.collections.ArraysKt___ArraysKt: short first(short[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding: FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding(android.app.Service,androidx.lifecycle.Lifecycle)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal minus(java.math.BigDecimal,java.math.BigDecimal)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
kotlin.text.StringsKt___StringsKt: java.lang.String takeLast(java.lang.String,int)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String replace(java.lang.String,char,char,boolean)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.core.FailedSpecification: java.lang.String getTag()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List runningReduce(java.lang.Iterable,kotlin.jvm.functions.Function2)
androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
kotlin.collections.builders.ListBuilder: void ensureExtraCapacity(int)
kotlinx.coroutines.AwaitKt$joinAll$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.os.LocaleListCompat: java.util.Locale forLanguageTagCompat(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
androidx.profileinstaller.ProfileTranscoder: byte[] createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData)
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
kotlin.UnsignedKt: long doubleToULong(double)
kotlin.UNumbersKt: int takeHighestOneBit-WZ4Q5Ns(int)
androidx.fragment.app.FragmentController: void dispatchStop()
androidx.lifecycle.AbstractSavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api33Impl: int getDisplayId(android.view.accessibility.AccessibilityWindowInfo)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(short[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()
kotlin.DeepRecursiveScope: java.lang.Object callRecursive(kotlin.DeepRecursiveFunction,java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$updateCellReceive(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyOfRange(byte[],int,int)
kotlin.collections.ArraysKt___ArraysKt: void forEach(double[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: boolean tryEmitNoCollectorsLocked(java.lang.Object)
androidx.activity.OnBackPressedDispatcher$4: void invoke()
androidx.lifecycle.MediatorLiveData: MediatorLiveData()
androidx.core.app.RemoteInput: java.lang.CharSequence getLabel()
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getLastObservedThreadState()
kotlin.io.FilesKt__UtilsKt: boolean endsWith(java.io.File,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: int single(int[])
kotlinx.coroutines.channels.BufferedChannel$SendBroadcast: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: ResourcesCompat$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration,android.content.res.Resources$Theme)
kotlin.UInt: long plus-VKZWuLQ(int,long)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
kotlinx.coroutines.NonCancellable: void cancel(java.util.concurrent.CancellationException)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(float[],kotlin.jvm.functions.Function1)
androidx.core.os.LocaleListCompat: java.util.Locale get(int)
androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int)
androidx.window.embedding.SplitRule$FinishBehavior: int getValue$window_release()
kotlin.KotlinNothingValueException: KotlinNothingValueException(java.lang.String)
androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path moveTo(java.nio.file.Path,java.nio.file.Path,boolean)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.core.provider.FontRequestWorker$3: java.lang.Object call()
androidx.core.text.util.LocalePreferences: java.lang.String getHourCycle(java.util.Locale)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])
kotlin.coroutines.ContinuationKt$Continuation$1: ContinuationKt$Continuation$1(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function1)
androidx.core.view.ViewStructureCompat$Api23Impl: void setDimens(android.view.ViewStructure,int,int,int,int,int,int)
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: void onEnd(android.view.WindowInsetsAnimation)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion()
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
kotlin.io.FilesKt__FileReadWriteKt: java.io.FileInputStream inputStream(java.io.File)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.internal.SegmentOrClosed: kotlinx.coroutines.internal.Segment getSegment-impl(java.lang.Object)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()
kotlin.io.LinesSequence: LinesSequence(java.io.BufferedReader)
kotlinx.coroutines.Dispatchers: void getDefault$annotations()
androidx.window.area.WindowAreaControllerImpl: void access$startRearDisplayMode(androidx.window.area.WindowAreaControllerImpl,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(byte[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.Delay$DefaultImpls: java.lang.Object delay(kotlinx.coroutines.Delay,long,kotlin.coroutines.Continuation)
kotlin.UByteArray: int hashCode-impl(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-Q6IL4kU(short[],kotlin.ranges.IntRange)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
androidx.core.app.NotificationCompat$CallStyle: java.lang.String getClassName()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)
androidx.window.java.area.WindowAreaControllerCallbackAdapter: void transferActivityToWindowArea(android.os.Binder,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback)
kotlin.collections.ArraysKt___ArraysJvmKt: double[] plus(double[],double)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend: void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.internal.InlineList: boolean equals-impl(java.lang.Object,java.lang.Object)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
kotlin.sequences.TakeWhileSequence$iterator$1: TakeWhileSequence$iterator$1(kotlin.sequences.TakeWhileSequence)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
kotlin.collections.builders.MapBuilderValues: MapBuilderValues(kotlin.collections.builders.MapBuilder)
kotlin.collections.ArraysKt___ArraysKt: int maxOrThrow(int[])
kotlin.io.ExposingBufferByteArrayOutputStream: byte[] getBuffer()
androidx.core.util.SizeKt: float component1(android.util.SizeF)
androidx.core.view.WindowInsetsCompat: int getStableInsetBottom()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable withIndex(double[])
androidx.core.view.contentcapture.ContentCaptureSessionCompat$Api34Impl: ContentCaptureSessionCompat$Api34Impl()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7$2: FlowKt__ZipKt$combineTransform$7$2(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.plugin.common.ErrorLogResult: void success(java.lang.Object)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
kotlin.random.KotlinRandom: double nextDouble()
kotlin.collections.SetsKt__SetsKt: java.util.Set mutableSetOf()
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$1: java.lang.Object invoke(int,kotlin.coroutines.Continuation)
androidx.core.util.Consumer: void accept(java.lang.Object)
androidx.window.area.WindowAreaSessionPresenter: void setContentView(android.view.View)
androidx.core.content.res.TypedArrayKt: float getFloatOrThrow(android.content.res.TypedArray,int)
androidx.core.location.LocationCompat$Api26Impl: LocationCompat$Api26Impl()
kotlin.collections.ArraysKt___ArraysKt: long component4(long[])
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1: java.lang.Object invoke(java.lang.Object)
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: java.lang.Object invoke(java.lang.Object)
kotlin.text.CharsKt__CharKt: int digitToInt(char)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.provider.SelfDestructiveThread: void onDestruction()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedWith(java.lang.Iterable,java.util.Comparator)
androidx.core.util.Pair: androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri)
kotlin.collections.ArrayDeque: void clear()
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
kotlin.io.path.PathTreeWalk: java.util.Iterator iterator()
androidx.core.net.TrafficStatsCompat: int getThreadStatsTag()
kotlin.comparisons.UComparisonsKt___UComparisonsKt: byte minOf-b33U2AM(byte,byte,byte)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(byte[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
androidx.core.net.UriKt: android.net.Uri toUri(java.lang.String)
org.intellij.lang.annotations.MagicConstant: long[] intValues()
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
androidx.fragment.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
kotlin.time.TimedValue: long getDuration-UwyO8pc()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
androidx.core.graphics.ColorKt: int toColorInt(long)
androidx.core.view.MenuHost: void addMenuProvider(androidx.core.view.MenuProvider)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List flatMap(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StartedLazily$command$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.random.Random: long nextLong()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.SequencesKt__SequenceBuilderKt: java.util.Iterator iterator(kotlin.jvm.functions.Function2)
kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)
kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendLine(java.lang.StringBuilder,short)
kotlin.collections.unsigned.UArraysKt___UArraysKt: float maxOf-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence)
kotlin.time.ComparableTimeMark: long minus-UwyO8pc(kotlin.time.ComparableTimeMark)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.arch.core.internal.SafeIterableMap$SupportRemove: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.content.pm.ShortcutManagerCompat$Api25Impl: ShortcutManagerCompat$Api25Impl()
kotlinx.coroutines.ChildHandle$DefaultImpls: void getParent$annotations()
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
org.jetbrains.annotations.Nullable: java.lang.String value()
kotlin.ranges.RangesKt___RangesKt: int random(kotlin.ranges.IntRange)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)
androidx.core.service.quicksettings.TileServiceCompat$Api24Impl: TileServiceCompat$Api24Impl()
kotlin.time.MonotonicTimeSource: kotlin.time.ComparableTimeMark markNow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
kotlin.jvm.internal.AdaptedFunctionReference: AdaptedFunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$FrameCallback access$202(io.flutter.view.VsyncWaiter,io.flutter.view.VsyncWaiter$FrameCallback)
androidx.window.embedding.EmbeddingBackend$Companion: EmbeddingBackend$Companion()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable,boolean)
kotlin.text.StringsKt___StringsKt: kotlin.collections.Grouping groupingBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: short[] reversedArray(short[])
androidx.core.graphics.WeightTypefaceApi21: android.graphics.Typeface create(long)
androidx.profileinstaller.ProfileTranscoder: void skipInlineCache(java.io.InputStream)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.SafeWindowExtensionsProvider: SafeWindowExtensionsProvider(java.lang.ClassLoader)
kotlin.UByte: int compareTo-7apg3OU(byte,byte)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1: BufferedChannel$receiveCatchingOnNoWaiterSuspend$1(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void hide(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(long[],java.util.Comparator)
kotlinx.coroutines.channels.BufferedChannel: void markCancellationStarted()
kotlinx.coroutines.channels.ChannelKt: java.lang.Object onFailure-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.view.NestedScrollingParent: int getNestedScrollAxes()
kotlinx.coroutines.debug.internal.DebugProbesImpl$Installations$kotlinx$VolatileWrapper: DebugProbesImpl$Installations$kotlinx$VolatileWrapper()
io.flutter.embedding.android.FlutterFragment: java.lang.String getInitialRoute()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
kotlinx.coroutines.flow.SharedFlowImpl: void access$cancelEmitter(kotlinx.coroutines.flow.SharedFlowImpl,kotlinx.coroutines.flow.SharedFlowImpl$Emitter)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
androidx.core.view.autofill.AutofillIdCompat: android.view.autofill.AutofillId toAutofillId()
androidx.window.area.WindowAreaControllerImpl: java.lang.String access$getTAG$cp()
kotlin.collections.ArrayDeque: java.lang.Object removeFirstOrNull()
androidx.core.os.ParcelableCompat: ParcelableCompat()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)
kotlin.UByteArrayKt: byte[] UByteArray(int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlin.text.StringsKt__StringsKt: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean isCircular()
kotlin.UShortArray: boolean isEmpty()
androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
androidx.core.util.Predicate$-CC: androidx.core.util.Predicate $default$or(androidx.core.util.Predicate,androidx.core.util.Predicate)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object component3(java.lang.Object[])
kotlin.io.FilesKt__FilePathComponentsKt: kotlin.io.FilePathComponents toComponents(java.io.File)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.CharSequence getInitialSelectedText(android.view.inputmethod.EditorInfo,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfFirst-MShoTSo(long[],kotlin.jvm.functions.Function1)
androidx.fragment.app.Fragment: java.lang.String toString()
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key()
kotlin.text.StringsKt___StringsKt: java.util.List zipWithNext(java.lang.CharSequence)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.math.BigDecimal sumOfBigDecimal(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlin.text.Regex: java.lang.String getPattern()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flowOf(java.lang.Object)
androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel map(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.core.content.res.CamColor: androidx.core.content.res.CamColor fromColor(int)
androidx.lifecycle.SavedStateHandleSupport: androidx.lifecycle.SavedStateHandle createSavedStateHandle(androidx.savedstate.SavedStateRegistryOwner,androidx.lifecycle.ViewModelStoreOwner,java.lang.String,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEditable(boolean)
org.jetbrains.annotations.Debug: Debug()
kotlin.collections.builders.ListBuilder: ListBuilder()
kotlin.collections.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.coroutines.CoroutineContext$plus$1: CoroutineContext$plus$1()
androidx.lifecycle.ReportFragment$Companion: void injectIfNeededIn(android.app.Activity)
kotlin.time.TimeSource$Monotonic: java.lang.String toString()
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.activity.result.contract.ActivityResultContracts$TakePicture: android.content.Intent createIntent(android.content.Context,android.net.Uri)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void afterTask(int)
kotlinx.coroutines.channels.ActorCoroutine: boolean handleJobException(java.lang.Throwable)
kotlinx.coroutines.channels.BufferedChannelKt: int access$getEXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS$p()
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(int[],java.lang.Object[])
androidx.window.area.WindowAreaControllerImpl$presentContentOnWindowArea$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.net.MailTo: java.lang.String getBody()
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String,java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence onEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
kotlin.UInt: int unbox-impl()
kotlin.LateinitKt: void isInitialized$annotations(kotlin.reflect.KProperty0)
androidx.fragment.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: CancellableFlowImpl$collect$2$emit$1(kotlinx.coroutines.flow.CancellableFlowImpl$collect$2,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.ranges.URangesKt___URangesKt: boolean contains-Gab390E(kotlin.ranges.ULongRange,int)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
kotlinx.coroutines.AbstractTimeSource: AbstractTimeSource()
androidx.core.provider.DocumentsContractCompat: boolean removeDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri)
androidx.core.app.Person: android.os.Bundle toBundle()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.getkeepsafe.relinker.ApkLibraryInstaller: java.lang.String[] sourceDirectories(android.content.Context)
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl: void setLinkUri(android.net.Uri)
androidx.annotation.RequiresPermission: boolean conditional()
kotlin.collections.MapsKt__MapsKt: java.util.Map filter(java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.internal.UndispatchedContextCollector: UndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.flow.FlowKt__DelayKt$timeoutInternal$1: FlowKt__DelayKt$timeoutInternal$1(long,kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.io.path.CopyActionResult: kotlin.io.path.CopyActionResult valueOf(java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: int count(float[],kotlin.jvm.functions.Function1)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
kotlin.concurrent.TimersKt: java.util.Timer fixedRateTimer$default(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
kotlinx.coroutines.flow.CancellableFlowImpl: CancellableFlowImpl(kotlinx.coroutines.flow.Flow)
androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)
kotlin.text.StringsKt__StringsKt: java.lang.String commonSuffixWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.ChannelFlowBuilder: ChannelFlowBuilder(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.StandardKt__StandardKt: java.lang.Object run(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.collections.builders.MapBuilder: int findKey(java.lang.Object)
kotlin.text.StringsKt__StringsJVMKt: int nativeIndexOf(java.lang.String,char,int)
kotlin.Triple: java.lang.Object getSecond()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()
androidx.profileinstaller.ProfileTranscoder: void setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData)
androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $values()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object elementAtOrNull(java.lang.Object[],int)
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String)
androidx.viewpager.widget.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
kotlin.Result: boolean equals-impl(java.lang.Object,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: android.view.animation.Interpolator getInterpolator()
androidx.core.location.LocationCompat$Api29Impl: void removeSpeedAccuracy(android.location.Location)
androidx.window.area.utils.DeviceMetrics: java.lang.String toString()
kotlin.UInt: int minus-xj2QHRw(int,short)
androidx.core.view.ViewCompat: int generateViewId()
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void setOption(int,java.lang.Object)
io.flutter.plugin.editing.ScribePlugin: boolean isStylusHandwritingAvailable()
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
kotlin.random.XorWowRandom$Companion: XorWowRandom$Companion()
kotlinx.coroutines.EventLoop_commonKt: long delayToNanos(long)
kotlin.math.MathKt__MathJVMKt: double cos(double)
kotlin.collections.ArraysKt___ArraysKt: int sumOfInt(short[],kotlin.jvm.functions.Function1)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KMutableProperty2 mutableProperty2(kotlin.jvm.internal.MutablePropertyReference2)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
kotlin.text.StringsKt___StringsKt: java.lang.Double maxOfOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3)
kotlin.collections.builders.MapBuilder: void access$removeKeyAt(kotlin.collections.builders.MapBuilder,int)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int lastIndexOf-uWY9BYg(int[],int)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(long,android.graphics.SurfaceTexture)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
kotlin.text.StringsKt___StringsKt: java.util.Map groupBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion: androidx.window.layout.adapter.sidecar.SidecarWindowBackend getInstance(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOrThrow(java.lang.Comparable[])
androidx.collection.LongSparseArray: long keyAt(int)
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: java.lang.Integer invoke(java.lang.Object)
kotlin.collections.builders.MapBuilder$Companion: int computeHashSize(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduceRightIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysJvmKt: int elementAt(int[],int)
kotlinx.coroutines.flow.internal.ChannelFlow: ChannelFlow(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.NumbersKt__FloorDivModKt: long mod(short,long)
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
androidx.core.app.LocaleManagerCompat: androidx.core.os.LocaleListCompat getSystemLocales(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: int count(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean any(long[],kotlin.jvm.functions.Function1)
kotlin.sequences.SubSequence: SubSequence(kotlin.sequences.Sequence,int,int)
androidx.fragment.app.Fragment$SavedState$1: androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.loader.content.Loader: void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
kotlin.jvm.internal.MutablePropertyReference2: MutablePropertyReference2(java.lang.Class,java.lang.String,java.lang.String,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextSelectable(boolean)
kotlin.io.path.ExceptionsCollector: java.nio.file.Path getPath()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineFromSuspendFunction$1(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ChannelsKt: java.lang.Object access$emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentHostCallback: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
kotlin.time.Duration: kotlin.time.DurationUnit getStorageUnit-impl(long)
kotlinx.coroutines.flow.ChannelFlowBuilder: kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow)
kotlin.NumbersKt__BigDecimalsKt: java.math.BigDecimal toBigDecimal(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.LayoutInflaterCompat: androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
kotlin.math.Constants: Constants()
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: void releasePermission()
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOf-3uqUaXg(long[],long)
androidx.core.telephony.TelephonyManagerCompat$Api26Impl: java.lang.String getImei(android.telephony.TelephonyManager)
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createBigContentView()
androidx.core.os.LocaleListCompat$Api21Impl: LocaleListCompat$Api21Impl()
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(int[],kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1: TextViewKt$addTextChangedListener$textWatcher$1(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterIndexed$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.app.NotificationCompat$Builder$Api23Impl: NotificationCompat$Builder$Api23Impl()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat getIcon()
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1$emit$1: FlowKt__TransformKt$runningReduce$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1,kotlin.coroutines.Continuation)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean contains-VKZWuLQ(long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection flatMapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt___MapsJvmKt: java.util.Map$Entry minWith(java.util.Map,java.util.Comparator)
androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setConversationId(java.lang.String,java.lang.String)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object)
androidx.fragment.app.FragmentStateManager: void resume()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitRule$FinishBehavior getFinishPrimaryWithSecondary()
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void serviceStartReceived()
kotlinx.coroutines.flow.FlowKt__CollectionKt: java.lang.Object toSet$default(kotlinx.coroutines.flow.Flow,java.util.Set,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: boolean isCancelled()
kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$2: StreamsKt$asSequence$$inlined$Sequence$2(java.util.stream.IntStream)
androidx.collection.CircularArray: void addLast(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder,int)
androidx.viewpager.widget.ViewPager: void onAttachedToWindow()
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core()
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object waitUntilSelected(kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.core.content.ContentResolverCompat: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)
androidx.versionedparcelable.VersionedParcel: double readDouble(double,int)
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder renderMode(io.flutter.embedding.android.RenderMode)
kotlinx.coroutines.channels.ReceiveChannel: void cancel()
androidx.core.os.BundleCompat$Api33Impl: java.util.ArrayList getParcelableArrayList(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.core.graphics.CanvasKt: void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] sortedArray-QwZRm1k(long[])
androidx.window.layout.adapter.sidecar.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlin.text.StringsKt__StringsJVMKt: byte[] encodeToByteArray(java.lang.String)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence shuffled(kotlin.sequences.Sequence,kotlin.random.Random)
kotlin.time.Duration: double getInHours-impl(long)
androidx.fragment.app.Fragment$1: Fragment$1(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOf(float[],kotlin.jvm.functions.Function1)
androidx.activity.contextaware.ContextAwareHelper: void clearAvailableContext()
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
androidx.core.location.LocationCompat: boolean hasMslAltitudeAccuracy(android.location.Location)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-QwZRm1k(long[])
kotlin.ranges.RangesKt___RangesKt: boolean contains(kotlin.ranges.LongRange,byte)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
kotlin.collections.SlidingWindowKt$windowedIterator$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.DisplayCompat$ModeCompat: int getPhysicalHeight()
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate: void asyncWaitForVsync(long)
kotlin.random.AbstractPlatformRandom: float nextFloat()
io.flutter.embedding.android.KeyboardManager$CharacterCombiner: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldShowRequestPermissionRationale(java.lang.String)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: FlowKt__CountKt$count$2(kotlin.jvm.internal.Ref$IntRef)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(boolean[],kotlin.jvm.functions.Function1)
androidx.core.content.ContentProviderCompat: ContentProviderCompat()
kotlin.text.StringsKt__StringsKt$splitToSequence$2: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedByDescending(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.collection.MapCollections: void colPut(java.lang.Object,java.lang.Object)
androidx.core.graphics.RectKt: android.graphics.Rect times(android.graphics.Rect,int)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
androidx.fragment.app.ListFragment$1: ListFragment$1(androidx.fragment.app.ListFragment)
kotlin.jvm.internal.FunctionAdapter: kotlin.Function getFunctionDelegate()
kotlin.collections.ArraysKt___ArraysKt: short getOrElse(short[],int,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.SharedFlowImpl: long tryPeekLocked(kotlinx.coroutines.flow.SharedFlowSlot)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.LongProgression downTo(long,byte)
androidx.core.content.res.ColorStateListInflaterCompat: ColorStateListInflaterCompat()
org.jetbrains.annotations.Nls$Capitalization: Nls$Capitalization(java.lang.String,int)
io.flutter.plugin.editing.TextEditingDelta: int getDeltaEnd()
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void performAttach()
kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()
androidx.core.os.HandlerCompat$Api28Impl: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)
androidx.core.location.LocationManagerCompat$LocationListenerTransport: androidx.core.location.LocationManagerCompat$LocationListenerKey getKey()
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact()
kotlin.math.MathKt__MathJVMKt: int getAbsoluteValue(int)
androidx.core.location.LocationManagerCompat$GnssStatusTransport: LocationManagerCompat$GnssStatusTransport(androidx.core.location.GnssStatusCompat$Callback)
androidx.fragment.app.FragmentController: void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)
kotlin.ResultKt: java.lang.Object onFailure(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.app.RemoteInput: java.lang.String getResultKey()
androidx.lifecycle.viewmodel.ViewModelInitializer: ViewModelInitializer(java.lang.Class,kotlin.jvm.functions.Function1)
kotlin.ResultKt: java.lang.Object getOrThrow(java.lang.Object)
androidx.core.util.Predicate: boolean test(java.lang.Object)
androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int describeContents()
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte find(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNotNull(kotlinx.coroutines.channels.ReceiveChannel)
kotlinx.coroutines.channels.BroadcastCoroutine: void onCompleted(kotlin.Unit)
androidx.lifecycle.ProcessLifecycleOwner: void activityStopped$lifecycle_process_release()
kotlin.collections.ArraysKt___ArraysKt: double minOf(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationChannelGroupCompat: android.app.NotificationChannelGroup getNotificationChannelGroup()
kotlin.io.FilesKt__FileReadWriteKt: void appendText(java.io.File,java.lang.String,java.nio.charset.Charset)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(long[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.tracing.Trace: void beginSection(java.lang.String)
androidx.window.layout.adapter.extensions.MulticastConsumer: void accept(java.lang.Object)
kotlinx.coroutines.JobKt__JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlin.sequences.SequencesKt__SequenceBuilderKt: SequencesKt__SequenceBuilderKt()
kotlinx.coroutines.internal.SegmentOrClosed: kotlinx.coroutines.internal.SegmentOrClosed box-impl(java.lang.Object)
androidx.activity.contextaware.ContextAwareHelper: android.content.Context peekAvailableContext()
kotlinx.coroutines.flow.FlowKt__ReduceKt$first$$inlined$collectWhile$2: FlowKt__ReduceKt$first$$inlined$collectWhile$2(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$ObjectRef)
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin)
kotlin.collections.ArraysKt___ArraysJvmKt: int binarySearch$default(int[],int,int,int,int,java.lang.Object)
kotlin.time.Duration: void getNanosecondsComponent$annotations()
kotlinx.coroutines.sync.SemaphoreImpl: void release()
androidx.core.net.TrafficStatsCompat$Api24Impl: void untagDatagramSocket(java.net.DatagramSocket)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.JobIntentService$JobWorkEnqueuer: JobIntentService$JobWorkEnqueuer(android.content.Context,android.content.ComponentName,int)
androidx.fragment.app.FragmentActivity: void onResume()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List plus(java.lang.Iterable,java.lang.Object[])
kotlinx.coroutines.flow.internal.DownstreamExceptionContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.collections.ArraysKt___ArraysKt: short last(short[])
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
kotlin.collections.builders.MapBuilder: void clear()
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3$2(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function6)
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(double[])
kotlinx.coroutines.flow.FlowKt__DelayKt$fixedPeriodTicker$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext)
androidx.core.app.NotificationCompat$Builder$Api24Impl: android.widget.RemoteViews createBigContentView(android.app.Notification$Builder)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.io.FilesKt__FileReadWriteKt: void writeBytes(java.io.File,byte[])
kotlinx.coroutines.channels.ProduceKt$awaitClose$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationChannelCompat: android.app.NotificationChannel getNotificationChannel()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$withIndex$1: ChannelsKt__DeprecatedKt$withIndex$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getLabel()
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
androidx.window.core.ConsumerAdapter$createSubscriptionNoActivity$1: ConsumerAdapter$createSubscriptionNoActivity$1(java.lang.reflect.Method,java.lang.Object,java.lang.Object)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowAction(java.lang.String)
kotlin.text.StringsKt___StringsKt: java.util.List mapIndexed(java.lang.CharSequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.BufferedChannelKt: kotlinx.coroutines.internal.Symbol access$getDONE_RCV$p()
io.flutter.plugin.platform.PlatformViewsController$1: long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached()
kotlinx.coroutines.CancellableContinuationImpl: void resumeWith(java.lang.Object)
androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)
androidx.core.os.ParcelCompat$Api33Impl: java.util.HashMap readHashMap(android.os.Parcel,java.lang.ClassLoader,java.lang.Class,java.lang.Class)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.math.BigInteger sumOfBigInteger(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.DisposeOnCancel: void invoke(java.lang.Throwable)
kotlin.jvm.internal.ClassReference: java.util.Map access$getFUNCTION_CLASSES$cp()
kotlinx.coroutines.DispatchedCoroutine: boolean tryResume()
androidx.window.layout.util.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
kotlin.text.DelimitedRangesSequence$iterator$1: void calcNext()
kotlinx.coroutines.CoroutineContextKt$foldCopies$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float lastOrNull(float[])
androidx.core.app.AlarmManagerCompat: AlarmManagerCompat()
io.flutter.embedding.engine.plugins.service.ServicePluginBinding: void addOnModeChangeListener(io.flutter.embedding.engine.plugins.service.ServiceAware$OnModeChangeListener)
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.fragment.app.FragmentManager: void cleanupExec()
androidx.activity.EdgeToEdgeApi26: EdgeToEdgeApi26()
io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler: boolean isStylusHandwritingAvailable()
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(float[],float[])
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
kotlin.jvm.internal.Intrinsics: void reifiedOperationMarker(int,java.lang.String)
androidx.core.view.MenuCompat$Api28Impl: void setGroupDividerEnabled(android.view.Menu,boolean)
kotlinx.coroutines.channels.BufferedChannel: void onClosedIdempotent()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOfOrNull(double[],kotlin.jvm.functions.Function1)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
kotlin.jvm.functions.Function20: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.loader.content.Loader: void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getExtension(java.nio.file.Path)
kotlin.text.Regex$findAll$1: java.lang.Object invoke()
androidx.lifecycle.ReportFragment: void onPause()
androidx.core.util.SizeFCompat: int hashCode()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend access$getEmbeddingBackend$p(androidx.window.embedding.SplitController)
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
androidx.fragment.app.Fragment: boolean isMenuVisible()
androidx.fragment.app.FragmentLayoutInflaterFactory: FragmentLayoutInflaterFactory(androidx.fragment.app.FragmentManager)
kotlin.io.ByteStreamsKt: java.io.BufferedInputStream buffered$default(java.io.InputStream,int,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(float[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupBy(boolean[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlin.time.TimedValue: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.core.app.NotificationCompat$BigTextStyle: void addCompatExtras(android.os.Bundle)
kotlin.ranges.UIntProgressionIterator: void remove()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow unsafeTransform(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
io.flutter.embedding.android.FlutterActivity: void onStart()
kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.UByteArray: boolean add-7apg3OU(byte)
kotlin.io.path.PathTreeWalk: java.nio.file.LinkOption[] access$getLinkOptions(kotlin.io.path.PathTreeWalk)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinct(short[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getColumnCount()
kotlin.collections.builders.SerializedMap: void writeExternal(java.io.ObjectOutput)
kotlin.text.UStringsKt: long toULong(java.lang.String)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1)
androidx.lifecycle.ProcessLifecycleOwner: ProcessLifecycleOwner()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)
androidx.arch.core.executor.TaskExecutor: boolean isMainThread()
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean none-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.UByte: int toInt-impl(byte)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.SemaphoreKt: kotlinx.coroutines.internal.Symbol access$getTAKEN$p()
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$3: java.nio.file.FileVisitResult invoke(java.nio.file.Path,java.lang.Exception)
kotlin.collections.ArraysKt___ArraysKt: void reverse(int[],int,int)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Object minBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer: void scheduleFrame()
androidx.core.view.ViewGroupKt$descendants$1$1: ViewGroupKt$descendants$1$1()
kotlin.collections.AbstractList$Companion: AbstractList$Companion()
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
kotlin.collections.MapsKt__MapsKt: java.util.Map mutableMapOf(kotlin.Pair[])
kotlin.collections.SetsKt__SetsKt: java.util.LinkedHashSet linkedSetOf(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.BufferedChannel: void loop$atomicfu(java.util.concurrent.atomic.AtomicLongFieldUpdater,kotlin.jvm.functions.Function1,java.lang.Object)
io.flutter.view.AccessibilityBridge: int access$7400()
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents: ActivityResultContracts$GetMultipleContents()
androidx.core.location.LocationManagerCompat$Api19Impl: boolean tryRequestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationListenerCompat,android.os.Looper)
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.io.encoding.EncodeOutputStream: void write(byte[],int,int)
androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$2: java.lang.Object invoke(java.lang.Object)
androidx.core.util.SparseBooleanArrayKt: void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray)
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.SortedSet toSortedSet(long[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(float[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.core.view.ViewGroupKt$iterator$1: ViewGroupKt$iterator$1(android.view.ViewGroup)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1: ImageDecoderKt$decodeDrawable$1(kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(short[],java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.StandardKt__SynchronizedKt: StandardKt__SynchronizedKt()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte component5-GBYM_sE(byte[])
kotlinx.coroutines.CoroutineScopeKt: void ensureActive(kotlinx.coroutines.CoroutineScope)
kotlin.ranges.UIntRange: kotlin.ranges.UIntRange access$getEMPTY$cp()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
kotlin.ArrayIntrinsicsKt: java.lang.Object[] emptyArray()
androidx.core.app.SharedElementCallback: void onRejectSharedElements(java.util.List)
androidx.window.layout.adapter.sidecar.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.adapter.sidecar.SidecarAdapter)
kotlin.contracts.ContractBuilder: kotlin.contracts.ReturnsNotNull returnsNotNull()
kotlinx.coroutines.flow.FlowKt: java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.window.area.WindowAreaControllerImpl: kotlinx.coroutines.flow.Flow getWindowAreaInfos()
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: java.lang.String toString()
kotlinx.coroutines.internal.OnDemandAllocatingPool: boolean allocate()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Object recoverAndThrow$$forInline(java.lang.Throwable,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment,boolean)
androidx.arch.core.R: R()
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterFragmentActivity$NewEngineIntentBuilder initialRoute(java.lang.String)
androidx.window.layout.SafeWindowLayoutComponentProvider: boolean isMethodWindowLayoutInfoListenerJavaConsumerValid()
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: void invoke(java.lang.Throwable)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int getSize()
kotlin.collections.UCollectionsKt___UCollectionsKt: int[] toUIntArray(java.util.Collection)
kotlin.collections.ArraysKt___ArraysKt: boolean component2(boolean[])
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object findLast(java.util.List,kotlin.jvm.functions.Function1)
kotlin.collections.AbstractSet: AbstractSet()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: int lastIndexOf(java.lang.Object)
kotlinx.coroutines.JobSupport: void registerSelectForOnJoin(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
kotlinx.coroutines.sync.MutexImpl: java.lang.Object onLockProcessResult(java.lang.Object,java.lang.Object)
androidx.activity.ComponentDialog: void onStart()
kotlin.text.UStringsKt: kotlin.UByte toUByteOrNull(java.lang.String,int)
io.flutter.plugin.platform.SurfaceProducerPlatformViewRenderTarget: long getId()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float,float,float)
androidx.activity.EdgeToEdge: void getDefaultLightScrim$annotations()
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
kotlin.sequences.EmptySequence: kotlin.sequences.Sequence drop(int)
androidx.core.location.LocationManagerCompat$CancellableLocationListener: LocationManagerCompat$CancellableLocationListener(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.annotation.Retention: kotlin.annotation.AnnotationRetention value()
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.StackTraceElement getStackTraceElement()
androidx.core.provider.DocumentsContractCompat: android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)
androidx.core.graphics.RectKt: android.graphics.Region minus(android.graphics.Rect,android.graphics.Rect)
kotlin.collections.ArraysKt___ArraysKt$withIndex$9: java.util.Iterator invoke()
androidx.core.app.NotificationChannelCompat$Api29Impl: NotificationChannelCompat$Api29Impl()
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
kotlin.collections.builders.MapBuilder: MapBuilder(java.lang.Object[],java.lang.Object[],int[],int[],int,int)
io.flutter.embedding.engine.dart.PlatformTaskQueue: PlatformTaskQueue()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.view.ViewCompat: android.graphics.Matrix getMatrix(android.view.View)
androidx.fragment.app.FragmentTabHost: void onTabChanged(java.lang.String)
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
androidx.collection.SparseArrayCompat: boolean containsValue(java.lang.Object)
androidx.activity.OnBackPressedDispatcher$Api34Impl$createOnBackAnimationCallback$1: void onBackInvoked()
kotlin.time.TimeMark: kotlin.time.TimeMark minus-LRDsOJo(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
androidx.core.os.LocaleListCompat: java.lang.String toString()
io.flutter.embedding.android.FlutterFragment: java.lang.String getCachedEngineId()
androidx.core.app.NotificationCompat$Extender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)
kotlin.collections.MapsKt__MapsJVMKt: java.lang.Object getOrPut(java.util.concurrent.ConcurrentMap,java.lang.Object,kotlin.jvm.functions.Function0)
androidx.annotation.RequiresOptIn$Level: androidx.annotation.RequiresOptIn$Level[] values()
androidx.window.area.utils.DeviceUtils: DeviceUtils()
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: void forEachDirectoryEntry(java.nio.file.Path,java.lang.String,kotlin.jvm.functions.Function1)
kotlin.InitializedLazyImpl: InitializedLazyImpl(java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1: void onAnimationRepeat(android.view.animation.Animation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: AccessibilityNodeInfoCompat$Api33Impl()
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void shuffle(java.util.List,java.util.Random)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(boolean[],boolean[])
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence)
kotlinx.coroutines.internal.Synchronized_commonKt: java.lang.Object synchronized(java.lang.Object,kotlin.jvm.functions.Function0)
androidx.profileinstaller.WritableFileSection: WritableFileSection(androidx.profileinstaller.FileSectionType,int,byte[],boolean)
androidx.customview.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)
androidx.customview.R$string: R$string()
androidx.lifecycle.ViewModelLazy: boolean isInitialized()
androidx.customview.widget.ViewDragHelper: int getTouchSlop()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOf(byte[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: java.lang.String replaceAfter(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.core.graphics.drawable.TintAwareDrawable: void setTint(int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.util.Collection,java.lang.Iterable)
androidx.core.os.BundleCompat: java.io.Serializable getSerializable(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.lifecycle.runtime.R: R()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minByOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
androidx.annotation.RequiresFeature: java.lang.String enforcement()
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List createListBuilder(int)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: MutexImpl$CancellableContinuationWithOwner(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1: FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
androidx.lifecycle.viewmodel.MutableCreationExtras: MutableCreationExtras(androidx.lifecycle.viewmodel.CreationExtras)
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)
androidx.collection.ArraySet: int hashCode()
kotlin.ranges.ULongProgression: int hashCode()
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionPause(android.transition.Transition)
kotlin.collections.ArraysKt___ArraysKt: void reverse(int[])
kotlinx.coroutines.EventLoopImplBase$DelayedResumeTask: java.lang.String toString()
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ReportFragment: void onResume()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2: PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$2(kotlin.jvm.functions.Function3,java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3)
kotlin.collections.CollectionsKt__IteratorsJVMKt: java.util.Iterator iterator(java.util.Enumeration)
kotlinx.coroutines.channels.ChannelsKt__ChannelsKt$trySendBlocking$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.app.RemoteActionCompat: RemoteActionCompat(androidx.core.app.RemoteActionCompat)
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
kotlin.UByte: int div-xj2QHRw(byte,short)
androidx.core.widget.AutoScrollHelper: void requestStop()
androidx.viewpager.widget.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.window.embedding.EmbeddingCompat: void updateSplitAttributes(androidx.window.embedding.SplitInfo,androidx.window.embedding.SplitAttributes)
kotlin.ranges.RangesKt__RangesKt: kotlin.ranges.OpenEndRange rangeUntil(float,float)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.JobSupport: java.lang.Object joinSuspend(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)
kotlinx.coroutines.flow.FlowKt__LimitKt$take$$inlined$unsafeFlow$1: FlowKt__LimitKt$take$$inlined$unsafeFlow$1(kotlinx.coroutines.flow.Flow,int)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.lifecycle.CoroutineLiveDataKt: androidx.lifecycle.LiveData liveData(kotlin.coroutines.CoroutineContext,long,kotlin.jvm.functions.Function2)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,byte)
androidx.startup.StartupException: StartupException(java.lang.String,java.lang.Throwable)
androidx.core.view.MenuCompat: void setShowAsAction(android.view.MenuItem,int)
kotlin.ranges.RangesKt__RangesKt: void checkStepIsPositive(boolean,java.lang.Number)
kotlinx.coroutines.channels.BufferedChannel: void waitExpandBufferCompletion$kotlinx_coroutines_core(long)
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator thenDescending(java.util.Comparator,java.util.Comparator)
androidx.window.embedding.EmbeddingAdapter$Companion: EmbeddingAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(androidx.fragment.app.FragmentManager,int)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineTransform(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function7)
kotlin.collections.ArraysKt___ArraysKt: java.util.List distinctBy(long[],kotlin.jvm.functions.Function1)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: int checkRtl(java.lang.CharSequence,int,int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setIndex(int)
kotlin.sequences.FlatteningSequence$iterator$1: void remove()
kotlin.reflect.KCallable: boolean isFinal()
kotlin.ranges.IntRange: java.lang.Comparable getStart()
kotlin.collections.AbstractIterator: void setNext(java.lang.Object)
kotlin.jvm.internal.Ref$ObjectRef: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable maxOfOrNull(short[],kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable maxOrThrow(kotlin.sequences.Sequence)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.jvm.internal.FunctionImpl: void checkArity(int)
androidx.core.provider.RequestExecutor: java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty1$Setter getSetter()
androidx.core.util.SparseBooleanArrayKt: boolean containsValue(android.util.SparseBooleanArray,boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toMutableSet(java.lang.Object[])
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float max(float[])
androidx.window.layout.util.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
io.flutter.embedding.engine.systemchannels.ScribeChannel: ScribeChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.annotation.RequiresExtension: int version()
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: FragmentAnim$EndViewTransitionAnimation(android.view.animation.Animation,android.view.ViewGroup,android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Float max(java.lang.Float[])
kotlin.concurrent.LocksKt: java.lang.Object read(java.util.concurrent.locks.ReentrantReadWriteLock,kotlin.jvm.functions.Function0)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
kotlin.sequences.DropSequence$iterator$1: void drop()
kotlin.time.DurationKt: void getMilliseconds$annotations(int)
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance()
kotlin.collections.MapsKt___MapsKt: java.lang.Object minOfWith(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.StateFlowImpl: void getValue$annotations()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Object maxBy(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.jvm.internal.Intrinsics: void throwIllegalState()
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object removeShortcuts(java.util.List)
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getState$kotlinx_coroutines_core()
androidx.core.location.LocationCompat$Api34Impl: float getMslAltitudeAccuracyMeters(android.location.Location)
io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineInGroupIntentBuilder dartEntrypoint(java.lang.String)
io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget$1: SurfaceTexturePlatformViewRenderTarget$1(io.flutter.plugin.platform.SurfaceTexturePlatformViewRenderTarget)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
kotlin.jvm.internal.ArrayDoubleIterator: boolean hasNext()
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineGroupId()
kotlin.sequences.DropWhileSequence$iterator$1: DropWhileSequence$iterator$1(kotlin.sequences.DropWhileSequence)
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxWithOrNull(kotlin.sequences.Sequence,java.util.Comparator)
kotlin.collections.builders.ListBuilder: boolean remove(java.lang.Object)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
androidx.core.view.ViewGroupKt$iterator$1: android.view.View next()
androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl: ViewPropertyAnimatorCompat$Api21Impl()
kotlin.time.Duration$Companion: long getSeconds-UwyO8pc(int)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onGlobalLayout()
androidx.core.app.NotificationCompat$CallStyle: androidx.core.app.NotificationCompat$CallStyle setVerificationIcon(android.graphics.Bitmap)
kotlin.collections.ArraysKt___ArraysJvmKt: int[] copyOf(int[],int)
kotlinx.coroutines.flow.LintKt: void cancel(kotlinx.coroutines.flow.FlowCollector,java.util.concurrent.CancellationException)
kotlinx.coroutines.sync.MutexImpl$onSelectCancellationUnlockConstructor$1: MutexImpl$onSelectCancellationUnlockConstructor$1(kotlinx.coroutines.sync.MutexImpl)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float firstOrNull(float[])
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: FlutterActivity$NewEngineIntentBuilder(java.lang.Class)
kotlin.coroutines.CombinedContext$toString$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader: boolean canPrune()
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(java.lang.Iterable)
android.support.v4.os.IResultReceiver2$_Parcel: void writeTypedObject(android.os.Parcel,android.os.Parcelable,int)
io.flutter.embedding.android.FlutterFragment$2: FlutterFragment$2(io.flutter.embedding.android.FlutterFragment,boolean)
androidx.core.provider.FontProvider$ContentQueryWrapper: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)
kotlin.io.path.PathWalkOption: kotlin.io.path.PathWalkOption[] $values()
androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
kotlin.jvm.internal.LocalVariableReferencesKt: java.lang.Void notSupportedError()
kotlin.UByteArray: int size()
androidx.window.core.PredicateAdapter$BaseHandler: boolean invokeTest(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
androidx.core.content.pm.PermissionInfoCompat$Api28Impl: int getProtection(android.content.pm.PermissionInfo)
kotlin.ranges.ComparableOpenEndRange: java.lang.String toString()
androidx.activity.SystemBarStyle$Companion$light$1: java.lang.Object invoke(java.lang.Object)
androidx.versionedparcelable.VersionedParcelStream$1: int read(byte[],int,int)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
androidx.lifecycle.SavedStateHandlesProvider: void performRestore()
kotlinx.coroutines.channels.ConflatedBufferedChannel: java.lang.Object sendBroadcast$kotlinx_coroutines_core(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.reflect.GenericArrayTypeImpl: int hashCode()
kotlin.jvm.internal.TypeIntrinsics: java.lang.Iterable asMutableIterable(java.lang.Object)
kotlinx.coroutines.stream.StreamFlow$collect$1: StreamFlow$collect$1(kotlinx.coroutines.stream.StreamFlow,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment$SavedState: Fragment$SavedState(android.os.Parcel,java.lang.ClassLoader)
kotlin.comparisons.ReversedComparator: int compare(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$1: ViewCompat$1(int,java.lang.Class,int)
io.flutter.plugin.platform.PlatformViewsController$1: void offset(int,double,double)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$2: boolean contains(java.lang.Object)
kotlin.text.StringsKt__StringNumberConversionsJVMKt: float toFloat(java.lang.String)
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
androidx.core.view.WindowInsetsControllerCompat: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
androidx.window.area.WindowAreaControllerImpl: void updateRearDisplayWindowArea(androidx.window.area.WindowAreaCapability$Operation,androidx.window.area.WindowAreaCapability$Status,androidx.window.layout.WindowMetrics)
kotlin.UNumbersKt: int rotateRight-V7xB4Y4(int,int)
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.flutter.embedding.android.KeyData$DeviceType: KeyData$DeviceType(java.lang.String,int,long)
androidx.core.app.NotificationManagerCompat$CancelTask: NotificationManagerCompat$CancelTask(java.lang.String,int,java.lang.String)
androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.Job getParent()
kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1: CollectionsKt___CollectionsKt$elementAt$1(int)
androidx.core.text.HtmlCompat$Api24Impl: HtmlCompat$Api24Impl()
androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnPrepare(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,android.view.WindowInsets,boolean)
androidx.core.location.LocationManagerCompat$Api30Impl: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)
androidx.window.embedding.EmbeddingAdapter: androidx.window.extensions.embedding.ActivityRule translateActivityRule(androidx.window.embedding.ActivityRule,java.lang.Class)
androidx.window.area.WindowAreaControllerImpl$transferActivityToWindowArea$2: WindowAreaControllerImpl$transferActivityToWindowArea$2(androidx.window.area.WindowAreaControllerImpl,android.app.Activity,java.util.concurrent.Executor,androidx.window.area.WindowAreaSessionCallback,kotlin.coroutines.Continuation)
androidx.loader.content.CursorLoader: void setSortOrder(java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getItemCount()
androidx.window.embedding.SplitRule: int getMinHeightDp()
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: FlutterFragment$NewEngineFragmentBuilder(java.lang.Class)
kotlinx.coroutines.CompletableJob: boolean complete()
androidx.core.app.NotificationCompatBuilder: void removeSoundAndVibration(android.app.Notification)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines$default(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,java.nio.file.OpenOption[],int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long lastOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.streams.jdk8.StreamsKt: java.util.List toList(java.util.stream.LongStream)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence minusElement(kotlin.sequences.Sequence,java.lang.Object)
kotlinx.coroutines.JobSupport: void getOnJoin$annotations()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()
androidx.window.R: R()
kotlin.text.TypeAliasesKt: void StringBuilder$annotations()
androidx.loader.content.ModernAsyncTask: boolean cancel(boolean)
kotlin.ranges.LongRange: LongRange(long,long)
androidx.core.view.VelocityTrackerCompat$Api34Impl: VelocityTrackerCompat$Api34Impl()
kotlin.UInt: int div-WZ4Q5Ns(int,int)
androidx.core.graphics.RegionKt$iterator$1: void remove()
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
kotlin.time.Duration: void getInNanoseconds$annotations()
kotlin.math.MathKt__MathJVMKt: float log2(float)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setClipboardData(java.lang.String)
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object getDelegate()
androidx.core.app.NotificationCompat: boolean getHighPriority(android.app.Notification)
kotlin.text.StringsKt___StringsKt: java.lang.String filterIndexed(java.lang.String,kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2: java.lang.Object invokeSuspend$$forInline(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean all(byte[],kotlin.jvm.functions.Function1)
androidx.activity.result.IntentSenderRequest$Builder: IntentSenderRequest$Builder(android.content.IntentSender)
kotlin.coroutines.jvm.internal.RunSuspend: void resumeWith(java.lang.Object)
io.flutter.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk maxDepth(int)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key()
androidx.core.view.accessibility.AccessibilityEventCompat$Api34Impl: AccessibilityEventCompat$Api34Impl()
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort maxWith-eOHTfZs(short[],java.util.Comparator)
kotlinx.coroutines.CoroutineScopeKt: boolean isActive(kotlinx.coroutines.CoroutineScope)
kotlinx.coroutines.channels.BroadcastChannelImpl: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: long unbox-impl()
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style extractStyleFromNotification(android.app.Notification)
kotlin.time.Duration: int toInt-impl(long,kotlin.time.DurationUnit)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object foldIndexed(int[],java.lang.Object,kotlin.jvm.functions.Function3)
io.flutter.embedding.engine.renderer.RenderSurface: void detachFromRenderer()
kotlin.concurrent.TimersKt: java.util.Timer timer(java.lang.String,boolean,long,long,kotlin.jvm.functions.Function1)
kotlin.reflect.GenericArrayTypeImpl: GenericArrayTypeImpl(java.lang.reflect.Type)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path div(java.nio.file.Path,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxWithOrNull(boolean[],java.util.Comparator)
kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.util.concurrent.CancellationException)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: android.app.Activity getActivity()
kotlin.collections.builders.ListBuilder: void insertAtInternal(int,int)
androidx.core.os.BuildCompat: boolean isAtLeastP()
kotlin.jvm.internal.LongSpreadBuilder: int getSize(java.lang.Object)
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream(int)
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat getLocusId(android.content.pm.ShortcutInfo)
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
androidx.window.core.Version: java.lang.String toString()
kotlin.jvm.internal.Intrinsics: boolean areEqual(double,java.lang.Double)
kotlin.reflect.TypesJVMKt: void getJavaType$annotations(kotlin.reflect.KType)
kotlin.collections.AbstractMap: java.util.Set getEntries()
androidx.fragment.app.FragmentState: FragmentState(android.os.Parcel)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean)
kotlin.random.Random$Default$Serialized: Random$Default$Serialized()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOfOrNull(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
androidx.window.area.WindowAreaSession: void close()
kotlin.io.path.PathTreeWalkKt: boolean access$createsCycle(kotlin.io.path.PathNode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDismissable(boolean)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
kotlinx.coroutines.flow.StartedLazily$command$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character[] toTypedArray(char[])
androidx.core.util.LongSparseArrayKt$valueIterator$1: boolean hasNext()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getFromIndex()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
kotlin.reflect.KFunction$DefaultImpls: void isInline$annotations()
kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$2: DebugProbesImpl$dumpCoroutinesSynchronized$2()
androidx.core.app.NotificationCompat$WearableExtender$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
kotlin.ULong: java.lang.String toString()
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2: void onAnimationEnd(android.animation.Animator)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] $values()
androidx.fragment.app.FragmentTransitionImpl: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
kotlin.collections.ArraysKt___ArraysKt: float[] sortedArrayDescending(float[])
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructCompatStyleByPlatformName(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)
kotlin.ranges.ULongRange: java.lang.Comparable getStart()
kotlin.collections.ArraysKt___ArraysKt: double sumOfDouble(short[],kotlin.jvm.functions.Function1)
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
androidx.viewpager.widget.ViewPager: void onDetachedFromWindow()
androidx.core.view.ViewPropertyAnimatorCompat$Api21Impl: android.view.ViewPropertyAnimator translationZ(android.view.ViewPropertyAnimator,float)
androidx.fragment.app.FragmentManager: void dispatchDestroyView()
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: FlowKt__CountKt$count$4(kotlin.jvm.functions.Function2,kotlin.jvm.internal.Ref$IntRef)
kotlin.collections.ArraysKt___ArraysKt: float minOf(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Float minOfOrNull-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.ULong: long rem-xj2QHRw(long,short)
kotlin.reflect.TypesJVMKt: java.lang.String typeToString(java.lang.reflect.Type)
kotlinx.coroutines.flow.FlowKt: java.lang.Object first(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
androidx.window.layout.util.ContextCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(boolean[],java.lang.Iterable)
androidx.fragment.app.SpecialEffectsController$Operation: boolean isCanceled()
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.loader.content.CursorLoader: java.lang.String getSelection()
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable,androidx.core.util.Consumer)
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1: void afterTextChanged(android.text.Editable)
kotlin.text.StringsKt___StringsKt$windowedSequence$1: StringsKt___StringsKt$windowedSequence$1()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-MShoTSo(long[],kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt__ComparisonsKt: java.util.Comparator compareBy(kotlin.jvm.functions.Function1)
kotlin.text.MatcherMatchResult: java.util.regex.MatchResult access$getMatchResult(kotlin.text.MatcherMatchResult)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getDeclaringJavaClass(java.lang.Enum)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)
kotlin.collections.ArraysKt___ArraysKt: double maxOf(boolean[],kotlin.jvm.functions.Function1)
kotlin.annotation.AnnotationTarget: kotlin.annotation.AnnotationTarget[] values()
androidx.fragment.app.FragmentTransitionImpl: void animateToEnd(java.lang.Object)
kotlin.jvm.internal.ArrayShortIterator: boolean hasNext()
androidx.fragment.app.DefaultSpecialEffectsController: void findNamedViews(java.util.Map,android.view.View)
kotlin.UByte: long plus-VKZWuLQ(byte,long)
androidx.core.transition.TransitionKt$addListener$listener$1: void onTransitionResume(android.transition.Transition)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.time.DurationKt: long access$durationOfNanosNormalized(long)
kotlinx.coroutines.flow.StartedEagerly: kotlinx.coroutines.flow.Flow command(kotlinx.coroutines.flow.StateFlow)
kotlin.ranges.UIntRange$Companion: UIntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysJvmKt: float elementAt(float[],int)
kotlinx.coroutines.internal.LockFreeTaskQueue: int getSize()
androidx.core.app.NotificationManagerCompat$CancelTask: NotificationManagerCompat$CancelTask(java.lang.String)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxByOrNull(boolean[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
androidx.core.app.ActivityCompat$Api28Impl: ActivityCompat$Api28Impl()
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1$emit$1: FlowKt__EmittersKt$transform$1$1$emit$1(kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1,kotlin.coroutines.Continuation)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$5$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.annotation.IntDef: int[] value()
androidx.core.view.inputmethod.InputConnectionCompat$2: InputConnectionCompat$2(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue: java.util.concurrent.ConcurrentLinkedQueue access$200(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsKt: void rangeCheck$CollectionsKt__CollectionsKt(int,int,int)
kotlin.ranges.ULongProgression$Companion: ULongProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.sequences.FilteringSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence)
kotlin.collections.ArraysKt___ArraysJvmKt: ArraysKt___ArraysJvmKt()
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
kotlin.text.CharCategory$Companion: CharCategory$Companion()
androidx.activity.EdgeToEdge: int getDefaultDarkScrim()
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.OpenEndRange,short)
kotlin.collections.AbstractCollection: boolean contains(java.lang.Object)
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
kotlin.HashCodeKt: int hashCode(java.lang.Object)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(androidx.core.graphics.Insets)
kotlin.sequences.SequenceBuilderIterator: SequenceBuilderIterator()
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean isActivityEmbeddingComponentValid()
kotlin.UIntKt: int toUInt(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)
androidx.window.embedding.ExtensionEmbeddingBackend$RuleTracker: ExtensionEmbeddingBackend$RuleTracker()
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.fragment.app.Fragment$OnPreAttachedListener: void onPreAttached()
kotlinx.coroutines.channels.SendChannel: java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(java.lang.Object[],java.lang.Object[])
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt___SequencesKt: double averageOfShort(kotlin.sequences.Sequence)
kotlinx.coroutines.CompletableJob$DefaultImpls: void cancel(kotlinx.coroutines.CompletableJob)
androidx.fragment.app.FragmentState$1: FragmentState$1()
kotlin.internal.PlatformImplementations: PlatformImplementations()
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getBigContentView()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task)
kotlin.collections.ArraysKt___ArraysJvmKt: char[] copyOfRange(char[],int,int)
kotlin.jvm.internal.MutablePropertyReference2Impl: java.lang.Object get(java.lang.Object,java.lang.Object)
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: void clearObservers()
kotlin.time.DurationKt: void getSeconds$annotations(double)
kotlin.sequences.USequencesKt___USequencesKt: long sumOfULong(kotlin.sequences.Sequence)
kotlinx.coroutines.selects.SelectClause1Impl: kotlin.jvm.functions.Function3 getRegFunc()
androidx.core.widget.CompoundButtonCompat$Api21Impl: CompoundButtonCompat$Api21Impl()
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1: void onTransitionCancel(android.transition.Transition)
kotlin.random.KotlinRandom: long nextLong()
io.flutter.embedding.engine.dart.DartMessenger: void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] copyOfRange-Aa5vz7o(short[],int,int)
androidx.fragment.R$styleable: R$styleable()
kotlin.collections.AbstractCollection: void clear()
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: java.lang.String getVisualMimeType$activity_release(androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$VisualMediaType)
androidx.core.app.OnPictureInPictureModeChangedProvider: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
androidx.core.app.NotificationCompat$MessagingStyle: android.text.style.TextAppearanceSpan makeFontColorSpan(int)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
kotlin.text.UStringsKt: kotlin.ULong toULongOrNull(java.lang.String)
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[])
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.CopyableThreadContextElement,kotlin.coroutines.CoroutineContext$Key)
androidx.window.area.WindowAreaControllerImpl: void access$updateRearDisplayPresentationAvailability(androidx.window.area.WindowAreaControllerImpl,androidx.window.extensions.area.ExtensionWindowAreaStatus)
kotlinx.coroutines.flow.internal.SubscriptionCountStateFlow: java.lang.Integer getValue()
kotlin.text.CharDirectionality$Companion$directionalityMap$2: java.lang.Object invoke()
kotlin.reflect.KParameter: int getIndex()
androidx.lifecycle.LifecycleOwnerKt: androidx.lifecycle.LifecycleCoroutineScope getLifecycleScope(androidx.lifecycle.LifecycleOwner)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(float[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.lifecycle.BlockRunner: kotlinx.coroutines.Job access$getRunningJob$p(androidx.lifecycle.BlockRunner)
androidx.core.app.NotificationCompat$Style: java.lang.String getClassName()
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.PropertyReference2: PropertyReference2()
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
kotlin.streams.jdk8.StreamsKt: kotlin.sequences.Sequence asSequence(java.util.stream.DoubleStream)
io.flutter.embedding.android.FlutterFragment: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
androidx.fragment.app.FragmentStateManager: int computeExpectedState()
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransformUnsafe$1$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterFragmentActivity: android.content.Intent createDefaultIntent(android.content.Context)
io.flutter.embedding.engine.dart.DartMessenger: void enableBufferingIncomingMessages()
androidx.core.location.GpsStatusWrapper: boolean hasEphemerisData(int)
kotlin.UShortArray: java.util.Iterator iterator-impl(short[])
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1: BackGestureChannel$1(io.flutter.embedding.engine.systemchannels.BackGestureChannel)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
kotlin.time.Duration: long getInWholeMinutes-impl(long)
androidx.core.app.NotificationCompat$Api29Impl: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)
kotlin.collections.ArraysKt___ArraysKt: java.util.List flatMap(boolean[],kotlin.jvm.functions.Function1)
kotlin.UnsignedKt: int ulongCompare(long,long)
kotlin.text.StringsKt__StringsKt: java.lang.String removePrefix(java.lang.String,java.lang.CharSequence)
androidx.core.app.NotificationCompat$WearableExtender: boolean getContentIntentAvailableOffline()
io.flutter.embedding.android.FlutterView: void releaseImageView()
androidx.lifecycle.ViewModelProviderGetKt: androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: ResourcesCompat$ColorStateListCacheKey(android.content.res.Resources,android.content.res.Resources$Theme)
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
kotlin.io.path.FileVisitorBuilderImpl: void onPreVisitDirectory(kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture: java.lang.Object get()
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: SparseBooleanArrayKt$keyIterator$1(android.util.SparseBooleanArray)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean)
kotlin.io.path.FileVisitorImpl: FileVisitorImpl(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics getViewportMetrics()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)
androidx.window.area.WindowAreaCapability: WindowAreaCapability(androidx.window.area.WindowAreaCapability$Operation,androidx.window.area.WindowAreaCapability$Status)
androidx.core.app.RemoteActionCompat$Api26Impl: void setEnabled(android.app.RemoteAction,boolean)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1()
kotlinx.coroutines.AbstractTimeSource: void unpark(java.lang.Thread)
kotlin.io.FilesKt__FileTreeWalkKt: kotlin.io.FileTreeWalk walk(java.io.File,kotlin.io.FileWalkDirection)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$count$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.KClasses: java.lang.Object cast(kotlin.reflect.KClass,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
kotlin.jvm.internal.TypeIntrinsics: boolean isMutableIterator(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection mapTo-wzUQCXU(byte[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object reduceOrNull(java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.time.DurationKt: long access$durationOfMillisNormalized(long)
androidx.core.app.ActivityCompat$Api30Impl: android.view.Display getDisplay(android.content.ContextWrapper)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(char[],java.lang.Iterable)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.fragment.app.strictmode.FragmentReuseViolation: java.lang.String getPreviousFragmentId()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setColumnTitle(java.lang.String)
kotlin.text.Typography: void getLeftGuillemet$annotations()
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: void access$decrementSize(kotlinx.coroutines.debug.internal.ConcurrentWeakMap)
kotlinx.coroutines.internal.LimitedDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
kotlin.sequences.ConstrainedOnceSequence: java.util.Iterator iterator()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])
androidx.core.os.OperationCanceledException: OperationCanceledException()
androidx.fragment.app.FragmentManagerNonConfig: boolean isRetaining(androidx.fragment.app.Fragment)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short minOf(short,short[])
io.flutter.view.VsyncWaiter$FrameCallback: VsyncWaiter$FrameCallback(io.flutter.view.VsyncWaiter,long)
kotlin.text.StringsKt__StringsKt: java.lang.String removeRange(java.lang.String,kotlin.ranges.IntRange)
kotlin.jvm.internal.CallableReference: boolean isOpen()
kotlin.jvm.internal.ByteCompanionObject: void getSIZE_BYTES$annotations()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
kotlin.reflect.KTypeProjection: kotlin.reflect.KType getType()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getUniqueId()
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequestWorker$TypefaceResult call()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1$2: java.lang.Object invoke()
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
androidx.core.provider.CallbackWithHandler: CallbackWithHandler(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
kotlin.io.FilesKt: FilesKt()
androidx.core.app.PendingIntentCompat$GatedCallback: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)
kotlin.collections.EmptyMap: boolean isEmpty()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)
androidx.fragment.app.strictmode.FragmentStrictMode: void onSetRetainInstanceUsage(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler: java.util.Map getKeyboardState()
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int,int)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)
androidx.core.util.LongSparseArrayKt: java.lang.Object getOrDefault(android.util.LongSparseArray,long,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void forEach(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsAnimationCompat: float getInterpolatedFraction()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object access$receiveCatchingOnNoWaiterSuspend-GKJJFZk(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
androidx.customview.widget.ExploreByTouchHelper: int getFocusedVirtualView()
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String absolutePathString(java.nio.file.Path)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks getCallback()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.core.app.NotificationCompat$Action$Builder$Api24Impl: boolean getAllowGeneratedReplies(android.app.Notification$Action)
androidx.viewpager.widget.ViewPager: void dispatchOnPageScrolled(int,float,int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleKeyEvent(android.view.KeyEvent)
kotlin.jvm.internal.TypeIntrinsics: boolean isFunctionOfArity(java.lang.Object,int)
kotlin.jvm.internal.DoubleCompanionObject: void getSIZE_BITS$annotations()
kotlin.math.MathKt__MathJVMKt: double expm1(double)
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenConcat(kotlinx.coroutines.flow.Flow)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)
kotlin.reflect.KCallable: boolean isSuspend()
androidx.core.app.NotificationChannelCompat$Api26Impl: void setVibrationPattern(android.app.NotificationChannel,long[])
androidx.fragment.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
kotlin.io.encoding.Base64: Base64(boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: byte single(byte[])
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.String[] getSpilledVariableFieldMapping(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.String)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
kotlin.collections.ArraysKt___ArraysKt: byte single(byte[],kotlin.jvm.functions.Function1)
kotlin.time.Duration: java.lang.Object toComponents-impl(long,kotlin.jvm.functions.Function5)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$default(java.lang.CharSequence,java.util.Collection,int,boolean,int,java.lang.Object)
androidx.core.view.ViewKt: int getMarginStart(android.view.View)
androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job getJob(kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$1: int lastIndexOf(byte)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt findLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(android.graphics.Path)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp(java.lang.String,int,int,int)
kotlin.collections.AbstractSet$Companion: AbstractSet$Companion()
kotlin.ULong: byte toByte-impl(long)
androidx.core.content.ContextCompat$Api33Impl: ContextCompat$Api33Impl()
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendBroadcast$kotlinx_coroutines_core(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(int)
kotlin.reflect.TypeVariableImpl: java.lang.String getTypeName()
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: java.util.Iterator iterator()
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: java.lang.Object parseResult(int,android.content.Intent)
kotlin.sequences.SequencesKt___SequencesKt$elementAt$1: SequencesKt___SequencesKt$elementAt$1(int)
androidx.core.view.DisplayCompat$Api23Impl: DisplayCompat$Api23Impl()
androidx.loader.content.ModernAsyncTask: void publishProgress(java.lang.Object[])
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1: void onTransitionPause(android.transition.Transition)
kotlin.collections.builders.ListBuilder: java.util.ListIterator listIterator()
androidx.window.core.BuildConfig: BuildConfig()
kotlin.ULongArray: boolean equals(java.lang.Object)
androidx.customview.widget.FocusStrategy$SequentialComparator: int compare(java.lang.Object,java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: kotlin.UShort minWith-eOHTfZs(short[],java.util.Comparator)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
kotlin.coroutines.ContinuationKt$Continuation$1: kotlin.coroutines.CoroutineContext getContext()
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$1: ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$1()
androidx.lifecycle.FlowLiveDataConversions: androidx.lifecycle.LiveData asLiveData$default(kotlinx.coroutines.flow.Flow,java.time.Duration,kotlin.coroutines.CoroutineContext,int,java.lang.Object)
kotlin.sequences.DropSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence)
kotlinx.coroutines.EventLoop: long getNextTime()
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
kotlinx.coroutines.debug.internal.ConcurrentWeakMap: int getSize()
kotlin.collections.builders.MapBuilder: java.util.Set getEntries()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Character boxChar(char)
kotlinx.coroutines.flow.Flow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
androidx.core.app.Person$Builder: Person$Builder(androidx.core.app.Person)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer singleOrNull(int[],kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt__CollectionsJVMKt: int checkCountOverflow(int)
kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1: FlowKt__TransformKt$map$$inlined$unsafeTransform$1$1(kotlinx.coroutines.flow.FlowKt__TransformKt$map$$inlined$unsafeTransform$1,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,int)
kotlin.io.ExceptionsKt: java.lang.String access$constructMessage(java.io.File,java.io.File,java.lang.String)
androidx.profileinstaller.ProfileTranscoder: int[] readClasses(java.io.InputStream,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.core.view.ContentInfoCompat: android.content.ClipData getClip()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)
androidx.core.view.MenuKt: java.util.Iterator iterator(android.view.Menu)
androidx.window.embedding.SplitPlaceholderRule$Builder: SplitPlaceholderRule$Builder(java.util.Set,android.content.Intent)
kotlinx.coroutines.flow.FlowKt__DelayKt: kotlinx.coroutines.flow.Flow debounceDuration(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt__StringsJVMKt: StringsKt__StringsJVMKt()
kotlinx.coroutines.future.CompletableFutureCoroutine: java.lang.Object apply(java.lang.Object,java.lang.Object)
androidx.core.net.MailTo: boolean isMailTo(android.net.Uri)
androidx.collection.LongSparseArray: int indexOfKey(long)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.StateFlow stateIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.SharingStarted,java.lang.Object)
kotlinx.coroutines.JobSupport$SelectOnAwaitCompletionHandler: JobSupport$SelectOnAwaitCompletionHandler(kotlinx.coroutines.JobSupport,kotlinx.coroutines.selects.SelectInstance)
androidx.lifecycle.MediatorLiveData$Source: MediatorLiveData$Source(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 component3()
kotlin.collections.AbstractMap$values$1$iterator$1: AbstractMap$values$1$iterator$1(java.util.Iterator)
androidx.fragment.app.FragmentPagerAdapter: long getItemId(int)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)
kotlin.Pair: kotlin.Pair copy$default(kotlin.Pair,java.lang.Object,java.lang.Object,int,java.lang.Object)
androidx.collection.CircularArray: java.lang.Object getLast()
kotlin.io.encoding.Base64: byte[] decode(java.lang.CharSequence,int,int)
kotlinx.coroutines.flow.internal.SendingCollector: SendingCollector(kotlinx.coroutines.channels.SendChannel)
androidx.core.util.SparseLongArrayKt$keyIterator$1: SparseLongArrayKt$keyIterator$1(android.util.SparseLongArray)
androidx.core.app.NotificationChannelCompat$Api30Impl: java.lang.String getConversationId(android.app.NotificationChannel)
kotlin.collections.ArraysKt___ArraysKt: boolean isEmpty(byte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.HashSet toHashSet(short[])
kotlinx.coroutines.future.FutureKt$asDeferred$2: FutureKt$asDeferred$2(kotlinx.coroutines.CompletableDeferred)
kotlin.io.encoding.Base64Kt: void getBase64EncodeMap$annotations()
kotlin.UByteArray: int getSize()
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
kotlinx.coroutines.internal.DispatchedContinuation: boolean postponeCancellation(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-uaTIQ5s(short[],java.lang.Object[])
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.app.Activity,android.content.Context,android.os.Handler,int)
kotlinx.coroutines.flow.LintKt: java.lang.Object toSet(kotlinx.coroutines.flow.SharedFlow,java.util.Set,kotlin.coroutines.Continuation)
androidx.core.view.ContentInfoCompat$Compat31Impl: int getFlags()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List slice-JGPC0-M(short[],java.lang.Iterable)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
kotlin.jvm.internal.FunctionImpl: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$flatMap$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.os.ParcelCompat$Api33Impl: java.io.Serializable readSerializable(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$map$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: void performDetach()
kotlin.text.CharsKt__CharKt: char digitToChar(int,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,double)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toChannel(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] stop()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List slice(java.util.List,kotlin.ranges.IntRange)
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfUByte(kotlin.UByte[])
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterNotTo(int[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.app.RemoteActionCompat: boolean shouldShowIcon()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
kotlinx.coroutines.CancellableContinuationImpl: boolean isCancelled()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence mapIndexedNotNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentTabHost: void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$Status getStatus()
kotlinx.coroutines.channels.BufferedChannel$onReceiveOrNull$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void setPreferredOrientations(int)
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getText()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow combine(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
androidx.customview.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.loader.app.LoaderManagerImpl: java.lang.String toString()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.content.Context)
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int minByOrThrow-U(int[],kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsControllerCompat: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)
kotlin.sequences.SequencesKt___SequencesJvmKt: kotlin.sequences.Sequence filterIsInstance(kotlin.sequences.Sequence,java.lang.Class)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.Double maxOfOrNull-xTcfx_M(short[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)
kotlin.UInt: short toUShort-Mh2AYeg(int)
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receive(kotlin.coroutines.Continuation)
androidx.core.R$drawable: R$drawable()
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(double[],kotlin.jvm.functions.Function2)
kotlin.sequences.SubSequence$iterator$1: void drop()
kotlin.jvm.internal.Reflection: kotlin.reflect.KType nullableTypeOf(java.lang.Class,kotlin.reflect.KTypeProjection[])
androidx.core.view.ActionProvider: void refreshVisibility()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(long[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.collections.builders.MapBuilder: boolean containsKey(java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
androidx.window.embedding.SplitRule$Api34Impl: SplitRule$Api34Impl()
kotlinx.coroutines.sync.SemaphoreImpl: boolean access$addAcquireToQueue(kotlinx.coroutines.sync.SemaphoreImpl,kotlinx.coroutines.Waiter)
androidx.core.location.LocationRequestCompat$Builder: androidx.core.location.LocationRequestCompat$Builder setMaxUpdateDelayMillis(long)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable minOrNull(java.lang.Comparable[])
kotlin.math.MathKt__MathJVMKt: double acosh(double)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection mapTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function1)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: short minOf(short,short)
androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)
kotlin.collections.ArraysKt___ArraysKt: double average(int[])
kotlin.sequences.TransformingSequence$iterator$1: TransformingSequence$iterator$1(kotlin.sequences.TransformingSequence)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void install()
kotlinx.coroutines.selects.SelectKt: void OnCancellationConstructor$annotations()
androidx.core.provider.SelfDestructiveThread$2$1: void run()
androidx.annotation.InspectableProperty: java.lang.String name()
kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.OpenEndRange,byte)
androidx.core.location.LocationRequestCompat: int getQuality()
kotlin.io.path.FileVisitorImpl: java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException)
io.flutter.plugin.common.MethodChannel$MethodCallHandler: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.core.location.LocationCompat: int getHasSpeedAccuracyMask()
kotlin.UIntKt: int toUInt(short)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer minWith(int[],java.util.Comparator)
androidx.fragment.app.FragmentController: void reportLoaderStart()
kotlin.NotImplementedError: NotImplementedError()
androidx.window.embedding.RuleParser: java.util.Set parseRules$window_release(android.content.Context,int)
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlTextOrFormat(int)
kotlin.UShortArray$Iterator: void remove()
androidx.fragment.app.FragmentTransitionImpl: boolean isSeekingSupported()
androidx.core.app.NotificationChannelGroupCompat$Api28Impl: void setDescription(android.app.NotificationChannelGroup,java.lang.String)
io.flutter.view.VsyncWaiter$1: android.view.Choreographer$FrameCallback obtainFrameCallback(long)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character elementAtOrNull(char[],int)
kotlin.io.FilesKt__FileReadWriteKt$readLines$1: FilesKt__FileReadWriteKt$readLines$1(java.util.ArrayList)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxOfOrNull(float[],kotlin.jvm.functions.Function1)
kotlin.comparisons.NaturalOrderComparator: NaturalOrderComparator()
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$first$1: ChannelsKt__DeprecatedKt$first$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findBlockingTask()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
kotlin.time.Duration: long getInWholeNanoseconds-impl(long)
kotlin.UByte: byte or-7apg3OU(byte,byte)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2502(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
kotlin.collections.SetsKt__SetsKt: java.util.Set buildSet(int,kotlin.jvm.functions.Function1)
kotlin.ULong: long div-xj2QHRw(long,short)
io.flutter.util.TraceSection: void end()
kotlin.reflect.KClass$DefaultImpls: void getSealedSubclasses$annotations()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: java.lang.Object startCoroutineUninterceptedOrReturn(kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minWithOrNull(float[],java.util.Comparator)
io.flutter.plugin.platform.PlatformViewWrapper: boolean onInterceptTouchEvent(android.view.MotionEvent)
kotlin.text.jdk8.RegexExtensionsJDK8Kt: kotlin.text.MatchGroup get(kotlin.text.MatchGroupCollection,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Iterable asIterable(char[])
kotlin.io.path.PathsKt__PathReadWriteKt: java.io.OutputStream outputStream(java.nio.file.Path,java.nio.file.OpenOption[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$consumes$1: void invoke(java.lang.Throwable)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
androidx.core.app.LocaleManagerCompat$Api24Impl: LocaleManagerCompat$Api24Impl()
kotlinx.coroutines.flow.FlowKt__CollectKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.EmptyMap: boolean equals(java.lang.Object)
kotlinx.coroutines.channels.ProducerCoroutine: boolean isActive()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(long[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: ArraysKt___ArraysJvmKt$asList$5(float[])
androidx.collection.MapCollections: void colRemoveAt(int)
androidx.activity.result.IntentSenderRequest$Companion$CREATOR$1: java.lang.Object[] newArray(int)
io.flutter.plugin.platform.PlatformView$-CC: void $default$onFlutterViewAttached(io.flutter.plugin.platform.PlatformView,android.view.View)
androidx.core.graphics.ColorKt: float getGreen(long)
androidx.fragment.app.DialogFragment: void dismiss()
io.flutter.plugin.text.ProcessTextPlugin: void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.CompletableDeferredKt: kotlinx.coroutines.CompletableDeferred CompletableDeferred(java.lang.Object)
androidx.collection.MapCollections$ValuesCollection: void clear()
androidx.core.text.util.LocalePreferences$Api33Impl: java.lang.String getResolvedTemperatureUnit(java.util.Locale)
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1: ProduceKt$awaitClose$4$1(kotlinx.coroutines.CancellableContinuation)
androidx.activity.OnBackPressedDispatcher$addCallback$1: java.lang.Object invoke()
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.core.app.NotificationCompat$Api31Impl: boolean isAuthenticationRequired(android.app.Notification$Action)
kotlin.collections.ArraysKt___ArraysKt: boolean last(boolean[])
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightStatusBars(boolean)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
kotlin.collections.ArrayAsCollection: void clear()
kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow consumeAsFlow(kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] copyInto--B0-L2c$default(long[],long[],int,int,int,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(short[],kotlin.jvm.functions.Function2)
com.getkeepsafe.relinker.TextUtils: boolean isEmpty(java.lang.CharSequence)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object maxWith(java.lang.Object[],java.util.Comparator)
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: ExceptionsConstructorKt$safeCtor$1(kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: long sumOfLong(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobNode: JobNode()
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: boolean onPreDraw()
kotlinx.coroutines.channels.ChannelResult$Failed: ChannelResult$Failed()
kotlin.time.Duration$Companion: void getHours-UwyO8pc$annotations(long)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: boolean isPhotoPickerAvailable()
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1: DistinctFlowImpl$collect$2$emit$1(kotlinx.coroutines.flow.DistinctFlowImpl$collect$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
androidx.core.math.MathUtils: int multiplyExact(int,int)
androidx.core.graphics.ColorUtils: void colorToXYZ(int,double[])
kotlin.collections.builders.ListBuilder: java.util.ListIterator listIterator(int)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set createSetBuilder()
kotlinx.coroutines.JobKt__JobKt: void cancelChildren$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
androidx.core.graphics.RectKt: android.graphics.Region toRegion(android.graphics.Rect)
kotlin.collections.ArraysKt__ArraysJVMKt: void copyOfRangeToIndexCheck(int,int)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$unsafeFlow$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.UShort: int rem-7apg3OU(short,byte)
kotlin.sequences.SubSequence: int getCount()
androidx.lifecycle.LifecycleController: void handleDestroy(kotlinx.coroutines.Job)
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect: void onProgress(androidx.activity.BackEventCompat,android.view.ViewGroup)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNull$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void forEachIndexed(float[],kotlin.jvm.functions.Function2)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void removeOnWindowFocusChangedListener(io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener)
kotlinx.coroutines.flow.SubscribedFlowCollector$onSubscription$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.collection.LruCache: int maxSize()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$maxWith$1: ChannelsKt__DeprecatedKt$maxWith$1(kotlin.coroutines.Continuation)
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(short[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-XUkPCBk(int[])
androidx.core.graphics.RegionKt: android.graphics.Region xor(android.graphics.Region,android.graphics.Region)
androidx.core.math.MathUtils: double clamp(double,double,double)
kotlin.io.TextStreamsKt: java.io.BufferedReader buffered$default(java.io.Reader,int,int,java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
kotlin.collections.CollectionsKt__MutableCollectionsKt: void plusAssign(java.util.Collection,java.lang.Object[])
kotlin.ranges.ClosedFloatRange: java.lang.Float getEndInclusive()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt$consumeEach$3: ChannelsKt__Channels_commonKt$consumeEach$3(kotlin.coroutines.Continuation)
androidx.core.os.HandlerCompat$Api28Impl: android.os.Handler createAsync(android.os.Looper)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Set toSet(kotlin.sequences.Sequence)
kotlin.UByte: long floorDiv-VKZWuLQ(byte,long)
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher: java.util.concurrent.Executor getExecutor()
androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent)
kotlinx.coroutines.EventLoopImplPlatform: void unpark()
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte reduceRight-ELGow60(byte[],kotlin.jvm.functions.Function2)
kotlin.text.StringsKt__AppendableKt: java.lang.Appendable appendLine(java.lang.Appendable)
kotlin.io.FilesKt__UtilsKt: java.io.File resolveSibling(java.io.File,java.io.File)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $values()
kotlinx.coroutines.flow.FlowKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.UIntArray: boolean isEmpty()
kotlin.collections.MutableMapWithDefaultImpl: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$7: int indexOf(boolean)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api21Impl: boolean isFocused(android.view.accessibility.AccessibilityWindowInfo)
androidx.lifecycle.LiveData: int getVersion()
io.flutter.embedding.engine.loader.ResourceExtractor$1: ResourceExtractor$1()
io.flutter.embedding.android.FlutterFragmentActivity: boolean shouldAttachEngineToActivity()
kotlin.text.CharDirectionality: kotlin.Lazy access$getDirectionalityMap$delegate$cp()
kotlin.collections.ArraysKt___ArraysKt: float maxOrThrow(float[])
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
kotlin.UInt: boolean equals-impl0(int,int)
kotlin.time.Duration: long plus-LRDsOJo(long,long)
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(java.lang.String,java.lang.Object[])
androidx.core.view.autofill.AutofillIdCompat: androidx.core.view.autofill.AutofillIdCompat toAutofillIdCompat(android.view.autofill.AutofillId)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeWith(java.lang.Object)
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(androidx.window.layout.WindowMetrics,androidx.window.core.Bounds)
androidx.core.view.ViewCompat: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean)
androidx.core.service.quicksettings.PendingIntentActivityWrapper: PendingIntentActivityWrapper(android.content.Context,int,android.content.Intent,int,android.os.Bundle,boolean)
kotlin.collections.ArraysKt___ArraysKt: byte maxWithOrThrow(byte[],java.util.Comparator)
androidx.loader.content.Loader: void commitContentChanged()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1: java.lang.Object collect$$forInline(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitInfo: android.os.IBinder getToken$window_release()
androidx.window.layout.adapter.sidecar.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
kotlin.text.DelimitedRangesSequence$iterator$1: void setCurrentStartIndex(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double minOfOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void removeLoader(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-jgv0xPQ(int[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long elementAtOrElse-Xw8i6dc(long[],int,kotlin.jvm.functions.Function1)
kotlin.NumbersKt__BigIntegersKt: java.math.BigDecimal toBigDecimal$default(java.math.BigInteger,int,java.math.MathContext,int,java.lang.Object)
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
androidx.activity.result.ActivityResultLauncher: ActivityResultLauncher()
androidx.annotation.RequiresExtension: int extension()
androidx.core.math.MathUtils: long subtractExact(long,long)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double minOf(double,double,double)
androidx.profileinstaller.ProfileInstaller$2: void onResultReceived(int,java.lang.Object)
kotlinx.coroutines.DefaultExecutor: boolean isShutDown()
androidx.window.area.WindowAreaPresentationSessionCallback: void onSessionStarted(androidx.window.area.WindowAreaSessionPresenter)
kotlinx.coroutines.selects.SelectImplementation$doSelectSuspend$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List takeLast-r7IrZao(long[],int)
kotlinx.coroutines.selects.SelectImplementation: void invoke(kotlinx.coroutines.selects.SelectClause2,kotlin.jvm.functions.Function2)
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable)
androidx.collection.MapCollections$MapIterator: boolean hasNext()
androidx.activity.result.ActivityResultRegistry: boolean dispatchResult(int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: boolean none(long[])
kotlin.io.ByteStreamsKt: java.io.BufferedReader bufferedReader(java.io.InputStream,java.nio.charset.Charset)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(byte[],kotlin.jvm.functions.Function1)
androidx.window.WindowSdkExtensions: androidx.window.WindowSdkExtensionsDecorator access$getDecorator$cp()
kotlin.UIntArray: boolean addAll(java.util.Collection)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int)
kotlinx.coroutines.internal.ConcurrentLinkedListNode: kotlinx.coroutines.internal.ConcurrentLinkedListNode getNext()
androidx.core.graphics.RectKt: android.graphics.RectF and(android.graphics.RectF,android.graphics.RectF)
kotlin.text.Regex$splitToSequence$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] reversedArray(java.lang.Object[])
kotlinx.coroutines.JobSupport: kotlinx.coroutines.selects.SelectClause1 getOnAwaitInternal()
kotlin.collections.ArraysKt___ArraysKt: int count(java.lang.Object[])
androidx.core.R$layout: R$layout()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(int,int)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$1(java.lang.Object[])
androidx.core.view.WindowCompat: WindowCompat()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
kotlinx.coroutines.ResumeOnCompletion: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$requireNoNulls$1: ChannelsKt__DeprecatedKt$requireNoNulls$1(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.lifecycle.Lifecycle$Event$Companion: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)
androidx.core.view.NestedScrollingChild: void stopNestedScroll()
kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)
androidx.annotation.ChecksSdkIntAtLeast: int extension()
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.core.provider.RequestExecutor: java.util.concurrent.Executor createHandlerExecutor(android.os.Handler)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.util.List filter(double[],kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsJVMKt: java.lang.String String(char[])
androidx.window.reflection.ReflectionUtils: boolean validateReflection$window_release$default(java.lang.String,kotlin.jvm.functions.Function0,int,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$CachedEngineFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
android.support.v4.os.IResultReceiver2$Default: IResultReceiver2$Default()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List filterIndexed-xzaTVY8(short[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow debounce-HG0u8IE(kotlinx.coroutines.flow.Flow,long)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.SharedFlow,long,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List map(short[],kotlin.jvm.functions.Function1)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1$1: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.text.CharsKt__CharJVMKt: java.lang.String titlecase(char,java.util.Locale)
io.flutter.embedding.android.KeyEmbedderResponder: void lambda$synchronizePressingKey$0(io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
kotlin.collections.builders.SetBuilder: java.util.Iterator iterator()
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
kotlin.reflect.KClass$DefaultImpls: void isOpen$annotations()
kotlin.time.TimeMark$DefaultImpls: kotlin.time.TimeMark plus-LRDsOJo(kotlin.time.TimeMark,long)
kotlinx.coroutines.DelayKt: java.lang.Object delay(long,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ReduceKt$reduce$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: byte last(byte[])
androidx.window.core.ConsumerAdapter: java.lang.Class consumerClassOrNull$window_release()
kotlin.text.CharCategory$Companion: CharCategory$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner$resume$2: MutexImpl$CancellableContinuationWithOwner$resume$2(kotlinx.coroutines.sync.MutexImpl,kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getDartEntrypointFunctionName()
androidx.core.app.NotificationChannelCompat$Api26Impl: boolean shouldVibrate(android.app.NotificationChannel)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Map associateWithTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1)
androidx.window.area.WindowAreaInfo$Type: WindowAreaInfo$Type(java.lang.String)
kotlin.jvm.internal.PropertyReference0: PropertyReference0(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlin.text.StringsKt__StringsKt$iterator$1: boolean hasNext()
androidx.loader.content.Loader: boolean isReset()
androidx.core.widget.NestedScrollView: void recycleVelocityTracker()
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.SpecialEffectsController$Operation$State$Companion: SpecialEffectsController$Operation$State$Companion()
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory()
androidx.activity.OnBackPressedDispatcher$3: java.lang.Object invoke()
kotlin.internal.RequireKotlin: java.lang.String message()
kotlin.sequences.SequenceBuilderIterator: void remove()
kotlin.collections.unsigned.UArraysKt___UArraysKt: double maxOf-xTcfx_M(short[],kotlin.jvm.functions.Function1)
kotlin.NumbersKt__FloorDivModKt: double mod(double,double)
kotlinx.coroutines.Job$DefaultImpls: void getParent$annotations()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List sortedDescending(java.lang.Iterable)
androidx.fragment.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort$default(float[],int,int,int,java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void attachToBroadcastReceiver(android.content.BroadcastReceiver,androidx.lifecycle.Lifecycle)
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.fragment.app.FragmentManager$2: boolean onMenuItemSelected(android.view.MenuItem)
androidx.core.content.res.GrowingArrayUtils: int[] insert(int[],int,int,int)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.core.view.WindowInsetsAnimationCompat$Impl30: WindowInsetsAnimationCompat$Impl30(int,android.view.animation.Interpolator,long)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
kotlin.UIntArray: boolean containsAll(java.util.Collection)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1: void onAnimationStart(android.animation.Animator)
kotlinx.coroutines.CancellableContinuationImplKt: int decisionAndIndex(int,int)
kotlinx.coroutines.flow.FlowKt__MigrationKt$onErrorReturn$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf(kotlin.Pair[])
kotlinx.coroutines.ParentJob$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.ParentJob,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object reduceOrNull(java.lang.Object[],kotlin.jvm.functions.Function2)
androidx.window.embedding.EmbeddingAdapter: android.os.Binder access$getINVALID_ACTIVITY_STACK_TOKEN$cp()
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.Object getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])
androidx.core.view.NestedScrollingParent3: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$mapIndexed$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)
kotlin.io.FilesKt__FileReadWriteKt: java.lang.Object useLines(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: void enableAccessibleClickableSpanSupport(android.view.View)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)
kotlin.collections.ArrayAsCollection: boolean isEmpty()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: FingerprintManagerCompat$1(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)
kotlinx.coroutines.Deferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Deferred,kotlinx.coroutines.Job)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6$2: FlowKt__ZipKt$combineTransform$6$2(kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int indexOfLast-JOV_ifY(byte[],kotlin.jvm.functions.Function1)
kotlin.DeprecationLevel: kotlin.DeprecationLevel valueOf(java.lang.String)
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
kotlin.collections.unsigned.UArraysKt___UArraysKt: long minOrThrow-U(long[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
androidx.fragment.app.FragmentManager: void throwException(java.lang.RuntimeException)
androidx.core.app.NotificationCompatBuilder: NotificationCompatBuilder(androidx.core.app.NotificationCompat$Builder)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.animation.Interpolator createInsetInterpolator(int,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat)
kotlin.text.StringsKt___StringsKt$chunkedSequence$1: java.lang.String invoke(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()
kotlin.text.StringsKt___StringsKt: java.util.Collection mapIndexedNotNullTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function2)
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getText()
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] copyInto(byte[],byte[],int,int,int)
androidx.core.app.NotificationCompat$Style: android.app.Notification build()
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningFold(float[],java.lang.Object,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$CallStyle: void restoreFromCompatExtras(android.os.Bundle)
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationCancel(android.animation.Animator)
androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State getState()
kotlin.Triple: java.lang.Object component2()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.WritableFileSection writeDexFileSection(androidx.profileinstaller.DexProfileData[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View)
kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CopyableThreadContextElement,kotlin.coroutines.CoroutineContext)
androidx.core.provider.FontRequest: java.util.List getCertificates()
kotlin.UShortArray: short[] constructor-impl(int)
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(java.lang.Comparable[])
kotlin.jvm.internal.LongSpreadBuilder: long[] toArray()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
androidx.core.provider.DocumentsContractCompat: boolean isDocumentUri(android.content.Context,android.net.Uri)
android.support.v4.app.INotificationSideChannel$Default: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
kotlin.comparisons.NaturalOrderComparator: int compare(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManager: void setFragmentFactory(androidx.fragment.app.FragmentFactory)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
io.flutter.embedding.engine.deferredcomponents.PlayStoreDeferredComponentManager$FeatureInstallStateUpdatedListener: void onStateUpdate(java.lang.Object)
androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)
androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentDeepToStringInline(java.lang.Object[])
androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)
kotlinx.coroutines.channels.ProducerCoroutine: kotlinx.coroutines.channels.SendChannel getChannel()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
kotlin.ThrowsKt: void Throws$annotations()
kotlinx.coroutines.channels.BroadcastChannelImpl: void access$removeSubscriber(kotlinx.coroutines.channels.BroadcastChannelImpl,kotlinx.coroutines.channels.ReceiveChannel)
kotlin.collections.UArraySortingKt: int partition-4UcCI2c(byte[],int,int)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.ULongProgression step(kotlin.ranges.ULongProgression,long)
kotlin.SafePublicationLazyImpl: SafePublicationLazyImpl(kotlin.jvm.functions.Function0)
kotlin.collections.ArraysKt___ArraysKt: long sumOfULong(long[],kotlin.jvm.functions.Function1)
androidx.core.view.DisplayCompat$ModeCompat: android.view.Display$Mode toMode()
kotlinx.coroutines.EventLoopImplBase: boolean enqueueImpl(java.lang.Runnable)
androidx.core.util.LongSparseArrayKt: boolean containsValue(android.util.LongSparseArray,java.lang.Object)
kotlinx.coroutines.selects.SelectKt: kotlin.jvm.functions.Function3 access$getDUMMY_PROCESS_RESULT_FUNCTION$p()
kotlin.jvm.internal.FloatCompanionObject: float getNEGATIVE_INFINITY()
io.flutter.embedding.android.FlutterImageView: void closeImageReader()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)
io.flutter.view.TextureRegistry$SurfaceProducer$Callback$-CC: void $default$onSurfaceCreated(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
kotlin.jvm.internal.TypeIntrinsics: java.util.Iterator castToIterator(java.lang.Object)
kotlinx.coroutines.selects.SelectOldKt: void access$resumeUndispatched(kotlinx.coroutines.CancellableContinuation,java.lang.Object)
kotlin.collections.ArrayAsCollection: boolean containsAll(java.util.Collection)
kotlin.reflect.KProperty: boolean isConst()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
kotlinx.coroutines.channels.BufferedChannel$receiveImpl$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.app.JobIntentService$CompatWorkEnqueuer: JobIntentService$CompatWorkEnqueuer(android.content.Context,android.content.ComponentName)
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1: SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1(androidx.window.layout.SafeWindowLayoutComponentProvider)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
androidx.core.view.ViewCompat: float getAlpha(android.view.View)
kotlinx.coroutines.flow.FlowKt__ZipKt: kotlinx.coroutines.flow.Flow flowCombine(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(double[],java.util.Comparator,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue: void flush()
kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.OpenEndRange,byte)
kotlin.io.path.PathNode: void setContentIterator(java.util.Iterator)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeLast(short[],int)
androidx.core.widget.EdgeEffectCompat: EdgeEffectCompat(android.content.Context)
kotlinx.coroutines.Job: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
kotlin.UByte: long div-VKZWuLQ(byte,long)
androidx.window.core.ConsumerAdapter$createSubscription$2: ConsumerAdapter$createSubscription$2(java.lang.reflect.Method,java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Long getOrNull(long[],int)
kotlin.random.KotlinRandom: int nextInt(int)
kotlinx.coroutines.flow.StartedEagerly: StartedEagerly()
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelect(kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object)
kotlin.time.MonotonicTimeSource: long elapsedFrom-6eNON_k(long)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
androidx.lifecycle.Transformations$switchMap$1$1: Transformations$switchMap$1$1(androidx.lifecycle.MediatorLiveData)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: boolean onClosedHasNext()
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
kotlin.collections.ArraysKt___ArraysKt: byte getOrElse(byte[],int,kotlin.jvm.functions.Function1)
androidx.core.R: R()
androidx.core.location.LocationRequestCompat: int getMaxUpdates()
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String)
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)
androidx.lifecycle.LiveDataScopeImpl$emit$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldAttachEngineToActivity(boolean)
kotlinx.coroutines.internal.StackTraceRecoveryKt: kotlin.Pair causeAndStacktrace(java.lang.Throwable)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt: java.math.BigDecimal sumOfBigDecimal(long[],kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
kotlin.collections.ArrayDeque: java.lang.Object removeAt(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
androidx.core.text.LocaleKt: int getLayoutDirection(java.util.Locale)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence orEmpty(kotlin.sequences.Sequence)
kotlin.ULongArray: long[] unbox-impl()
kotlinx.coroutines.internal.OnDemandAllocatingPool: java.lang.String stateRepresentation$kotlinx_coroutines_core()
androidx.core.view.ViewKt: java.lang.Runnable postOnAnimationDelayed(android.view.View,long,kotlin.jvm.functions.Function0)
kotlin.reflect.KFunction$DefaultImpls: void isExternal$annotations()
kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1: FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1(kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2,kotlin.coroutines.Continuation)
kotlinx.coroutines.channels.TickerChannelsKt$ticker$3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.ReportFragment$Companion: ReportFragment$Companion()
kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)
kotlinx.coroutines.CompletableJob$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.CompletableJob,kotlin.coroutines.CoroutineContext)
androidx.window.core.PredicateAdapter$PredicateStubHandler: PredicateAdapter$PredicateStubHandler(kotlin.reflect.KClass,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault()
kotlin.sequences.SequencesKt___SequencesKt: double averageOfInt(kotlin.sequences.Sequence)
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)
kotlin.collections.IntIterator: java.lang.Integer next()
androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$1: ContextAwareKt$withContextAvailable$2$1(androidx.activity.contextaware.ContextAware,androidx.activity.contextaware.ContextAwareKt$withContextAvailable$2$listener$1)
kotlinx.coroutines.internal.ThreadSafeHeap: void addLast(kotlinx.coroutines.internal.ThreadSafeHeapNode)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getCachedEngineGroupId()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Float boxFloat(float)
androidx.core.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean contains(int)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon getSystemIcon(android.content.Context,int)
kotlin.coroutines.CoroutineContext$plus$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
kotlin.text.StringsKt___StringsKt: java.lang.Object minOfWith(java.lang.CharSequence,java.util.Comparator,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.embedding.android.KeyData$DeviceType: long getValue()
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.ChildHandle: boolean childCancelled(java.lang.Throwable)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Void numberFormatError(java.lang.String)
kotlinx.coroutines.EventLoopKt: void platformAutoreleasePool(kotlin.jvm.functions.Function0)
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub: android.os.IBinder asBinder()
androidx.window.area.WindowAreaControllerImpl: WindowAreaControllerImpl(androidx.window.extensions.area.WindowAreaComponent,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List mapIndexed(java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
kotlin.coroutines.jvm.internal.RunSuspend: void setResult(kotlin.Result)
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$6(float[])
androidx.core.graphics.PointKt: android.graphics.Point unaryMinus(android.graphics.Point)
androidx.core.content.res.ResourcesCompat$FontCallback: void lambda$callbackSuccessAsync$0(android.graphics.Typeface)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat[] values()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: boolean shouldRestoreAndSaveState()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Throwable access$getReceiveException(kotlinx.coroutines.channels.BufferedChannel)
kotlin.text.MatchResult: java.util.List getGroupValues()
io.flutter.plugin.platform.PlatformViewsController: void translateMotionEvent(android.view.MotionEvent,android.view.MotionEvent$PointerCoords[])
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$1: android.view.View invoke(android.view.View)
kotlinx.coroutines.flow.StartedLazily: java.lang.String toString()
androidx.core.app.LocaleManagerCompat: androidx.core.os.LocaleListCompat getApplicationLocales(android.content.Context)
kotlinx.coroutines.flow.CancellableFlowImpl$collect$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.internal.FlowExceptions_commonKt: int checkIndexOverflow(int)
kotlin.sequences.SequencesKt___SequencesKt$minus$4: SequencesKt___SequencesKt$minus$4(kotlin.sequences.Sequence,kotlin.sequences.Sequence)
kotlin.sequences.SequencesKt___SequencesJvmKt: java.lang.Float min(kotlin.sequences.Sequence)
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: double maxOf(double,double)
kotlin.jvm.functions.Function9: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.util.SparseBooleanArrayKt: boolean getOrDefault(android.util.SparseBooleanArray,int,boolean)
kotlin.collections.SlidingWindowKt$windowedIterator$1: SlidingWindowKt$windowedIterator$1(int,int,java.util.Iterator,boolean,boolean,kotlin.coroutines.Continuation)
androidx.core.app.ServiceCompat$Api34Impl: ServiceCompat$Api34Impl()
kotlinx.coroutines.DisposeOnCompletion: DisposeOnCompletion(kotlinx.coroutines.DisposableHandle)
androidx.core.view.WindowInsetsControllerCompat: void setSystemBarsBehavior(int)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
kotlin.collections.builders.MapBuilder: void removeHashAt(int)
androidx.core.app.NotificationCompat: int getActionCount(android.app.Notification)
kotlinx.coroutines.flow.FlowKt__TransformKt: kotlinx.coroutines.flow.Flow filterIsInstance(kotlinx.coroutines.flow.Flow)
io.flutter.embedding.engine.systemchannels.ScribeChannel: io.flutter.embedding.engine.systemchannels.ScribeChannel$ScribeMethodHandler access$000(io.flutter.embedding.engine.systemchannels.ScribeChannel)
androidx.fragment.app.strictmode.GetTargetFragmentRequestCodeUsageViolation: GetTargetFragmentRequestCodeUsageViolation(androidx.fragment.app.Fragment)
androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract getContract()
androidx.fragment.app.FragmentManager$8: void onActivityResult(androidx.activity.result.ActivityResult)
kotlin.collections.MapsKt__MapsKt: void minusAssign(java.util.Map,kotlin.sequences.Sequence)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SpellCheckChannel getSpellCheckChannel()
kotlin.io.encoding.Base64: int encodeIntoByteArrayImpl$kotlin_stdlib(byte[],byte[],int,int,int)
io.flutter.plugin.platform.PlatformViewWrapper$1: void onGlobalFocusChanged(android.view.View,android.view.View)
kotlin.ranges.UIntRange: int hashCode()
kotlin.comparisons.ReversedComparator: ReversedComparator(java.util.Comparator)
kotlin.ranges.CharRange: boolean contains(java.lang.Comparable)
androidx.core.app.NotificationChannelCompat$Api26Impl: int getLightColor(android.app.NotificationChannel)
androidx.window.embedding.SplitController$SplitSupportStatus$Companion: SplitController$SplitSupportStatus$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.flow.FlowKt: java.lang.Object fold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation)
androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)
kotlin.collections.ArrayDeque: void addLast(java.lang.Object)
kotlin.UInt: long mod-VKZWuLQ(int,long)
kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEqualsNullable(char[],char[])
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.UIntArray: int[] constructor-impl(int[])
androidx.fragment.app.SpecialEffectsController: android.view.ViewGroup getContainer()
kotlin.jvm.internal.ClassReference: java.util.List getAnnotations()
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void enqueueWork(android.content.Intent)
kotlin.io.path.OnErrorResult: kotlin.io.path.OnErrorResult valueOf(java.lang.String)
androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator: java.lang.Object hasNextOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation)
kotlin.text.StringsKt___StringsKt: java.util.Collection mapTo(java.lang.CharSequence,java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.MenuHostHelper: void lambda$addMenuProvider$1(androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.InterruptibleKt$runInterruptible$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.res.TypedArrayKt: void checkAttribute(android.content.res.TypedArray,int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$take$1: ChannelsKt__DeprecatedKt$take$1(int,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
kotlinx.coroutines.sync.Mutex$DefaultImpls: void unlock$default(kotlinx.coroutines.sync.Mutex,java.lang.Object,int,java.lang.Object)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getUserDisplayName()
org.intellij.lang.annotations.MagicConstant: java.lang.Class flagsFromClass()
kotlin.collections.CollectionsKt___CollectionsJvmKt: java.lang.Comparable min(java.lang.Iterable)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setSystemUiFlag(int)
com.getkeepsafe.relinker.ApkLibraryInstaller: java.lang.String[] getSupportedABIs(android.content.Context,java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: int codePointAt(java.lang.String,int)
androidx.versionedparcelable.VersionedParcel: long[] readLongArray()
androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(java.lang.Iterable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()
kotlin.jvm.functions.Function5: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.util.SparseLongArrayKt: boolean containsKey(android.util.SparseLongArray,int)
kotlin.collections.ArraysKt___ArraysKt: long sumOfLong(java.lang.Object[],kotlin.jvm.functions.Function1)
androidx.core.provider.FontRequest: java.lang.String getQuery()
kotlin.time.Duration: double getInMicroseconds-impl(long)
kotlinx.coroutines.CompletableDeferred$DefaultImpls: void cancel(kotlinx.coroutines.CompletableDeferred)
androidx.lifecycle.Transformations$sam$androidx_lifecycle_Observer$0: void onChanged(java.lang.Object)
kotlin.math.MathKt__MathJVMKt: double max(double,double)
androidx.core.R$styleable: R$styleable()
androidx.core.graphics.BitmapKt: android.graphics.Bitmap scale$default(android.graphics.Bitmap,int,int,boolean,int,java.lang.Object)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.lifecycle.LiveData$ObserverWrapper: LiveData$ObserverWrapper(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
androidx.core.content.PackageManagerCompat: PackageManagerCompat()
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
androidx.core.provider.FontProvider$ContentQueryWrapperApi16Impl: void close()
androidx.profileinstaller.ProfileInstaller: void diagnostic(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$minWith$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void popSystemNavigator()
androidx.collection.CircularArray: void clear()
kotlin.UShortArray: boolean contains(java.lang.Object)
androidx.core.app.Person$Builder: Person$Builder()
androidx.lifecycle.CoroutineLiveDataKt$addDisposableSource$2$1: CoroutineLiveDataKt$addDisposableSource$2$1(androidx.lifecycle.MediatorLiveData)
kotlin.collections.ArraysKt___ArraysKt: void reverse(double[])
androidx.core.animation.AnimatorKt$addListener$4: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double component2(double[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object elementAt(java.lang.Iterable,int)
kotlinx.coroutines.flow.FlowKt: java.lang.Object collect(kotlinx.coroutines.flow.Flow,kotlin.coroutines.Continuation)
kotlin.collections.SetsKt__SetsKt: java.util.Set buildSet(kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.PendingIntent getIntent()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
androidx.core.text.BidiFormatter: boolean getStereoReset()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
kotlin.UnsafeLazyImpl: java.lang.Object getValue()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
kotlin.ranges.OpenEndRange: boolean isEmpty()
kotlin.jvm.internal.FloatSpreadBuilder: float[] toArray()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
kotlin.jvm.internal.PropertyReference2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,java.util.Map,kotlin.coroutines.Continuation)
kotlin.jvm.internal.Reflection: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2: FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function5)
kotlinx.coroutines.JobSupport: java.lang.Void loopOnState(kotlin.jvm.functions.Function1)
kotlin.UInt: boolean equals-impl(int,java.lang.Object)
kotlin.sequences.MergingSequence$iterator$1: java.lang.Object next()
androidx.window.embedding.SafeActivityEmbeddingComponentProvider: boolean canUseActivityEmbeddingComponent()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounce$2: java.lang.Long invoke(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobKt: kotlinx.coroutines.DisposableHandle disposeOnCompletion(kotlinx.coroutines.Job,kotlinx.coroutines.DisposableHandle)
kotlin.ULong: long minus-VKZWuLQ(long,long)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: WindowInsetsAnimationControllerCompat$Impl30(android.view.WindowInsetsAnimationController)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.adapter.WindowBackend getExtensionBackend$window_release()
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt$copyToRecursively$3: java.lang.Void invoke(java.nio.file.Path,java.nio.file.Path,java.lang.Exception)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChangeCommitted(androidx.fragment.app.Fragment,boolean)
androidx.core.view.NestedScrollingParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.fragment.app.SpecialEffectsController: void enqueue$lambda$4$lambda$2(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Map groupByTo(int[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.util.List runningReduce(short[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt: java.util.List toList(double[])
kotlinx.coroutines.CancellableContinuationKt: java.lang.Object suspendCancellableCoroutineReusable$$forInline(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
io.flutter.embedding.android.FlutterFragment: boolean isFlutterEngineInjected()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sliceArray(java.lang.Object[],java.util.Collection)
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface: void detachFromActivityForConfigChanges()
io.flutter.view.AccessibilityBridge: void access$300(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
kotlin.comparisons.ComparisonsKt___ComparisonsKt: java.lang.Object maxOf(java.lang.Object,java.lang.Object,java.util.Comparator)
kotlin.ranges.RangesKt___RangesKt: java.lang.Byte toByteExactOrNull(int)
androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2: void invoke()
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl$translateParentMetricsPredicate$1: java.lang.Boolean invoke(android.view.WindowMetrics)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] toUShortArray(kotlin.UShort[])
kotlin.time.TimeMark$DefaultImpls: kotlin.time.TimeMark minus-LRDsOJo(kotlin.time.TimeMark,long)
kotlinx.coroutines.internal.InlineList: java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object)
kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.StateFlow)
kotlin.collections.ArraysKt___ArraysKt: float[] onEach(float[],kotlin.jvm.functions.Function1)
androidx.loader.app.LoaderManager: boolean hasRunningLoaders()
kotlinx.coroutines.sync.MutexImpl: void getOnLock$annotations()
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
androidx.core.app.JobIntentService$WorkEnqueuer: void serviceProcessingStarted()
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: BufferedChannel(int,kotlin.jvm.functions.Function1,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double reduceRightIndexedOrNull(double[],kotlin.jvm.functions.Function3)
kotlinx.coroutines.sync.MutexImpl: boolean tryLock(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
kotlin.collections.ArraysKt___ArraysKt: double[] onEachIndexed(double[],kotlin.jvm.functions.Function2)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
kotlin.sequences.FilteringSequence$iterator$1: FilteringSequence$iterator$1(kotlin.sequences.FilteringSequence)
kotlinx.coroutines.internal.ThreadLocalKey: kotlinx.coroutines.internal.ThreadLocalKey copy$default(kotlinx.coroutines.internal.ThreadLocalKey,java.lang.ThreadLocal,int,java.lang.Object)
kotlinx.coroutines.JobSupport: boolean isActive()
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.profileinstaller.ProfileTranscoder: androidx.profileinstaller.DexProfileData[] readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: boolean contains(float)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getContentUri()
kotlin.text.StringsKt___StringsKt: java.util.List windowed(java.lang.CharSequence,int,int,boolean)
androidx.window.embedding.SplitPairRule$Builder: androidx.window.embedding.SplitPairRule$Builder setFinishSecondaryWithPrimary(androidx.window.embedding.SplitRule$FinishBehavior)
kotlinx.coroutines.CoroutineScopeKt: java.lang.Object currentCoroutineContext$$forInline(kotlin.coroutines.Continuation)
com.getkeepsafe.relinker.BuildConfig: BuildConfig()
kotlin.collections.ArraysKt___ArraysKt: int random(int[])
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String)
kotlin.io.path.PathsKt__PathReadWriteKt: byte[] readBytes(java.nio.file.Path)
kotlinx.coroutines.CancellableContinuationImpl: void detachChildIfNonResuable()
androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.TransparencyMode)
kotlin.concurrent.TimersKt: java.util.Timer timer(java.lang.String,boolean)
kotlin.collections.ArraysKt___ArraysKt: byte first(byte[])
kotlin.collections.CollectionsKt___CollectionsKt: float minOrThrow(java.lang.Iterable)
kotlin.ranges.RangesKt___RangesKt: long coerceIn(long,kotlin.ranges.ClosedRange)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer singleOrNull(int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)
androidx.core.animation.AnimatorKt$addListener$2: AnimatorKt$addListener$2()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
kotlin.text.StringsKt___StringsKt: java.util.List mapIndexedNotNull(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] reset()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
androidx.lifecycle.viewmodel.R$id: R$id()
androidx.window.area.WindowAreaControllerImpl: void updateRearDisplayPresentationAvailability(androidx.window.extensions.area.ExtensionWindowAreaStatus)
kotlin.UByteArray: boolean retainAll(java.util.Collection)
kotlinx.coroutines.flow.FlowKt__MergeKt: kotlinx.coroutines.flow.Flow flattenMerge$default(kotlinx.coroutines.flow.Flow,int,int,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$2: int lastIndexOf(short)
android.support.v4.app.INotificationSideChannel$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(char[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$1: java.lang.Object invoke()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
kotlin.time.AbstractLongTimeSource$LongTimeMark: int compareTo(java.lang.Object)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)
androidx.concurrent.futures.AbstractResolvableFuture: void maybePropagateCancellationTo(java.util.concurrent.Future)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: AccessibilityNodeInfoCompat$CollectionItemInfoCompat(java.lang.Object)
androidx.core.location.GpsStatusWrapper: boolean hasCarrierFrequencyHz(int)
androidx.core.widget.ContentLoadingProgressBar: void hideOnUiThread()
com.getkeepsafe.relinker.elf.ElfParser: java.util.List parseNeededDependencies()
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews createHeadsUpContentView()
kotlinx.coroutines.DispatchedTaskKt: void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean)
androidx.viewpager.R$color: R$color()
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
kotlin.text.DelimitedRangesSequence$iterator$1: void setNextItem(kotlin.ranges.IntRange)
kotlinx.coroutines.flow.internal.ChannelFlow: kotlinx.coroutines.flow.Flow dropChannelOperators()
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$Api23Impl: boolean hasEnrolledFingerprints(java.lang.Object)
androidx.fragment.app.Fragment$8: androidx.activity.result.ActivityResultRegistry apply(java.lang.Void)
kotlinx.coroutines.JobSupport: java.lang.Object awaitSuspend(kotlin.coroutines.Continuation)
kotlin.jvm.internal.ClassReference: void getTypeParameters$annotations()
kotlin.collections.MutableMapWithDefaultImpl: java.lang.Object get(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void share(java.lang.String)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$dropWhile$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(androidx.fragment.app.FragmentTransaction$Op)
androidx.fragment.app.FragmentManager: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.os.Bundle toBundle()
kotlin.collections.builders.SerializedMap: SerializedMap()
kotlinx.coroutines.internal.AtomicOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
kotlin.collections.MapsKt___MapsKt: java.util.List flatMapSequence(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List requireNoNulls(java.util.List)
kotlinx.coroutines.flow.SharedFlowImpl$Emitter: void dispose()
kotlin.jvm.internal.DoubleCompanionObject: DoubleCompanionObject()
androidx.annotation.InspectableProperty$FlagEntry: int mask()
kotlin.collections.ArraysKt___ArraysKt: boolean isNotEmpty(char[])
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: long getTransitionTimeMillis()
kotlin.jvm.internal.InlineMarker: void mark(java.lang.String)
kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow asFlow(kotlin.jvm.functions.Function0)
androidx.core.widget.ContentLoadingProgressBar: void lambda$new$1()
kotlinx.coroutines.flow.SharedFlowSlot: boolean allocateLocked(java.lang.Object)
androidx.core.view.PointerIconCompat$Api24Impl: PointerIconCompat$Api24Impl()
androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)
kotlin.sequences.SequencesKt___SequencesKt: void forEachIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void close()
kotlin.io.encoding.EncodeOutputStream: EncodeOutputStream(java.io.OutputStream,kotlin.io.encoding.Base64)
androidx.core.view.ViewKt$doOnPreDraw$1: void run()
kotlinx.coroutines.DispatchersKt: void getIO$annotations(kotlinx.coroutines.Dispatchers)
kotlin.sequences.SequencesKt___SequencesKt$runningFoldIndexed$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
kotlin.collections.ArraysKt___ArraysKt: double minOf(char[],kotlin.jvm.functions.Function1)
androidx.loader.content.Loader$ForceLoadContentObserver: Loader$ForceLoadContentObserver(androidx.loader.content.Loader)
kotlin.io.ByteStreamsKt: java.io.BufferedWriter bufferedWriter$default(java.io.OutputStream,java.nio.charset.Charset,int,java.lang.Object)
kotlin.reflect.WildcardTypeImpl$Companion: kotlin.reflect.WildcardTypeImpl getSTAR()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $values()
kotlinx.coroutines.flow.SharedFlowImpl: java.lang.Object emit$suspendImpl(kotlinx.coroutines.flow.SharedFlowImpl,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-rL5Bavg(short[])
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float randomOrNull(float[])
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filter$default(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Effect: boolean isSeekingSupported()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningFold-yXmHNn8(byte[],java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverControlSurface: void detachFromBroadcastReceiver()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.activity.FullyDrawnReporter: void postWhenReportersAreDone()
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$2: int compare(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
androidx.core.content.res.TypedArrayKt: android.content.res.ColorStateList getColorStateListOrThrow(android.content.res.TypedArray,int)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void onStart$lambda$6$lambda$4(kotlin.jvm.internal.Ref$ObjectRef)
androidx.core.internal.view.SupportMenuItem: boolean isActionViewExpanded()
androidx.lifecycle.ViewModelLazy: ViewModelLazy(kotlin.reflect.KClass,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.io.path.PathsKt__PathReadWriteKt: void forEachLine(java.nio.file.Path,java.nio.charset.Charset,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport$onAwaitInternal$2: java.lang.Object invoke(kotlinx.coroutines.JobSupport,java.lang.Object,java.lang.Object)
kotlin.sequences.TakeWhileSequence$iterator$1: java.util.Iterator getIterator()
kotlinx.coroutines.sync.SemaphoreImpl: void onAcquireRegFunction(kotlinx.coroutines.selects.SelectInstance,java.lang.Object)
androidx.core.widget.AutoScrollHelper$ClampedScroller: boolean isFinished()
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(short[],kotlin.ranges.IntRange)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
androidx.fragment.app.FragmentTransitionImpl: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean)
kotlin.time.Duration$Companion: long getNanoseconds-UwyO8pc(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort lastOrNull-rL5Bavg(short[])
kotlinx.coroutines.ParentJob$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.ParentJob,kotlin.coroutines.CoroutineContext$Key)
android.support.v4.os.IResultReceiver2$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat$Builder setSelected(boolean)
kotlin.collections.ArraysKt___ArraysKt: java.util.List slice(long[],java.lang.Iterable)
kotlin.sequences.FlatteningSequence: java.util.Iterator iterator()
kotlinx.coroutines.channels.ChannelKt: java.lang.Object getOrElse-WpGqRn0(java.lang.Object,kotlin.jvm.functions.Function1)
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.PlatformViewRenderTarget,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.core.graphics.PathUtils$Api26Impl: float[] approximate(android.graphics.Path,float)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set toSet(double[])
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
kotlin.reflect.TypesJVMKt: java.lang.reflect.Type getJavaType(kotlin.reflect.KType)
androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.fragment.app.FragmentManager$8: void onActivityResult(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isDismissable()
androidx.core.provider.FontsContractCompat$FontRequestCallback: FontsContractCompat$FontRequestCallback()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: double toDouble(java.lang.String)
kotlin.collections.CollectionsKt__CollectionsKt: java.lang.Object ifEmpty(java.util.Collection,kotlin.jvm.functions.Function0)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: AccessibilityDelegateCompat$AccessibilityDelegateAdapter(androidx.core.view.AccessibilityDelegateCompat)
androidx.activity.OnBackPressedDispatcher$addCallback$1: void invoke()
kotlin.collections.ArraysKt___ArraysKt: void reverse(float[],int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(short[],java.lang.Iterable)
kotlinx.coroutines.selects.SelectImplementation$ClauseData: SelectImplementation$ClauseData(kotlinx.coroutines.selects.SelectImplementation,java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: DrawableCompat$Api21Impl()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.customview.widget.ViewDragHelper: int getEdgeSize()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ranges.IntRange getIndices-GBYM_sE(byte[])
kotlin.collections.unsigned.UArraysKt___UArraysKt: short[] sortedArrayDescending-rL5Bavg(short[])
kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask: EventLoopImplBase$DelayedRunnableTask(long,java.lang.Runnable)
androidx.core.os.ParcelCompat$Api29Impl: java.util.List readParcelableList(android.os.Parcel,java.util.List,java.lang.ClassLoader)
androidx.lifecycle.viewmodel.MutableCreationExtras: MutableCreationExtras()
kotlin.text.StringsKt___StringsKt: java.util.List runningFoldIndexed(java.lang.CharSequence,java.lang.Object,kotlin.jvm.functions.Function3)
androidx.core.content.res.ResourcesCompat$FontCallback: android.os.Handler getHandler(android.os.Handler)
androidx.core.view.WindowInsetsAnimationCompat: androidx.core.view.WindowInsetsAnimationCompat toWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation)
androidx.core.location.LocationManagerCompat: void unregisterGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)
androidx.core.transition.TransitionKt$addListener$3: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: double maxWithOrThrow(double[],java.util.Comparator)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.core.view.inputmethod.InputConnectionCompat$Api25Impl: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.util.LongSparseArrayKt: boolean remove(android.util.LongSparseArray,long,java.lang.Object)
kotlinx.coroutines.scheduling.LimitingDispatcher: void close()
androidx.fragment.app.Fragment$SavedState: int describeContents()
androidx.fragment.R$id: R$id()
kotlin.math.MathKt__MathHKt: MathKt__MathHKt()
kotlinx.coroutines.internal.ThreadLocalElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.versionedparcelable.VersionedParcelize: boolean ignoreParcelables()
kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl$creationStackTrace$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
org.jetbrains.annotations.Contract: java.lang.String value()
kotlinx.coroutines.debug.internal.DebuggerInfo: java.lang.String getName()
androidx.core.text.util.LocalePreferences: java.lang.String getFirstDayOfWeek()
kotlin.collections.ArraysKt___ArraysJvmKt: void sort(float[],int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
kotlin.ranges.URangesKt___URangesKt: long first(kotlin.ranges.ULongProgression)
androidx.versionedparcelable.VersionedParcel: void writeFloat(float)
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
kotlin.ULongArray: boolean equals-impl(long[],java.lang.Object)
androidx.core.view.ViewCompat: int resolveSizeAndState(int,int,int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterTo-oEOeDjA(short[],java.util.Collection,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.KeyEmbedderResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
kotlin.random.jdk8.PlatformThreadLocalRandom: PlatformThreadLocalRandom()
androidx.lifecycle.CoroutineLiveData$1: CoroutineLiveData$1(androidx.lifecycle.CoroutineLiveData)
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
kotlin.collections.ArraysKt___ArraysKt: java.util.List dropLast(float[],int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: android.graphics.Region getRegionAt(int)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(int[])
androidx.viewpager.widget.ViewPager: boolean canScrollHorizontally(int)
kotlin.io.path.PathsKt__PathRecursiveFunctionsKt: java.nio.file.Path copyToRecursively$default(java.nio.file.Path,java.nio.file.Path,kotlin.jvm.functions.Function3,boolean,boolean,int,java.lang.Object)
androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNotNullTo$3: ChannelsKt__DeprecatedKt$filterNotNullTo$3(kotlin.coroutines.Continuation)
kotlin.ranges.IntProgression: IntProgression(int,int,int)
kotlin.collections.ArraysKt___ArraysJvmKt: byte elementAt(byte[],int)
androidx.loader.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Void[])
io.flutter.embedding.android.KeyEmbedderResponder: long keyOfPlane(long,long)
androidx.concurrent.futures.DirectExecutor: void execute(java.lang.Runnable)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3: ChannelFlowTransformLatest$flowCollect$3(kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void aWindowIsFocused()
androidx.core.app.MultiWindowModeChangedInfo: MultiWindowModeChangedInfo(boolean)
androidx.core.text.util.LinkifyCompat$Api24Impl: LinkifyCompat$Api24Impl()
androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)
androidx.fragment.app.FragmentStore: void dispatchStateChange(int)
kotlin.jvm.internal.PropertyReference1: java.lang.Object getDelegate(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
kotlin.random.RandomKt: void checkRangeBounds(int,int)
androidx.fragment.app.FragmentTransition: FragmentTransition()
androidx.fragment.app.FragmentManager$RestoreBackStackState: FragmentManager$RestoreBackStackState(androidx.fragment.app.FragmentManager,java.lang.String)
kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$1$1$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.text.CharsKt__CharKt: char digitToChar(int)
androidx.core.animation.AnimatorKt$addListener$3: void invoke(android.animation.Animator)
kotlin.sequences.SequencesKt___SequencesKt$distinct$1: SequencesKt___SequencesKt$distinct$1()
kotlin.time.TimeSource$Monotonic$ValueTimeMark: boolean equals-impl(long,java.lang.Object)
io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder: io.flutter.embedding.android.FlutterFragment$NewEngineFragmentBuilder shouldAutomaticallyHandleOnBackPressed(boolean)
kotlinx.coroutines.DisposableFutureHandle: java.lang.String toString()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt$filterNot$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.EmbeddingRule: EmbeddingRule(java.lang.String)
androidx.fragment.app.DialogFragment: void onViewStateRestored(android.os.Bundle)
kotlin.time.DurationKt: void getMinutes$annotations(int)
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
androidx.versionedparcelable.ParcelUtils: void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream)
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService()
kotlin.jvm.internal.MutablePropertyReference2: kotlin.reflect.KProperty$Getter getGetter()
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,kotlin.ranges.ClosedRange)
io.flutter.plugin.platform.PlatformPlugin$2: void onSystemUiVisibilityChange(int)
androidx.core.app.NotificationCompat$Builder: android.app.Notification getNotification()
androidx.core.location.LocationManagerCompat$Api31Impl: boolean hasProvider(android.location.LocationManager,java.lang.String)
io.flutter.embedding.engine.FlutterEngineGroup: io.flutter.embedding.engine.FlutterEngine createAndRunEngine(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
androidx.viewpager.widget.ViewPager: int getChildDrawingOrder(int,int)
androidx.fragment.app.FragmentHostCallback: java.lang.Object onGetHost()
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map associateTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
kotlin.collections.AbstractMutableSet: int size()
kotlin.ULongArray: boolean addAll(java.util.Collection)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)
kotlin.time.LongSaturatedMathKt: long saturatingAdd-pTJri5U(long,long)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path Path(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.core.graphics.drawable.DrawableKt: android.graphics.Bitmap toBitmapOrNull(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config)
kotlin.io.path.PathTreeWalk: boolean access$getFollowLinks(kotlin.io.path.PathTreeWalk)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
androidx.core.util.PatternsCompat: PatternsCompat()
kotlin.internal.jdk7.JDK7PlatformImplementations: boolean sdkIsNullOrAtLeast(int)
kotlinx.coroutines.DispatchedTask: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort singleOrNull-rL5Bavg(short[])
kotlin.collections.ArrayDeque: ArrayDeque(int)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int[] reversedArray--ajY-9A(int[])
androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean onStopJob(android.app.job.JobParameters)
androidx.profileinstaller.ProfileInstaller: void writeProfile(android.content.Context)
kotlin.math.MathKt__MathJVMKt: float asinh(float)
io.flutter.plugin.platform.PlatformViewsController: boolean access$1600(int)
kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger unaryMinus(java.math.BigInteger)
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List zip-ctEhBpI(int[],int[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler: void restoreSystemUiOverlays()
androidx.core.graphics.ColorUtils: int constrain(int,int,int)
androidx.core.content.IntentSanitizer$Builder: boolean lambda$allowAnyComponent$10(android.content.ComponentName)
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: LocationManagerCompat$PreRGnssStatusTransport(androidx.core.location.GnssStatusCompat$Callback)
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1: java.lang.Object invoke()
kotlin.collections.AbstractList: java.lang.Object remove(int)
androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace)
kotlinx.coroutines.channels.BufferedChannel: void onReceiveDequeued()
kotlin.collections.ArraysKt___ArraysKt: float[] onEachIndexed(float[],kotlin.jvm.functions.Function2)
kotlin.time.Duration$Companion: void getMinutes-UwyO8pc$annotations(int)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: EventChannel$IncomingStreamRequestHandler(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minByOrThrow(java.util.Map,kotlin.jvm.functions.Function1)
kotlin.UShort: short toUShort-Mh2AYeg(short)
kotlin.io.path.PathsKt__PathReadWriteKt: java.nio.file.Path writeLines(java.nio.file.Path,kotlin.sequences.Sequence,java.nio.charset.Charset,java.nio.file.OpenOption[])
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher()
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(char[],kotlin.jvm.functions.Function1)
androidx.core.graphics.RectKt: float component3(android.graphics.RectF)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()
androidx.core.content.IntentSanitizer$Api31Impl: IntentSanitizer$Api31Impl()
androidx.window.embedding.SplitPlaceholderRule: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer lastOrNull(int[])
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.lang.Iterable)
androidx.window.embedding.EmbeddingAdapter$VendorApiLevel1Impl: androidx.window.extensions.embedding.SplitPlaceholderRule translateSplitPlaceholderRuleCompat(android.content.Context,androidx.window.embedding.SplitPlaceholderRule,java.lang.Class)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
kotlin.PreconditionsKt__AssertionsJVMKt: void assert(boolean,kotlin.jvm.functions.Function0)
kotlinx.coroutines.internal.ThreadLocalElement: java.lang.String toString()
androidx.activity.OnBackPressedCallback: kotlin.jvm.functions.Function0 getEnabledChangedCallback$activity_release()
kotlin.collections.ArraysKt___ArraysJvmKt$asList$4: boolean contains(long)
androidx.fragment.app.FragmentManager: void setFragmentResult(java.lang.String,android.os.Bundle)
kotlin.reflect.KFunction$DefaultImpls: void isSuspend$annotations()
kotlinx.coroutines.internal.ExceptionsConstructorKt$safeCtor$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: boolean contains(java.lang.Object)
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
androidx.core.math.MathUtils: int addExact(int,int)
androidx.activity.result.contract.ActivityResultContracts$CaptureVideo: android.content.Intent createIntent(android.content.Context,java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: void dropFirstElementUntilTheSpecifiedCellIsInTheBuffer(long)
androidx.core.app.NotificationCompat$Action: boolean getAllowGeneratedReplies()
androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)
kotlinx.coroutines.CompletedContinuation: boolean equals(java.lang.Object)
kotlin.time.Duration: void getInMilliseconds$annotations()
androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)
androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.activity.contextaware.ContextAware: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.core.graphics.BitmapCompat: int getAllocationByteCount(android.graphics.Bitmap)
kotlin.text.StringsKt__StringsJVMKt: java.util.List split(java.lang.CharSequence,java.util.regex.Pattern,int)
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
kotlin.io.path.PathsKt__PathUtilsKt: java.lang.String getNameWithoutExtension(java.nio.file.Path)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Iterable,kotlin.jvm.functions.Function2)
kotlin.io.encoding.Base64$Default: Base64$Default()
androidx.activity.ComponentActivity: void onConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.text.StringsKt__StringsKt: boolean hasSurrogatePairAt(java.lang.CharSequence,int)
androidx.core.graphics.drawable.BitmapDrawableKt: android.graphics.drawable.BitmapDrawable toDrawable(android.graphics.Bitmap,android.content.res.Resources)
androidx.core.app.NotificationCompat$Api28Impl: int getSemanticAction(android.app.Notification$Action)
kotlin.collections.ArraysKt___ArraysKt: boolean component5(boolean[])
androidx.core.animation.AnimatorKt$addListener$listener$1: void onAnimationStart(android.animation.Animator)
kotlin.UShort: int floorDiv-WZ4Q5Ns(short,int)
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1: void onAnimationCancel(android.animation.Animator)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: boolean isFinished()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isFullScreen()
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getLastIndex-rL5Bavg$annotations(short[])
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
kotlinx.coroutines.channels.ConflatedBroadcastChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
kotlinx.coroutines.flow.FlowKt__CountKt$count$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1: FlowKt__ChannelsKt$emitAllImpl$1(kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.WrappedDrawableApi14: void onBoundsChange(android.graphics.Rect)
androidx.core.app.ComponentActivity: void getExtraDataMap$annotations()
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addHistoricMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)
androidx.core.graphics.TypefaceCompatBaseImpl$3: int getWeight(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder clearPeople()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Object recoverAndThrow(java.lang.Throwable,kotlin.coroutines.Continuation)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
kotlin.collections.ArraysKt___ArraysKt: kotlin.Pair partition(byte[],kotlin.jvm.functions.Function1)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1: FlowKt__ZipKt$combineUnsafe$1$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.SynchronizedLazyImpl: java.lang.Object getValue()
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setUniqueId(java.lang.String)
kotlin.UInt: int compareTo(java.lang.Object)
androidx.startup.Initializer: java.lang.Object create(android.content.Context)
androidx.core.location.LocationRequestCompat$Api19Impl: LocationRequestCompat$Api19Impl()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int getType()
kotlin.collections.ArraysKt___ArraysKt: java.util.List take(long[],int)
kotlin.properties.ObservableProperty: java.lang.Object getValue(java.lang.Object,kotlin.reflect.KProperty)
kotlin.text.StringsKt___StringsKt: java.lang.Character reduceRightIndexedOrNull(java.lang.CharSequence,kotlin.jvm.functions.Function3)
io.flutter.plugin.platform.VirtualDisplayController: void resetSurface()
androidx.core.graphics.RectKt: android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF)
io.flutter.plugin.common.PluginRegistry$WindowFocusChangedListener: void onWindowFocusChanged(boolean)
kotlin.collections.ArraysKt__ArraysKt: ArraysKt__ArraysKt()
io.flutter.embedding.engine.systemchannels.KeyboardChannel: void setKeyboardMethodHandler(io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler)
androidx.collection.LruCache: int size()
kotlin.UShortArrayKt: short[] ushortArrayOf-rL5Bavg(short[])
androidx.core.view.ViewGroupCompat: void setLayoutMode(android.view.ViewGroup,int)
androidx.core.widget.ImageViewCompat: ImageViewCompat()
kotlin.ULong: int compareTo-7apg3OU(long,byte)
androidx.window.area.WindowAreaCapability: boolean equals(java.lang.Object)
androidx.core.graphics.WeightTypefaceApi26: android.graphics.Typeface create(long)
androidx.versionedparcelable.VersionedParcelStream: java.lang.String readString()
androidx.core.location.LocationRequestCompat$Api31Impl: LocationRequestCompat$Api31Impl()
kotlinx.coroutines.channels.ReceiveCatching: ReceiveCatching(kotlinx.coroutines.CancellableContinuationImpl)
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
kotlin.collections.CollectionsKt__CollectionsKt$binarySearchBy$1: CollectionsKt__CollectionsKt$binarySearchBy$1(kotlin.jvm.functions.Function1,java.lang.Comparable)
kotlinx.coroutines.sync.MutexImpl$CancellableContinuationWithOwner: void completeResume(java.lang.Object)
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.random.URandomKt: byte[] nextUBytes-EVgfTAA(kotlin.random.Random,byte[])
kotlin.collections.CollectionsKt__CollectionsKt: int binarySearch$default(java.util.List,int,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: WindowInsetsAnimationCompat$BoundsCompat(android.view.WindowInsetsAnimation$Bounds)
androidx.core.animation.AnimatorKt$addPauseListener$1: java.lang.Object invoke(java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper: boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(char[],java.lang.Iterable)
kotlin.collections.ArraysKt___ArraysKt: double minOrThrow(java.lang.Double[])
kotlin.UInt: int compareTo-WZ4Q5Ns(int)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List zipWithNext(java.lang.Iterable)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,char[],boolean,int)
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[])
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.core.Bounds: Bounds(int,int,int,int)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)
androidx.window.layout.adapter.extensions.ExtensionWindowBackend: void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.UShortArray: boolean containsAll-impl(short[],java.util.Collection)
kotlinx.coroutines.channels.ChannelResult: boolean equals-impl(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.app.NotificationCompat$InboxStyle: void clearCompatExtraKeys(android.os.Bundle)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection filterTo(float[],java.util.Collection,kotlin.jvm.functions.Function1)
androidx.core.view.ViewPropertyAnimatorCompat: void start()
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long reduceIndexed-z1zDJgo(long[],kotlin.jvm.functions.Function3)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: long minOf(long,long[])
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.flow.FlowKt__CollectKt$collectIndexed$2$emit$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellationImpl(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
kotlin.collections.MapWithDefaultImpl: java.lang.Object put(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: void reverse(char[])
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
io.flutter.embedding.android.KeyboardMap$PressingGoal: KeyboardMap$PressingGoal(int,io.flutter.embedding.android.KeyboardMap$KeyPair[])
kotlin.collections.MapsKt___MapsKt: java.lang.Object maxOfWithOrNull(java.util.Map,java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.lifecycle.FlowLiveDataConversions$asFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
kotlin.time.AbstractDoubleTimeSource$DoubleTimeMark: boolean hasPassedNow()
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
kotlin.sequences.SequencesKt___SequencesKt$filterNotNull$1: java.lang.Boolean invoke(java.lang.Object)
kotlinx.coroutines.ParentJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.ParentJob,kotlinx.coroutines.Job)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityEventCompat: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityEvent,boolean)
kotlin.UByte: int minus-7apg3OU(byte,byte)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRequestInitialAccessibilityFocus(boolean)
androidx.core.view.ViewCompat: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler: void show()
androidx.lifecycle.LifecycleCoroutineScope$launchWhenCreated$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String)
io.flutter.embedding.engine.systemchannels.BackGestureChannel: BackGestureChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.window.area.WindowAreaController$-CC: void overrideDecorator(androidx.window.area.WindowAreaControllerDecorator)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer getContainer()
kotlinx.coroutines.flow.internal.ChannelFlowOperator: java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence flatten$SequencesKt__SequencesKt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.window.layout.adapter.extensions.MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
androidx.core.widget.ImageViewCompat$Api21Impl: ImageViewCompat$Api21Impl()
androidx.window.area.WindowAreaControllerImpl: androidx.window.extensions.area.WindowAreaComponent access$getWindowAreaComponent$p(androidx.window.area.WindowAreaControllerImpl)
androidx.lifecycle.SavedStateHandle: void set(java.lang.String,java.lang.Object)
kotlin.properties.Delegates$vetoable$1: boolean beforeChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: android.content.Context getContext()
kotlin.collections.ArraysKt___ArraysKt: java.util.Map associateWithTo(java.lang.Object[],java.util.Map,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentController: androidx.collection.SimpleArrayMap retainLoaderNonConfig()
kotlin.io.path.ExceptionsCollector: void exitEntry(java.nio.file.Path)
kotlinx.coroutines.channels.BufferedChannel: void markClosed()
kotlin.sequences.USequencesKt___USequencesKt: USequencesKt___USequencesKt()
kotlin.ranges.OpenEndDoubleRange: boolean contains(double)
kotlin.io.FilesKt__UtilsKt: java.lang.String toRelativeString(java.io.File,java.io.File)
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1: ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1(java.lang.Object)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short maxWithOrThrow-U(short[],java.util.Comparator)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
androidx.core.service.quicksettings.TileServiceCompat: TileServiceCompat()
androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)
com.getkeepsafe.relinker.ReLinkerInstance: void loadLibrary(android.content.Context,java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$PickVisualMedia$Companion: ActivityResultContracts$PickVisualMedia$Companion()
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.Collection filterIndexedTo-QqktQ3k(short[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
kotlin.collections.MovingSubList: MovingSubList(java.util.List)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
androidx.viewpager.widget.ViewPager: void dispatchOnScrollStateChanged(int)
kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)
kotlin.io.ByteStreamsKt$iterator$1: void prepareNext()
kotlinx.coroutines.internal.CtorCache: CtorCache()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: java.lang.String toString(long,int)
kotlin.collections.CollectionsKt___CollectionsKt: double maxOf(java.lang.Iterable,kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: boolean reduceRight(boolean[],kotlin.jvm.functions.Function2)
kotlin.collections.ArraysKt___ArraysKt$withIndex$1: java.lang.Object invoke()
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
kotlinx.coroutines.flow.internal.ChannelFlowMerge: kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope)
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree: ActivityResultContracts$OpenDocumentTree()
androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)
kotlin.collections.EmptyList: boolean add(java.lang.Void)
androidx.loader.content.CursorLoader: void cancelLoadInBackground()
kotlin.io.FileTreeWalk: kotlin.io.FileTreeWalk onFail(kotlin.jvm.functions.Function2)
kotlin.ranges.LongRange: java.lang.Comparable getEndInclusive()
androidx.core.os.EnvironmentCompat$Api21Impl: java.lang.String getExternalStorageState(java.io.File)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()
androidx.collection.LongSparseArray: boolean isEmpty()
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object access$getInternalResult$p(kotlinx.coroutines.selects.SelectImplementation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
androidx.core.view.WindowInsetsAnimationControllerCompat: boolean isReady()
kotlinx.coroutines.debug.internal.DebugProbesImpl: java.lang.String enhanceStackTraceWithThreadDumpAsJson(kotlinx.coroutines.debug.internal.DebugCoroutineInfo)
kotlin.collections.ArraysKt___ArraysKt: java.util.List zip(byte[],java.lang.Object[],kotlin.jvm.functions.Function2)
kotlinx.coroutines.selects.SelectImplementation: void register$default(kotlinx.coroutines.selects.SelectImplementation,kotlinx.coroutines.selects.SelectImplementation$ClauseData,boolean,int,java.lang.Object)
kotlin.UShort: short dec-Mh2AYeg(short)
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
kotlin.random.KotlinRandom: boolean nextBoolean()
kotlin.text.StringsKt___StringsKt: char maxWithOrThrow(java.lang.CharSequence,java.util.Comparator)
androidx.core.app.NotificationCompat$Style: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
kotlin.jvm.functions.Function16: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.text.StringsKt___StringsKt: java.lang.Character lastOrNull(java.lang.CharSequence)
kotlinx.coroutines.channels.ProduceKt$awaitClose$2: void invoke()
kotlinx.coroutines.flow.FlowKt__DelayKt$debounceInternal$1$3$1: FlowKt__DelayKt$debounceInternal$1$3$1(kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.internal.Ref$ObjectRef,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$delayFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.RectKt: android.graphics.RectF toRectF(android.graphics.Rect)
kotlin.coroutines.CombinedContext$Serialized: kotlin.coroutines.CoroutineContext[] getElements()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
kotlin.comparisons.ReversedComparator: java.util.Comparator reversed()
kotlin.random.AbstractPlatformRandom: java.util.Random getImpl()
androidx.core.util.LruCacheKt$lruCache$4: java.lang.Object create(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
kotlin.sequences.SequencesKt___SequencesKt$runningReduce$1: SequencesKt___SequencesKt$runningReduce$1(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.SelectKt: kotlinx.coroutines.selects.TrySelectDetailedResult access$TrySelectDetailedResult(int)
kotlin.reflect.ParameterizedTypeImpl: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
androidx.core.util.SizeFCompat: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransaction: int commit()
kotlinx.coroutines.Empty: boolean isActive()
kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge$collectTo$2$1: ChannelLimitedFlowMerge$collectTo$2$1(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.internal.SendingCollector,kotlin.coroutines.Continuation)
android.support.v4.app.INotificationSideChannel$Stub: android.os.IBinder asBinder()
androidx.core.location.GnssStatusCompat: int getConstellationType(int)
kotlin.sequences.SequencesKt___SequencesKt: float maxOf(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.viewpager.widget.PagerTabStrip: int getTabIndicatorColor()
androidx.core.os.CancellationSignal: CancellationSignal()
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.core.graphics.drawable.IconCompat$Api23Impl: java.lang.String getResPackage(java.lang.Object)
androidx.startup.InitializationProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
androidx.concurrent.futures.AbstractResolvableFuture: boolean wasInterrupted()
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector$Builder setExecutorService(java.util.concurrent.ExecutorService)
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
kotlin.collections.CollectionsKt___CollectionsKt: kotlin.sequences.Sequence asSequence(java.lang.Iterable)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
androidx.core.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)
kotlin.collections.ArraysKt___ArraysKt: short single(short[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: byte reduceRightIndexed(byte[],kotlin.jvm.functions.Function3)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
androidx.core.app.ActivityOptionsCompat$Api24Impl: ActivityOptionsCompat$Api24Impl()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
kotlin.collections.ArrayAsCollection: ArrayAsCollection(java.lang.Object[],boolean)
kotlinx.coroutines.debug.internal.DebugProbesImpl: void build(kotlinx.coroutines.Job,java.util.Map,java.lang.StringBuilder,java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState()
androidx.lifecycle.LifecycleRegistry$Companion: LifecycleRegistry$Companion()
kotlin.text.MatcherMatchResult$groups$1: boolean contains(kotlin.text.MatchGroup)
kotlin.io.FileTreeWalk$FileTreeWalkIterator$SingleFileState: java.io.File step()
kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.UnsignedKt: java.lang.String ulongToString(long,int)
androidx.core.os.LocaleListCompat: int size()
kotlin.text.StringsKt__StringNumberConversionsJVMKt: long toLong(java.lang.String,int)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
androidx.core.util.RangeKt$toClosedRange$1: boolean isEmpty()
kotlin.jvm.optionals.OptionalsKt: java.util.Set toSet(java.util.Optional)
androidx.activity.result.ActivityResultCaller: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
io.flutter.plugin.common.ErrorLogResult: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlin.time.Duration: int getHoursComponent-impl(long)
kotlin.io.FilesKt__UtilsKt$copyRecursively$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.adapter.sidecar.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
kotlin.ranges.URangesKt___URangesKt: kotlin.UInt randomOrNull(kotlin.ranges.UIntRange,kotlin.random.Random)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api24Impl: AccessibilityWindowInfoCompat$Api24Impl()
kotlin.collections.ArraysKt___ArraysJvmKt: double[] copyOf(double[],int)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean removeAll(java.util.Collection,java.util.Collection)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List scan-zww5nb8(short[],java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.properties.ObservableProperty: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
androidx.core.util.SparseIntArrayKt$keyIterator$1: int nextInt()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getOpacity()
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCodeNullable(double[])
kotlinx.coroutines.flow.internal.AbstractSharedFlow: kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot()
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object updateCellReceive(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object)
androidx.window.embedding.EmbeddingBackend: boolean isActivityEmbedded(android.app.Activity)
androidx.core.os.LocaleListCompat: LocaleListCompat(androidx.core.os.LocaleListInterface)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat$Api26Impl: AccessibilityWindowInfoCompat$Api26Impl()
kotlinx.coroutines.channels.BufferedChannel: java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSendersAndCloseStatus$FU$p()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: CombineKt$zipImpl$1$1$2$1$1(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.flow.FlowCollector,kotlin.jvm.functions.Function3,java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.builders.ListBuilderKt: java.lang.Object[] arrayOfUninitializedElements(int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object last(java.util.List,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.OpDescriptor: java.lang.Object perform(java.lang.Object)
androidx.core.R$dimen: R$dimen()
androidx.core.widget.ContentLoadingProgressBar: void hide()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.SourceDebugExtension: java.lang.String[] value()
kotlin.sequences.SequencesKt___SequencesKt$flatMap$1: java.util.Iterator invoke(java.lang.Iterable)
kotlinx.coroutines.flow.FlowKt__CountKt$count$4$emit$1: FlowKt__CountKt$count$4$emit$1(kotlinx.coroutines.flow.FlowKt__CountKt$count$4,kotlin.coroutines.Continuation)
androidx.core.animation.AnimatorKt$addListener$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.TypeIntrinsics: java.util.Set castToSet(java.lang.Object)
kotlin.ranges.ULongProgression: long getFirst-s-VKNKU()
androidx.core.view.DifferentialMotionFlingController: void calculateFlingVelocityThresholds(android.content.Context,int[],android.view.MotionEvent,int)
kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.KeyboardChannel: io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler access$000(io.flutter.embedding.engine.systemchannels.KeyboardChannel)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
androidx.window.embedding.SafeActivityEmbeddingComponentProvider$isMethodSplitAttributesCalculatorValid$1: SafeActivityEmbeddingComponentProvider$isMethodSplitAttributesCalculatorValid$1(androidx.window.embedding.SafeActivityEmbeddingComponentProvider)
kotlinx.coroutines.scheduling.UnlimitedIoScheduler: UnlimitedIoScheduler()
androidx.core.app.NotificationChannelCompat: NotificationChannelCompat(java.lang.String,int)
kotlin.UNumbersKt: short takeLowestOneBit-xj2QHRw(short)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi1: ComponentActivity$ReportFullyDrawnExecutorApi1()
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
io.flutter.embedding.engine.plugins.broadcastreceiver.BroadcastReceiverAware: void onDetachedFromBroadcastReceiver()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createWeightStyle(android.content.Context,android.graphics.Typeface,int,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
kotlinx.coroutines.JobSupport: void getOnAwaitInternal$annotations()
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2: WindowInfoTracker$Companion$extensionBackend$2()
kotlin.sequences.MergingSequence: java.util.Iterator iterator()
kotlinx.coroutines.ThreadContextElementKt: java.lang.Object isPresent(java.lang.ThreadLocal,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set intersect(java.lang.Object[],java.lang.Iterable)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
kotlin.collections.ArraysKt___ArraysKt: void forEach(float[],kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
androidx.lifecycle.SavedStateHandle$SavingStateLiveData: SavedStateHandle$SavingStateLiveData(androidx.lifecycle.SavedStateHandle,java.lang.String,java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: boolean clickKeyboardFocusedVirtualView()
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
androidx.core.content.pm.ShortcutInfoCompat: int getDisabledReason()
kotlinx.coroutines.JobSupport$children$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.core.app.NotificationCompat$TvExtender: androidx.core.app.NotificationCompat$TvExtender setDeleteIntent(android.app.PendingIntent)
androidx.core.widget.TextViewCompat$OreoCallback: TextViewCompat$OreoCallback(android.view.ActionMode$Callback,android.widget.TextView)
kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1$emit$1: FlowKt__LimitKt$drop$2$1$emit$1(kotlinx.coroutines.flow.FlowKt__LimitKt$drop$2$1,kotlin.coroutines.Continuation)
kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()
kotlin.collections.ArraysKt___ArraysKt: void shuffle(long[],kotlin.random.Random)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
kotlin.collections.AbstractMap$keys$1$iterator$1: boolean hasNext()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
kotlin.math.MathKt__MathJVMKt: double asinh(double)
io.flutter.embedding.android.FlutterActivity: android.window.OnBackInvokedCallback getOnBackInvokedCallback()
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence take(kotlin.sequences.Sequence,int)
androidx.core.content.pm.ShortcutInfoCompat: boolean hasKeyFieldsOnly()
androidx.fragment.app.FragmentManager: void dispatchOnHiddenChanged()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Short getOrNull(short[],int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived(boolean)
kotlin.collections.IntIterator: void remove()
kotlin.ranges.LongProgressionIterator: LongProgressionIterator(long,long,long)
kotlin.collections.ArraysKt___ArraysJvmKt: byte[] plus(byte[],java.util.Collection)
kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2: java.lang.Object emit$$forInline(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.math.MathUtils: MathUtils()
androidx.core.transition.TransitionKt: android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1)
kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxWithOrThrow(kotlin.sequences.Sequence,java.util.Comparator)
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1: void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString(int[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect onGetEpicenter(android.transition.Transition)
androidx.window.core.PredicateAdapter$BaseHandler: PredicateAdapter$BaseHandler(kotlin.reflect.KClass)
kotlin.io.FilesKt__FileReadWriteKt: java.util.List readLines(java.io.File,java.nio.charset.Charset)
androidx.core.database.DatabaseUtilsCompat: java.lang.String concatenateWhere(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
kotlin.collections.unsigned.UArraysKt___UArraysKt: short maxOrThrow-U(short[])
androidx.fragment.app.DialogFragment: void dismissNow()
kotlin.io.ConsoleKt: void print(short)
androidx.annotation.RequiresPermission: java.lang.String[] allOf()
kotlin.enums.EnumEntriesKt$enumEntries$1: EnumEntriesKt$enumEntries$1(java.lang.Enum[])
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
kotlinx.coroutines.DefaultExecutor: void get_thread$annotations()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityPaused(android.app.Activity)
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object doSelect$suspendImpl(kotlinx.coroutines.selects.SelectImplementation,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnProgress(android.view.View,androidx.core.view.WindowInsetsCompat,java.util.List)
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
androidx.core.graphics.PointKt: android.graphics.Point plus(android.graphics.Point,android.graphics.Point)
androidx.core.provider.CallbackWithHandler$2: CallbackWithHandler$2(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int)
kotlin.internal.UProgressionUtilKt: int getProgressionLastElement-Nkh28Cs(int,int,int)
androidx.core.app.BundleCompat: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
io.flutter.view.VsyncWaiter$FrameCallback: void doFrame(long)
androidx.core.app.NotificationCompat$Action$Builder$Api29Impl: NotificationCompat$Action$Builder$Api29Impl()
kotlinx.coroutines.debug.AgentPremain: AgentPremain()
androidx.window.core.Version: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)
androidx.fragment.app.FragmentManager: void setFragmentResultListener(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.fragment.app.FragmentResultListener)
io.flutter.plugin.common.BinaryMessenger: void disableBufferingIncomingMessages()
androidx.core.view.WindowInsetsAnimationCompat: float getFraction()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
kotlin.collections.UArraySortingKt: void quickSort-Aa5vz7o(short[],int,int)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Map groupByTo(kotlin.sequences.Sequence,java.util.Map,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)
androidx.core.telephony.mbms.MbmsHelper: MbmsHelper()
kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.CompletableDeferred,kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.NumbersKt__FloorDivModKt: int floorDiv(int,byte)
kotlinx.coroutines.internal.MainDispatchersKt: boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4600(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection flatMapIndexedIterableTo(byte[],java.util.Collection,kotlin.jvm.functions.Function2)
androidx.lifecycle.CoroutineLiveData$emitSource$1: CoroutineLiveData$emitSource$1(androidx.lifecycle.CoroutineLiveData,kotlin.coroutines.Continuation)
kotlin.time.DurationKt: long access$nanosToMillis(long)
kotlin.text.Charsets: Charsets()
androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
kotlin.text.StringsKt___StringsKt: char reduceRight(java.lang.CharSequence,kotlin.jvm.functions.Function2)
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean)
kotlin.UNumbersKt: int rotateLeft-V7xB4Y4(int,int)
kotlin.sequences.SequencesKt__SequencesKt$ifEmpty$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.fragment.app.Fragment: void lambda$performCreateView$0()
androidx.core.util.AtomicFileKt: void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1)
androidx.window.area.WindowAreaInfo: WindowAreaInfo(androidx.window.layout.WindowMetrics,androidx.window.area.WindowAreaInfo$Type,android.os.Binder,androidx.window.extensions.area.WindowAreaComponent)
kotlin.io.path.PathsKt__PathUtilsKt: java.nio.file.Path setLastModifiedTime(java.nio.file.Path,java.nio.file.attribute.FileTime)
kotlin.collections.ArraysKt___ArraysJvmKt$asList$3: java.lang.Object get(int)
kotlin.collections.ArraysKt___ArraysKt: java.util.Set subtract(double[],java.lang.Iterable)
androidx.lifecycle.ComputableLiveData: androidx.lifecycle.LiveData getLiveData()
androidx.fragment.app.FragmentManager$ClearBackStackState: FragmentManager$ClearBackStackState(androidx.fragment.app.FragmentManager,java.lang.String)
kotlin.collections.ArraysKt___ArraysKt: java.util.Collection toCollection(float[],java.util.Collection)
androidx.startup.InitializationProvider: java.lang.String getType(android.net.Uri)
androidx.lifecycle.viewmodel.InitializerViewModelFactoryKt: void initializer(androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
io.flutter.embedding.engine.FlutterEngineGroup$Options: boolean getWaitForRestorationData()
androidx.core.view.accessibility.AccessibilityEventCompat: int getAction(android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.DebugKt: void resetCoroutineId()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: FlutterMutatorView$1(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView,android.view.View$OnFocusChangeListener,android.view.View)
kotlin.text.StringsKt___StringsKt: int sumOfInt(java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder: io.flutter.embedding.android.FlutterActivity$NewEngineIntentBuilder dartEntrypointArgs(java.util.List)
androidx.window.embedding.ExtensionEmbeddingBackend$splitSupportStatus$2: androidx.window.embedding.SplitController$SplitSupportStatus invoke()
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlinx.coroutines.debug.internal.DebugProbesImpl$CoroutineOwner: kotlinx.coroutines.debug.internal.StackTraceFrame getFrame()
androidx.core.view.inputmethod.InputConnectionCompat$2: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
androidx.fragment.app.FragmentStore: android.os.Bundle setSavedState(java.lang.String,android.os.Bundle)
kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte randomOrNull(byte[],kotlin.random.Random)
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1: SequencesKt__SequencesKt$Sequence$1(kotlin.jvm.functions.Function0)
kotlin.sequences.SequencesKt___SequencesKt$runningReduceIndexed$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.reflect.KTypeProjection$Companion: KTypeProjection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.collections.ArraysKt___ArraysKt: float reduceRight(float[],kotlin.jvm.functions.Function2)
androidx.viewpager.widget.ViewPager$3: void run()
kotlin.io.ConsoleKt: void print(char[])
kotlin.comparisons.UComparisonsKt___UComparisonsKt: long maxOf-sambcqE(long,long,long)
androidx.profileinstaller.Encoding: void writeCompressed(java.io.OutputStream,byte[])
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object getOrNull(java.lang.Object[],int)
androidx.window.area.RearDisplayPresentationSessionPresenterImpl: android.content.Context getContext()
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
kotlin.sequences.DropSequence$iterator$1: void setLeft(int)
kotlin.collections.ArrayAsCollection: boolean remove(java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)
androidx.startup.AppInitializer: void discoverAndInitialize()
kotlin.collections.ArraysKt___ArraysKt: int count(char[],kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.view.WindowInsetsAnimationCompat$Impl30: float getInterpolatedFraction()
androidx.core.math.MathUtils: long decrementExact(long)
kotlinx.coroutines.YieldContext$Key: YieldContext$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
kotlinx.coroutines.BuildersKt__Builders_commonKt: java.lang.Object invoke(kotlinx.coroutines.CoroutineDispatcher,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.collections.unsigned.UArraysKt___UArraysKt: byte[] asByteArray-GBYM_sE(byte[])
kotlin.ranges.OpenEndDoubleRange: boolean lessThanOrEquals(double,double)
kotlin.collections.ArraysKt___ArraysKt: int sumBy(boolean[],kotlin.jvm.functions.Function1)
kotlin.collections.ArraysKt___ArraysKt: int sum(short[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: AccessibilityNodeInfoCompat$RangeInfoCompat(int,float,float,float)
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1: BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1(java.lang.Object,kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance)
kotlin.collections.unsigned.UArraysKt___UArraysKt: java.util.List runningReduce-WyvcNBI(int[],kotlin.jvm.functions.Function2)
io.flutter.embedding.android.FlutterPlayStoreSplitApplication: void onCreate()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxOfOrNull(char[],kotlin.jvm.functions.Function1)
androidx.core.net.MailTo: java.lang.String getTo()
kotlinx.coroutines.channels.BufferedChannel: void access$onClosedReceiveOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.CancellableContinuation)
kotlin.random.RandomKt: int takeUpperBits(int,int)
kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Integer min(int[])
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
kotlin.collections.ArraysKt___ArraysKt: void sortDescending(long[])
androidx.fragment.app.SpecialEffectsController: void enqueue$lambda$4$lambda$3(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)
kotlinx.coroutines.scheduling.CoroutineScheduler: void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
kotlinx.coroutines.EventLoopImplBase: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.collections.AbstractMap: java.util.Set getKeys()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[])
io.flutter.plugin.platform.PlatformPlugin$2: void lambda$onSystemUiVisibilityChange$0(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect: void onStart(android.view.ViewGroup)
kotlin.InitializedLazyImpl: java.lang.Object getValue()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
kotlin.collections.unsigned.UArraysKt___UArraysKt: void getIndices-GBYM_sE$annotations(byte[])
androidx.core.app.AlarmManagerCompat$Api31Impl: AlarmManagerCompat$Api31Impl()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: java.lang.String getDartEntrypointLibraryUri()
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(float[],kotlin.jvm.functions.Function1)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
kotlin.text.StringsKt___StringsKt$withIndex$1: StringsKt___StringsKt$withIndex$1(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructCompatStyleForBundle(android.os.Bundle)
androidx.core.os.MessageCompat: MessageCompat()
androidx.lifecycle.ViewTreeViewModelStoreOwner$findViewTreeViewModelStoreOwner$1: java.lang.Object invoke(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Character firstOrNull(char[])
kotlinx.coroutines.selects.SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1: SelectKt$DUMMY_PROCESS_RESULT_FUNCTION$1()
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
android.support.v4.os.IResultReceiver$Stub: android.os.IBinder asBinder()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.collections.MutableMapWithDefault: java.util.Map getMap()
kotlinx.coroutines.flow.FlowKt__TransformKt$filter$$inlined$unsafeTransform$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.flow.FlowKt__MigrationKt$switchMap$$inlined$flatMapLatest$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt__ArraysJVMKt: java.lang.Object[] arrayOfNulls(java.lang.Object[],int)
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filter(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
kotlinx.coroutines.channels.ProducerCoroutine: ProducerCoroutine(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel)
kotlin.jvm.internal.Reflection: void setUpperBounds(kotlin.reflect.KTypeParameter,kotlin.reflect.KType)
androidx.core.content.IntentSanitizer$Builder: androidx.core.content.IntentSanitizer$Builder allowComponentWithPackage(java.lang.String)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(byte,short)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
kotlin.SafePublicationLazyImpl: boolean isInitialized()
kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
androidx.fragment.app.FragmentManager$9: void onActivityResult(androidx.activity.result.ActivityResult)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minOrNull(java.lang.Double[])
kotlinx.coroutines.internal.ExceptionsConstructorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
kotlin.ULong: long shl-s-VKNKU(long,int)
androidx.lifecycle.EmittedSource$disposeNow$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.activity.ComponentActivity$ReportFullyDrawnExecutorApi16Impl: void lambda$execute$0()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.window.area.WindowAreaControllerImpl: void access$updateRearDisplayAvailability(androidx.window.area.WindowAreaControllerImpl,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
androidx.core.util.SparseBooleanArrayKt$keyIterator$1: int nextInt()
androidx.fragment.app.SpecialEffectsController$Operation: SpecialEffectsController$Operation(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
kotlin.concurrent.VolatileKt: void Volatile$annotations()
io.flutter.embedding.engine.loader.FlutterLoader: boolean isLeakVM(android.os.Bundle)
kotlinx.coroutines.internal.ExceptionsConstructorKt$createConstructor$1$4: java.lang.Throwable invoke(java.lang.Throwable)
androidx.customview.widget.ViewDragHelper: void flingCapturedView(int,int,int,int)
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding: void addOnUserLeaveHintListener(io.flutter.plugin.common.PluginRegistry$UserLeaveHintListener)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.database.CursorKt: java.lang.Double getDoubleOrNull(android.database.Cursor,int)
androidx.activity.ViewTreeFullyDrawnReporterOwner$findViewTreeFullyDrawnReporterOwner$2: androidx.activity.FullyDrawnReporterOwner invoke(android.view.View)
kotlinx.coroutines.scheduling.Task: int getMode()
androidx.core.os.ParcelCompat: java.lang.Object[] readParcelableArray(android.os.Parcel,java.lang.ClassLoader,java.lang.Class)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(android.content.Context,androidx.window.embedding.EmbeddingInterfaceCompat)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Double max(java.lang.Double[])
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
kotlin.collections.ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2: ArraysKt___ArraysKt$asIterable$$inlined$Iterable$2(byte[])
androidx.core.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)
androidx.core.view.PointerIconCompat: java.lang.Object getPointerIcon()
io.flutter.util.ViewUtils$DisplayUpdater: void updateDisplayMetrics(float,float,float)
androidx.core.content.UriMatcherCompat: androidx.core.util.Predicate asPredicate(android.content.UriMatcher)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType)
androidx.core.os.LocaleListCompatWrapper: java.util.Locale get(int)
androidx.window.WindowSdkExtensions$Companion: void overrideDecorator$window_release(androidx.window.WindowSdkExtensionsDecorator)
androidx.core.view.ViewCompat$Api26Impl: ViewCompat$Api26Impl()
io.flutter.embedding.android.KeyEmbedderResponder: boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
kotlin.random.PlatformRandom: java.util.Random getImpl()
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
kotlin.io.TextStreamsKt$readLines$1: void invoke(java.lang.String)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,java.lang.Object[])
androidx.core.app.NotificationCompat$Api24Impl: NotificationCompat$Api24Impl()
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
kotlin.time.DurationKt: long getNanoseconds(int)
kotlin.ExceptionsKt__ExceptionsKt: void printStackTrace(java.lang.Throwable,java.io.PrintStream)
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression step(kotlin.ranges.UIntProgression,int)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: ViewModelProvider$AndroidViewModelFactory()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
kotlin.collections.EmptyIterator: boolean hasNext()
kotlin.reflect.KProperty1: java.lang.Object getDelegate(java.lang.Object)
kotlin.jvm.functions.Function17: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$1$1: FlowKt__TransformKt$runningReduce$1$1(kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWith(float[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.location.LocationCompat$Api33Impl: void removeBearingAccuracy(android.location.Location)
kotlin.io.FilePathComponents: java.util.List component2()
kotlinx.coroutines.intrinsics.CancellableKt: void runSafely(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function0)
io.flutter.embedding.android.FlutterView: java.util.Set access$300(io.flutter.embedding.android.FlutterView)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
kotlin.UShort: int hashCode-impl(short)
androidx.concurrent.futures.AbstractResolvableFuture: void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter)
androidx.savedstate.R: R()
kotlin.collections.ArraysKt___ArraysKt: java.lang.String joinToString$default(short[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.annotation.StringDef: java.lang.String[] value()
androidx.core.content.pm.PackageInfoCompat: boolean hasSignatures(android.content.pm.PackageManager,java.lang.String,java.util.Map,boolean)
androidx.lifecycle.LifecycleCoroutineScopeImpl: LifecycleCoroutineScopeImpl(androidx.lifecycle.Lifecycle,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.channels.BroadcastKt$broadcast$2: BroadcastKt$broadcast$2(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)
androidx.lifecycle.LifecycleRegistry: void popParentState()
kotlin.collections.unsigned.UArraysKt___UArraysKt: long[] onEachIndexed-s8dVfGU(long[],kotlin.jvm.functions.Function2)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.embedding.RuleController: java.util.Set parseRules(android.content.Context,int)
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal(java.lang.Object)
kotlin.jvm.internal.AdaptedFunctionReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.core.app.NotificationCompat$WearableExtender: int getCustomSizePreset()
androidx.core.os.PersistableBundleKt: android.os.PersistableBundle persistableBundleOf()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sorted(java.lang.Comparable[])
androidx.core.location.GnssStatusWrapper$Api26Impl: float getCarrierFrequencyHz(android.location.GnssStatus,int)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$1: int getSize()
kotlin.NumbersKt__NumbersJVMKt: int countOneBits(int)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlinx.coroutines.channels.BufferedChannel: void prepareSenderForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int)
androidx.fragment.app.FragmentStore: FragmentStore()
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3: SidecarAdapter$translate$checkedFeature$3()
androidx.activity.OnBackPressedDispatcher$2: OnBackPressedDispatcher$2(androidx.activity.OnBackPressedDispatcher)
androidx.core.app.ComponentActivity: void getLifecycleRegistry$annotations()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte reduceIndexedOrNull(byte[],kotlin.jvm.functions.Function3)
kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumOfInt(short[],kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitAttributesCalculatorParams: androidx.window.layout.WindowMetrics getParentWindowMetrics()
androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)
androidx.core.view.SoftwareKeyboardControllerCompat: SoftwareKeyboardControllerCompat(android.view.WindowInsetsController)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.core.app.RemoteInput$Api20Impl: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
kotlin.collections.ArraysKt___ArraysKt: float component5(float[])
androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)
kotlin.NumbersKt__BigIntegersKt: java.math.BigInteger rem(java.math.BigInteger,java.math.BigInteger)
androidx.lifecycle.viewmodel.InitializerViewModelFactoryBuilder: androidx.lifecycle.ViewModelProvider$Factory build()
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1: void onTransitionStart(android.transition.Transition)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
kotlin.ranges.URangesKt___URangesKt: kotlin.ranges.UIntProgression reversed(kotlin.ranges.UIntProgression)
androidx.activity.OnBackPressedDispatcher: void dispatchOnBackStarted(androidx.activity.BackEventCompat)
androidx.core.R$integer: R$integer()
kotlin.Result: boolean isSuccess-impl(java.lang.Object)
kotlin.collections.MapWithDefaultImpl: java.lang.Object remove(java.lang.Object)
androidx.window.core.ExtensionsUtil: ExtensionsUtil()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
kotlinx.coroutines.selects.SelectClause2Impl: SelectClause2Impl(java.lang.Object,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3,kotlin.jvm.functions.Function3)
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
kotlin.io.TextStreamsKt: java.lang.String readText(java.net.URL,java.nio.charset.Charset)
kotlin.collections.EmptySet: boolean add(java.lang.Void)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)
kotlinx.coroutines.sync.Mutex: boolean tryLock(java.lang.Object)
androidx.core.widget.TextViewKt$addTextChangedListener$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
kotlin.Metadata: java.lang.String[] d2()
kotlinx.coroutines.AbstractTimeSourceKt: java.lang.Runnable wrapTask(java.lang.Runnable)
androidx.core.view.ActionProvider$VisibilityListener: void onActionProviderVisibilityChanged(boolean)
com.getkeepsafe.relinker.elf.ElfParser: void close()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List mapNotNull(java.lang.Iterable,kotlin.jvm.functions.Function1)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
kotlin.time.DurationKt: long getDays(double)
kotlin.Deprecated: kotlin.ReplaceWith replaceWith()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.content.Context)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Double randomOrNull(double[])
kotlin.collections.ArraysKt___ArraysKt: kotlin.sequences.Sequence asSequence(short[])
androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$values$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.coroutines.EmptyCoroutineContext: EmptyCoroutineContext()
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt: ComparisonsKt___ComparisonsJvmKt()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minOfWithOrNull(byte[],java.util.Comparator,kotlin.jvm.functions.Function1)
androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List)
kotlinx.coroutines.JobSupport$onAwaitInternal$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.location.GpsStatusWrapper: android.location.GpsSatellite getSatellite(int)
android.support.v4.os.IResultReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void recalcViewsWithUnhandled()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxOfWith(char[],java.util.Comparator,kotlin.jvm.functions.Function1)
io.flutter.plugin.common.PluginRegistry$NewIntentListener: boolean onNewIntent(android.content.Intent)
kotlinx.coroutines.channels.BufferedChannel: void completeCloseOrCancel()
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: boolean allocateLocked(java.lang.Object)
kotlinx.coroutines.channels.BufferedChannel: long getBufferEndCounter()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host: io.flutter.embedding.android.RenderMode getRenderMode()
kotlin.jvm.internal.AdaptedFunctionReference: int hashCode()
kotlinx.coroutines.channels.BufferedChannelKt: boolean access$tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.channels.ProduceKt: kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function2)
kotlin.io.FilesKt__UtilsKt: java.util.List normalize$FilesKt__UtilsKt(java.util.List)
androidx.fragment.app.FragmentAnim: int toActivityTransitResId(android.content.Context,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
kotlin.collections.ArraysKt___ArraysKt: int indexOfLast(double[],kotlin.jvm.functions.Function1)
androidx.window.layout.util.ContextCompatHelperApi30: androidx.window.layout.WindowMetrics currentWindowMetrics(android.content.Context)
androidx.core.math.MathUtils: int clamp(int,int,int)
kotlin.collections.ArraysKt___ArraysKt: java.util.List takeWhile(long[],kotlin.jvm.functions.Function1)
kotlin.collections.unsigned.UArraysKt___UArraysJvmKt$asList$4: boolean isEmpty()
kotlin.math.MathKt__MathJVMKt: int max(int,int)
io.flutter.embedding.android.KeyChannelResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
androidx.core.view.ViewParentCompat: ViewParentCompat()
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9: ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9(char[])
androidx.activity.OnBackPressedDispatcher: void access$setInProgressCallback$p(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
androidx.core.util.LruCacheKt$lruCache$4: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Type: int mandatorySystemGestures()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedDescending(char[])
kotlin.collections.ArraysKt___ArraysJvmKt$asList$5: java.lang.Float get(int)
androidx.lifecycle.AndroidViewModel: android.app.Application getApplication()
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
androidx.core.location.LocationManagerCompat$Api28Impl: int getGnssYearOfHardware(android.location.LocationManager)
androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)
androidx.fragment.app.Fragment$6: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlin.io.ByteStreamsKt: byte[] readBytes$default(java.io.InputStream,int,int,java.lang.Object)
kotlin.time.TimeSource$Monotonic$ValueTimeMark: java.lang.String toString-impl(long)
androidx.customview.widget.ViewDragHelper: void releaseViewForPointerUp()
kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.collections.ArraysKt___ArraysKt: int[] sliceArray(int[],kotlin.ranges.IntRange)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
kotlin.jvm.functions.Function18: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: HandlerContext$scheduleResumeAfterDelay$1(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
kotlinx.coroutines.flow.SharedFlow: java.util.List getReplayCache()
kotlin.math.MathKt__MathJVMKt: double log10(double)
kotlin.io.encoding.Base64JVMKt: java.lang.String platformEncodeToString(kotlin.io.encoding.Base64,byte[],int,int)
io.flutter.embedding.android.FlutterFragmentActivity$NewEngineInGroupIntentBuilder: android.content.Intent build(android.content.Context)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: boolean equals(java.lang.Object)
io.flutter.embedding.engine.dart.DartExecutor: int getPendingChannelResponseCount()
kotlinx.coroutines.debug.internal.DebugProbesImpl: void probeCoroutineResumed$kotlinx_coroutines_core(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.SynchronizedKt: java.lang.Object synchronizedImpl(java.lang.Object,kotlin.jvm.functions.Function0)
